// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Apple silicon M1. For more information,
    /// see [the documentation](https://www.scaleway.com/en/docs/compute/apple-silicon/concepts).
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var server = new Scaleway.AppleSliconValleyServer("server", new()
    ///     {
    ///         Type = "M1-M",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance servers can be imported using the `{zone}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/appleSliconValleyServer:AppleSliconValleyServer main fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:index/appleSliconValleyServer:AppleSliconValleyServer")]
    public partial class AppleSliconValleyServer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The date and time of the creation of the Apple Silicon server.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The minimal date and time on which you can delete this server due to Apple licence
        /// </summary>
        [Output("deletableAt")]
        public Output<string> DeletableAt { get; private set; } = null!;

        /// <summary>
        /// IPv4 address of the server (IPv4 address).
        /// </summary>
        [Output("ip")]
        public Output<string> Ip { get; private set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization ID the server is associated with.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// `project_id`) The ID of the project the server is
        /// associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The state of the server.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The commercial type of the server. You find all the available types on
        /// the [pricing page](https://www.scaleway.com/en/pricing/#apple-silicon). Updates to this field will recreate a new
        /// resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the Apple Silicon server.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// URL of the VNC.
        /// </summary>
        [Output("vncUrl")]
        public Output<string> VncUrl { get; private set; } = null!;

        /// <summary>
        /// `zone`) The zone in which
        /// the server should be created.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a AppleSliconValleyServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppleSliconValleyServer(string name, AppleSliconValleyServerArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/appleSliconValleyServer:AppleSliconValleyServer", name, args ?? new AppleSliconValleyServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppleSliconValleyServer(string name, Input<string> id, AppleSliconValleyServerState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/appleSliconValleyServer:AppleSliconValleyServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppleSliconValleyServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppleSliconValleyServer Get(string name, Input<string> id, AppleSliconValleyServerState? state = null, CustomResourceOptions? options = null)
        {
            return new AppleSliconValleyServer(name, id, state, options);
        }
    }

    public sealed class AppleSliconValleyServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the server is
        /// associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The commercial type of the server. You find all the available types on
        /// the [pricing page](https://www.scaleway.com/en/pricing/#apple-silicon). Updates to this field will recreate a new
        /// resource.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// `zone`) The zone in which
        /// the server should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public AppleSliconValleyServerArgs()
        {
        }
        public static new AppleSliconValleyServerArgs Empty => new AppleSliconValleyServerArgs();
    }

    public sealed class AppleSliconValleyServerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date and time of the creation of the Apple Silicon server.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The minimal date and time on which you can delete this server due to Apple licence
        /// </summary>
        [Input("deletableAt")]
        public Input<string>? DeletableAt { get; set; }

        /// <summary>
        /// IPv4 address of the server (IPv4 address).
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The organization ID the server is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the server is
        /// associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The state of the server.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The commercial type of the server. You find all the available types on
        /// the [pricing page](https://www.scaleway.com/en/pricing/#apple-silicon). Updates to this field will recreate a new
        /// resource.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The date and time of the last update of the Apple Silicon server.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// URL of the VNC.
        /// </summary>
        [Input("vncUrl")]
        public Input<string>? VncUrl { get; set; }

        /// <summary>
        /// `zone`) The zone in which
        /// the server should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public AppleSliconValleyServerState()
        {
        }
        public static new AppleSliconValleyServerState Empty => new AppleSliconValleyServerState();
    }
}
