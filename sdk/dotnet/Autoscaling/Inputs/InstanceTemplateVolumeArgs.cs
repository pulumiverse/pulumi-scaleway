// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Autoscaling.Inputs
{

    public sealed class InstanceTemplateVolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Force the Instance to boot on this volume.
        /// </summary>
        [Input("boot")]
        public Input<bool>? Boot { get; set; }

        /// <summary>
        /// Volume instance template from empty
        /// </summary>
        [Input("fromEmpty")]
        public Input<Inputs.InstanceTemplateVolumeFromEmptyArgs>? FromEmpty { get; set; }

        /// <summary>
        /// Volume instance template from snapshot
        /// </summary>
        [Input("fromSnapshot")]
        public Input<Inputs.InstanceTemplateVolumeFromSnapshotArgs>? FromSnapshot { get; set; }

        /// <summary>
        /// The name of the volume.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The maximum IO/s expected, according to the different options available in stock (`5000 | 15000`).
        /// </summary>
        [Input("perfIops")]
        public Input<int>? PerfIops { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The list of tags assigned to the volume.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the volume.
        /// </summary>
        [Input("volumeType", required: true)]
        public Input<string> VolumeType { get; set; } = null!;

        public InstanceTemplateVolumeArgs()
        {
        }
        public static new InstanceTemplateVolumeArgs Empty => new InstanceTemplateVolumeArgs();
    }
}
