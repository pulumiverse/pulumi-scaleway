// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Billing
{
    public static class GetInvoices
    {
        /// <summary>
        /// Gets information about your Scaleway invoices.
        /// </summary>
        public static Task<GetInvoicesResult> InvokeAsync(GetInvoicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInvoicesResult>("scaleway:billing/getInvoices:getInvoices", args ?? new GetInvoicesArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about your Scaleway invoices.
        /// </summary>
        public static Output<GetInvoicesResult> Invoke(GetInvoicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvoicesResult>("scaleway:billing/getInvoices:getInvoices", args ?? new GetInvoicesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about your Scaleway invoices.
        /// </summary>
        public static Output<GetInvoicesResult> Invoke(GetInvoicesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvoicesResult>("scaleway:billing/getInvoices:getInvoices", args ?? new GetInvoicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInvoicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Invoices with the given type are listed. Valid values are `Periodic` and `Purchase`.
        /// </summary>
        [Input("invoiceType")]
        public string? InvoiceType { get; set; }

        /// <summary>
        /// Invoices with a start date that are greater or equal to `StartedAfter` are listed (RFC 3339 format).
        /// </summary>
        [Input("startedAfter")]
        public string? StartedAfter { get; set; }

        /// <summary>
        /// Invoices with a start date that precedes `StartedBefore` are listed (RFC 3339 format).
        /// </summary>
        [Input("startedBefore")]
        public string? StartedBefore { get; set; }

        public GetInvoicesArgs()
        {
        }
        public static new GetInvoicesArgs Empty => new GetInvoicesArgs();
    }

    public sealed class GetInvoicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Invoices with the given type are listed. Valid values are `Periodic` and `Purchase`.
        /// </summary>
        [Input("invoiceType")]
        public Input<string>? InvoiceType { get; set; }

        /// <summary>
        /// Invoices with a start date that are greater or equal to `StartedAfter` are listed (RFC 3339 format).
        /// </summary>
        [Input("startedAfter")]
        public Input<string>? StartedAfter { get; set; }

        /// <summary>
        /// Invoices with a start date that precedes `StartedBefore` are listed (RFC 3339 format).
        /// </summary>
        [Input("startedBefore")]
        public Input<string>? StartedBefore { get; set; }

        public GetInvoicesInvokeArgs()
        {
        }
        public static new GetInvoicesInvokeArgs Empty => new GetInvoicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInvoicesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of invoice.
        /// </summary>
        public readonly string? InvoiceType;
        /// <summary>
        /// List of found invoices
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInvoicesInvoiceResult> Invoices;
        public readonly string OrganizationId;
        public readonly string? StartedAfter;
        public readonly string? StartedBefore;

        [OutputConstructor]
        private GetInvoicesResult(
            string id,

            string? invoiceType,

            ImmutableArray<Outputs.GetInvoicesInvoiceResult> invoices,

            string organizationId,

            string? startedAfter,

            string? startedBefore)
        {
            Id = id;
            InvoiceType = invoiceType;
            Invoices = invoices;
            OrganizationId = organizationId;
            StartedAfter = startedAfter;
            StartedBefore = startedBefore;
        }
    }
}
