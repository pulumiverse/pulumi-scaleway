// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Block Snapshots.
    /// For more information, see [the documentation](https://www.scaleway.com/en/developers/api/block/).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var blockSnapshot = new Scaleway.BlockSnapshot("blockSnapshot", new()
    ///     {
    ///         VolumeId = "11111111-1111-1111-1111-111111111111",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Block Snapshots can be imported using the `{zone}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/blockSnapshot:BlockSnapshot main fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:index/blockSnapshot:BlockSnapshot")]
    public partial class BlockSnapshot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the snapshot. If not provided it will be randomly generated.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// `project_id`) The ID of the project the snapshot is associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A list of tags to apply to the snapshot.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the volume to take a snapshot from.
        /// </summary>
        [Output("volumeId")]
        public Output<string> VolumeId { get; private set; } = null!;

        /// <summary>
        /// `zone`) The zone in which the snapshot should be created.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a BlockSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BlockSnapshot(string name, BlockSnapshotArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/blockSnapshot:BlockSnapshot", name, args ?? new BlockSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BlockSnapshot(string name, Input<string> id, BlockSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/blockSnapshot:BlockSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BlockSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BlockSnapshot Get(string name, Input<string> id, BlockSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new BlockSnapshot(name, id, state, options);
        }
    }

    public sealed class BlockSnapshotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the snapshot. If not provided it will be randomly generated.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the snapshot is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags to apply to the snapshot.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the volume to take a snapshot from.
        /// </summary>
        [Input("volumeId", required: true)]
        public Input<string> VolumeId { get; set; } = null!;

        /// <summary>
        /// `zone`) The zone in which the snapshot should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public BlockSnapshotArgs()
        {
        }
        public static new BlockSnapshotArgs Empty => new BlockSnapshotArgs();
    }

    public sealed class BlockSnapshotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the snapshot. If not provided it will be randomly generated.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the snapshot is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags to apply to the snapshot.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the volume to take a snapshot from.
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        /// <summary>
        /// `zone`) The zone in which the snapshot should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public BlockSnapshotState()
        {
        }
        public static new BlockSnapshotState Empty => new BlockSnapshotState();
    }
}
