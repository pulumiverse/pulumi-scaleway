// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Domain
{
    public static class GetZone
    {
        public static Task<GetZoneResult> InvokeAsync(GetZoneArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneResult>("scaleway:domain/getZone:getZone", args ?? new GetZoneArgs(), options.WithDefaults());

        public static Output<GetZoneResult> Invoke(GetZoneInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneResult>("scaleway:domain/getZone:getZone", args ?? new GetZoneInvokeArgs(), options.WithDefaults());

        public static Output<GetZoneResult> Invoke(GetZoneInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneResult>("scaleway:domain/getZone:getZone", args ?? new GetZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The primary domain name where the DNS zone is located. This is a mandatory field.
        /// </summary>
        [Input("domain")]
        public string? Domain { get; set; }

        /// <summary>
        /// ). The ID of the Scaleway Project associated with the domain. If not specified, it defaults to the `project_id` set in the provider configuration.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// The subdomain (or zone name) within the primary domain. This is a mandatory field.
        /// </summary>
        [Input("subdomain")]
        public string? Subdomain { get; set; }

        public GetZoneArgs()
        {
        }
        public static new GetZoneArgs Empty => new GetZoneArgs();
    }

    public sealed class GetZoneInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The primary domain name where the DNS zone is located. This is a mandatory field.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// ). The ID of the Scaleway Project associated with the domain. If not specified, it defaults to the `project_id` set in the provider configuration.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The subdomain (or zone name) within the primary domain. This is a mandatory field.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        public GetZoneInvokeArgs()
        {
        }
        public static new GetZoneInvokeArgs Empty => new GetZoneInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneResult
    {
        public readonly string? Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Message associated with the domain zone (typically used for status or error messages).
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The list of name servers for the zone.
        /// </summary>
        public readonly ImmutableArray<string> Ns;
        /// <summary>
        /// The default list of name servers for the zone.
        /// </summary>
        public readonly ImmutableArray<string> NsDefaults;
        /// <summary>
        /// The master list of name servers for the zone.
        /// </summary>
        public readonly ImmutableArray<string> NsMasters;
        public readonly string? ProjectId;
        /// <summary>
        /// The status of the domain zone.
        /// </summary>
        public readonly string Status;
        public readonly string? Subdomain;
        /// <summary>
        /// The date and time of the last update to the DNS zone.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetZoneResult(
            string? domain,

            string id,

            string message,

            ImmutableArray<string> ns,

            ImmutableArray<string> nsDefaults,

            ImmutableArray<string> nsMasters,

            string? projectId,

            string status,

            string? subdomain,

            string updatedAt)
        {
            Domain = domain;
            Id = id;
            Message = message;
            Ns = ns;
            NsDefaults = nsDefaults;
            NsMasters = nsMasters;
            ProjectId = projectId;
            Status = status;
            Subdomain = subdomain;
            UpdatedAt = updatedAt;
        }
    }
}
