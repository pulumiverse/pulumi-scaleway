// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Domain.Outputs
{

    [OutputType]
    public sealed class RegistrationTechnicalContact
    {
        /// <summary>
        /// Primary address line for the contact.
        /// </summary>
        public readonly string AddressLine1;
        /// <summary>
        /// Secondary address line for the contact (optional).
        /// </summary>
        public readonly string? AddressLine2;
        /// <summary>
        /// City of the contact's address.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// Company identification code (e.g., SIREN/SIRET in France) for the contact.
        /// </summary>
        public readonly string CompanyIdentificationCode;
        /// <summary>
        /// Name of the company associated with the contact (if applicable).
        /// </summary>
        public readonly string? CompanyName;
        /// <summary>
        /// Country code of the contact's address (ISO format).
        /// </summary>
        public readonly string Country;
        /// <summary>
        /// Primary email address of the contact.
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Alternative email address for the contact.
        /// </summary>
        public readonly string? EmailAlt;
        /// <summary>
        /// Details specific to European domain extensions.
        /// </summary>
        public readonly Outputs.RegistrationTechnicalContactExtensionEu? ExtensionEu;
        /// <summary>
        /// Details specific to French domain extensions.
        /// </summary>
        public readonly Outputs.RegistrationTechnicalContactExtensionFr? ExtensionFr;
        /// <summary>
        /// Extension details specific to Dutch domain registrations.
        /// </summary>
        public readonly ImmutableArray<string> ExtensionNls;
        /// <summary>
        /// Fax number for the contact (if available).
        /// </summary>
        public readonly string? FaxNumber;
        /// <summary>
        /// First name of the contact.
        /// </summary>
        public readonly string Firstname;
        /// <summary>
        /// Preferred language of the contact (e.g., 'en_US', 'fr_FR').
        /// </summary>
        public readonly string? Lang;
        /// <summary>
        /// Last name of the contact.
        /// </summary>
        public readonly string Lastname;
        /// <summary>
        /// Legal form of the contact (e.g., 'individual' or 'organization').
        /// </summary>
        public readonly string LegalForm;
        /// <summary>
        /// Primary phone number of the contact.
        /// </summary>
        public readonly string PhoneNumber;
        /// <summary>
        /// Indicates if the contact is used for resale purposes.
        /// </summary>
        public readonly bool? Resale;
        /// <summary>
        /// State or region of the contact.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// VAT identification code of the contact, if applicable.
        /// </summary>
        public readonly string VatIdentificationCode;
        /// <summary>
        /// Indicates whether the contact has opted into WHOIS publishing.
        /// </summary>
        public readonly bool? WhoisOptIn;
        /// <summary>
        /// Postal code of the contact's address.
        /// </summary>
        public readonly string Zip;

        [OutputConstructor]
        private RegistrationTechnicalContact(
            string addressLine1,

            string? addressLine2,

            string city,

            string companyIdentificationCode,

            string? companyName,

            string country,

            string email,

            string? emailAlt,

            Outputs.RegistrationTechnicalContactExtensionEu? extensionEu,

            Outputs.RegistrationTechnicalContactExtensionFr? extensionFr,

            ImmutableArray<string> extensionNls,

            string? faxNumber,

            string firstname,

            string? lang,

            string lastname,

            string legalForm,

            string phoneNumber,

            bool? resale,

            string? state,

            string vatIdentificationCode,

            bool? whoisOptIn,

            string zip)
        {
            AddressLine1 = addressLine1;
            AddressLine2 = addressLine2;
            City = city;
            CompanyIdentificationCode = companyIdentificationCode;
            CompanyName = companyName;
            Country = country;
            Email = email;
            EmailAlt = emailAlt;
            ExtensionEu = extensionEu;
            ExtensionFr = extensionFr;
            ExtensionNls = extensionNls;
            FaxNumber = faxNumber;
            Firstname = firstname;
            Lang = lang;
            Lastname = lastname;
            LegalForm = legalForm;
            PhoneNumber = phoneNumber;
            Resale = resale;
            State = state;
            VatIdentificationCode = vatIdentificationCode;
            WhoisOptIn = whoisOptIn;
            Zip = zip;
        }
    }
}
