// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Edge Services Backend Stages.
    /// 
    /// ## Example Usage
    /// 
    /// ### With object backend
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Object.Bucket("main", new()
    ///     {
    ///         Name = "my-bucket-name",
    ///         Tags = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///     });
    /// 
    ///     var mainEdgeServicesPipeline = new Scaleway.EdgeServicesPipeline("main", new()
    ///     {
    ///         Name = "my-pipeline",
    ///     });
    /// 
    ///     var mainEdgeServicesBackendStage = new Scaleway.EdgeServicesBackendStage("main", new()
    ///     {
    ///         PipelineId = mainEdgeServicesPipeline.Id,
    ///         S3BackendConfig = new Scaleway.Inputs.EdgeServicesBackendStageS3BackendConfigArgs
    ///         {
    ///             BucketName = main.Name,
    ///             BucketRegion = "fr-par",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With LB backend
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Loadbalancers.LoadBalancer("main", new()
    ///     {
    ///         IpIds = new[]
    ///         {
    ///             mainScalewayLbIp.Id,
    ///         },
    ///         Zone = "fr-par-1",
    ///         Type = "LB-S",
    ///     });
    /// 
    ///     var mainFrontend = new Scaleway.Loadbalancers.Frontend("main", new()
    ///     {
    ///         LbId = main.Id,
    ///         BackendId = mainScalewayLbBackend.Id,
    ///         Name = "frontend01",
    ///         InboundPort = 443,
    ///         CertificateIds = new[]
    ///         {
    ///             cert01.Id,
    ///         },
    ///     });
    /// 
    ///     var mainEdgeServicesPipeline = new Scaleway.EdgeServicesPipeline("main", new()
    ///     {
    ///         Name = "my-pipeline",
    ///     });
    /// 
    ///     var mainEdgeServicesBackendStage = new Scaleway.EdgeServicesBackendStage("main", new()
    ///     {
    ///         PipelineId = mainEdgeServicesPipeline.Id,
    ///         LbBackendConfigs = new[]
    ///         {
    ///             new Scaleway.Inputs.EdgeServicesBackendStageLbBackendConfigArgs
    ///             {
    ///                 LbConfig = new Scaleway.Inputs.EdgeServicesBackendStageLbBackendConfigLbConfigArgs
    ///                 {
    ///                     Id = main.Id,
    ///                     FrontendId = id,
    ///                     IsSsl = true,
    ///                     Zone = "fr-par-1",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backend stages can be imported using the `{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage basic 11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage")]
    public partial class EdgeServicesBackendStage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The date and time of the creation of the backend stage.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The Scaleway Load Balancer linked to the backend stage.
        /// </summary>
        [Output("lbBackendConfigs")]
        public Output<ImmutableArray<Outputs.EdgeServicesBackendStageLbBackendConfig>> LbBackendConfigs { get; private set; } = null!;

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Output("pipelineId")]
        public Output<string> PipelineId { get; private set; } = null!;

        /// <summary>
        /// `ProjectId`) The ID of the project the backend stage is associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
        /// </summary>
        [Output("s3BackendConfig")]
        public Output<Outputs.EdgeServicesBackendStageS3BackendConfig?> S3BackendConfig { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the backend stage.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeServicesBackendStage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeServicesBackendStage(string name, EdgeServicesBackendStageArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage", name, args ?? new EdgeServicesBackendStageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeServicesBackendStage(string name, Input<string> id, EdgeServicesBackendStageState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeServicesBackendStage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeServicesBackendStage Get(string name, Input<string> id, EdgeServicesBackendStageState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeServicesBackendStage(name, id, state, options);
        }
    }

    public sealed class EdgeServicesBackendStageArgs : global::Pulumi.ResourceArgs
    {
        [Input("lbBackendConfigs")]
        private InputList<Inputs.EdgeServicesBackendStageLbBackendConfigArgs>? _lbBackendConfigs;

        /// <summary>
        /// The Scaleway Load Balancer linked to the backend stage.
        /// </summary>
        public InputList<Inputs.EdgeServicesBackendStageLbBackendConfigArgs> LbBackendConfigs
        {
            get => _lbBackendConfigs ?? (_lbBackendConfigs = new InputList<Inputs.EdgeServicesBackendStageLbBackendConfigArgs>());
            set => _lbBackendConfigs = value;
        }

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Input("pipelineId", required: true)]
        public Input<string> PipelineId { get; set; } = null!;

        /// <summary>
        /// `ProjectId`) The ID of the project the backend stage is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
        /// </summary>
        [Input("s3BackendConfig")]
        public Input<Inputs.EdgeServicesBackendStageS3BackendConfigArgs>? S3BackendConfig { get; set; }

        public EdgeServicesBackendStageArgs()
        {
        }
        public static new EdgeServicesBackendStageArgs Empty => new EdgeServicesBackendStageArgs();
    }

    public sealed class EdgeServicesBackendStageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date and time of the creation of the backend stage.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("lbBackendConfigs")]
        private InputList<Inputs.EdgeServicesBackendStageLbBackendConfigGetArgs>? _lbBackendConfigs;

        /// <summary>
        /// The Scaleway Load Balancer linked to the backend stage.
        /// </summary>
        public InputList<Inputs.EdgeServicesBackendStageLbBackendConfigGetArgs> LbBackendConfigs
        {
            get => _lbBackendConfigs ?? (_lbBackendConfigs = new InputList<Inputs.EdgeServicesBackendStageLbBackendConfigGetArgs>());
            set => _lbBackendConfigs = value;
        }

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Input("pipelineId")]
        public Input<string>? PipelineId { get; set; }

        /// <summary>
        /// `ProjectId`) The ID of the project the backend stage is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
        /// </summary>
        [Input("s3BackendConfig")]
        public Input<Inputs.EdgeServicesBackendStageS3BackendConfigGetArgs>? S3BackendConfig { get; set; }

        /// <summary>
        /// The date and time of the last update of the backend stage.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public EdgeServicesBackendStageState()
        {
        }
        public static new EdgeServicesBackendStageState Empty => new EdgeServicesBackendStageState();
    }
}
