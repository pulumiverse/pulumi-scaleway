// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Sets the Scaleway Edge Services head stage of your pipeline.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.EdgeServicesPipeline("main", new()
    ///     {
    ///         Name = "my-edge_services-pipeline",
    ///         Description = "pipeline description",
    ///     });
    /// 
    ///     var mainEdgeServicesDnsStage = new Scaleway.EdgeServicesDnsStage("main", new()
    ///     {
    ///         PipelineId = main.Id,
    ///         TlsStageId = mainScalewayEdgeServicesTlsStage.Id,
    ///         Fqdns = new[]
    ///         {
    ///             "subdomain.example.com",
    ///         },
    ///     });
    /// 
    ///     var mainEdgeServicesHeadStage = new Scaleway.EdgeServicesHeadStage("main", new()
    ///     {
    ///         PipelineId = main.Id,
    ///         HeadStageId = mainEdgeServicesDnsStage.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Head stages can be imported using the `{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage main 11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage")]
    public partial class EdgeServicesHeadStage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of head stage of the pipeline.
        /// </summary>
        [Output("headStageId")]
        public Output<string> HeadStageId { get; private set; } = null!;

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Output("pipelineId")]
        public Output<string> PipelineId { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeServicesHeadStage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeServicesHeadStage(string name, EdgeServicesHeadStageArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage", name, args ?? new EdgeServicesHeadStageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeServicesHeadStage(string name, Input<string> id, EdgeServicesHeadStageState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeServicesHeadStage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeServicesHeadStage Get(string name, Input<string> id, EdgeServicesHeadStageState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeServicesHeadStage(name, id, state, options);
        }
    }

    public sealed class EdgeServicesHeadStageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of head stage of the pipeline.
        /// </summary>
        [Input("headStageId")]
        public Input<string>? HeadStageId { get; set; }

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Input("pipelineId", required: true)]
        public Input<string> PipelineId { get; set; } = null!;

        public EdgeServicesHeadStageArgs()
        {
        }
        public static new EdgeServicesHeadStageArgs Empty => new EdgeServicesHeadStageArgs();
    }

    public sealed class EdgeServicesHeadStageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of head stage of the pipeline.
        /// </summary>
        [Input("headStageId")]
        public Input<string>? HeadStageId { get; set; }

        /// <summary>
        /// The ID of the pipeline.
        /// </summary>
        [Input("pipelineId")]
        public Input<string>? PipelineId { get; set; }

        public EdgeServicesHeadStageState()
        {
        }
        public static new EdgeServicesHeadStageState Empty => new EdgeServicesHeadStageState();
    }
}
