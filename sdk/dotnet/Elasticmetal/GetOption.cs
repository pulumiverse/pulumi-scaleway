// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Elasticmetal
{
    public static class GetOption
    {
        /// <summary>
        /// Gets information about a baremetal option.
        /// For more information, see the [API documentation](https://developers.scaleway.com/en/products/baremetal/api).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by option name
        ///     var byName = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         Name = "Remote Access",
        ///     });
        /// 
        ///     // Get info by option id
        ///     var byId = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         OptionId = "931df052-d713-4674-8b58-96a63244c8e2",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOptionResult> InvokeAsync(GetOptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOptionResult>("scaleway:elasticmetal/getOption:getOption", args ?? new GetOptionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a baremetal option.
        /// For more information, see the [API documentation](https://developers.scaleway.com/en/products/baremetal/api).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by option name
        ///     var byName = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         Name = "Remote Access",
        ///     });
        /// 
        ///     // Get info by option id
        ///     var byId = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         OptionId = "931df052-d713-4674-8b58-96a63244c8e2",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOptionResult> Invoke(GetOptionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOptionResult>("scaleway:elasticmetal/getOption:getOption", args ?? new GetOptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a baremetal option.
        /// For more information, see the [API documentation](https://developers.scaleway.com/en/products/baremetal/api).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by option name
        ///     var byName = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         Name = "Remote Access",
        ///     });
        /// 
        ///     // Get info by option id
        ///     var byId = Scaleway.Elasticmetal.GetOption.Invoke(new()
        ///     {
        ///         OptionId = "931df052-d713-4674-8b58-96a63244c8e2",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOptionResult> Invoke(GetOptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOptionResult>("scaleway:elasticmetal/getOption:getOption", args ?? new GetOptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The option name. Only one of `name` and `option_id` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The option id. Only one of `name` and `option_id` should be specified.
        /// </summary>
        [Input("optionId")]
        public string? OptionId { get; set; }

        /// <summary>
        /// `zone`) The zone in which the option exists.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetOptionArgs()
        {
        }
        public static new GetOptionArgs Empty => new GetOptionArgs();
    }

    public sealed class GetOptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The option name. Only one of `name` and `option_id` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The option id. Only one of `name` and `option_id` should be specified.
        /// </summary>
        [Input("optionId")]
        public Input<string>? OptionId { get; set; }

        /// <summary>
        /// `zone`) The zone in which the option exists.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetOptionInvokeArgs()
        {
        }
        public static new GetOptionInvokeArgs Empty => new GetOptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetOptionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Is false if the option could not be added or removed.
        /// </summary>
        public readonly bool Manageable;
        /// <summary>
        /// The name of the option.
        /// </summary>
        public readonly string? Name;
        public readonly string? OptionId;
        public readonly string Zone;

        [OutputConstructor]
        private GetOptionResult(
            string id,

            bool manageable,

            string? name,

            string? optionId,

            string zone)
        {
            Id = id;
            Manageable = manageable;
            Name = name;
            OptionId = optionId;
            Zone = zone;
        }
    }
}
