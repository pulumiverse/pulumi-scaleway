// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Elasticmetal.Outputs
{

    [OutputType]
    public sealed class GetIpsIpResult
    {
        /// <summary>
        /// The date on which the flexible IP was created (RFC 3339 format).
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the flexible IP.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The MAC address ID.
        /// </summary>
        public readonly string Id;
        public readonly string IpAddress;
        /// <summary>
        /// The MAC address of the Virtual MAC.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpsIpMacAddressResult> MacAddresses;
        /// <summary>
        /// (Defaults to provider `organization_id`) The ID of the organization the IP is in.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// (Defaults to provider `project_id`) The ID of the project the IP is in.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The reverse domain associated with this IP.
        /// </summary>
        public readonly string Reverse;
        /// <summary>
        /// The status of virtual MAC.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// List of tags used as filter. IPs with these exact tags are listed.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The date on which the flexible IP was last updated (RFC 3339 format).
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// `zone`) The zone in which IPs exist.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetIpsIpResult(
            string createdAt,

            string description,

            string id,

            string ipAddress,

            ImmutableArray<Outputs.GetIpsIpMacAddressResult> macAddresses,

            string organizationId,

            string projectId,

            string reverse,

            string status,

            ImmutableArray<string> tags,

            string updatedAt,

            string zone)
        {
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            IpAddress = ipAddress;
            MacAddresses = macAddresses;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Reverse = reverse;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            Zone = zone;
        }
    }
}
