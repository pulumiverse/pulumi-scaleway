// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Functions
{
    public static class GetNamespace
    {
        /// <summary>
        /// The `scaleway.functions.Namespace` data source is used to retrieve information about a Serverless Functions namespace.
        /// 
        /// Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
        /// </summary>
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("scaleway:functions/getNamespace:getNamespace", args ?? new GetNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// The `scaleway.functions.Namespace` data source is used to retrieve information about a Serverless Functions namespace.
        /// 
        /// Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("scaleway:functions/getNamespace:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `scaleway.functions.Namespace` data source is used to retrieve information about a Serverless Functions namespace.
        /// 
        /// Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("scaleway:functions/getNamespace:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the namespace. Only one of `name` and `namespace_id` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The unique identifier of the namespace. Only one of `name` and `namespace_id` should be specified.
        /// </summary>
        [Input("namespaceId")]
        public string? NamespaceId { get; set; }

        /// <summary>
        /// `project_id`) The unique identifier of the project with which the namespace is associated.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// `region`) The region in which the namespace exists.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetNamespaceArgs()
        {
        }
        public static new GetNamespaceArgs Empty => new GetNamespaceArgs();
    }

    public sealed class GetNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the namespace. Only one of `name` and `namespace_id` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique identifier of the namespace. Only one of `name` and `namespace_id` should be specified.
        /// </summary>
        [Input("namespaceId")]
        public Input<string>? NamespaceId { get; set; }

        /// <summary>
        /// `project_id`) The unique identifier of the project with which the namespace is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `region`) The region in which the namespace exists.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetNamespaceInvokeArgs()
        {
        }
        public static new GetNamespaceInvokeArgs Empty => new GetNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// The description of the namespace.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The environment variables of the namespace.
        /// </summary>
        public readonly ImmutableDictionary<string, string> EnvironmentVariables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? NamespaceId;
        /// <summary>
        /// The unique identifier of the organization with which the namespace is associated.
        /// </summary>
        public readonly string OrganizationId;
        public readonly string? ProjectId;
        public readonly string? Region;
        /// <summary>
        /// The registry endpoint of the namespace.
        /// </summary>
        public readonly string RegistryEndpoint;
        /// <summary>
        /// The unique identifier of the registry namespace of the Serverless Functions namespace.
        /// </summary>
        public readonly string RegistryNamespaceId;
        public readonly ImmutableDictionary<string, string> SecretEnvironmentVariables;
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetNamespaceResult(
            string description,

            ImmutableDictionary<string, string> environmentVariables,

            string id,

            string? name,

            string? namespaceId,

            string organizationId,

            string? projectId,

            string? region,

            string registryEndpoint,

            string registryNamespaceId,

            ImmutableDictionary<string, string> secretEnvironmentVariables,

            ImmutableArray<string> tags)
        {
            Description = description;
            EnvironmentVariables = environmentVariables;
            Id = id;
            Name = name;
            NamespaceId = namespaceId;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Region = region;
            RegistryEndpoint = registryEndpoint;
            RegistryNamespaceId = registryNamespaceId;
            SecretEnvironmentVariables = secretEnvironmentVariables;
            Tags = tags;
        }
    }
}
