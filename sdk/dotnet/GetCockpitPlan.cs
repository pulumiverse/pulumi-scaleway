// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    public static class GetCockpitPlan
    {
        /// <summary>
        /// The `scaleway.getCockpitPlan` data source is used to fetch details about a specific Scaleway Cockpit pricing plan. This information can then be used to configure resources like `scaleway.Cockpit`.
        /// 
        /// Find out more about [pricing plans](https://console.scaleway.com/cockpit/plans) in the Scaleway console.
        /// 
        /// Refer to Cockpit's [product documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/) and [API documentation](https://www.scaleway.com/en/developers/api/cockpit/regional-api) for more information.
        /// 
        /// ## Fetch and associate a pricing plan to a Cockpit
        /// 
        /// The following command shows how to fetch information about the `premium` pricing plan and how to associate it with the Cockpit of your Scaleway default Project.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// using Scaleway = Pulumiverse.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var premium = Scaleway.GetCockpitPlan.Invoke(new()
        ///     {
        ///         Name = "premium",
        ///     });
        /// 
        ///     var main = new Scaleway.Cockpit("main", new()
        ///     {
        ///         Plan = premium.Apply(getCockpitPlanResult =&gt; getCockpitPlanResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCockpitPlanResult> InvokeAsync(GetCockpitPlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCockpitPlanResult>("scaleway:index/getCockpitPlan:getCockpitPlan", args ?? new GetCockpitPlanArgs(), options.WithDefaults());

        /// <summary>
        /// The `scaleway.getCockpitPlan` data source is used to fetch details about a specific Scaleway Cockpit pricing plan. This information can then be used to configure resources like `scaleway.Cockpit`.
        /// 
        /// Find out more about [pricing plans](https://console.scaleway.com/cockpit/plans) in the Scaleway console.
        /// 
        /// Refer to Cockpit's [product documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/) and [API documentation](https://www.scaleway.com/en/developers/api/cockpit/regional-api) for more information.
        /// 
        /// ## Fetch and associate a pricing plan to a Cockpit
        /// 
        /// The following command shows how to fetch information about the `premium` pricing plan and how to associate it with the Cockpit of your Scaleway default Project.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// using Scaleway = Pulumiverse.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var premium = Scaleway.GetCockpitPlan.Invoke(new()
        ///     {
        ///         Name = "premium",
        ///     });
        /// 
        ///     var main = new Scaleway.Cockpit("main", new()
        ///     {
        ///         Plan = premium.Apply(getCockpitPlanResult =&gt; getCockpitPlanResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCockpitPlanResult> Invoke(GetCockpitPlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCockpitPlanResult>("scaleway:index/getCockpitPlan:getCockpitPlan", args ?? new GetCockpitPlanInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `scaleway.getCockpitPlan` data source is used to fetch details about a specific Scaleway Cockpit pricing plan. This information can then be used to configure resources like `scaleway.Cockpit`.
        /// 
        /// Find out more about [pricing plans](https://console.scaleway.com/cockpit/plans) in the Scaleway console.
        /// 
        /// Refer to Cockpit's [product documentation](https://www.scaleway.com/en/docs/observability/cockpit/concepts/) and [API documentation](https://www.scaleway.com/en/developers/api/cockpit/regional-api) for more information.
        /// 
        /// ## Fetch and associate a pricing plan to a Cockpit
        /// 
        /// The following command shows how to fetch information about the `premium` pricing plan and how to associate it with the Cockpit of your Scaleway default Project.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// using Scaleway = Pulumiverse.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var premium = Scaleway.GetCockpitPlan.Invoke(new()
        ///     {
        ///         Name = "premium",
        ///     });
        /// 
        ///     var main = new Scaleway.Cockpit("main", new()
        ///     {
        ///         Plan = premium.Apply(getCockpitPlanResult =&gt; getCockpitPlanResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCockpitPlanResult> Invoke(GetCockpitPlanInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCockpitPlanResult>("scaleway:index/getCockpitPlan:getCockpitPlan", args ?? new GetCockpitPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCockpitPlanArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the pricing plan you want to retrieve information about.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCockpitPlanArgs()
        {
        }
        public static new GetCockpitPlanArgs Empty => new GetCockpitPlanArgs();
    }

    public sealed class GetCockpitPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the pricing plan you want to retrieve information about.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCockpitPlanInvokeArgs()
        {
        }
        public static new GetCockpitPlanInvokeArgs Empty => new GetCockpitPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetCockpitPlanResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetCockpitPlanResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
