// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [Obsolete(@"scaleway.index/getflexibleip.getFlexibleIp has been deprecated in favor of scaleway.elasticmetal/getip.getIp")]
    public static class GetFlexibleIp
    {
        /// <summary>
        /// Gets information about a Flexible IP.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by IP address
        ///     var withIp = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         IpAddress = "1.2.3.4",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var withId = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         FlexibleIpId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFlexibleIpResult> InvokeAsync(GetFlexibleIpArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlexibleIpResult>("scaleway:index/getFlexibleIp:getFlexibleIp", args ?? new GetFlexibleIpArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Flexible IP.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by IP address
        ///     var withIp = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         IpAddress = "1.2.3.4",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var withId = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         FlexibleIpId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlexibleIpResult> Invoke(GetFlexibleIpInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlexibleIpResult>("scaleway:index/getFlexibleIp:getFlexibleIp", args ?? new GetFlexibleIpInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Flexible IP.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by IP address
        ///     var withIp = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         IpAddress = "1.2.3.4",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var withId = Scaleway.Elasticmetal.GetIp.Invoke(new()
        ///     {
        ///         FlexibleIpId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlexibleIpResult> Invoke(GetFlexibleIpInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlexibleIpResult>("scaleway:index/getFlexibleIp:getFlexibleIp", args ?? new GetFlexibleIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlexibleIpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP ID.
        /// Only one of `IpAddress` and `FlexibleIpId` should be specified.
        /// </summary>
        [Input("flexibleIpId")]
        public string? FlexibleIpId { get; set; }

        /// <summary>
        /// The IP address.
        /// Only one of `IpAddress` and `FlexibleIpId` should be specified.
        /// </summary>
        [Input("ipAddress")]
        public string? IpAddress { get; set; }

        /// <summary>
        /// `ProjectId`) The ID of the Project the Flexible IP is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        public GetFlexibleIpArgs()
        {
        }
        public static new GetFlexibleIpArgs Empty => new GetFlexibleIpArgs();
    }

    public sealed class GetFlexibleIpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP ID.
        /// Only one of `IpAddress` and `FlexibleIpId` should be specified.
        /// </summary>
        [Input("flexibleIpId")]
        public Input<string>? FlexibleIpId { get; set; }

        /// <summary>
        /// The IP address.
        /// Only one of `IpAddress` and `FlexibleIpId` should be specified.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// `ProjectId`) The ID of the Project the Flexible IP is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public GetFlexibleIpInvokeArgs()
        {
        }
        public static new GetFlexibleIpInvokeArgs Empty => new GetFlexibleIpInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlexibleIpResult
    {
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string? FlexibleIpId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IpAddress;
        public readonly bool IsIpv6;
        public readonly string OrganizationId;
        public readonly string ProjectId;
        public readonly string Reverse;
        public readonly string ServerId;
        public readonly string Status;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;
        public readonly string Zone;

        [OutputConstructor]
        private GetFlexibleIpResult(
            string createdAt,

            string description,

            string? flexibleIpId,

            string id,

            string? ipAddress,

            bool isIpv6,

            string organizationId,

            string projectId,

            string reverse,

            string serverId,

            string status,

            ImmutableArray<string> tags,

            string updatedAt,

            string zone)
        {
            CreatedAt = createdAt;
            Description = description;
            FlexibleIpId = flexibleIpId;
            Id = id;
            IpAddress = ipAddress;
            IsIpv6 = isIpv6;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Reverse = reverse;
            ServerId = serverId;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            Zone = zone;
        }
    }
}
