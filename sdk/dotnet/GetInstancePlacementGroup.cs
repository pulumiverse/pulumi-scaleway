// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    public static class GetInstancePlacementGroup
    {
        /// <summary>
        /// Gets information about a Security Group.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKey = Scaleway.GetInstancePlacementGroup.Invoke(new()
        ///     {
        ///         PlacementGroupId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstancePlacementGroupResult> InvokeAsync(GetInstancePlacementGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstancePlacementGroupResult>("scaleway:index/getInstancePlacementGroup:getInstancePlacementGroup", args ?? new GetInstancePlacementGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Security Group.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKey = Scaleway.GetInstancePlacementGroup.Invoke(new()
        ///     {
        ///         PlacementGroupId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstancePlacementGroupResult> Invoke(GetInstancePlacementGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstancePlacementGroupResult>("scaleway:index/getInstancePlacementGroup:getInstancePlacementGroup", args ?? new GetInstancePlacementGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancePlacementGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The placement group name. Only one of `name` and `placement_group_id` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The placement group id. Only one of `name` and `placement_group_id` should be specified.
        /// </summary>
        [Input("placementGroupId")]
        public string? PlacementGroupId { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the placement group is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// `zone`) The zone in which the placement group exists.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetInstancePlacementGroupArgs()
        {
        }
        public static new GetInstancePlacementGroupArgs Empty => new GetInstancePlacementGroupArgs();
    }

    public sealed class GetInstancePlacementGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The placement group name. Only one of `name` and `placement_group_id` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The placement group id. Only one of `name` and `placement_group_id` should be specified.
        /// </summary>
        [Input("placementGroupId")]
        public Input<string>? PlacementGroupId { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the placement group is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `zone`) The zone in which the placement group exists.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetInstancePlacementGroupInvokeArgs()
        {
        }
        public static new GetInstancePlacementGroupInvokeArgs Empty => new GetInstancePlacementGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstancePlacementGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        /// <summary>
        /// The organization ID the placement group is associated with.
        /// </summary>
        public readonly string OrganizationId;
        public readonly string? PlacementGroupId;
        /// <summary>
        /// The [policy mode](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
        /// </summary>
        public readonly string PolicyMode;
        /// <summary>
        /// Is true when the policy is respected.
        /// </summary>
        public readonly bool PolicyRespected;
        /// <summary>
        /// The [policy type](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
        /// </summary>
        public readonly string PolicyType;
        public readonly string ProjectId;
        /// <summary>
        /// A list of tags to apply to the placement group.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        public readonly string? Zone;

        [OutputConstructor]
        private GetInstancePlacementGroupResult(
            string id,

            string? name,

            string organizationId,

            string? placementGroupId,

            string policyMode,

            bool policyRespected,

            string policyType,

            string projectId,

            ImmutableArray<string> tags,

            string? zone)
        {
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            PlacementGroupId = placementGroupId;
            PolicyMode = policyMode;
            PolicyRespected = policyRespected;
            PolicyType = policyType;
            ProjectId = projectId;
            Tags = tags;
            Zone = zone;
        }
    }
}
