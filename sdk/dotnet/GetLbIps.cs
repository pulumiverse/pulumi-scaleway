// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [Obsolete(@"scaleway.index/getlbips.getLbIps has been deprecated in favor of scaleway.loadbalancers/getips.getIps")]
    public static class GetLbIps
    {
        /// <summary>
        /// Gets information about multiple Load Balancer IP addresses.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/how-to/create-manage-flex-ips/) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-ip-addresses-list-ip-addresses).
        /// </summary>
        public static Task<GetLbIpsResult> InvokeAsync(GetLbIpsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLbIpsResult>("scaleway:index/getLbIps:getLbIps", args ?? new GetLbIpsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple Load Balancer IP addresses.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/how-to/create-manage-flex-ips/) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-ip-addresses-list-ip-addresses).
        /// </summary>
        public static Output<GetLbIpsResult> Invoke(GetLbIpsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbIpsResult>("scaleway:index/getLbIps:getLbIps", args ?? new GetLbIpsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple Load Balancer IP addresses.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/how-to/create-manage-flex-ips/) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-ip-addresses-list-ip-addresses).
        /// </summary>
        public static Output<GetLbIpsResult> Invoke(GetLbIpsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLbIpsResult>("scaleway:index/getLbIps:getLbIps", args ?? new GetLbIpsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLbIpsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP CIDR range to filter for. IPs within a matching CIDR block are listed.
        /// </summary>
        [Input("ipCidrRange")]
        public string? IpCidrRange { get; set; }

        /// <summary>
        /// The IP type used as a filter.
        /// </summary>
        [Input("ipType")]
        public string? IpType { get; set; }

        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// List of tags used as filter. IPs with these exact tags are listed.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the IPs exist.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetLbIpsArgs()
        {
        }
        public static new GetLbIpsArgs Empty => new GetLbIpsArgs();
    }

    public sealed class GetLbIpsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP CIDR range to filter for. IPs within a matching CIDR block are listed.
        /// </summary>
        [Input("ipCidrRange")]
        public Input<string>? IpCidrRange { get; set; }

        /// <summary>
        /// The IP type used as a filter.
        /// </summary>
        [Input("ipType")]
        public Input<string>? IpType { get; set; }

        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// List of tags used as filter. IPs with these exact tags are listed.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the IPs exist.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetLbIpsInvokeArgs()
        {
        }
        public static new GetLbIpsInvokeArgs Empty => new GetLbIpsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLbIpsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IpCidrRange;
        public readonly string? IpType;
        /// <summary>
        /// List of retrieved IPs
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLbIpsIpResult> Ips;
        /// <summary>
        /// The ID of the Organization the Load Balancer is associated with.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The zone of the Load Balancer.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetLbIpsResult(
            string id,

            string? ipCidrRange,

            string? ipType,

            ImmutableArray<Outputs.GetLbIpsIpResult> ips,

            string organizationId,

            string projectId,

            ImmutableArray<string> tags,

            string zone)
        {
            Id = id;
            IpCidrRange = ipCidrRange;
            IpType = ipType;
            Ips = ips;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Tags = tags;
            Zone = zone;
        }
    }
}
