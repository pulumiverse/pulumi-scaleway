// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [Obsolete(@"scaleway.index/getvpcprivatenetwork.getVpcPrivateNetwork has been deprecated in favor of scaleway.network/getprivatenetwork.getPrivateNetwork")]
    public static class GetVpcPrivateNetwork
    {
        /// <summary>
        /// Gets information about a Private Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var myName = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by name and VPC ID
        ///     var myNameAndVpcId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///         VpcId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var myId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         PrivateNetworkId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVpcPrivateNetworkResult> InvokeAsync(GetVpcPrivateNetworkArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcPrivateNetworkResult>("scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork", args ?? new GetVpcPrivateNetworkArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Private Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var myName = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by name and VPC ID
        ///     var myNameAndVpcId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///         VpcId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var myId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         PrivateNetworkId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcPrivateNetworkResult> Invoke(GetVpcPrivateNetworkInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcPrivateNetworkResult>("scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork", args ?? new GetVpcPrivateNetworkInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Private Network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var myName = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by name and VPC ID
        ///     var myNameAndVpcId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///         VpcId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        ///     // Get info by IP ID
        ///     var myId = Scaleway.Network.GetPrivateNetwork.Invoke(new()
        ///     {
        ///         PrivateNetworkId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcPrivateNetworkResult> Invoke(GetVpcPrivateNetworkInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcPrivateNetworkResult>("scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork", args ?? new GetVpcPrivateNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcPrivateNetworkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Private Network. Cannot be used with `PrivateNetworkId`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// ID of the Private Network. Cannot be used with `Name` or `VpcId`.
        /// </summary>
        [Input("privateNetworkId")]
        public string? PrivateNetworkId { get; set; }

        /// <summary>
        /// The ID of the Project the Private Network is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// ID of the VPC the Private Network is in. Cannot be used with `PrivateNetworkId`.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetVpcPrivateNetworkArgs()
        {
        }
        public static new GetVpcPrivateNetworkArgs Empty => new GetVpcPrivateNetworkArgs();
    }

    public sealed class GetVpcPrivateNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Private Network. Cannot be used with `PrivateNetworkId`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the Private Network. Cannot be used with `Name` or `VpcId`.
        /// </summary>
        [Input("privateNetworkId")]
        public Input<string>? PrivateNetworkId { get; set; }

        /// <summary>
        /// The ID of the Project the Private Network is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// ID of the VPC the Private Network is in. Cannot be used with `PrivateNetworkId`.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetVpcPrivateNetworkInvokeArgs()
        {
        }
        public static new GetVpcPrivateNetworkInvokeArgs Empty => new GetVpcPrivateNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcPrivateNetworkResult
    {
        public readonly string CreatedAt;
        public readonly bool EnableDefaultRoutePropagation;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IPv4 subnet associated with the Private Network.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcPrivateNetworkIpv4SubnetResult> Ipv4Subnets;
        /// <summary>
        /// The IPv6 subnets associated with the Private Network.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcPrivateNetworkIpv6SubnetResult> Ipv6Subnets;
        public readonly bool IsRegional;
        public readonly string? Name;
        public readonly string OrganizationId;
        public readonly string? PrivateNetworkId;
        public readonly string? ProjectId;
        public readonly string? Region;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;
        public readonly string? VpcId;
        public readonly string Zone;

        [OutputConstructor]
        private GetVpcPrivateNetworkResult(
            string createdAt,

            bool enableDefaultRoutePropagation,

            string id,

            ImmutableArray<Outputs.GetVpcPrivateNetworkIpv4SubnetResult> ipv4Subnets,

            ImmutableArray<Outputs.GetVpcPrivateNetworkIpv6SubnetResult> ipv6Subnets,

            bool isRegional,

            string? name,

            string organizationId,

            string? privateNetworkId,

            string? projectId,

            string? region,

            ImmutableArray<string> tags,

            string updatedAt,

            string? vpcId,

            string zone)
        {
            CreatedAt = createdAt;
            EnableDefaultRoutePropagation = enableDefaultRoutePropagation;
            Id = id;
            Ipv4Subnets = ipv4Subnets;
            Ipv6Subnets = ipv6Subnets;
            IsRegional = isRegional;
            Name = name;
            OrganizationId = organizationId;
            PrivateNetworkId = privateNetworkId;
            ProjectId = projectId;
            Region = region;
            Tags = tags;
            UpdatedAt = updatedAt;
            VpcId = vpcId;
            Zone = zone;
        }
    }
}
