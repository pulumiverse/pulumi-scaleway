// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Iam
{
    public static class GetGroup
    {
        /// <summary>
        /// Gets information about an existing IAM group.
        /// 
        /// For more information, refer to the [IAM API documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var findByName = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by group ID
        ///     var findById = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         GroupId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("scaleway:iam/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing IAM group.
        /// 
        /// For more information, refer to the [IAM API documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var findByName = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by group ID
        ///     var findById = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         GroupId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("scaleway:iam/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an existing IAM group.
        /// 
        /// For more information, refer to the [IAM API documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#applications-83ce5e)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by name
        ///     var findByName = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         Name = "foobar",
        ///     });
        /// 
        ///     // Get info by group ID
        ///     var findById = Scaleway.Iam.GetGroup.Invoke(new()
        ///     {
        ///         GroupId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("scaleway:iam/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IAM group.
        /// 
        /// &gt; **Note** You must specify at least one: `Name` and/or `GroupId`.
        /// </summary>
        [Input("groupId")]
        public string? GroupId { get; set; }

        /// <summary>
        /// The name of the IAM group.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// `OrganizationId`) The ID of the
        /// organization the group is associated with.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the IAM group.
        /// 
        /// &gt; **Note** You must specify at least one: `Name` and/or `GroupId`.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The name of the IAM group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `OrganizationId`) The ID of the
        /// organization the group is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        public readonly ImmutableArray<string> ApplicationIds;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly bool ExternalMembership;
        public readonly string? GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? OrganizationId;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;
        public readonly ImmutableArray<string> UserIds;

        [OutputConstructor]
        private GetGroupResult(
            ImmutableArray<string> applicationIds,

            string createdAt,

            string description,

            bool externalMembership,

            string? groupId,

            string id,

            string? name,

            string? organizationId,

            ImmutableArray<string> tags,

            string updatedAt,

            ImmutableArray<string> userIds)
        {
            ApplicationIds = applicationIds;
            CreatedAt = createdAt;
            Description = description;
            ExternalMembership = externalMembership;
            GroupId = groupId;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
            Tags = tags;
            UpdatedAt = updatedAt;
            UserIds = userIds;
        }
    }
}
