// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Iam.Inputs
{

    public sealed class PolicyRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition of the rule.
        /// 
        /// **_TIP:_** You can use the Scaleway CLI to list the permissions details. e.g:
        /// 
        /// ```shell
        /// scw iam permission-set list
        /// ```
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// ID of organization scoped to the rule, this can be used to create a rule for all projects in an organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("permissionSetNames", required: true)]
        private InputList<string>? _permissionSetNames;

        /// <summary>
        /// Names of permission sets bind to the rule.
        /// </summary>
        public InputList<string> PermissionSetNames
        {
            get => _permissionSetNames ?? (_permissionSetNames = new InputList<string>());
            set => _permissionSetNames = value;
        }

        [Input("projectIds")]
        private InputList<string>? _projectIds;

        /// <summary>
        /// List of project IDs scoped to the rule.
        /// 
        /// &gt; **Important** One `OrganizationId` or `ProjectIds` must be set per rule.
        /// </summary>
        public InputList<string> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<string>());
            set => _projectIds = value;
        }

        public PolicyRuleGetArgs()
        {
        }
        public static new PolicyRuleGetArgs Empty => new PolicyRuleGetArgs();
    }
}
