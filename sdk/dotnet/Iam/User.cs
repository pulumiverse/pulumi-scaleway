// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Iam
{
    /// <summary>
    /// Creates and manages Scaleway IAM [Users](https://www.scaleway.com/en/docs/iam/concepts/#member).
    /// For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/iam/#path-users-list-users-of-an-organization).
    /// 
    /// ## Example Usage
    /// 
    /// ### User
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var user = new Scaleway.Iam.User("user", new()
    ///     {
    ///         Email = "foo@test.com",
    ///         Tags = new[]
    ///         {
    ///             "test-tag",
    ///         },
    ///         Username = "foo",
    ///         FirstName = "Foo",
    ///         LastName = "Bar",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Multiple users
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var users = new[]
    ///     {
    ///         
    ///         {
    ///             { "email", "test@test.com" },
    ///             { "username", "test" },
    ///         },
    ///         
    ///         {
    ///             { "email", "test2@test.com" },
    ///             { "username", "test2" },
    ///         },
    ///     };
    /// 
    ///     var usersUser = new List&lt;Scaleway.Iam.User&gt;();
    ///     for (var rangeIndex = 0; rangeIndex &lt; users.Length; rangeIndex++)
    ///     {
    ///         var range = new { Value = rangeIndex };
    ///         usersUser.Add(new Scaleway.Iam.User($"users-{range.Value}", new()
    ///         {
    ///             Email = users[range.Value].Email,
    ///             Username = users[range.Value].Username,
    ///         }));
    ///     }
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IAM users can be imported using the `{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:iam/user:User basic 11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:iam/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the account root user associated with the user.
        /// </summary>
        [Output("accountRootUserId")]
        public Output<string> AccountRootUserId { get; private set; } = null!;

        /// <summary>
        /// The date and time of the creation of the IAM user.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Whether the IAM user is deletable.
        /// </summary>
        [Output("deletable")]
        public Output<bool> Deletable { get; private set; } = null!;

        /// <summary>
        /// The email of the IAM user. For Guest users, this argument is not editable.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Output("firstName")]
        public Output<string?> FirstName { get; private set; } = null!;

        /// <summary>
        /// The date of the last login.
        /// </summary>
        [Output("lastLoginAt")]
        public Output<string> LastLoginAt { get; private set; } = null!;

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Output("lastName")]
        public Output<string?> LastName { get; private set; } = null!;

        /// <summary>
        /// The user's locale (e.g., en_US).
        /// </summary>
        [Output("locale")]
        public Output<string> Locale { get; private set; } = null!;

        /// <summary>
        /// Whether the user is locked.
        /// </summary>
        [Output("locked")]
        public Output<bool> Locked { get; private set; } = null!;

        /// <summary>
        /// Whether the MFA is enabled.
        /// </summary>
        [Output("mfa")]
        public Output<bool> Mfa { get; private set; } = null!;

        /// <summary>
        /// `OrganizationId`) The ID of the organization the user is associated with.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The password for first access.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The user's phone number.
        /// </summary>
        [Output("phoneNumber")]
        public Output<string?> PhoneNumber { get; private set; } = null!;

        /// <summary>
        /// Whether or not to send an email containing the password for first access.
        /// </summary>
        [Output("sendPasswordEmail")]
        public Output<bool?> SendPasswordEmail { get; private set; } = null!;

        /// <summary>
        /// Whether or not to send a welcome email that includes onboarding information.
        /// </summary>
        [Output("sendWelcomeEmail")]
        public Output<bool?> SendWelcomeEmail { get; private set; } = null!;

        /// <summary>
        /// The status of user invitation. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the user.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of user. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the IAM user.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The username of the IAM user.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("scaleway:iam/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:iam/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "scaleway:index/iamUser:IamUser" },
                },
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email of the IAM user. For Guest users, this argument is not editable.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// The user's locale (e.g., en_US).
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// `OrganizationId`) The ID of the organization the user is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password for first access.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The user's phone number.
        /// </summary>
        [Input("phoneNumber")]
        public Input<string>? PhoneNumber { get; set; }

        /// <summary>
        /// Whether or not to send an email containing the password for first access.
        /// </summary>
        [Input("sendPasswordEmail")]
        public Input<bool>? SendPasswordEmail { get; set; }

        /// <summary>
        /// Whether or not to send a welcome email that includes onboarding information.
        /// </summary>
        [Input("sendWelcomeEmail")]
        public Input<bool>? SendWelcomeEmail { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the user.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The username of the IAM user.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account root user associated with the user.
        /// </summary>
        [Input("accountRootUserId")]
        public Input<string>? AccountRootUserId { get; set; }

        /// <summary>
        /// The date and time of the creation of the IAM user.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Whether the IAM user is deletable.
        /// </summary>
        [Input("deletable")]
        public Input<bool>? Deletable { get; set; }

        /// <summary>
        /// The email of the IAM user. For Guest users, this argument is not editable.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The user's first name.
        /// </summary>
        [Input("firstName")]
        public Input<string>? FirstName { get; set; }

        /// <summary>
        /// The date of the last login.
        /// </summary>
        [Input("lastLoginAt")]
        public Input<string>? LastLoginAt { get; set; }

        /// <summary>
        /// The user's last name.
        /// </summary>
        [Input("lastName")]
        public Input<string>? LastName { get; set; }

        /// <summary>
        /// The user's locale (e.g., en_US).
        /// </summary>
        [Input("locale")]
        public Input<string>? Locale { get; set; }

        /// <summary>
        /// Whether the user is locked.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        /// <summary>
        /// Whether the MFA is enabled.
        /// </summary>
        [Input("mfa")]
        public Input<bool>? Mfa { get; set; }

        /// <summary>
        /// `OrganizationId`) The ID of the organization the user is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// The password for first access.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The user's phone number.
        /// </summary>
        [Input("phoneNumber")]
        public Input<string>? PhoneNumber { get; set; }

        /// <summary>
        /// Whether or not to send an email containing the password for first access.
        /// </summary>
        [Input("sendPasswordEmail")]
        public Input<bool>? SendPasswordEmail { get; set; }

        /// <summary>
        /// Whether or not to send a welcome email that includes onboarding information.
        /// </summary>
        [Input("sendWelcomeEmail")]
        public Input<bool>? SendWelcomeEmail { get; set; }

        /// <summary>
        /// The status of user invitation. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the user.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of user. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The date and time of the last update of the IAM user.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The username of the IAM user.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
