// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Inputs
{

    public sealed class CockpitEndpointGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Deprecated) URL for the [Alert manager](https://www.scaleway.com/en/docs/observability/cockpit/concepts/#alert-manager).
        /// </summary>
        [Input("alertmanagerUrl")]
        public Input<string>? AlertmanagerUrl { get; set; }

        /// <summary>
        /// (Deprecated) URL for Grafana.
        /// </summary>
        [Input("grafanaUrl")]
        public Input<string>? GrafanaUrl { get; set; }

        /// <summary>
        /// (Deprecated) URL for [logs](https://www.scaleway.com/en/docs/observability/cockpit/concepts/#logs) to retrieve in the [Data sources tab](https://console.scaleway.com/cockpit/dataSource) of the Scaleway console.
        /// </summary>
        [Input("logsUrl")]
        public Input<string>? LogsUrl { get; set; }

        /// <summary>
        /// (Deprecated) URL for [metrics](https://www.scaleway.com/en/docs/observability/cockpit/concepts/#metric) to retrieve in the [Data sources tab](https://console.scaleway.com/cockpit/dataSource) of the Scaleway console.
        /// </summary>
        [Input("metricsUrl")]
        public Input<string>? MetricsUrl { get; set; }

        /// <summary>
        /// (Deprecated) URL for [traces](https://www.scaleway.com/en/docs/observability/cockpit/concepts/#traces) to retrieve in the [Data sources tab](https://console.scaleway.com/cockpit/dataSource) of the Scaleway console.
        /// </summary>
        [Input("tracesUrl")]
        public Input<string>? TracesUrl { get; set; }

        public CockpitEndpointGetArgs()
        {
        }
        public static new CockpitEndpointGetArgs Empty => new CockpitEndpointGetArgs();
    }
}
