// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Instance
{
    public static class GetSnapshot
    {
        /// <summary>
        /// Gets information about an instance snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by snapshot name
        ///     var byName = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         Name = "my-snapshot-name",
        ///     });
        /// 
        ///     // Get info by snapshot ID
        ///     var byId = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         SnapshotId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("scaleway:instance/getSnapshot:getSnapshot", args ?? new GetSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an instance snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by snapshot name
        ///     var byName = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         Name = "my-snapshot-name",
        ///     });
        /// 
        ///     // Get info by snapshot ID
        ///     var byId = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         SnapshotId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("scaleway:instance/getSnapshot:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an instance snapshot.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get info by snapshot name
        ///     var byName = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         Name = "my-snapshot-name",
        ///     });
        /// 
        ///     // Get info by snapshot ID
        ///     var byId = Scaleway.Instance.GetSnapshot.Invoke(new()
        ///     {
        ///         SnapshotId = "11111111-1111-1111-1111-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("scaleway:instance/getSnapshot:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The snapshot name.
        /// Only one of `Name` and `SnapshotId` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// `ProjectId`) The ID of the project the snapshot is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// The snapshot id.
        /// Only one of `Name` and `SnapshotId` should be specified.
        /// </summary>
        [Input("snapshotId")]
        public string? SnapshotId { get; set; }

        /// <summary>
        /// `Zone`) The zone in which the snapshot exists.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetSnapshotArgs()
        {
        }
        public static new GetSnapshotArgs Empty => new GetSnapshotArgs();
    }

    public sealed class GetSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The snapshot name.
        /// Only one of `Name` and `SnapshotId` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `ProjectId`) The ID of the project the snapshot is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The snapshot id.
        /// Only one of `Name` and `SnapshotId` should be specified.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// `Zone`) The zone in which the snapshot exists.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetSnapshotInvokeArgs()
        {
        }
        public static new GetSnapshotInvokeArgs Empty => new GetSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetSnapshotImportResult> Imports;
        public readonly string? Name;
        public readonly string OrganizationId;
        public readonly string? ProjectId;
        public readonly int SizeInGb;
        public readonly string? SnapshotId;
        public readonly ImmutableArray<string> Tags;
        public readonly string Type;
        public readonly string VolumeId;
        public readonly string? Zone;

        [OutputConstructor]
        private GetSnapshotResult(
            string createdAt,

            string id,

            ImmutableArray<Outputs.GetSnapshotImportResult> imports,

            string? name,

            string organizationId,

            string? projectId,

            int sizeInGb,

            string? snapshotId,

            ImmutableArray<string> tags,

            string type,

            string volumeId,

            string? zone)
        {
            CreatedAt = createdAt;
            Id = id;
            Imports = imports;
            Name = name;
            OrganizationId = organizationId;
            ProjectId = projectId;
            SizeInGb = sizeInGb;
            SnapshotId = snapshotId;
            Tags = tags;
            Type = type;
            VolumeId = volumeId;
            Zone = zone;
        }
    }
}
