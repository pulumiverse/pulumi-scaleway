// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Kubernetes
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var aclBasic = new Scaleway.Network.PrivateNetwork("acl_basic");
    /// 
    ///     var aclBasicCluster = new Scaleway.Kubernetes.Cluster("acl_basic", new()
    ///     {
    ///         Name = "acl-basic",
    ///         Version = "1.32.2",
    ///         Cni = "cilium",
    ///         DeleteAdditionalResources = true,
    ///         PrivateNetworkId = aclBasic.Id,
    ///     });
    /// 
    ///     var aclBasicAcl = new Scaleway.Kubernetes.Acl("acl_basic", new()
    ///     {
    ///         ClusterId = aclBasicCluster.Id,
    ///         AclRules = new[]
    ///         {
    ///             new Scaleway.Kubernetes.Inputs.AclAclRuleArgs
    ///             {
    ///                 Ip = "1.2.3.4/32",
    ///                 Description = "Allow 1.2.3.4",
    ///             },
    ///             new Scaleway.Kubernetes.Inputs.AclAclRuleArgs
    ///             {
    ///                 ScalewayRanges = true,
    ///                 Description = "Allow all Scaleway ranges",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Full-isolation
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var aclBasic = new Scaleway.Network.PrivateNetwork("acl_basic");
    /// 
    ///     var aclBasicCluster = new Scaleway.Kubernetes.Cluster("acl_basic", new()
    ///     {
    ///         Name = "acl-basic",
    ///         Version = "1.32.2",
    ///         Cni = "cilium",
    ///         DeleteAdditionalResources = true,
    ///         PrivateNetworkId = aclBasic.Id,
    ///     });
    /// 
    ///     var aclBasicAcl = new Scaleway.Kubernetes.Acl("acl_basic", new()
    ///     {
    ///         ClusterId = aclBasicCluster.Id,
    ///         NoIpAllowed = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Kubernetes ACLs can be imported using the `{region}/{cluster-id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:kubernetes/acl:Acl acl01 fr-par/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:kubernetes/acl:Acl")]
    public partial class Acl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of ACLs (structure is described below)
        /// 
        /// &gt; **Important:** This block cannot be defined if the `no_ip_allowed` field is set to true.
        /// </summary>
        [Output("aclRules")]
        public Output<ImmutableArray<Outputs.AclAclRule>> AclRules { get; private set; } = null!;

        /// <summary>
        /// UUID of the cluster. The ID of the cluster is also the ID of the ACL resource, as there can only be one per cluster.
        /// 
        /// &gt; **Important:** Updates to `cluster_id` will recreate the ACL.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// If set to true, no IP will be allowed and the cluster will be in full-isolation.
        /// 
        /// &gt; **Important:** This field cannot be set to true if the `acl_rules` block is defined.
        /// </summary>
        [Output("noIpAllowed")]
        public Output<bool?> NoIpAllowed { get; private set; } = null!;

        /// <summary>
        /// `region`) The region in which the ACL rule should be created.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;


        /// <summary>
        /// Create a Acl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Acl(string name, AclArgs args, CustomResourceOptions? options = null)
            : base("scaleway:kubernetes/acl:Acl", name, args ?? new AclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Acl(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:kubernetes/acl:Acl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Acl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Acl Get(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
        {
            return new Acl(name, id, state, options);
        }
    }

    public sealed class AclArgs : global::Pulumi.ResourceArgs
    {
        [Input("aclRules")]
        private InputList<Inputs.AclAclRuleArgs>? _aclRules;

        /// <summary>
        /// A list of ACLs (structure is described below)
        /// 
        /// &gt; **Important:** This block cannot be defined if the `no_ip_allowed` field is set to true.
        /// </summary>
        public InputList<Inputs.AclAclRuleArgs> AclRules
        {
            get => _aclRules ?? (_aclRules = new InputList<Inputs.AclAclRuleArgs>());
            set => _aclRules = value;
        }

        /// <summary>
        /// UUID of the cluster. The ID of the cluster is also the ID of the ACL resource, as there can only be one per cluster.
        /// 
        /// &gt; **Important:** Updates to `cluster_id` will recreate the ACL.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// If set to true, no IP will be allowed and the cluster will be in full-isolation.
        /// 
        /// &gt; **Important:** This field cannot be set to true if the `acl_rules` block is defined.
        /// </summary>
        [Input("noIpAllowed")]
        public Input<bool>? NoIpAllowed { get; set; }

        /// <summary>
        /// `region`) The region in which the ACL rule should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AclArgs()
        {
        }
        public static new AclArgs Empty => new AclArgs();
    }

    public sealed class AclState : global::Pulumi.ResourceArgs
    {
        [Input("aclRules")]
        private InputList<Inputs.AclAclRuleGetArgs>? _aclRules;

        /// <summary>
        /// A list of ACLs (structure is described below)
        /// 
        /// &gt; **Important:** This block cannot be defined if the `no_ip_allowed` field is set to true.
        /// </summary>
        public InputList<Inputs.AclAclRuleGetArgs> AclRules
        {
            get => _aclRules ?? (_aclRules = new InputList<Inputs.AclAclRuleGetArgs>());
            set => _aclRules = value;
        }

        /// <summary>
        /// UUID of the cluster. The ID of the cluster is also the ID of the ACL resource, as there can only be one per cluster.
        /// 
        /// &gt; **Important:** Updates to `cluster_id` will recreate the ACL.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// If set to true, no IP will be allowed and the cluster will be in full-isolation.
        /// 
        /// &gt; **Important:** This field cannot be set to true if the `acl_rules` block is defined.
        /// </summary>
        [Input("noIpAllowed")]
        public Input<bool>? NoIpAllowed { get; set; }

        /// <summary>
        /// `region`) The region in which the ACL rule should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AclState()
        {
        }
        public static new AclState Empty => new AclState();
    }
}
