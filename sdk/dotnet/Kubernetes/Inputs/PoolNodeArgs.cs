// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Kubernetes.Inputs
{

    public sealed class PoolNodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the IP address resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name for the pool.
        /// 
        /// &gt; **Important:** Updates to this field will recreate a new resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateIps")]
        private InputList<Inputs.PoolNodePrivateIpArgs>? _privateIps;

        /// <summary>
        /// The list of private IPv4 and IPv6 addresses associated with the node.
        /// </summary>
        public InputList<Inputs.PoolNodePrivateIpArgs> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<Inputs.PoolNodePrivateIpArgs>());
            set => _privateIps = value;
        }

        /// <summary>
        /// The public IPv4. (Deprecated, Please use the official Kubernetes provider and the kubernetes_nodes data source)
        /// </summary>
        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// The public IPv6. (Deprecated, Please use the official Kubernetes provider and the kubernetes_nodes data source)
        /// </summary>
        [Input("publicIpV6")]
        public Input<string>? PublicIpV6 { get; set; }

        /// <summary>
        /// The status of the node.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public PoolNodeArgs()
        {
        }
        public static new PoolNodeArgs Empty => new PoolNodeArgs();
    }
}
