// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Creates and manages Scaleway Load-Balancers.
    /// For more information, see [the documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api).
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.LoadbalancerIp("main", new()
    ///     {
    ///         Zone = "fr-par-1",
    ///     });
    /// 
    ///     var @base = new Scaleway.Loadbalancer("base", new()
    ///     {
    ///         IpId = main.Id,
    ///         Zone = main.Zone,
    ///         Type = "LB-S",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Private LB
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @base = new Scaleway.Loadbalancer("base", new()
    ///     {
    ///         IpId = scaleway_lb_ip.Main.Id,
    ///         Zone = scaleway_lb_ip.Main.Zone,
    ///         Type = "LB-S",
    ///         AssignFlexibleIp = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## IP ID
    /// 
    /// Since v1.15.0, `ip_id` is a required field. This means that now a separate `scaleway.LoadbalancerIp` is required.
    /// When importing, the IP needs to be imported as well as the LB.
    /// When upgrading to v1.15.0, you will need to create a new `scaleway.LoadbalancerIp` resource and import it.
    /// 
    /// For instance, if you had the following:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Loadbalancer("main", new()
    ///     {
    ///         Type = "LB-S",
    ///         Zone = "fr-par-1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// You will need to update it to:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mainLoadbalancerIp = new Scaleway.LoadbalancerIp("mainLoadbalancerIp");
    /// 
    ///     var mainLoadbalancer = new Scaleway.Loadbalancer("mainLoadbalancer", new()
    ///     {
    ///         IpId = mainLoadbalancerIp.Id,
    ///         Zone = "fr-par-1",
    ///         Type = "LB-S",
    ///         ReleaseIp = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Load-Balancer can be imported using the `{zone}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/loadbalancer:Loadbalancer main fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// 
    /// Be aware that you will also need to import the `scaleway_lb_ip` resource.
    /// </summary>
    [ScalewayResourceType("scaleway:index/loadbalancer:Loadbalancer")]
    public partial class Loadbalancer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defines whether to automatically assign a flexible public IP to the load-balancer.
        /// </summary>
        [Output("assignFlexibleIp")]
        public Output<bool?> AssignFlexibleIp { get; private set; } = null!;

        /// <summary>
        /// The description of the load-balancer.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The load-balance public IP Address
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of the associated LB IP. See below.
        /// 
        /// &gt; **Important:** Updates to `ip_id` will recreate the load-balancer.
        /// </summary>
        [Output("ipId")]
        public Output<string?> IpId { get; private set; } = null!;

        /// <summary>
        /// The name of the load-balancer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization ID the load-balancer is associated with.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// List of private network to connect with your load balancer
        /// </summary>
        [Output("privateNetworks")]
        public Output<ImmutableArray<Outputs.LoadbalancerPrivateNetwork>> PrivateNetworks { get; private set; } = null!;

        /// <summary>
        /// `project_id`) The ID of the project the load-balancer is associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The region of the resource
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The release_ip allow release the ip address associated with the load-balancers.
        /// </summary>
        [Output("releaseIp")]
        public Output<bool?> ReleaseIp { get; private set; } = null!;

        /// <summary>
        /// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-create-a-load-balancer).
        /// </summary>
        [Output("sslCompatibilityLevel")]
        public Output<string?> SslCompatibilityLevel { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the load-balancers.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the load-balancer. Please check the migration section to upgrade the type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// `zone`) The zone of the load-balancer.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a Loadbalancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Loadbalancer(string name, LoadbalancerArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/loadbalancer:Loadbalancer", name, args ?? new LoadbalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Loadbalancer(string name, Input<string> id, LoadbalancerState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/loadbalancer:Loadbalancer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Loadbalancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Loadbalancer Get(string name, Input<string> id, LoadbalancerState? state = null, CustomResourceOptions? options = null)
        {
            return new Loadbalancer(name, id, state, options);
        }
    }

    public sealed class LoadbalancerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines whether to automatically assign a flexible public IP to the load-balancer.
        /// </summary>
        [Input("assignFlexibleIp")]
        public Input<bool>? AssignFlexibleIp { get; set; }

        /// <summary>
        /// The description of the load-balancer.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the associated LB IP. See below.
        /// 
        /// &gt; **Important:** Updates to `ip_id` will recreate the load-balancer.
        /// </summary>
        [Input("ipId")]
        public Input<string>? IpId { get; set; }

        /// <summary>
        /// The name of the load-balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateNetworks")]
        private InputList<Inputs.LoadbalancerPrivateNetworkArgs>? _privateNetworks;

        /// <summary>
        /// List of private network to connect with your load balancer
        /// </summary>
        public InputList<Inputs.LoadbalancerPrivateNetworkArgs> PrivateNetworks
        {
            get => _privateNetworks ?? (_privateNetworks = new InputList<Inputs.LoadbalancerPrivateNetworkArgs>());
            set => _privateNetworks = value;
        }

        /// <summary>
        /// `project_id`) The ID of the project the load-balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The release_ip allow release the ip address associated with the load-balancers.
        /// </summary>
        [Input("releaseIp")]
        public Input<bool>? ReleaseIp { get; set; }

        /// <summary>
        /// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-create-a-load-balancer).
        /// </summary>
        [Input("sslCompatibilityLevel")]
        public Input<string>? SslCompatibilityLevel { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the load-balancers.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the load-balancer. Please check the migration section to upgrade the type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// `zone`) The zone of the load-balancer.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public LoadbalancerArgs()
        {
        }
        public static new LoadbalancerArgs Empty => new LoadbalancerArgs();
    }

    public sealed class LoadbalancerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines whether to automatically assign a flexible public IP to the load-balancer.
        /// </summary>
        [Input("assignFlexibleIp")]
        public Input<bool>? AssignFlexibleIp { get; set; }

        /// <summary>
        /// The description of the load-balancer.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The load-balance public IP Address
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The ID of the associated LB IP. See below.
        /// 
        /// &gt; **Important:** Updates to `ip_id` will recreate the load-balancer.
        /// </summary>
        [Input("ipId")]
        public Input<string>? IpId { get; set; }

        /// <summary>
        /// The name of the load-balancer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The organization ID the load-balancer is associated with.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        [Input("privateNetworks")]
        private InputList<Inputs.LoadbalancerPrivateNetworkGetArgs>? _privateNetworks;

        /// <summary>
        /// List of private network to connect with your load balancer
        /// </summary>
        public InputList<Inputs.LoadbalancerPrivateNetworkGetArgs> PrivateNetworks
        {
            get => _privateNetworks ?? (_privateNetworks = new InputList<Inputs.LoadbalancerPrivateNetworkGetArgs>());
            set => _privateNetworks = value;
        }

        /// <summary>
        /// `project_id`) The ID of the project the load-balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region of the resource
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The release_ip allow release the ip address associated with the load-balancers.
        /// </summary>
        [Input("releaseIp")]
        public Input<bool>? ReleaseIp { get; set; }

        /// <summary>
        /// Enforces minimal SSL version (in SSL/TLS offloading context). Please check [possible values](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-create-a-load-balancer).
        /// </summary>
        [Input("sslCompatibilityLevel")]
        public Input<string>? SslCompatibilityLevel { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the load-balancers.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the load-balancer. Please check the migration section to upgrade the type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// `zone`) The zone of the load-balancer.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public LoadbalancerState()
        {
        }
        public static new LoadbalancerState Empty => new LoadbalancerState();
    }
}
