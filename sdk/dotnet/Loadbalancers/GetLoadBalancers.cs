// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Loadbalancers
{
    public static class GetLoadBalancers
    {
        /// <summary>
        /// Gets information about multiple Load Balancers.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/concepts/#load-balancers) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-list-load-balancers).
        /// </summary>
        public static Task<GetLoadBalancersResult> InvokeAsync(GetLoadBalancersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoadBalancersResult>("scaleway:loadbalancers/getLoadBalancers:getLoadBalancers", args ?? new GetLoadBalancersArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple Load Balancers.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/concepts/#load-balancers) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-list-load-balancers).
        /// </summary>
        public static Output<GetLoadBalancersResult> Invoke(GetLoadBalancersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadBalancersResult>("scaleway:loadbalancers/getLoadBalancers:getLoadBalancers", args ?? new GetLoadBalancersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple Load Balancers.
        /// 
        /// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/concepts/#load-balancers) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-load-balancer-list-load-balancers).
        /// </summary>
        public static Output<GetLoadBalancersResult> Invoke(GetLoadBalancersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoadBalancersResult>("scaleway:loadbalancers/getLoadBalancers:getLoadBalancers", args ?? new GetLoadBalancersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadBalancersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Load Balancer name to filter for. Load Balancers with a matching name are listed.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// List of tags to filter for. Load Balancers with these exact tags are listed.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the Load Balancers exist.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetLoadBalancersArgs()
        {
        }
        public static new GetLoadBalancersArgs Empty => new GetLoadBalancersArgs();
    }

    public sealed class GetLoadBalancersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Load Balancer name to filter for. Load Balancers with a matching name are listed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// List of tags to filter for. Load Balancers with these exact tags are listed.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// `zone`) The zone in which the Load Balancers exist.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetLoadBalancersInvokeArgs()
        {
        }
        public static new GetLoadBalancersInvokeArgs Empty => new GetLoadBalancersInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoadBalancersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of retrieved Load Balancers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLoadBalancersLbResult> Lbs;
        /// <summary>
        /// The name of the Load Balancer.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the Organization the Load Balancer is associated with.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The ID of the Project the Load Balancer is associated with.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The tags associated with the Load Balancer.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The zone of the Load Balancer.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetLoadBalancersResult(
            string id,

            ImmutableArray<Outputs.GetLoadBalancersLbResult> lbs,

            string? name,

            string organizationId,

            string projectId,

            ImmutableArray<string> tags,

            string zone)
        {
            Id = id;
            Lbs = lbs;
            Name = name;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Tags = tags;
            Zone = zone;
        }
    }
}
