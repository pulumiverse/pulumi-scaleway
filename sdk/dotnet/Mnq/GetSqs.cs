// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Mnq
{
    public static class GetSqs
    {
        /// <summary>
        /// Gets information about SQS for a Project
        /// 
        /// ## Examples
        /// 
        /// ### Basic
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // For default project
        ///     var main = Scaleway.Mnq.GetSqs.Invoke();
        /// 
        ///     // For specific project
        ///     var forProject = Scaleway.Mnq.GetSqs.Invoke(new()
        ///     {
        ///         ProjectId = mainScalewayAccountProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSqsResult> InvokeAsync(GetSqsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSqsResult>("scaleway:mnq/getSqs:getSqs", args ?? new GetSqsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about SQS for a Project
        /// 
        /// ## Examples
        /// 
        /// ### Basic
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // For default project
        ///     var main = Scaleway.Mnq.GetSqs.Invoke();
        /// 
        ///     // For specific project
        ///     var forProject = Scaleway.Mnq.GetSqs.Invoke(new()
        ///     {
        ///         ProjectId = mainScalewayAccountProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSqsResult> Invoke(GetSqsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqsResult>("scaleway:mnq/getSqs:getSqs", args ?? new GetSqsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about SQS for a Project
        /// 
        /// ## Examples
        /// 
        /// ### Basic
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // For default project
        ///     var main = Scaleway.Mnq.GetSqs.Invoke();
        /// 
        ///     // For specific project
        ///     var forProject = Scaleway.Mnq.GetSqs.Invoke(new()
        ///     {
        ///         ProjectId = mainScalewayAccountProject.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSqsResult> Invoke(GetSqsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSqsResult>("scaleway:mnq/getSqs:getSqs", args ?? new GetSqsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `ProjectId`) The ID of the Project in which SQS is enabled.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// `Region`). The region in which SQS is enabled.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetSqsArgs()
        {
        }
        public static new GetSqsArgs Empty => new GetSqsArgs();
    }

    public sealed class GetSqsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `ProjectId`) The ID of the Project in which SQS is enabled.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `Region`). The region in which SQS is enabled.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetSqsInvokeArgs()
        {
        }
        public static new GetSqsInvokeArgs Empty => new GetSqsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSqsResult
    {
        /// <summary>
        /// The endpoint of the SQS service for this Project.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ProjectId;
        public readonly string? Region;

        [OutputConstructor]
        private GetSqsResult(
            string endpoint,

            string id,

            string? projectId,

            string? region)
        {
            Endpoint = endpoint;
            Id = id;
            ProjectId = projectId;
            Region = region;
        }
    }
}
