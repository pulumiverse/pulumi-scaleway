// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Mnq
{
    /// <summary>
    /// Creates and manages Scaleway Messaging and Queuing NATS accounts.
    /// For further information, see
    /// our [main documentation](https://www.scaleway.com/en/docs/messaging/reference-content/nats-overview/)
    /// To use the Scaleway provider with the official NATS JetStream provider, check out the corresponding guide.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Mnq.NatsAccount("main", new()
    ///     {
    ///         Name = "nats-account",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Namespaces can be imported using `{region}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:mnq/natsAccount:NatsAccount main fr-par/11111111111111111111111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:mnq/natsAccount:NatsAccount")]
    public partial class NatsAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The endpoint of the NATS service for this account.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The unique name of the NATS account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// `project_id`) The ID of the Project the
        /// account is associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// `region`). The region
        /// in which the account should be created.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;


        /// <summary>
        /// Create a NatsAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatsAccount(string name, NatsAccountArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway:mnq/natsAccount:NatsAccount", name, args ?? new NatsAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatsAccount(string name, Input<string> id, NatsAccountState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:mnq/natsAccount:NatsAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "scaleway:index/mnqNatsAccount:MnqNatsAccount" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatsAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatsAccount Get(string name, Input<string> id, NatsAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new NatsAccount(name, id, state, options);
        }
    }

    public sealed class NatsAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique name of the NATS account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the Project the
        /// account is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `region`). The region
        /// in which the account should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public NatsAccountArgs()
        {
        }
        public static new NatsAccountArgs Empty => new NatsAccountArgs();
    }

    public sealed class NatsAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The endpoint of the NATS service for this account.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// The unique name of the NATS account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// `project_id`) The ID of the Project the
        /// account is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `region`). The region
        /// in which the account should be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public NatsAccountState()
        {
        }
        public static new NatsAccountState Empty => new NatsAccountState();
    }
}
