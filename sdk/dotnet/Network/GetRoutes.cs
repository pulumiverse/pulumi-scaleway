// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Network
{
    public static class GetRoutes
    {
        /// <summary>
        /// Gets information about multiple VPC routes.
        /// </summary>
        public static Task<GetRoutesResult> InvokeAsync(GetRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutesResult>("scaleway:network/getRoutes:getRoutes", args ?? new GetRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple VPC routes.
        /// </summary>
        public static Output<GetRoutesResult> Invoke(GetRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutesResult>("scaleway:network/getRoutes:getRoutes", args ?? new GetRoutesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about multiple VPC routes.
        /// </summary>
        public static Output<GetRoutesResult> Invoke(GetRoutesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutesResult>("scaleway:network/getRoutes:getRoutes", args ?? new GetRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Routes with an IPv6 destination will be listed.
        /// </summary>
        [Input("isIpv6")]
        public bool? IsIpv6 { get; set; }

        /// <summary>
        /// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
        /// </summary>
        [Input("nexthopPrivateNetworkId")]
        public string? NexthopPrivateNetworkId { get; set; }

        /// <summary>
        /// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
        /// </summary>
        [Input("nexthopResourceId")]
        public string? NexthopResourceId { get; set; }

        /// <summary>
        /// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
        /// </summary>
        [Input("nexthopResourceType")]
        public string? NexthopResourceType { get; set; }

        /// <summary>
        /// `region`). The region in which the routes exist.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// List of tags to filter for. routes with these exact tags are listed.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC ID to filter for. routes with a similar VPC ID are listed.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetRoutesArgs()
        {
        }
        public static new GetRoutesArgs Empty => new GetRoutesArgs();
    }

    public sealed class GetRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Routes with an IPv6 destination will be listed.
        /// </summary>
        [Input("isIpv6")]
        public Input<bool>? IsIpv6 { get; set; }

        /// <summary>
        /// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
        /// </summary>
        [Input("nexthopPrivateNetworkId")]
        public Input<string>? NexthopPrivateNetworkId { get; set; }

        /// <summary>
        /// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
        /// </summary>
        [Input("nexthopResourceId")]
        public Input<string>? NexthopResourceId { get; set; }

        /// <summary>
        /// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
        /// </summary>
        [Input("nexthopResourceType")]
        public Input<string>? NexthopResourceType { get; set; }

        /// <summary>
        /// `region`). The region in which the routes exist.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// List of tags to filter for. routes with these exact tags are listed.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The VPC ID to filter for. routes with a similar VPC ID are listed.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetRoutesInvokeArgs()
        {
        }
        public static new GetRoutesInvokeArgs Empty => new GetRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsIpv6;
        public readonly string? NexthopPrivateNetworkId;
        public readonly string? NexthopResourceId;
        public readonly string? NexthopResourceType;
        public readonly string Region;
        /// <summary>
        /// List of retrieved routes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoutesRouteResult> Routes;
        public readonly ImmutableArray<string> Tags;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetRoutesResult(
            string id,

            bool? isIpv6,

            string? nexthopPrivateNetworkId,

            string? nexthopResourceId,

            string? nexthopResourceType,

            string region,

            ImmutableArray<Outputs.GetRoutesRouteResult> routes,

            ImmutableArray<string> tags,

            string? vpcId)
        {
            Id = id;
            IsIpv6 = isIpv6;
            NexthopPrivateNetworkId = nexthopPrivateNetworkId;
            NexthopResourceId = nexthopResourceId;
            NexthopResourceType = nexthopResourceType;
            Region = region;
            Routes = routes;
            Tags = tags;
            VpcId = vpcId;
        }
    }
}
