// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Network
{
    /// <summary>
    /// &gt; **Important:**  The resource `scaleway.network.PublicGatewayDhcpReservation` has been deprecated and will no longer be supported.
    /// In 2023, DHCP functionality was moved from Public Gateways to Private Networks, DHCP resources are now no longer needed.
    /// You can use IPAM to manage your IPs. For more information, please refer to the dedicated guide.
    /// 
    /// Creates and manages [Scaleway DHCP Reservations](https://www.scaleway.com/en/docs/vpc/concepts/#dhcp).
    /// 
    /// These static associations are used to assign IP addresses based on the MAC addresses of the resource.
    /// 
    /// Statically assigned IP addresses should fall within the configured subnet, but be outside of the dynamic range.
    /// 
    /// For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/public-gateway/#dhcp-c05544).
    /// 
    /// [DHCP reservations](https://www.scaleway.com/en/developers/api/public-gateway/#dhcp-entries-e40fb6) hold both dynamic DHCP leases (IP addresses dynamically assigned by the gateway to resources) and static user-created DHCP reservations.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Network.PrivateNetwork("main", new()
    ///     {
    ///         Name = "your_private_network",
    ///     });
    /// 
    ///     var mainServer = new Scaleway.Instance.Server("main", new()
    ///     {
    ///         Image = "ubuntu_jammy",
    ///         Type = "DEV1-S",
    ///         Zone = "fr-par-1",
    ///         PrivateNetworks = new[]
    ///         {
    ///             new Scaleway.Instance.Inputs.ServerPrivateNetworkArgs
    ///             {
    ///                 PnId = main.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var mainPublicGatewayIp = new Scaleway.Network.PublicGatewayIp("main");
    /// 
    ///     var mainPublicGatewayDhcp = new Scaleway.Network.PublicGatewayDhcp("main", new()
    ///     {
    ///         Subnet = "192.168.1.0/24",
    ///     });
    /// 
    ///     var mainPublicGateway = new Scaleway.Network.PublicGateway("main", new()
    ///     {
    ///         Name = "foobar",
    ///         Type = "VPC-GW-S",
    ///         IpId = mainPublicGatewayIp.Id,
    ///     });
    /// 
    ///     var mainGatewayNetwork = new Scaleway.Network.GatewayNetwork("main", new()
    ///     {
    ///         GatewayId = mainPublicGateway.Id,
    ///         PrivateNetworkId = main.Id,
    ///         DhcpId = mainPublicGatewayDhcp.Id,
    ///         CleanupDhcp = true,
    ///         EnableMasquerade = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             mainPublicGatewayIp,
    ///             main,
    ///         },
    ///     });
    /// 
    ///     var mainPublicGatewayDhcpReservation = new Scaleway.Network.PublicGatewayDhcpReservation("main", new()
    ///     {
    ///         GatewayNetworkId = mainGatewayNetwork.Id,
    ///         MacAddress = mainServer.PrivateNetworks.Apply(privateNetworks =&gt; privateNetworks[0]?.MacAddress),
    ///         IpAddress = "192.168.1.1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Public Gateway DHCP reservation configurations can be imported using `{zone}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation main fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [ScalewayResourceType("scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation")]
    public partial class PublicGatewayDhcpReservation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The date and time of the creation of the Public Gateway DHCP configuration.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The ID of the owning GatewayNetwork.
        /// </summary>
        [Output("gatewayNetworkId")]
        public Output<string> GatewayNetworkId { get; private set; } = null!;

        /// <summary>
        /// The hostname of the client machine.
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The IP address to give to the machine.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The MAC address for the static entry.
        /// </summary>
        [Output("macAddress")]
        public Output<string> MacAddress { get; private set; } = null!;

        /// <summary>
        /// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `Reservation` and `Lease`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the Public Gateway DHCP configuration.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// `Zone`) The zone in which the public gateway DHCP config should be created.
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a PublicGatewayDhcpReservation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublicGatewayDhcpReservation(string name, PublicGatewayDhcpReservationArgs args, CustomResourceOptions? options = null)
            : base("scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation", name, args ?? new PublicGatewayDhcpReservationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PublicGatewayDhcpReservation(string name, Input<string> id, PublicGatewayDhcpReservationState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublicGatewayDhcpReservation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublicGatewayDhcpReservation Get(string name, Input<string> id, PublicGatewayDhcpReservationState? state = null, CustomResourceOptions? options = null)
        {
            return new PublicGatewayDhcpReservation(name, id, state, options);
        }
    }

    public sealed class PublicGatewayDhcpReservationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the owning GatewayNetwork.
        /// </summary>
        [Input("gatewayNetworkId", required: true)]
        public Input<string> GatewayNetworkId { get; set; } = null!;

        /// <summary>
        /// The IP address to give to the machine.
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        /// <summary>
        /// The MAC address for the static entry.
        /// </summary>
        [Input("macAddress", required: true)]
        public Input<string> MacAddress { get; set; } = null!;

        /// <summary>
        /// `Zone`) The zone in which the public gateway DHCP config should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PublicGatewayDhcpReservationArgs()
        {
        }
        public static new PublicGatewayDhcpReservationArgs Empty => new PublicGatewayDhcpReservationArgs();
    }

    public sealed class PublicGatewayDhcpReservationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date and time of the creation of the Public Gateway DHCP configuration.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The ID of the owning GatewayNetwork.
        /// </summary>
        [Input("gatewayNetworkId")]
        public Input<string>? GatewayNetworkId { get; set; }

        /// <summary>
        /// The hostname of the client machine.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The IP address to give to the machine.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The MAC address for the static entry.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `Reservation` and `Lease`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The date and time of the last update of the Public Gateway DHCP configuration.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// `Zone`) The zone in which the public gateway DHCP config should be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PublicGatewayDhcpReservationState()
        {
        }
        public static new PublicGatewayDhcpReservationState Empty => new PublicGatewayDhcpReservationState();
    }
}
