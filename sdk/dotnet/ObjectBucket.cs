// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// The `scaleway.object.Bucket` resource allows you to create and manage buckets for [Scaleway Object storage](https://www.scaleway.com/en/docs/object-storage/).
    /// 
    /// Refer to the [dedicated documentation](https://www.scaleway.com/en/docs/object-storage/how-to/create-a-bucket/) for more information on Object Storage buckets.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var someBucket = new Scaleway.Object.Bucket("some_bucket", new()
    ///     {
    ///         Name = "some-unique-name",
    ///         Tags = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Creating the bucket in a specific project
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var someBucket = new Scaleway.Object.Bucket("some_bucket", new()
    ///     {
    ///         Name = "some-unique-name",
    ///         ProjectId = "11111111-1111-1111-1111-111111111111",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Using object lifecycle
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Object.Bucket("main", new()
    ///     {
    ///         Name = "mybuckectid",
    ///         Region = "fr-par",
    ///         LifecycleRules = new[]
    ///         {
    ///             new Scaleway.Object.Inputs.BucketLifecycleRuleArgs
    ///             {
    ///                 Id = "id1",
    ///                 Prefix = "path1/",
    ///                 Enabled = true,
    ///                 Expiration = new Scaleway.Object.Inputs.BucketLifecycleRuleExpirationArgs
    ///                 {
    ///                     Days = 365,
    ///                 },
    ///                 Transitions = new[]
    ///                 {
    ///                     new Scaleway.Object.Inputs.BucketLifecycleRuleTransitionArgs
    ///                     {
    ///                         Days = 120,
    ///                         StorageClass = "GLACIER",
    ///                     },
    ///                 },
    ///             },
    ///             new Scaleway.Object.Inputs.BucketLifecycleRuleArgs
    ///             {
    ///                 Id = "id2",
    ///                 Prefix = "path2/",
    ///                 Enabled = true,
    ///                 Expiration = new Scaleway.Object.Inputs.BucketLifecycleRuleExpirationArgs
    ///                 {
    ///                     Days = 50,
    ///                 },
    ///             },
    ///             new Scaleway.Object.Inputs.BucketLifecycleRuleArgs
    ///             {
    ///                 Id = "id3",
    ///                 Prefix = "path3/",
    ///                 Enabled = false,
    ///                 Tags = 
    ///                 {
    ///                     { "tagKey", "tagValue" },
    ///                     { "terraform", "hashicorp" },
    ///                 },
    ///                 Expiration = new Scaleway.Object.Inputs.BucketLifecycleRuleExpirationArgs
    ///                 {
    ///                     Days = 1,
    ///                 },
    ///             },
    ///             new Scaleway.Object.Inputs.BucketLifecycleRuleArgs
    ///             {
    ///                 Id = "id4",
    ///                 Enabled = true,
    ///                 Tags = 
    ///                 {
    ///                     { "tag1", "value1" },
    ///                 },
    ///                 Transitions = new[]
    ///                 {
    ///                     new Scaleway.Object.Inputs.BucketLifecycleRuleTransitionArgs
    ///                     {
    ///                         Days = 1,
    ///                         StorageClass = "GLACIER",
    ///                     },
    ///                 },
    ///             },
    ///             new Scaleway.Object.Inputs.BucketLifecycleRuleArgs
    ///             {
    ///                 Enabled = true,
    ///                 AbortIncompleteMultipartUploadDays = 30,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Buckets can be imported using the `{region}/{bucketName}` identifier, as shown below:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/objectBucket:ObjectBucket some_bucket fr-par/some-bucket
    /// ```
    /// 
    /// ~&gt; **Important:** The `project_id` attribute has a particular behavior with s3 products because the s3 API is scoped by project.
    /// 
    /// If you are using a project different from the default one, you have to specify the project ID at the end of the import command.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/objectBucket:ObjectBucket some_bucket fr-par/some-bucket@11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [Obsolete(@"scaleway.index/objectbucket.ObjectBucket has been deprecated in favor of scaleway.object/bucket.Bucket")]
    [ScalewayResourceType("scaleway:index/objectBucket:ObjectBucket")]
    public partial class ObjectBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Deprecated) The canned ACL you want to apply to the bucket.
        /// 
        /// &gt; **Note:** The `acl` attribute is deprecated. See scaleway.object.BucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
        /// </summary>
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        /// <summary>
        /// API URL of the bucket
        /// </summary>
        [Output("apiEndpoint")]
        public Output<string> ApiEndpoint { get; private set; } = null!;

        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.ObjectBucketCorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// The endpoint URL of the bucket.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Boolean that, when set to true, allows the deletion of all objects (including locked objects) when the bucket is destroyed. This operation is irreversible, and the objects cannot be recovered. The default is false.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.ObjectBucketLifecycleRule>> LifecycleRules { get; private set; } = null!;

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Enable object lock
        /// </summary>
        [Output("objectLockEnabled")]
        public Output<bool?> ObjectLockEnabled { get; private set; } = null!;

        /// <summary>
        /// `project_id`) The ID of the project the bucket is associated with.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// A list of tags (key/value) for the bucket.
        /// 
        /// * &gt; **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
        /// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Output("versioning")]
        public Output<Outputs.ObjectBucketVersioning> Versioning { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectBucket(string name, ObjectBucketArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucket:ObjectBucket", name, args ?? new ObjectBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectBucket(string name, Input<string> id, ObjectBucketState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucket:ObjectBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectBucket Get(string name, Input<string> id, ObjectBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectBucket(name, id, state, options);
        }
    }

    public sealed class ObjectBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Deprecated) The canned ACL you want to apply to the bucket.
        /// 
        /// &gt; **Note:** The `acl` attribute is deprecated. See scaleway.object.BucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.ObjectBucketCorsRuleArgs>? _corsRules;
        public InputList<Inputs.ObjectBucketCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.ObjectBucketCorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Boolean that, when set to true, allows the deletion of all objects (including locked objects) when the bucket is destroyed. This operation is irreversible, and the objects cannot be recovered. The default is false.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.ObjectBucketLifecycleRuleArgs>? _lifecycleRules;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        public InputList<Inputs.ObjectBucketLifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.ObjectBucketLifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable object lock
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the bucket is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A list of tags (key/value) for the bucket.
        /// 
        /// * &gt; **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
        /// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.ObjectBucketVersioningArgs>? Versioning { get; set; }

        public ObjectBucketArgs()
        {
        }
        public static new ObjectBucketArgs Empty => new ObjectBucketArgs();
    }

    public sealed class ObjectBucketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Deprecated) The canned ACL you want to apply to the bucket.
        /// 
        /// &gt; **Note:** The `acl` attribute is deprecated. See scaleway.object.BucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// API URL of the bucket
        /// </summary>
        [Input("apiEndpoint")]
        public Input<string>? ApiEndpoint { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.ObjectBucketCorsRuleGetArgs>? _corsRules;
        public InputList<Inputs.ObjectBucketCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.ObjectBucketCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// The endpoint URL of the bucket.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Boolean that, when set to true, allows the deletion of all objects (including locked objects) when the bucket is destroyed. This operation is irreversible, and the objects cannot be recovered. The default is false.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.ObjectBucketLifecycleRuleGetArgs>? _lifecycleRules;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        public InputList<Inputs.ObjectBucketLifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.ObjectBucketLifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Enable object lock
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        /// <summary>
        /// `project_id`) The ID of the project the bucket is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A list of tags (key/value) for the bucket.
        /// 
        /// * &gt; **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
        /// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.ObjectBucketVersioningGetArgs>? Versioning { get; set; }

        public ObjectBucketState()
        {
        }
        public static new ObjectBucketState Empty => new ObjectBucketState();
    }
}
