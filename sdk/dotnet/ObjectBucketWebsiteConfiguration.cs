// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// The `scaleway.object.BucketWebsiteConfiguration` resource allows you to deploy and manage a bucket website with [Scaleway Object storage](https://www.scaleway.com/en/docs/object-storage/).
    /// 
    /// Refer to the [dedicated documentation](https://www.scaleway.com/en/docs/object-storage/how-to/use-bucket-website/) for more information on bucket websites.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Scaleway.Object.Bucket("test", new()
    ///     {
    ///         Name = "my-bucket",
    ///         Acl = "public-read",
    ///     });
    /// 
    ///     var someFile = new Scaleway.Object.Item("some_file", new()
    ///     {
    ///         Bucket = test.Name,
    ///         Key = "index.html",
    ///         File = "index.html",
    ///         Visibility = "public-read",
    ///         ContentType = "text/html",
    ///     });
    /// 
    ///     var testBucketWebsiteConfiguration = new Scaleway.Object.BucketWebsiteConfiguration("test", new()
    ///     {
    ///         Bucket = test.Name,
    ///         IndexDocument = new Scaleway.Object.Inputs.BucketWebsiteConfigurationIndexDocumentArgs
    ///         {
    ///             Suffix = "index.html",
    ///         },
    ///         ErrorDocument = new Scaleway.Object.Inputs.BucketWebsiteConfigurationErrorDocumentArgs
    ///         {
    ///             Key = "error.html",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With A Bucket Policy
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Scaleway.Object.Bucket("main", new()
    ///     {
    ///         Name = "MyBucket",
    ///         Acl = "public-read",
    ///     });
    /// 
    ///     var mainBucketPolicy = new Scaleway.Object.BucketPolicy("main", new()
    ///     {
    ///         Bucket = main.Id,
    ///         Policy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["Version"] = "2012-10-17",
    ///             ["Id"] = "MyPolicy",
    ///             ["Statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["Sid"] = "GrantToEveryone",
    ///                     ["Effect"] = "Allow",
    ///                     ["Principal"] = "*",
    ///                     ["Action"] = new[]
    ///                     {
    ///                         "s3:GetObject",
    ///                     },
    ///                     ["Resource"] = new[]
    ///                     {
    ///                         "&lt;bucket-name&gt;/*",
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var mainBucketWebsiteConfiguration = new Scaleway.Object.BucketWebsiteConfiguration("main", new()
    ///     {
    ///         Bucket = main.Id,
    ///         IndexDocument = new Scaleway.Object.Inputs.BucketWebsiteConfigurationIndexDocumentArgs
    ///         {
    ///             Suffix = "index.html",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Bucket website configurations can be imported using the `{region}/{bucketName}` identifier, as shown below:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration some_bucket fr-par/some-bucket
    /// ```
    /// 
    /// ~&gt; **Important:** The `project_id` attribute has a particular behavior with s3 products because the s3 API is scoped by project.
    /// 
    /// If you are using a project different from the default one, you have to specify the project ID at the end of the import command.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration some_bucket fr-par/some-bucket@xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxx
    /// ```
    /// </summary>
    [Obsolete(@"scaleway.index/objectbucketwebsiteconfiguration.ObjectBucketWebsiteConfiguration has been deprecated in favor of scaleway.object/bucketwebsiteconfiguration.BucketWebsiteConfiguration")]
    [ScalewayResourceType("scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration")]
    public partial class ObjectBucketWebsiteConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The name of the error file for the website detailed below.
        /// </summary>
        [Output("errorDocument")]
        public Output<Outputs.ObjectBucketWebsiteConfigurationErrorDocument?> ErrorDocument { get; private set; } = null!;

        /// <summary>
        /// The name of the index file for the website detailed below.
        /// </summary>
        [Output("indexDocument")]
        public Output<Outputs.ObjectBucketWebsiteConfigurationIndexDocument> IndexDocument { get; private set; } = null!;

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The domain of the website endpoint. This is used to create DNS alias [records](https://www.scaleway.com/en/docs/network/domains-and-dns/how-to/manage-dns-records/).
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// The website endpoint.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectBucketWebsiteConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectBucketWebsiteConfiguration(string name, ObjectBucketWebsiteConfigurationArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration", name, args ?? new ObjectBucketWebsiteConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectBucketWebsiteConfiguration(string name, Input<string> id, ObjectBucketWebsiteConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucketWebsiteConfiguration:ObjectBucketWebsiteConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectBucketWebsiteConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectBucketWebsiteConfiguration Get(string name, Input<string> id, ObjectBucketWebsiteConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectBucketWebsiteConfiguration(name, id, state, options);
        }
    }

    public sealed class ObjectBucketWebsiteConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The name of the error file for the website detailed below.
        /// </summary>
        [Input("errorDocument")]
        public Input<Inputs.ObjectBucketWebsiteConfigurationErrorDocumentArgs>? ErrorDocument { get; set; }

        /// <summary>
        /// The name of the index file for the website detailed below.
        /// </summary>
        [Input("indexDocument", required: true)]
        public Input<Inputs.ObjectBucketWebsiteConfigurationIndexDocumentArgs> IndexDocument { get; set; } = null!;

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ObjectBucketWebsiteConfigurationArgs()
        {
        }
        public static new ObjectBucketWebsiteConfigurationArgs Empty => new ObjectBucketWebsiteConfigurationArgs();
    }

    public sealed class ObjectBucketWebsiteConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The name of the error file for the website detailed below.
        /// </summary>
        [Input("errorDocument")]
        public Input<Inputs.ObjectBucketWebsiteConfigurationErrorDocumentGetArgs>? ErrorDocument { get; set; }

        /// <summary>
        /// The name of the index file for the website detailed below.
        /// </summary>
        [Input("indexDocument")]
        public Input<Inputs.ObjectBucketWebsiteConfigurationIndexDocumentGetArgs>? IndexDocument { get; set; }

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The domain of the website endpoint. This is used to create DNS alias [records](https://www.scaleway.com/en/docs/network/domains-and-dns/how-to/manage-dns-records/).
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public ObjectBucketWebsiteConfigurationState()
        {
        }
        public static new ObjectBucketWebsiteConfigurationState Empty => new ObjectBucketWebsiteConfigurationState();
    }
}
