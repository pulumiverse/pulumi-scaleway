// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Outputs
{

    [OutputType]
    public sealed class InstanceImageAdditionalVolume
    {
        /// <summary>
        /// ID of the server containing the volume.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the image. If not provided it will be randomly generated.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Description of the server containing the volume (in case the image is a backup from a server).
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Server;
        /// <summary>
        /// The size of the volume.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// A list of tags to apply to the image.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The type of volume, possible values are `LSsd` and `SbsSnapshot`.
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private InstanceImageAdditionalVolume(
            string? id,

            string? name,

            ImmutableDictionary<string, string>? server,

            int? size,

            ImmutableArray<string> tags,

            string? volumeType)
        {
            Id = id;
            Name = name;
            Server = server;
            Size = size;
            Tags = tags;
            VolumeType = volumeType;
        }
    }
}
