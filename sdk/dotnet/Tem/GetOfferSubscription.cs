// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway.Tem
{
    public static class GetOfferSubscription
    {
        /// <summary>
        /// Gets information about a transactional email offer subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve offer subscription information
        ///     var test = Scaleway.Tem.GetOfferSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOfferSubscriptionResult> InvokeAsync(GetOfferSubscriptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOfferSubscriptionResult>("scaleway:tem/getOfferSubscription:getOfferSubscription", args ?? new GetOfferSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a transactional email offer subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve offer subscription information
        ///     var test = Scaleway.Tem.GetOfferSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOfferSubscriptionResult> Invoke(GetOfferSubscriptionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOfferSubscriptionResult>("scaleway:tem/getOfferSubscription:getOfferSubscription", args ?? new GetOfferSubscriptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a transactional email offer subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Scaleway = Pulumi.Scaleway;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve offer subscription information
        ///     var test = Scaleway.Tem.GetOfferSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOfferSubscriptionResult> Invoke(GetOfferSubscriptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOfferSubscriptionResult>("scaleway:tem/getOfferSubscription:getOfferSubscription", args ?? new GetOfferSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOfferSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `project_id`) The ID of the project the offer subscription is associated with.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// `region`) The region where the offer subscription exists.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetOfferSubscriptionArgs()
        {
        }
        public static new GetOfferSubscriptionArgs Empty => new GetOfferSubscriptionArgs();
    }

    public sealed class GetOfferSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `project_id`) The ID of the project the offer subscription is associated with.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// `region`) The region where the offer subscription exists.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetOfferSubscriptionInvokeArgs()
        {
        }
        public static new GetOfferSubscriptionInvokeArgs Empty => new GetOfferSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetOfferSubscriptionResult
    {
        /// <summary>
        /// The date and time when cancellation becomes available for the subscription.
        /// </summary>
        public readonly string CancellationAvailableAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of emails included in the offer subscription per month.
        /// </summary>
        public readonly int IncludedMonthlyEmails;
        /// <summary>
        /// The maximum number of custom blocklists that can be associated with the offer subscription per domain.
        /// </summary>
        public readonly int MaxCustomBlocklistsPerDomain;
        /// <summary>
        /// The maximum number of dedicated IPs that can be associated with the offer subscription.
        /// </summary>
        public readonly int MaxDedicatedIps;
        /// <summary>
        /// The maximum number of domains that can be associated with the offer subscription.
        /// </summary>
        public readonly int MaxDomains;
        /// <summary>
        /// The maximum number of webhooks that can be associated with the offer subscription per domain.
        /// </summary>
        public readonly int MaxWebhooksPerDomain;
        /// <summary>
        /// The name of the offer associated with the subscription (e.g., `scale`).
        /// </summary>
        public readonly string OfferName;
        public readonly string ProjectId;
        public readonly string Region;
        /// <summary>
        /// The Service Level Agreement (SLA) percentage of the offer subscription.
        /// </summary>
        public readonly double Sla;
        /// <summary>
        /// The date and time of the subscription.
        /// </summary>
        public readonly string SubscribedAt;

        [OutputConstructor]
        private GetOfferSubscriptionResult(
            string cancellationAvailableAt,

            string id,

            int includedMonthlyEmails,

            int maxCustomBlocklistsPerDomain,

            int maxDedicatedIps,

            int maxDomains,

            int maxWebhooksPerDomain,

            string offerName,

            string projectId,

            string region,

            double sla,

            string subscribedAt)
        {
            CancellationAvailableAt = cancellationAvailableAt;
            Id = id;
            IncludedMonthlyEmails = includedMonthlyEmails;
            MaxCustomBlocklistsPerDomain = maxCustomBlocklistsPerDomain;
            MaxDedicatedIps = maxDedicatedIps;
            MaxDomains = maxDomains;
            MaxWebhooksPerDomain = maxWebhooksPerDomain;
            OfferName = offerName;
            ProjectId = projectId;
            Region = region;
            Sla = sla;
            SubscribedAt = subscribedAt;
        }
    }
}
