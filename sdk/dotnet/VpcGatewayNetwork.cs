// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    /// <summary>
    /// Creates and manages GatewayNetworks (connections between a Public Gateway and a Private Network).
    /// 
    /// It allows the attachment of Private Networks to Public Gateways.
    /// For more information, see [the API documentation](https://www.scaleway.com/en/developers/api/public-gateway/#step-3-attach-private-networks-to-the-vpc-public-gateway).
    /// 
    /// ## Example Usage
    /// 
    /// ### Create a GatewayNetwork with IPAM configuration
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc01 = new Scaleway.Network.Vpc("vpc01", new()
    ///     {
    ///         Name = "my vpc",
    ///     });
    /// 
    ///     var pn01 = new Scaleway.Network.PrivateNetwork("pn01", new()
    ///     {
    ///         Name = "pn_test_network",
    ///         Ipv4Subnet = new Scaleway.Network.Inputs.PrivateNetworkIpv4SubnetArgs
    ///         {
    ///             Subnet = "172.16.64.0/22",
    ///         },
    ///         VpcId = vpc01.Id,
    ///     });
    /// 
    ///     var pg01 = new Scaleway.Network.PublicGateway("pg01", new()
    ///     {
    ///         Name = "foobar",
    ///         Type = "VPC-GW-S",
    ///     });
    /// 
    ///     var main = new Scaleway.Network.GatewayNetwork("main", new()
    ///     {
    ///         GatewayId = pg01.Id,
    ///         PrivateNetworkId = pn01.Id,
    ///         EnableMasquerade = true,
    ///         IpamConfigs = new[]
    ///         {
    ///             new Scaleway.Network.Inputs.GatewayNetworkIpamConfigArgs
    ///             {
    ///                 PushDefaultRoute = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Create a GatewayNetwork with a booked IPAM IP
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Scaleway = Pulumiverse.Scaleway;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vpc01 = new Scaleway.Network.Vpc("vpc01", new()
    ///     {
    ///         Name = "my vpc",
    ///     });
    /// 
    ///     var pn01 = new Scaleway.Network.PrivateNetwork("pn01", new()
    ///     {
    ///         Name = "pn_test_network",
    ///         Ipv4Subnet = new Scaleway.Network.Inputs.PrivateNetworkIpv4SubnetArgs
    ///         {
    ///             Subnet = "172.16.64.0/22",
    ///         },
    ///         VpcId = vpc01.Id,
    ///     });
    /// 
    ///     var ip01 = new Scaleway.Ipam.Ip("ip01", new()
    ///     {
    ///         Address = "172.16.64.7",
    ///         Sources = new[]
    ///         {
    ///             new Scaleway.Ipam.Inputs.IpSourceArgs
    ///             {
    ///                 PrivateNetworkId = pn01.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var pg01 = new Scaleway.Network.PublicGateway("pg01", new()
    ///     {
    ///         Name = "foobar",
    ///         Type = "VPC-GW-S",
    ///     });
    /// 
    ///     var main = new Scaleway.Network.GatewayNetwork("main", new()
    ///     {
    ///         GatewayId = pg01.Id,
    ///         PrivateNetworkId = pn01.Id,
    ///         EnableMasquerade = true,
    ///         IpamConfigs = new[]
    ///         {
    ///             new Scaleway.Network.Inputs.GatewayNetworkIpamConfigArgs
    ///             {
    ///                 PushDefaultRoute = true,
    ///                 IpamIpId = ip01.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// GatewayNetwork can be imported using `{zone}/{id}`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork main fr-par-1/11111111-1111-1111-1111-111111111111
    /// ```
    /// </summary>
    [Obsolete(@"scaleway.index/vpcgatewaynetwork.VpcGatewayNetwork has been deprecated in favor of scaleway.network/gatewaynetwork.GatewayNetwork")]
    [ScalewayResourceType("scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork")]
    public partial class VpcGatewayNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Please use `ipam_config`. Whether to remove DHCP configuration on this GatewayNetwork upon destroy. Requires DHCP ID.
        /// </summary>
        [Output("cleanupDhcp")]
        public Output<bool> CleanupDhcp { get; private set; } = null!;

        /// <summary>
        /// The date and time of the creation of the GatewayNetwork.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Please use `ipam_config`. The ID of the Public Gateway DHCP configuration. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Output("dhcpId")]
        public Output<string?> DhcpId { get; private set; } = null!;

        /// <summary>
        /// Please use `ipam_config`. Whether a DHCP configuration should be enabled on this GatewayNetwork. Requires a DHCP ID.
        /// </summary>
        [Output("enableDhcp")]
        public Output<bool?> EnableDhcp { get; private set; } = null!;

        /// <summary>
        /// Whether masquerade (dynamic NAT) should be enabled on this GatewayNetwork.
        /// </summary>
        [Output("enableMasquerade")]
        public Output<bool?> EnableMasquerade { get; private set; } = null!;

        /// <summary>
        /// The ID of the Public Gateway.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// Auto-configure the GatewayNetwork using Scaleway's IPAM (IP address management service). Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Output("ipamConfigs")]
        public Output<ImmutableArray<Outputs.VpcGatewayNetworkIpamConfig>> IpamConfigs { get; private set; } = null!;

        /// <summary>
        /// The MAC address of the GatewayNetwork.
        /// </summary>
        [Output("macAddress")]
        public Output<string> MacAddress { get; private set; } = null!;

        /// <summary>
        /// The private IPv4 address associated with the resource.
        /// </summary>
        [Output("privateIps")]
        public Output<ImmutableArray<Outputs.VpcGatewayNetworkPrivateIp>> PrivateIps { get; private set; } = null!;

        /// <summary>
        /// The ID of the Private Network.
        /// </summary>
        [Output("privateNetworkId")]
        public Output<string> PrivateNetworkId { get; private set; } = null!;

        /// <summary>
        /// Please use `ipam_config`. Enable DHCP configration on this GatewayNetwork. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Output("staticAddress")]
        public Output<string> StaticAddress { get; private set; } = null!;

        /// <summary>
        /// The status of the Public Gateway's connection to the Private Network.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The date and time of the last update of the GatewayNetwork.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// `zone`) The zone in which the gateway network should be created.
        /// 
        /// &gt; **Important:**
        /// In 2023, DHCP functionality was moved from Public Gateways to Private Networks, DHCP fields are now deprecated.
        /// For more information, please refer to the dedicated guide.
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a VpcGatewayNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcGatewayNetwork(string name, VpcGatewayNetworkArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork", name, args ?? new VpcGatewayNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcGatewayNetwork(string name, Input<string> id, VpcGatewayNetworkState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcGatewayNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcGatewayNetwork Get(string name, Input<string> id, VpcGatewayNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcGatewayNetwork(name, id, state, options);
        }
    }

    public sealed class VpcGatewayNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Please use `ipam_config`. Whether to remove DHCP configuration on this GatewayNetwork upon destroy. Requires DHCP ID.
        /// </summary>
        [Input("cleanupDhcp")]
        public Input<bool>? CleanupDhcp { get; set; }

        /// <summary>
        /// Please use `ipam_config`. The ID of the Public Gateway DHCP configuration. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Input("dhcpId")]
        public Input<string>? DhcpId { get; set; }

        /// <summary>
        /// Please use `ipam_config`. Whether a DHCP configuration should be enabled on this GatewayNetwork. Requires a DHCP ID.
        /// </summary>
        [Input("enableDhcp")]
        public Input<bool>? EnableDhcp { get; set; }

        /// <summary>
        /// Whether masquerade (dynamic NAT) should be enabled on this GatewayNetwork.
        /// </summary>
        [Input("enableMasquerade")]
        public Input<bool>? EnableMasquerade { get; set; }

        /// <summary>
        /// The ID of the Public Gateway.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        [Input("ipamConfigs")]
        private InputList<Inputs.VpcGatewayNetworkIpamConfigArgs>? _ipamConfigs;

        /// <summary>
        /// Auto-configure the GatewayNetwork using Scaleway's IPAM (IP address management service). Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        public InputList<Inputs.VpcGatewayNetworkIpamConfigArgs> IpamConfigs
        {
            get => _ipamConfigs ?? (_ipamConfigs = new InputList<Inputs.VpcGatewayNetworkIpamConfigArgs>());
            set => _ipamConfigs = value;
        }

        [Input("privateIps")]
        private InputList<Inputs.VpcGatewayNetworkPrivateIpArgs>? _privateIps;

        /// <summary>
        /// The private IPv4 address associated with the resource.
        /// </summary>
        public InputList<Inputs.VpcGatewayNetworkPrivateIpArgs> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<Inputs.VpcGatewayNetworkPrivateIpArgs>());
            set => _privateIps = value;
        }

        /// <summary>
        /// The ID of the Private Network.
        /// </summary>
        [Input("privateNetworkId", required: true)]
        public Input<string> PrivateNetworkId { get; set; } = null!;

        /// <summary>
        /// Please use `ipam_config`. Enable DHCP configration on this GatewayNetwork. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Input("staticAddress")]
        public Input<string>? StaticAddress { get; set; }

        /// <summary>
        /// `zone`) The zone in which the gateway network should be created.
        /// 
        /// &gt; **Important:**
        /// In 2023, DHCP functionality was moved from Public Gateways to Private Networks, DHCP fields are now deprecated.
        /// For more information, please refer to the dedicated guide.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public VpcGatewayNetworkArgs()
        {
        }
        public static new VpcGatewayNetworkArgs Empty => new VpcGatewayNetworkArgs();
    }

    public sealed class VpcGatewayNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Please use `ipam_config`. Whether to remove DHCP configuration on this GatewayNetwork upon destroy. Requires DHCP ID.
        /// </summary>
        [Input("cleanupDhcp")]
        public Input<bool>? CleanupDhcp { get; set; }

        /// <summary>
        /// The date and time of the creation of the GatewayNetwork.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Please use `ipam_config`. The ID of the Public Gateway DHCP configuration. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Input("dhcpId")]
        public Input<string>? DhcpId { get; set; }

        /// <summary>
        /// Please use `ipam_config`. Whether a DHCP configuration should be enabled on this GatewayNetwork. Requires a DHCP ID.
        /// </summary>
        [Input("enableDhcp")]
        public Input<bool>? EnableDhcp { get; set; }

        /// <summary>
        /// Whether masquerade (dynamic NAT) should be enabled on this GatewayNetwork.
        /// </summary>
        [Input("enableMasquerade")]
        public Input<bool>? EnableMasquerade { get; set; }

        /// <summary>
        /// The ID of the Public Gateway.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        [Input("ipamConfigs")]
        private InputList<Inputs.VpcGatewayNetworkIpamConfigGetArgs>? _ipamConfigs;

        /// <summary>
        /// Auto-configure the GatewayNetwork using Scaleway's IPAM (IP address management service). Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        public InputList<Inputs.VpcGatewayNetworkIpamConfigGetArgs> IpamConfigs
        {
            get => _ipamConfigs ?? (_ipamConfigs = new InputList<Inputs.VpcGatewayNetworkIpamConfigGetArgs>());
            set => _ipamConfigs = value;
        }

        /// <summary>
        /// The MAC address of the GatewayNetwork.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        [Input("privateIps")]
        private InputList<Inputs.VpcGatewayNetworkPrivateIpGetArgs>? _privateIps;

        /// <summary>
        /// The private IPv4 address associated with the resource.
        /// </summary>
        public InputList<Inputs.VpcGatewayNetworkPrivateIpGetArgs> PrivateIps
        {
            get => _privateIps ?? (_privateIps = new InputList<Inputs.VpcGatewayNetworkPrivateIpGetArgs>());
            set => _privateIps = value;
        }

        /// <summary>
        /// The ID of the Private Network.
        /// </summary>
        [Input("privateNetworkId")]
        public Input<string>? PrivateNetworkId { get; set; }

        /// <summary>
        /// Please use `ipam_config`. Enable DHCP configration on this GatewayNetwork. Only one of `dhcp_id`, `static_address` and `ipam_config` should be specified.
        /// </summary>
        [Input("staticAddress")]
        public Input<string>? StaticAddress { get; set; }

        /// <summary>
        /// The status of the Public Gateway's connection to the Private Network.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The date and time of the last update of the GatewayNetwork.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// `zone`) The zone in which the gateway network should be created.
        /// 
        /// &gt; **Important:**
        /// In 2023, DHCP functionality was moved from Public Gateways to Private Networks, DHCP fields are now deprecated.
        /// For more information, please refer to the dedicated guide.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public VpcGatewayNetworkState()
        {
        }
        public static new VpcGatewayNetworkState Empty => new VpcGatewayNetworkState();
    }
}
