// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Books and manages Autoscaling Instance templates.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewAutoscalingInstanceTemplate(ctx, "main", &scaleway.AutoscalingInstanceTemplateArgs{
//				Name:           pulumi.String("asg-template"),
//				CommercialType: pulumi.String("PLAY2-MICRO"),
//				Tags: pulumi.StringArray{
//					pulumi.String("terraform-test"),
//					pulumi.String("basic"),
//				},
//				Volumes: scaleway.AutoscalingInstanceTemplateVolumeArray{
//					&scaleway.AutoscalingInstanceTemplateVolumeArgs{
//						Name:       pulumi.String("as-volume"),
//						VolumeType: pulumi.String("sbs"),
//						Boot:       pulumi.Bool(true),
//						FromSnapshot: &scaleway.AutoscalingInstanceTemplateVolumeFromSnapshotArgs{
//							SnapshotId: pulumi.Any(mainScalewayBlockSnapshot.Id),
//						},
//						PerfIops: pulumi.Int(5000),
//					},
//				},
//				PublicIpsV4Count: pulumi.Int(1),
//				PrivateNetworkIds: pulumi.StringArray{
//					mainScalewayVpcPrivateNetwork.Id,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Autoscaling Instance templates can be imported using `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/autoscalingInstanceTemplate:AutoscalingInstanceTemplate main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type AutoscalingInstanceTemplate struct {
	pulumi.CustomResourceState

	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	CloudInit pulumi.StringPtrOutput `pulumi:"cloudInit"`
	// The name of Instance commercial type.
	CommercialType pulumi.StringOutput `pulumi:"commercialType"`
	// Date and time of Instance group's creation (RFC 3339 format).
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	ImageId pulumi.StringPtrOutput `pulumi:"imageId"`
	// The Instance group template.
	Name pulumi.StringOutput `pulumi:"name"`
	// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
	PlacementGroupId pulumi.StringPtrOutput `pulumi:"placementGroupId"`
	// The private Network IDs to attach to the new Instance.
	PrivateNetworkIds pulumi.StringArrayOutput `pulumi:"privateNetworkIds"`
	// `projectId`) The ID of the Project the Instance template is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The number of flexible IPv4 addresses to attach to the new Instance.
	PublicIpsV4Count pulumi.IntPtrOutput `pulumi:"publicIpsV4Count"`
	// The number of flexible IPv6 addresses to attach to the new Instance.
	PublicIpsV6Count pulumi.IntPtrOutput `pulumi:"publicIpsV6Count"`
	// The instance security group ID.
	SecurityGroupId pulumi.StringPtrOutput `pulumi:"securityGroupId"`
	// The Instance template status
	Status pulumi.StringOutput `pulumi:"status"`
	// The tags associated with the Instance template.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Date and time of Instance group's last update (RFC 3339 format).
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The template of Instance volume.
	Volumes AutoscalingInstanceTemplateVolumeArrayOutput `pulumi:"volumes"`
	// `zone`) The zone in which the Instance template exists.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewAutoscalingInstanceTemplate registers a new resource with the given unique name, arguments, and options.
func NewAutoscalingInstanceTemplate(ctx *pulumi.Context,
	name string, args *AutoscalingInstanceTemplateArgs, opts ...pulumi.ResourceOption) (*AutoscalingInstanceTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommercialType == nil {
		return nil, errors.New("invalid value for required argument 'CommercialType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutoscalingInstanceTemplate
	err := ctx.RegisterResource("scaleway:index/autoscalingInstanceTemplate:AutoscalingInstanceTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoscalingInstanceTemplate gets an existing AutoscalingInstanceTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoscalingInstanceTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoscalingInstanceTemplateState, opts ...pulumi.ResourceOption) (*AutoscalingInstanceTemplate, error) {
	var resource AutoscalingInstanceTemplate
	err := ctx.ReadResource("scaleway:index/autoscalingInstanceTemplate:AutoscalingInstanceTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoscalingInstanceTemplate resources.
type autoscalingInstanceTemplateState struct {
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	CloudInit *string `pulumi:"cloudInit"`
	// The name of Instance commercial type.
	CommercialType *string `pulumi:"commercialType"`
	// Date and time of Instance group's creation (RFC 3339 format).
	CreatedAt *string `pulumi:"createdAt"`
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	ImageId *string `pulumi:"imageId"`
	// The Instance group template.
	Name *string `pulumi:"name"`
	// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// The private Network IDs to attach to the new Instance.
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// `projectId`) The ID of the Project the Instance template is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The number of flexible IPv4 addresses to attach to the new Instance.
	PublicIpsV4Count *int `pulumi:"publicIpsV4Count"`
	// The number of flexible IPv6 addresses to attach to the new Instance.
	PublicIpsV6Count *int `pulumi:"publicIpsV6Count"`
	// The instance security group ID.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The Instance template status
	Status *string `pulumi:"status"`
	// The tags associated with the Instance template.
	Tags []string `pulumi:"tags"`
	// Date and time of Instance group's last update (RFC 3339 format).
	UpdatedAt *string `pulumi:"updatedAt"`
	// The template of Instance volume.
	Volumes []AutoscalingInstanceTemplateVolume `pulumi:"volumes"`
	// `zone`) The zone in which the Instance template exists.
	Zone *string `pulumi:"zone"`
}

type AutoscalingInstanceTemplateState struct {
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	CloudInit pulumi.StringPtrInput
	// The name of Instance commercial type.
	CommercialType pulumi.StringPtrInput
	// Date and time of Instance group's creation (RFC 3339 format).
	CreatedAt pulumi.StringPtrInput
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	ImageId pulumi.StringPtrInput
	// The Instance group template.
	Name pulumi.StringPtrInput
	// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
	PlacementGroupId pulumi.StringPtrInput
	// The private Network IDs to attach to the new Instance.
	PrivateNetworkIds pulumi.StringArrayInput
	// `projectId`) The ID of the Project the Instance template is associated with.
	ProjectId pulumi.StringPtrInput
	// The number of flexible IPv4 addresses to attach to the new Instance.
	PublicIpsV4Count pulumi.IntPtrInput
	// The number of flexible IPv6 addresses to attach to the new Instance.
	PublicIpsV6Count pulumi.IntPtrInput
	// The instance security group ID.
	SecurityGroupId pulumi.StringPtrInput
	// The Instance template status
	Status pulumi.StringPtrInput
	// The tags associated with the Instance template.
	Tags pulumi.StringArrayInput
	// Date and time of Instance group's last update (RFC 3339 format).
	UpdatedAt pulumi.StringPtrInput
	// The template of Instance volume.
	Volumes AutoscalingInstanceTemplateVolumeArrayInput
	// `zone`) The zone in which the Instance template exists.
	Zone pulumi.StringPtrInput
}

func (AutoscalingInstanceTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingInstanceTemplateState)(nil)).Elem()
}

type autoscalingInstanceTemplateArgs struct {
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	CloudInit *string `pulumi:"cloudInit"`
	// The name of Instance commercial type.
	CommercialType string `pulumi:"commercialType"`
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	ImageId *string `pulumi:"imageId"`
	// The Instance group template.
	Name *string `pulumi:"name"`
	// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// The private Network IDs to attach to the new Instance.
	PrivateNetworkIds []string `pulumi:"privateNetworkIds"`
	// `projectId`) The ID of the Project the Instance template is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The number of flexible IPv4 addresses to attach to the new Instance.
	PublicIpsV4Count *int `pulumi:"publicIpsV4Count"`
	// The number of flexible IPv6 addresses to attach to the new Instance.
	PublicIpsV6Count *int `pulumi:"publicIpsV6Count"`
	// The instance security group ID.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The tags associated with the Instance template.
	Tags []string `pulumi:"tags"`
	// The template of Instance volume.
	Volumes []AutoscalingInstanceTemplateVolume `pulumi:"volumes"`
	// `zone`) The zone in which the Instance template exists.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a AutoscalingInstanceTemplate resource.
type AutoscalingInstanceTemplateArgs struct {
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	CloudInit pulumi.StringPtrInput
	// The name of Instance commercial type.
	CommercialType pulumi.StringInput
	// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
	ImageId pulumi.StringPtrInput
	// The Instance group template.
	Name pulumi.StringPtrInput
	// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
	PlacementGroupId pulumi.StringPtrInput
	// The private Network IDs to attach to the new Instance.
	PrivateNetworkIds pulumi.StringArrayInput
	// `projectId`) The ID of the Project the Instance template is associated with.
	ProjectId pulumi.StringPtrInput
	// The number of flexible IPv4 addresses to attach to the new Instance.
	PublicIpsV4Count pulumi.IntPtrInput
	// The number of flexible IPv6 addresses to attach to the new Instance.
	PublicIpsV6Count pulumi.IntPtrInput
	// The instance security group ID.
	SecurityGroupId pulumi.StringPtrInput
	// The tags associated with the Instance template.
	Tags pulumi.StringArrayInput
	// The template of Instance volume.
	Volumes AutoscalingInstanceTemplateVolumeArrayInput
	// `zone`) The zone in which the Instance template exists.
	Zone pulumi.StringPtrInput
}

func (AutoscalingInstanceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalingInstanceTemplateArgs)(nil)).Elem()
}

type AutoscalingInstanceTemplateInput interface {
	pulumi.Input

	ToAutoscalingInstanceTemplateOutput() AutoscalingInstanceTemplateOutput
	ToAutoscalingInstanceTemplateOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateOutput
}

func (*AutoscalingInstanceTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingInstanceTemplate)(nil)).Elem()
}

func (i *AutoscalingInstanceTemplate) ToAutoscalingInstanceTemplateOutput() AutoscalingInstanceTemplateOutput {
	return i.ToAutoscalingInstanceTemplateOutputWithContext(context.Background())
}

func (i *AutoscalingInstanceTemplate) ToAutoscalingInstanceTemplateOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingInstanceTemplateOutput)
}

// AutoscalingInstanceTemplateArrayInput is an input type that accepts AutoscalingInstanceTemplateArray and AutoscalingInstanceTemplateArrayOutput values.
// You can construct a concrete instance of `AutoscalingInstanceTemplateArrayInput` via:
//
//	AutoscalingInstanceTemplateArray{ AutoscalingInstanceTemplateArgs{...} }
type AutoscalingInstanceTemplateArrayInput interface {
	pulumi.Input

	ToAutoscalingInstanceTemplateArrayOutput() AutoscalingInstanceTemplateArrayOutput
	ToAutoscalingInstanceTemplateArrayOutputWithContext(context.Context) AutoscalingInstanceTemplateArrayOutput
}

type AutoscalingInstanceTemplateArray []AutoscalingInstanceTemplateInput

func (AutoscalingInstanceTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingInstanceTemplate)(nil)).Elem()
}

func (i AutoscalingInstanceTemplateArray) ToAutoscalingInstanceTemplateArrayOutput() AutoscalingInstanceTemplateArrayOutput {
	return i.ToAutoscalingInstanceTemplateArrayOutputWithContext(context.Background())
}

func (i AutoscalingInstanceTemplateArray) ToAutoscalingInstanceTemplateArrayOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingInstanceTemplateArrayOutput)
}

// AutoscalingInstanceTemplateMapInput is an input type that accepts AutoscalingInstanceTemplateMap and AutoscalingInstanceTemplateMapOutput values.
// You can construct a concrete instance of `AutoscalingInstanceTemplateMapInput` via:
//
//	AutoscalingInstanceTemplateMap{ "key": AutoscalingInstanceTemplateArgs{...} }
type AutoscalingInstanceTemplateMapInput interface {
	pulumi.Input

	ToAutoscalingInstanceTemplateMapOutput() AutoscalingInstanceTemplateMapOutput
	ToAutoscalingInstanceTemplateMapOutputWithContext(context.Context) AutoscalingInstanceTemplateMapOutput
}

type AutoscalingInstanceTemplateMap map[string]AutoscalingInstanceTemplateInput

func (AutoscalingInstanceTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingInstanceTemplate)(nil)).Elem()
}

func (i AutoscalingInstanceTemplateMap) ToAutoscalingInstanceTemplateMapOutput() AutoscalingInstanceTemplateMapOutput {
	return i.ToAutoscalingInstanceTemplateMapOutputWithContext(context.Background())
}

func (i AutoscalingInstanceTemplateMap) ToAutoscalingInstanceTemplateMapOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingInstanceTemplateMapOutput)
}

type AutoscalingInstanceTemplateOutput struct{ *pulumi.OutputState }

func (AutoscalingInstanceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingInstanceTemplate)(nil)).Elem()
}

func (o AutoscalingInstanceTemplateOutput) ToAutoscalingInstanceTemplateOutput() AutoscalingInstanceTemplateOutput {
	return o
}

func (o AutoscalingInstanceTemplateOutput) ToAutoscalingInstanceTemplateOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateOutput {
	return o
}

// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
func (o AutoscalingInstanceTemplateOutput) CloudInit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringPtrOutput { return v.CloudInit }).(pulumi.StringPtrOutput)
}

// The name of Instance commercial type.
func (o AutoscalingInstanceTemplateOutput) CommercialType() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.CommercialType }).(pulumi.StringOutput)
}

// Date and time of Instance group's creation (RFC 3339 format).
func (o AutoscalingInstanceTemplateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The instance image ID. Can be an ID of a marketplace or personal image. This image must be compatible with `volume` and `commercialType` template.
func (o AutoscalingInstanceTemplateOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringPtrOutput { return v.ImageId }).(pulumi.StringPtrOutput)
}

// The Instance group template.
func (o AutoscalingInstanceTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The instance placement group ID. This is optional, but it is highly recommended to set a preference for Instance location within Availability Zone.
func (o AutoscalingInstanceTemplateOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringPtrOutput { return v.PlacementGroupId }).(pulumi.StringPtrOutput)
}

// The private Network IDs to attach to the new Instance.
func (o AutoscalingInstanceTemplateOutput) PrivateNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringArrayOutput { return v.PrivateNetworkIds }).(pulumi.StringArrayOutput)
}

// `projectId`) The ID of the Project the Instance template is associated with.
func (o AutoscalingInstanceTemplateOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The number of flexible IPv4 addresses to attach to the new Instance.
func (o AutoscalingInstanceTemplateOutput) PublicIpsV4Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.IntPtrOutput { return v.PublicIpsV4Count }).(pulumi.IntPtrOutput)
}

// The number of flexible IPv6 addresses to attach to the new Instance.
func (o AutoscalingInstanceTemplateOutput) PublicIpsV6Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.IntPtrOutput { return v.PublicIpsV6Count }).(pulumi.IntPtrOutput)
}

// The instance security group ID.
func (o AutoscalingInstanceTemplateOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringPtrOutput { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The Instance template status
func (o AutoscalingInstanceTemplateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tags associated with the Instance template.
func (o AutoscalingInstanceTemplateOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Date and time of Instance group's last update (RFC 3339 format).
func (o AutoscalingInstanceTemplateOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The template of Instance volume.
func (o AutoscalingInstanceTemplateOutput) Volumes() AutoscalingInstanceTemplateVolumeArrayOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) AutoscalingInstanceTemplateVolumeArrayOutput { return v.Volumes }).(AutoscalingInstanceTemplateVolumeArrayOutput)
}

// `zone`) The zone in which the Instance template exists.
func (o AutoscalingInstanceTemplateOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoscalingInstanceTemplate) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type AutoscalingInstanceTemplateArrayOutput struct{ *pulumi.OutputState }

func (AutoscalingInstanceTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoscalingInstanceTemplate)(nil)).Elem()
}

func (o AutoscalingInstanceTemplateArrayOutput) ToAutoscalingInstanceTemplateArrayOutput() AutoscalingInstanceTemplateArrayOutput {
	return o
}

func (o AutoscalingInstanceTemplateArrayOutput) ToAutoscalingInstanceTemplateArrayOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateArrayOutput {
	return o
}

func (o AutoscalingInstanceTemplateArrayOutput) Index(i pulumi.IntInput) AutoscalingInstanceTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoscalingInstanceTemplate {
		return vs[0].([]*AutoscalingInstanceTemplate)[vs[1].(int)]
	}).(AutoscalingInstanceTemplateOutput)
}

type AutoscalingInstanceTemplateMapOutput struct{ *pulumi.OutputState }

func (AutoscalingInstanceTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoscalingInstanceTemplate)(nil)).Elem()
}

func (o AutoscalingInstanceTemplateMapOutput) ToAutoscalingInstanceTemplateMapOutput() AutoscalingInstanceTemplateMapOutput {
	return o
}

func (o AutoscalingInstanceTemplateMapOutput) ToAutoscalingInstanceTemplateMapOutputWithContext(ctx context.Context) AutoscalingInstanceTemplateMapOutput {
	return o
}

func (o AutoscalingInstanceTemplateMapOutput) MapIndex(k pulumi.StringInput) AutoscalingInstanceTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoscalingInstanceTemplate {
		return vs[0].(map[string]*AutoscalingInstanceTemplate)[vs[1].(string)]
	}).(AutoscalingInstanceTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingInstanceTemplateInput)(nil)).Elem(), &AutoscalingInstanceTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingInstanceTemplateArrayInput)(nil)).Elem(), AutoscalingInstanceTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingInstanceTemplateMapInput)(nil)).Elem(), AutoscalingInstanceTemplateMap{})
	pulumi.RegisterOutputType(AutoscalingInstanceTemplateOutput{})
	pulumi.RegisterOutputType(AutoscalingInstanceTemplateArrayOutput{})
	pulumi.RegisterOutputType(AutoscalingInstanceTemplateMapOutput{})
}
