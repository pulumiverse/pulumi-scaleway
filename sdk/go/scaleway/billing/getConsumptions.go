// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about your Consumptions.
//
// ## Example Usage
func GetConsumptions(ctx *pulumi.Context, args *GetConsumptionsArgs, opts ...pulumi.InvokeOption) (*GetConsumptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConsumptionsResult
	err := ctx.Invoke("scaleway:billing/getConsumptions:getConsumptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConsumptions.
type GetConsumptionsArgs struct {
	// `projectId`) The ID of the project the consumption list is associated with.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getConsumptions.
type GetConsumptionsResult struct {
	// List of found consumptions
	Consumptions []GetConsumptionsConsumption `pulumi:"consumptions"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	OrganizationId string `pulumi:"organizationId"`
	// The project ID of the consumption.
	ProjectId string `pulumi:"projectId"`
	// The last consumption update date.
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetConsumptionsOutput(ctx *pulumi.Context, args GetConsumptionsOutputArgs, opts ...pulumi.InvokeOption) GetConsumptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConsumptionsResultOutput, error) {
			args := v.(GetConsumptionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:billing/getConsumptions:getConsumptions", args, GetConsumptionsResultOutput{}, options).(GetConsumptionsResultOutput), nil
		}).(GetConsumptionsResultOutput)
}

// A collection of arguments for invoking getConsumptions.
type GetConsumptionsOutputArgs struct {
	// `projectId`) The ID of the project the consumption list is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (GetConsumptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumptionsArgs)(nil)).Elem()
}

// A collection of values returned by getConsumptions.
type GetConsumptionsResultOutput struct{ *pulumi.OutputState }

func (GetConsumptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsumptionsResult)(nil)).Elem()
}

func (o GetConsumptionsResultOutput) ToGetConsumptionsResultOutput() GetConsumptionsResultOutput {
	return o
}

func (o GetConsumptionsResultOutput) ToGetConsumptionsResultOutputWithContext(ctx context.Context) GetConsumptionsResultOutput {
	return o
}

// List of found consumptions
func (o GetConsumptionsResultOutput) Consumptions() GetConsumptionsConsumptionArrayOutput {
	return o.ApplyT(func(v GetConsumptionsResult) []GetConsumptionsConsumption { return v.Consumptions }).(GetConsumptionsConsumptionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConsumptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetConsumptionsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumptionsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The project ID of the consumption.
func (o GetConsumptionsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumptionsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The last consumption update date.
func (o GetConsumptionsResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsumptionsResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConsumptionsResultOutput{})
}
