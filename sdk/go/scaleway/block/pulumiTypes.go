// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package block

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type SnapshotExport struct {
	// The name of the bucket where the QCOW file will be saved.
	Bucket string `pulumi:"bucket"`
	// The desired key (path) for the QCOW file within the bucket.
	Key string `pulumi:"key"`
}

// SnapshotExportInput is an input type that accepts SnapshotExportArgs and SnapshotExportOutput values.
// You can construct a concrete instance of `SnapshotExportInput` via:
//
//	SnapshotExportArgs{...}
type SnapshotExportInput interface {
	pulumi.Input

	ToSnapshotExportOutput() SnapshotExportOutput
	ToSnapshotExportOutputWithContext(context.Context) SnapshotExportOutput
}

type SnapshotExportArgs struct {
	// The name of the bucket where the QCOW file will be saved.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The desired key (path) for the QCOW file within the bucket.
	Key pulumi.StringInput `pulumi:"key"`
}

func (SnapshotExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExport)(nil)).Elem()
}

func (i SnapshotExportArgs) ToSnapshotExportOutput() SnapshotExportOutput {
	return i.ToSnapshotExportOutputWithContext(context.Background())
}

func (i SnapshotExportArgs) ToSnapshotExportOutputWithContext(ctx context.Context) SnapshotExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportOutput)
}

func (i SnapshotExportArgs) ToSnapshotExportPtrOutput() SnapshotExportPtrOutput {
	return i.ToSnapshotExportPtrOutputWithContext(context.Background())
}

func (i SnapshotExportArgs) ToSnapshotExportPtrOutputWithContext(ctx context.Context) SnapshotExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportOutput).ToSnapshotExportPtrOutputWithContext(ctx)
}

// SnapshotExportPtrInput is an input type that accepts SnapshotExportArgs, SnapshotExportPtr and SnapshotExportPtrOutput values.
// You can construct a concrete instance of `SnapshotExportPtrInput` via:
//
//	        SnapshotExportArgs{...}
//
//	or:
//
//	        nil
type SnapshotExportPtrInput interface {
	pulumi.Input

	ToSnapshotExportPtrOutput() SnapshotExportPtrOutput
	ToSnapshotExportPtrOutputWithContext(context.Context) SnapshotExportPtrOutput
}

type snapshotExportPtrType SnapshotExportArgs

func SnapshotExportPtr(v *SnapshotExportArgs) SnapshotExportPtrInput {
	return (*snapshotExportPtrType)(v)
}

func (*snapshotExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotExport)(nil)).Elem()
}

func (i *snapshotExportPtrType) ToSnapshotExportPtrOutput() SnapshotExportPtrOutput {
	return i.ToSnapshotExportPtrOutputWithContext(context.Background())
}

func (i *snapshotExportPtrType) ToSnapshotExportPtrOutputWithContext(ctx context.Context) SnapshotExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotExportPtrOutput)
}

type SnapshotExportOutput struct{ *pulumi.OutputState }

func (SnapshotExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotExport)(nil)).Elem()
}

func (o SnapshotExportOutput) ToSnapshotExportOutput() SnapshotExportOutput {
	return o
}

func (o SnapshotExportOutput) ToSnapshotExportOutputWithContext(ctx context.Context) SnapshotExportOutput {
	return o
}

func (o SnapshotExportOutput) ToSnapshotExportPtrOutput() SnapshotExportPtrOutput {
	return o.ToSnapshotExportPtrOutputWithContext(context.Background())
}

func (o SnapshotExportOutput) ToSnapshotExportPtrOutputWithContext(ctx context.Context) SnapshotExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotExport) *SnapshotExport {
		return &v
	}).(SnapshotExportPtrOutput)
}

// The name of the bucket where the QCOW file will be saved.
func (o SnapshotExportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExport) string { return v.Bucket }).(pulumi.StringOutput)
}

// The desired key (path) for the QCOW file within the bucket.
func (o SnapshotExportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotExport) string { return v.Key }).(pulumi.StringOutput)
}

type SnapshotExportPtrOutput struct{ *pulumi.OutputState }

func (SnapshotExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotExport)(nil)).Elem()
}

func (o SnapshotExportPtrOutput) ToSnapshotExportPtrOutput() SnapshotExportPtrOutput {
	return o
}

func (o SnapshotExportPtrOutput) ToSnapshotExportPtrOutputWithContext(ctx context.Context) SnapshotExportPtrOutput {
	return o
}

func (o SnapshotExportPtrOutput) Elem() SnapshotExportOutput {
	return o.ApplyT(func(v *SnapshotExport) SnapshotExport {
		if v != nil {
			return *v
		}
		var ret SnapshotExport
		return ret
	}).(SnapshotExportOutput)
}

// The name of the bucket where the QCOW file will be saved.
func (o SnapshotExportPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotExport) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The desired key (path) for the QCOW file within the bucket.
func (o SnapshotExportPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotExport) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type SnapshotImport struct {
	// The name of the bucket containing the QCOW file.
	Bucket string `pulumi:"bucket"`
	// The key of the QCOW file within the bucket.
	Key string `pulumi:"key"`
}

// SnapshotImportInput is an input type that accepts SnapshotImportArgs and SnapshotImportOutput values.
// You can construct a concrete instance of `SnapshotImportInput` via:
//
//	SnapshotImportArgs{...}
type SnapshotImportInput interface {
	pulumi.Input

	ToSnapshotImportOutput() SnapshotImportOutput
	ToSnapshotImportOutputWithContext(context.Context) SnapshotImportOutput
}

type SnapshotImportArgs struct {
	// The name of the bucket containing the QCOW file.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The key of the QCOW file within the bucket.
	Key pulumi.StringInput `pulumi:"key"`
}

func (SnapshotImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotImport)(nil)).Elem()
}

func (i SnapshotImportArgs) ToSnapshotImportOutput() SnapshotImportOutput {
	return i.ToSnapshotImportOutputWithContext(context.Background())
}

func (i SnapshotImportArgs) ToSnapshotImportOutputWithContext(ctx context.Context) SnapshotImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotImportOutput)
}

func (i SnapshotImportArgs) ToSnapshotImportPtrOutput() SnapshotImportPtrOutput {
	return i.ToSnapshotImportPtrOutputWithContext(context.Background())
}

func (i SnapshotImportArgs) ToSnapshotImportPtrOutputWithContext(ctx context.Context) SnapshotImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotImportOutput).ToSnapshotImportPtrOutputWithContext(ctx)
}

// SnapshotImportPtrInput is an input type that accepts SnapshotImportArgs, SnapshotImportPtr and SnapshotImportPtrOutput values.
// You can construct a concrete instance of `SnapshotImportPtrInput` via:
//
//	        SnapshotImportArgs{...}
//
//	or:
//
//	        nil
type SnapshotImportPtrInput interface {
	pulumi.Input

	ToSnapshotImportPtrOutput() SnapshotImportPtrOutput
	ToSnapshotImportPtrOutputWithContext(context.Context) SnapshotImportPtrOutput
}

type snapshotImportPtrType SnapshotImportArgs

func SnapshotImportPtr(v *SnapshotImportArgs) SnapshotImportPtrInput {
	return (*snapshotImportPtrType)(v)
}

func (*snapshotImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotImport)(nil)).Elem()
}

func (i *snapshotImportPtrType) ToSnapshotImportPtrOutput() SnapshotImportPtrOutput {
	return i.ToSnapshotImportPtrOutputWithContext(context.Background())
}

func (i *snapshotImportPtrType) ToSnapshotImportPtrOutputWithContext(ctx context.Context) SnapshotImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotImportPtrOutput)
}

type SnapshotImportOutput struct{ *pulumi.OutputState }

func (SnapshotImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotImport)(nil)).Elem()
}

func (o SnapshotImportOutput) ToSnapshotImportOutput() SnapshotImportOutput {
	return o
}

func (o SnapshotImportOutput) ToSnapshotImportOutputWithContext(ctx context.Context) SnapshotImportOutput {
	return o
}

func (o SnapshotImportOutput) ToSnapshotImportPtrOutput() SnapshotImportPtrOutput {
	return o.ToSnapshotImportPtrOutputWithContext(context.Background())
}

func (o SnapshotImportOutput) ToSnapshotImportPtrOutputWithContext(ctx context.Context) SnapshotImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotImport) *SnapshotImport {
		return &v
	}).(SnapshotImportPtrOutput)
}

// The name of the bucket containing the QCOW file.
func (o SnapshotImportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotImport) string { return v.Bucket }).(pulumi.StringOutput)
}

// The key of the QCOW file within the bucket.
func (o SnapshotImportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotImport) string { return v.Key }).(pulumi.StringOutput)
}

type SnapshotImportPtrOutput struct{ *pulumi.OutputState }

func (SnapshotImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotImport)(nil)).Elem()
}

func (o SnapshotImportPtrOutput) ToSnapshotImportPtrOutput() SnapshotImportPtrOutput {
	return o
}

func (o SnapshotImportPtrOutput) ToSnapshotImportPtrOutputWithContext(ctx context.Context) SnapshotImportPtrOutput {
	return o
}

func (o SnapshotImportPtrOutput) Elem() SnapshotImportOutput {
	return o.ApplyT(func(v *SnapshotImport) SnapshotImport {
		if v != nil {
			return *v
		}
		var ret SnapshotImport
		return ret
	}).(SnapshotImportOutput)
}

// The name of the bucket containing the QCOW file.
func (o SnapshotImportPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotImport) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The key of the QCOW file within the bucket.
func (o SnapshotImportPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotImport) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type GetSnapshotExport struct {
	// Bucket containing qcow
	Bucket string `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key string `pulumi:"key"`
}

// GetSnapshotExportInput is an input type that accepts GetSnapshotExportArgs and GetSnapshotExportOutput values.
// You can construct a concrete instance of `GetSnapshotExportInput` via:
//
//	GetSnapshotExportArgs{...}
type GetSnapshotExportInput interface {
	pulumi.Input

	ToGetSnapshotExportOutput() GetSnapshotExportOutput
	ToGetSnapshotExportOutputWithContext(context.Context) GetSnapshotExportOutput
}

type GetSnapshotExportArgs struct {
	// Bucket containing qcow
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSnapshotExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExport)(nil)).Elem()
}

func (i GetSnapshotExportArgs) ToGetSnapshotExportOutput() GetSnapshotExportOutput {
	return i.ToGetSnapshotExportOutputWithContext(context.Background())
}

func (i GetSnapshotExportArgs) ToGetSnapshotExportOutputWithContext(ctx context.Context) GetSnapshotExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportOutput)
}

// GetSnapshotExportArrayInput is an input type that accepts GetSnapshotExportArray and GetSnapshotExportArrayOutput values.
// You can construct a concrete instance of `GetSnapshotExportArrayInput` via:
//
//	GetSnapshotExportArray{ GetSnapshotExportArgs{...} }
type GetSnapshotExportArrayInput interface {
	pulumi.Input

	ToGetSnapshotExportArrayOutput() GetSnapshotExportArrayOutput
	ToGetSnapshotExportArrayOutputWithContext(context.Context) GetSnapshotExportArrayOutput
}

type GetSnapshotExportArray []GetSnapshotExportInput

func (GetSnapshotExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExport)(nil)).Elem()
}

func (i GetSnapshotExportArray) ToGetSnapshotExportArrayOutput() GetSnapshotExportArrayOutput {
	return i.ToGetSnapshotExportArrayOutputWithContext(context.Background())
}

func (i GetSnapshotExportArray) ToGetSnapshotExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotExportArrayOutput)
}

type GetSnapshotExportOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotExport)(nil)).Elem()
}

func (o GetSnapshotExportOutput) ToGetSnapshotExportOutput() GetSnapshotExportOutput {
	return o
}

func (o GetSnapshotExportOutput) ToGetSnapshotExportOutputWithContext(ctx context.Context) GetSnapshotExportOutput {
	return o
}

// Bucket containing qcow
func (o GetSnapshotExportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExport) string { return v.Bucket }).(pulumi.StringOutput)
}

// Key of the qcow file in the specified bucket
func (o GetSnapshotExportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotExport) string { return v.Key }).(pulumi.StringOutput)
}

type GetSnapshotExportArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotExport)(nil)).Elem()
}

func (o GetSnapshotExportArrayOutput) ToGetSnapshotExportArrayOutput() GetSnapshotExportArrayOutput {
	return o
}

func (o GetSnapshotExportArrayOutput) ToGetSnapshotExportArrayOutputWithContext(ctx context.Context) GetSnapshotExportArrayOutput {
	return o
}

func (o GetSnapshotExportArrayOutput) Index(i pulumi.IntInput) GetSnapshotExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotExport {
		return vs[0].([]GetSnapshotExport)[vs[1].(int)]
	}).(GetSnapshotExportOutput)
}

type GetSnapshotImport struct {
	// Bucket containing qcow
	Bucket string `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key string `pulumi:"key"`
}

// GetSnapshotImportInput is an input type that accepts GetSnapshotImportArgs and GetSnapshotImportOutput values.
// You can construct a concrete instance of `GetSnapshotImportInput` via:
//
//	GetSnapshotImportArgs{...}
type GetSnapshotImportInput interface {
	pulumi.Input

	ToGetSnapshotImportOutput() GetSnapshotImportOutput
	ToGetSnapshotImportOutputWithContext(context.Context) GetSnapshotImportOutput
}

type GetSnapshotImportArgs struct {
	// Bucket containing qcow
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSnapshotImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotImport)(nil)).Elem()
}

func (i GetSnapshotImportArgs) ToGetSnapshotImportOutput() GetSnapshotImportOutput {
	return i.ToGetSnapshotImportOutputWithContext(context.Background())
}

func (i GetSnapshotImportArgs) ToGetSnapshotImportOutputWithContext(ctx context.Context) GetSnapshotImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotImportOutput)
}

// GetSnapshotImportArrayInput is an input type that accepts GetSnapshotImportArray and GetSnapshotImportArrayOutput values.
// You can construct a concrete instance of `GetSnapshotImportArrayInput` via:
//
//	GetSnapshotImportArray{ GetSnapshotImportArgs{...} }
type GetSnapshotImportArrayInput interface {
	pulumi.Input

	ToGetSnapshotImportArrayOutput() GetSnapshotImportArrayOutput
	ToGetSnapshotImportArrayOutputWithContext(context.Context) GetSnapshotImportArrayOutput
}

type GetSnapshotImportArray []GetSnapshotImportInput

func (GetSnapshotImportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotImport)(nil)).Elem()
}

func (i GetSnapshotImportArray) ToGetSnapshotImportArrayOutput() GetSnapshotImportArrayOutput {
	return i.ToGetSnapshotImportArrayOutputWithContext(context.Background())
}

func (i GetSnapshotImportArray) ToGetSnapshotImportArrayOutputWithContext(ctx context.Context) GetSnapshotImportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotImportArrayOutput)
}

type GetSnapshotImportOutput struct{ *pulumi.OutputState }

func (GetSnapshotImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotImport)(nil)).Elem()
}

func (o GetSnapshotImportOutput) ToGetSnapshotImportOutput() GetSnapshotImportOutput {
	return o
}

func (o GetSnapshotImportOutput) ToGetSnapshotImportOutputWithContext(ctx context.Context) GetSnapshotImportOutput {
	return o
}

// Bucket containing qcow
func (o GetSnapshotImportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotImport) string { return v.Bucket }).(pulumi.StringOutput)
}

// Key of the qcow file in the specified bucket
func (o GetSnapshotImportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotImport) string { return v.Key }).(pulumi.StringOutput)
}

type GetSnapshotImportArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotImportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotImport)(nil)).Elem()
}

func (o GetSnapshotImportArrayOutput) ToGetSnapshotImportArrayOutput() GetSnapshotImportArrayOutput {
	return o
}

func (o GetSnapshotImportArrayOutput) ToGetSnapshotImportArrayOutputWithContext(ctx context.Context) GetSnapshotImportArrayOutput {
	return o
}

func (o GetSnapshotImportArrayOutput) Index(i pulumi.IntInput) GetSnapshotImportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotImport {
		return vs[0].([]GetSnapshotImport)[vs[1].(int)]
	}).(GetSnapshotImportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportInput)(nil)).Elem(), SnapshotExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotExportPtrInput)(nil)).Elem(), SnapshotExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotImportInput)(nil)).Elem(), SnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotImportPtrInput)(nil)).Elem(), SnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportInput)(nil)).Elem(), GetSnapshotExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotExportArrayInput)(nil)).Elem(), GetSnapshotExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotImportInput)(nil)).Elem(), GetSnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSnapshotImportArrayInput)(nil)).Elem(), GetSnapshotImportArray{})
	pulumi.RegisterOutputType(SnapshotExportOutput{})
	pulumi.RegisterOutputType(SnapshotExportPtrOutput{})
	pulumi.RegisterOutputType(SnapshotImportOutput{})
	pulumi.RegisterOutputType(SnapshotImportPtrOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportOutput{})
	pulumi.RegisterOutputType(GetSnapshotExportArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotImportOutput{})
	pulumi.RegisterOutputType(GetSnapshotImportArrayOutput{})
}
