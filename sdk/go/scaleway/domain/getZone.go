// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domain

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneResult
	err := ctx.Invoke("scaleway:domain/getZone:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZone.
type LookupZoneArgs struct {
	// The primary domain name where the DNS zone is located. This is a mandatory field.
	Domain *string `pulumi:"domain"`
	// ). The ID of the Scaleway Project associated with the domain. If not specified, it defaults to the `projectId` set in the provider configuration.
	ProjectId *string `pulumi:"projectId"`
	// The subdomain (or zone name) within the primary domain. This is a mandatory field.
	Subdomain *string `pulumi:"subdomain"`
}

// A collection of values returned by getZone.
type LookupZoneResult struct {
	Domain *string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Message associated with the domain zone (typically used for status or error messages).
	Message string `pulumi:"message"`
	// The list of name servers for the zone.
	Ns []string `pulumi:"ns"`
	// The default list of name servers for the zone.
	NsDefaults []string `pulumi:"nsDefaults"`
	// The master list of name servers for the zone.
	NsMasters []string `pulumi:"nsMasters"`
	ProjectId *string  `pulumi:"projectId"`
	// The status of the domain zone.
	Status    string  `pulumi:"status"`
	Subdomain *string `pulumi:"subdomain"`
	// The date and time of the last update to the DNS zone.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupZoneResultOutput, error) {
			args := v.(LookupZoneArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:domain/getZone:getZone", args, LookupZoneResultOutput{}, options).(LookupZoneResultOutput), nil
		}).(LookupZoneResultOutput)
}

// A collection of arguments for invoking getZone.
type LookupZoneOutputArgs struct {
	// The primary domain name where the DNS zone is located. This is a mandatory field.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// ). The ID of the Scaleway Project associated with the domain. If not specified, it defaults to the `projectId` set in the provider configuration.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The subdomain (or zone name) within the primary domain. This is a mandatory field.
	Subdomain pulumi.StringPtrInput `pulumi:"subdomain"`
}

func (LookupZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneArgs)(nil)).Elem()
}

// A collection of values returned by getZone.
type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutput() LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutputWithContext(ctx context.Context) LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZoneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Id }).(pulumi.StringOutput)
}

// Message associated with the domain zone (typically used for status or error messages).
func (o LookupZoneResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Message }).(pulumi.StringOutput)
}

// The list of name servers for the zone.
func (o LookupZoneResultOutput) Ns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.Ns }).(pulumi.StringArrayOutput)
}

// The default list of name servers for the zone.
func (o LookupZoneResultOutput) NsDefaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.NsDefaults }).(pulumi.StringArrayOutput)
}

// The master list of name servers for the zone.
func (o LookupZoneResultOutput) NsMasters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupZoneResult) []string { return v.NsMasters }).(pulumi.StringArrayOutput)
}

func (o LookupZoneResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The status of the domain zone.
func (o LookupZoneResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupZoneResultOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupZoneResult) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// The date and time of the last update to the DNS zone.
func (o LookupZoneResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneResultOutput{})
}
