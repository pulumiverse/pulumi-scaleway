// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway Edge Services Cache Stages.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewEdgeServicesCacheStage(ctx, "main", &scaleway.EdgeServicesCacheStageArgs{
//				PipelineId:     pulumi.Any(mainScalewayEdgeServicesPipeline.Id),
//				BackendStageId: pulumi.Any(mainScalewayEdgeServicesBackendStage.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cache stages can be imported using the `{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/edgeServicesCacheStage:EdgeServicesCacheStage basic 11111111-1111-1111-1111-111111111111
// ```
type EdgeServicesCacheStage struct {
	pulumi.CustomResourceState

	// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	BackendStageId pulumi.StringOutput `pulumi:"backendStageId"`
	// The date and time of the creation of the cache stage.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The Time To Live (TTL) in seconds. Defines how long content is cached.
	FallbackTtl pulumi.IntPtrOutput `pulumi:"fallbackTtl"`
	// The ID of the pipeline.
	PipelineId pulumi.StringOutput `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the cache stage is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	PurgeRequests EdgeServicesCacheStagePurgeRequestArrayOutput `pulumi:"purgeRequests"`
	// Trigger a refresh of the cache by changing this field's value.
	RefreshCache pulumi.StringPtrOutput `pulumi:"refreshCache"`
	// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	RouteStageId pulumi.StringOutput `pulumi:"routeStageId"`
	// The date and time of the last update of the cache stage.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	WafStageId pulumi.StringOutput `pulumi:"wafStageId"`
}

// NewEdgeServicesCacheStage registers a new resource with the given unique name, arguments, and options.
func NewEdgeServicesCacheStage(ctx *pulumi.Context,
	name string, args *EdgeServicesCacheStageArgs, opts ...pulumi.ResourceOption) (*EdgeServicesCacheStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PipelineId == nil {
		return nil, errors.New("invalid value for required argument 'PipelineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeServicesCacheStage
	err := ctx.RegisterResource("scaleway:index/edgeServicesCacheStage:EdgeServicesCacheStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeServicesCacheStage gets an existing EdgeServicesCacheStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeServicesCacheStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeServicesCacheStageState, opts ...pulumi.ResourceOption) (*EdgeServicesCacheStage, error) {
	var resource EdgeServicesCacheStage
	err := ctx.ReadResource("scaleway:index/edgeServicesCacheStage:EdgeServicesCacheStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeServicesCacheStage resources.
type edgeServicesCacheStageState struct {
	// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	BackendStageId *string `pulumi:"backendStageId"`
	// The date and time of the creation of the cache stage.
	CreatedAt *string `pulumi:"createdAt"`
	// The Time To Live (TTL) in seconds. Defines how long content is cached.
	FallbackTtl *int `pulumi:"fallbackTtl"`
	// The ID of the pipeline.
	PipelineId *string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the cache stage is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	PurgeRequests []EdgeServicesCacheStagePurgeRequest `pulumi:"purgeRequests"`
	// Trigger a refresh of the cache by changing this field's value.
	RefreshCache *string `pulumi:"refreshCache"`
	// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	RouteStageId *string `pulumi:"routeStageId"`
	// The date and time of the last update of the cache stage.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	WafStageId *string `pulumi:"wafStageId"`
}

type EdgeServicesCacheStageState struct {
	// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	BackendStageId pulumi.StringPtrInput
	// The date and time of the creation of the cache stage.
	CreatedAt pulumi.StringPtrInput
	// The Time To Live (TTL) in seconds. Defines how long content is cached.
	FallbackTtl pulumi.IntPtrInput
	// The ID of the pipeline.
	PipelineId pulumi.StringPtrInput
	// `projectId`) The ID of the project the cache stage is associated with.
	ProjectId pulumi.StringPtrInput
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	PurgeRequests EdgeServicesCacheStagePurgeRequestArrayInput
	// Trigger a refresh of the cache by changing this field's value.
	RefreshCache pulumi.StringPtrInput
	// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	RouteStageId pulumi.StringPtrInput
	// The date and time of the last update of the cache stage.
	UpdatedAt pulumi.StringPtrInput
	// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	WafStageId pulumi.StringPtrInput
}

func (EdgeServicesCacheStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesCacheStageState)(nil)).Elem()
}

type edgeServicesCacheStageArgs struct {
	// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	BackendStageId *string `pulumi:"backendStageId"`
	// The Time To Live (TTL) in seconds. Defines how long content is cached.
	FallbackTtl *int `pulumi:"fallbackTtl"`
	// The ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the cache stage is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	PurgeRequests []EdgeServicesCacheStagePurgeRequest `pulumi:"purgeRequests"`
	// Trigger a refresh of the cache by changing this field's value.
	RefreshCache *string `pulumi:"refreshCache"`
	// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	RouteStageId *string `pulumi:"routeStageId"`
	// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	WafStageId *string `pulumi:"wafStageId"`
}

// The set of arguments for constructing a EdgeServicesCacheStage resource.
type EdgeServicesCacheStageArgs struct {
	// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	BackendStageId pulumi.StringPtrInput
	// The Time To Live (TTL) in seconds. Defines how long content is cached.
	FallbackTtl pulumi.IntPtrInput
	// The ID of the pipeline.
	PipelineId pulumi.StringInput
	// `projectId`) The ID of the project the cache stage is associated with.
	ProjectId pulumi.StringPtrInput
	// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
	PurgeRequests EdgeServicesCacheStagePurgeRequestArrayInput
	// Trigger a refresh of the cache by changing this field's value.
	RefreshCache pulumi.StringPtrInput
	// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	RouteStageId pulumi.StringPtrInput
	// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
	WafStageId pulumi.StringPtrInput
}

func (EdgeServicesCacheStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesCacheStageArgs)(nil)).Elem()
}

type EdgeServicesCacheStageInput interface {
	pulumi.Input

	ToEdgeServicesCacheStageOutput() EdgeServicesCacheStageOutput
	ToEdgeServicesCacheStageOutputWithContext(ctx context.Context) EdgeServicesCacheStageOutput
}

func (*EdgeServicesCacheStage) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesCacheStage)(nil)).Elem()
}

func (i *EdgeServicesCacheStage) ToEdgeServicesCacheStageOutput() EdgeServicesCacheStageOutput {
	return i.ToEdgeServicesCacheStageOutputWithContext(context.Background())
}

func (i *EdgeServicesCacheStage) ToEdgeServicesCacheStageOutputWithContext(ctx context.Context) EdgeServicesCacheStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesCacheStageOutput)
}

// EdgeServicesCacheStageArrayInput is an input type that accepts EdgeServicesCacheStageArray and EdgeServicesCacheStageArrayOutput values.
// You can construct a concrete instance of `EdgeServicesCacheStageArrayInput` via:
//
//	EdgeServicesCacheStageArray{ EdgeServicesCacheStageArgs{...} }
type EdgeServicesCacheStageArrayInput interface {
	pulumi.Input

	ToEdgeServicesCacheStageArrayOutput() EdgeServicesCacheStageArrayOutput
	ToEdgeServicesCacheStageArrayOutputWithContext(context.Context) EdgeServicesCacheStageArrayOutput
}

type EdgeServicesCacheStageArray []EdgeServicesCacheStageInput

func (EdgeServicesCacheStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesCacheStage)(nil)).Elem()
}

func (i EdgeServicesCacheStageArray) ToEdgeServicesCacheStageArrayOutput() EdgeServicesCacheStageArrayOutput {
	return i.ToEdgeServicesCacheStageArrayOutputWithContext(context.Background())
}

func (i EdgeServicesCacheStageArray) ToEdgeServicesCacheStageArrayOutputWithContext(ctx context.Context) EdgeServicesCacheStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesCacheStageArrayOutput)
}

// EdgeServicesCacheStageMapInput is an input type that accepts EdgeServicesCacheStageMap and EdgeServicesCacheStageMapOutput values.
// You can construct a concrete instance of `EdgeServicesCacheStageMapInput` via:
//
//	EdgeServicesCacheStageMap{ "key": EdgeServicesCacheStageArgs{...} }
type EdgeServicesCacheStageMapInput interface {
	pulumi.Input

	ToEdgeServicesCacheStageMapOutput() EdgeServicesCacheStageMapOutput
	ToEdgeServicesCacheStageMapOutputWithContext(context.Context) EdgeServicesCacheStageMapOutput
}

type EdgeServicesCacheStageMap map[string]EdgeServicesCacheStageInput

func (EdgeServicesCacheStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesCacheStage)(nil)).Elem()
}

func (i EdgeServicesCacheStageMap) ToEdgeServicesCacheStageMapOutput() EdgeServicesCacheStageMapOutput {
	return i.ToEdgeServicesCacheStageMapOutputWithContext(context.Background())
}

func (i EdgeServicesCacheStageMap) ToEdgeServicesCacheStageMapOutputWithContext(ctx context.Context) EdgeServicesCacheStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesCacheStageMapOutput)
}

type EdgeServicesCacheStageOutput struct{ *pulumi.OutputState }

func (EdgeServicesCacheStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesCacheStage)(nil)).Elem()
}

func (o EdgeServicesCacheStageOutput) ToEdgeServicesCacheStageOutput() EdgeServicesCacheStageOutput {
	return o
}

func (o EdgeServicesCacheStageOutput) ToEdgeServicesCacheStageOutputWithContext(ctx context.Context) EdgeServicesCacheStageOutput {
	return o
}

// The backend stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
func (o EdgeServicesCacheStageOutput) BackendStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.BackendStageId }).(pulumi.StringOutput)
}

// The date and time of the creation of the cache stage.
func (o EdgeServicesCacheStageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Time To Live (TTL) in seconds. Defines how long content is cached.
func (o EdgeServicesCacheStageOutput) FallbackTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.IntPtrOutput { return v.FallbackTtl }).(pulumi.IntPtrOutput)
}

// The ID of the pipeline.
func (o EdgeServicesCacheStageOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.PipelineId }).(pulumi.StringOutput)
}

// `projectId`) The ID of the project the cache stage is associated with.
func (o EdgeServicesCacheStageOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
func (o EdgeServicesCacheStageOutput) PurgeRequests() EdgeServicesCacheStagePurgeRequestArrayOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) EdgeServicesCacheStagePurgeRequestArrayOutput { return v.PurgeRequests }).(EdgeServicesCacheStagePurgeRequestArrayOutput)
}

// Trigger a refresh of the cache by changing this field's value.
func (o EdgeServicesCacheStageOutput) RefreshCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringPtrOutput { return v.RefreshCache }).(pulumi.StringPtrOutput)
}

// The route stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
func (o EdgeServicesCacheStageOutput) RouteStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.RouteStageId }).(pulumi.StringOutput)
}

// The date and time of the last update of the cache stage.
func (o EdgeServicesCacheStageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The WAF stage ID the cache stage will be linked to. Only one of `backendStageId`, `routeStageId` and `wafStageId` should be specified.
func (o EdgeServicesCacheStageOutput) WafStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesCacheStage) pulumi.StringOutput { return v.WafStageId }).(pulumi.StringOutput)
}

type EdgeServicesCacheStageArrayOutput struct{ *pulumi.OutputState }

func (EdgeServicesCacheStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesCacheStage)(nil)).Elem()
}

func (o EdgeServicesCacheStageArrayOutput) ToEdgeServicesCacheStageArrayOutput() EdgeServicesCacheStageArrayOutput {
	return o
}

func (o EdgeServicesCacheStageArrayOutput) ToEdgeServicesCacheStageArrayOutputWithContext(ctx context.Context) EdgeServicesCacheStageArrayOutput {
	return o
}

func (o EdgeServicesCacheStageArrayOutput) Index(i pulumi.IntInput) EdgeServicesCacheStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeServicesCacheStage {
		return vs[0].([]*EdgeServicesCacheStage)[vs[1].(int)]
	}).(EdgeServicesCacheStageOutput)
}

type EdgeServicesCacheStageMapOutput struct{ *pulumi.OutputState }

func (EdgeServicesCacheStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesCacheStage)(nil)).Elem()
}

func (o EdgeServicesCacheStageMapOutput) ToEdgeServicesCacheStageMapOutput() EdgeServicesCacheStageMapOutput {
	return o
}

func (o EdgeServicesCacheStageMapOutput) ToEdgeServicesCacheStageMapOutputWithContext(ctx context.Context) EdgeServicesCacheStageMapOutput {
	return o
}

func (o EdgeServicesCacheStageMapOutput) MapIndex(k pulumi.StringInput) EdgeServicesCacheStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeServicesCacheStage {
		return vs[0].(map[string]*EdgeServicesCacheStage)[vs[1].(string)]
	}).(EdgeServicesCacheStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesCacheStageInput)(nil)).Elem(), &EdgeServicesCacheStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesCacheStageArrayInput)(nil)).Elem(), EdgeServicesCacheStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesCacheStageMapInput)(nil)).Elem(), EdgeServicesCacheStageMap{})
	pulumi.RegisterOutputType(EdgeServicesCacheStageOutput{})
	pulumi.RegisterOutputType(EdgeServicesCacheStageArrayOutput{})
	pulumi.RegisterOutputType(EdgeServicesCacheStageMapOutput{})
}
