// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Sets the Scaleway Edge Services head stage of your pipeline.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := scaleway.NewEdgeServicesPipeline(ctx, "main", &scaleway.EdgeServicesPipelineArgs{
//				Name:        pulumi.String("my-edge_services-pipeline"),
//				Description: pulumi.String("pipeline description"),
//			})
//			if err != nil {
//				return err
//			}
//			mainEdgeServicesDnsStage, err := scaleway.NewEdgeServicesDnsStage(ctx, "main", &scaleway.EdgeServicesDnsStageArgs{
//				PipelineId: main.ID(),
//				TlsStageId: pulumi.Any(mainScalewayEdgeServicesTlsStage.Id),
//				Fqdns: pulumi.StringArray{
//					pulumi.String("subdomain.example.com"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewEdgeServicesHeadStage(ctx, "main", &scaleway.EdgeServicesHeadStageArgs{
//				PipelineId:  main.ID(),
//				HeadStageId: mainEdgeServicesDnsStage.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Head stages can be imported using the `{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage main 11111111-1111-1111-1111-111111111111
// ```
type EdgeServicesHeadStage struct {
	pulumi.CustomResourceState

	// The ID of head stage of the pipeline.
	HeadStageId pulumi.StringOutput `pulumi:"headStageId"`
	// The ID of the pipeline.
	PipelineId pulumi.StringOutput `pulumi:"pipelineId"`
}

// NewEdgeServicesHeadStage registers a new resource with the given unique name, arguments, and options.
func NewEdgeServicesHeadStage(ctx *pulumi.Context,
	name string, args *EdgeServicesHeadStageArgs, opts ...pulumi.ResourceOption) (*EdgeServicesHeadStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PipelineId == nil {
		return nil, errors.New("invalid value for required argument 'PipelineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeServicesHeadStage
	err := ctx.RegisterResource("scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeServicesHeadStage gets an existing EdgeServicesHeadStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeServicesHeadStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeServicesHeadStageState, opts ...pulumi.ResourceOption) (*EdgeServicesHeadStage, error) {
	var resource EdgeServicesHeadStage
	err := ctx.ReadResource("scaleway:index/edgeServicesHeadStage:EdgeServicesHeadStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeServicesHeadStage resources.
type edgeServicesHeadStageState struct {
	// The ID of head stage of the pipeline.
	HeadStageId *string `pulumi:"headStageId"`
	// The ID of the pipeline.
	PipelineId *string `pulumi:"pipelineId"`
}

type EdgeServicesHeadStageState struct {
	// The ID of head stage of the pipeline.
	HeadStageId pulumi.StringPtrInput
	// The ID of the pipeline.
	PipelineId pulumi.StringPtrInput
}

func (EdgeServicesHeadStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesHeadStageState)(nil)).Elem()
}

type edgeServicesHeadStageArgs struct {
	// The ID of head stage of the pipeline.
	HeadStageId *string `pulumi:"headStageId"`
	// The ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
}

// The set of arguments for constructing a EdgeServicesHeadStage resource.
type EdgeServicesHeadStageArgs struct {
	// The ID of head stage of the pipeline.
	HeadStageId pulumi.StringPtrInput
	// The ID of the pipeline.
	PipelineId pulumi.StringInput
}

func (EdgeServicesHeadStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesHeadStageArgs)(nil)).Elem()
}

type EdgeServicesHeadStageInput interface {
	pulumi.Input

	ToEdgeServicesHeadStageOutput() EdgeServicesHeadStageOutput
	ToEdgeServicesHeadStageOutputWithContext(ctx context.Context) EdgeServicesHeadStageOutput
}

func (*EdgeServicesHeadStage) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesHeadStage)(nil)).Elem()
}

func (i *EdgeServicesHeadStage) ToEdgeServicesHeadStageOutput() EdgeServicesHeadStageOutput {
	return i.ToEdgeServicesHeadStageOutputWithContext(context.Background())
}

func (i *EdgeServicesHeadStage) ToEdgeServicesHeadStageOutputWithContext(ctx context.Context) EdgeServicesHeadStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesHeadStageOutput)
}

// EdgeServicesHeadStageArrayInput is an input type that accepts EdgeServicesHeadStageArray and EdgeServicesHeadStageArrayOutput values.
// You can construct a concrete instance of `EdgeServicesHeadStageArrayInput` via:
//
//	EdgeServicesHeadStageArray{ EdgeServicesHeadStageArgs{...} }
type EdgeServicesHeadStageArrayInput interface {
	pulumi.Input

	ToEdgeServicesHeadStageArrayOutput() EdgeServicesHeadStageArrayOutput
	ToEdgeServicesHeadStageArrayOutputWithContext(context.Context) EdgeServicesHeadStageArrayOutput
}

type EdgeServicesHeadStageArray []EdgeServicesHeadStageInput

func (EdgeServicesHeadStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesHeadStage)(nil)).Elem()
}

func (i EdgeServicesHeadStageArray) ToEdgeServicesHeadStageArrayOutput() EdgeServicesHeadStageArrayOutput {
	return i.ToEdgeServicesHeadStageArrayOutputWithContext(context.Background())
}

func (i EdgeServicesHeadStageArray) ToEdgeServicesHeadStageArrayOutputWithContext(ctx context.Context) EdgeServicesHeadStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesHeadStageArrayOutput)
}

// EdgeServicesHeadStageMapInput is an input type that accepts EdgeServicesHeadStageMap and EdgeServicesHeadStageMapOutput values.
// You can construct a concrete instance of `EdgeServicesHeadStageMapInput` via:
//
//	EdgeServicesHeadStageMap{ "key": EdgeServicesHeadStageArgs{...} }
type EdgeServicesHeadStageMapInput interface {
	pulumi.Input

	ToEdgeServicesHeadStageMapOutput() EdgeServicesHeadStageMapOutput
	ToEdgeServicesHeadStageMapOutputWithContext(context.Context) EdgeServicesHeadStageMapOutput
}

type EdgeServicesHeadStageMap map[string]EdgeServicesHeadStageInput

func (EdgeServicesHeadStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesHeadStage)(nil)).Elem()
}

func (i EdgeServicesHeadStageMap) ToEdgeServicesHeadStageMapOutput() EdgeServicesHeadStageMapOutput {
	return i.ToEdgeServicesHeadStageMapOutputWithContext(context.Background())
}

func (i EdgeServicesHeadStageMap) ToEdgeServicesHeadStageMapOutputWithContext(ctx context.Context) EdgeServicesHeadStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesHeadStageMapOutput)
}

type EdgeServicesHeadStageOutput struct{ *pulumi.OutputState }

func (EdgeServicesHeadStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesHeadStage)(nil)).Elem()
}

func (o EdgeServicesHeadStageOutput) ToEdgeServicesHeadStageOutput() EdgeServicesHeadStageOutput {
	return o
}

func (o EdgeServicesHeadStageOutput) ToEdgeServicesHeadStageOutputWithContext(ctx context.Context) EdgeServicesHeadStageOutput {
	return o
}

// The ID of head stage of the pipeline.
func (o EdgeServicesHeadStageOutput) HeadStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesHeadStage) pulumi.StringOutput { return v.HeadStageId }).(pulumi.StringOutput)
}

// The ID of the pipeline.
func (o EdgeServicesHeadStageOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesHeadStage) pulumi.StringOutput { return v.PipelineId }).(pulumi.StringOutput)
}

type EdgeServicesHeadStageArrayOutput struct{ *pulumi.OutputState }

func (EdgeServicesHeadStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesHeadStage)(nil)).Elem()
}

func (o EdgeServicesHeadStageArrayOutput) ToEdgeServicesHeadStageArrayOutput() EdgeServicesHeadStageArrayOutput {
	return o
}

func (o EdgeServicesHeadStageArrayOutput) ToEdgeServicesHeadStageArrayOutputWithContext(ctx context.Context) EdgeServicesHeadStageArrayOutput {
	return o
}

func (o EdgeServicesHeadStageArrayOutput) Index(i pulumi.IntInput) EdgeServicesHeadStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeServicesHeadStage {
		return vs[0].([]*EdgeServicesHeadStage)[vs[1].(int)]
	}).(EdgeServicesHeadStageOutput)
}

type EdgeServicesHeadStageMapOutput struct{ *pulumi.OutputState }

func (EdgeServicesHeadStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesHeadStage)(nil)).Elem()
}

func (o EdgeServicesHeadStageMapOutput) ToEdgeServicesHeadStageMapOutput() EdgeServicesHeadStageMapOutput {
	return o
}

func (o EdgeServicesHeadStageMapOutput) ToEdgeServicesHeadStageMapOutputWithContext(ctx context.Context) EdgeServicesHeadStageMapOutput {
	return o
}

func (o EdgeServicesHeadStageMapOutput) MapIndex(k pulumi.StringInput) EdgeServicesHeadStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeServicesHeadStage {
		return vs[0].(map[string]*EdgeServicesHeadStage)[vs[1].(string)]
	}).(EdgeServicesHeadStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesHeadStageInput)(nil)).Elem(), &EdgeServicesHeadStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesHeadStageArrayInput)(nil)).Elem(), EdgeServicesHeadStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesHeadStageMapInput)(nil)).Elem(), EdgeServicesHeadStageMap{})
	pulumi.RegisterOutputType(EdgeServicesHeadStageOutput{})
	pulumi.RegisterOutputType(EdgeServicesHeadStageArrayOutput{})
	pulumi.RegisterOutputType(EdgeServicesHeadStageMapOutput{})
}
