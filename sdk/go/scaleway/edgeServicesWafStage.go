// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway Edge Services WAF Stages.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewEdgeServicesWafStage(ctx, "main", &scaleway.EdgeServicesWafStageArgs{
//				PipelineId:    pulumi.Any(mainScalewayEdgeServicesPipeline.Id),
//				Mode:          pulumi.String("enable"),
//				ParanoiaLevel: pulumi.Int(3),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WAF stages can be imported using the `{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/edgeServicesWafStage:EdgeServicesWafStage basic 11111111-1111-1111-1111-111111111111
// ```
type EdgeServicesWafStage struct {
	pulumi.CustomResourceState

	// The ID of the backend stage to forward requests to after the WAF stage.
	BackendStageId pulumi.StringOutput `pulumi:"backendStageId"`
	// The date and time of the creation of the WAF stage.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
	Mode pulumi.StringOutput `pulumi:"mode"`
	// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
	ParanoiaLevel pulumi.IntOutput `pulumi:"paranoiaLevel"`
	// The ID of the pipeline.
	PipelineId pulumi.StringOutput `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the WAF stage is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The date and time of the last update of the WAF stage.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewEdgeServicesWafStage registers a new resource with the given unique name, arguments, and options.
func NewEdgeServicesWafStage(ctx *pulumi.Context,
	name string, args *EdgeServicesWafStageArgs, opts ...pulumi.ResourceOption) (*EdgeServicesWafStage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ParanoiaLevel == nil {
		return nil, errors.New("invalid value for required argument 'ParanoiaLevel'")
	}
	if args.PipelineId == nil {
		return nil, errors.New("invalid value for required argument 'PipelineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EdgeServicesWafStage
	err := ctx.RegisterResource("scaleway:index/edgeServicesWafStage:EdgeServicesWafStage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeServicesWafStage gets an existing EdgeServicesWafStage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeServicesWafStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeServicesWafStageState, opts ...pulumi.ResourceOption) (*EdgeServicesWafStage, error) {
	var resource EdgeServicesWafStage
	err := ctx.ReadResource("scaleway:index/edgeServicesWafStage:EdgeServicesWafStage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeServicesWafStage resources.
type edgeServicesWafStageState struct {
	// The ID of the backend stage to forward requests to after the WAF stage.
	BackendStageId *string `pulumi:"backendStageId"`
	// The date and time of the creation of the WAF stage.
	CreatedAt *string `pulumi:"createdAt"`
	// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
	Mode *string `pulumi:"mode"`
	// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
	ParanoiaLevel *int `pulumi:"paranoiaLevel"`
	// The ID of the pipeline.
	PipelineId *string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the WAF stage is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The date and time of the last update of the WAF stage.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type EdgeServicesWafStageState struct {
	// The ID of the backend stage to forward requests to after the WAF stage.
	BackendStageId pulumi.StringPtrInput
	// The date and time of the creation of the WAF stage.
	CreatedAt pulumi.StringPtrInput
	// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
	Mode pulumi.StringPtrInput
	// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
	ParanoiaLevel pulumi.IntPtrInput
	// The ID of the pipeline.
	PipelineId pulumi.StringPtrInput
	// `projectId`) The ID of the project the WAF stage is associated with.
	ProjectId pulumi.StringPtrInput
	// The date and time of the last update of the WAF stage.
	UpdatedAt pulumi.StringPtrInput
}

func (EdgeServicesWafStageState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesWafStageState)(nil)).Elem()
}

type edgeServicesWafStageArgs struct {
	// The ID of the backend stage to forward requests to after the WAF stage.
	BackendStageId *string `pulumi:"backendStageId"`
	// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
	Mode *string `pulumi:"mode"`
	// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
	ParanoiaLevel int `pulumi:"paranoiaLevel"`
	// The ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
	// `projectId`) The ID of the project the WAF stage is associated with.
	ProjectId *string `pulumi:"projectId"`
}

// The set of arguments for constructing a EdgeServicesWafStage resource.
type EdgeServicesWafStageArgs struct {
	// The ID of the backend stage to forward requests to after the WAF stage.
	BackendStageId pulumi.StringPtrInput
	// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
	Mode pulumi.StringPtrInput
	// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
	ParanoiaLevel pulumi.IntInput
	// The ID of the pipeline.
	PipelineId pulumi.StringInput
	// `projectId`) The ID of the project the WAF stage is associated with.
	ProjectId pulumi.StringPtrInput
}

func (EdgeServicesWafStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeServicesWafStageArgs)(nil)).Elem()
}

type EdgeServicesWafStageInput interface {
	pulumi.Input

	ToEdgeServicesWafStageOutput() EdgeServicesWafStageOutput
	ToEdgeServicesWafStageOutputWithContext(ctx context.Context) EdgeServicesWafStageOutput
}

func (*EdgeServicesWafStage) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesWafStage)(nil)).Elem()
}

func (i *EdgeServicesWafStage) ToEdgeServicesWafStageOutput() EdgeServicesWafStageOutput {
	return i.ToEdgeServicesWafStageOutputWithContext(context.Background())
}

func (i *EdgeServicesWafStage) ToEdgeServicesWafStageOutputWithContext(ctx context.Context) EdgeServicesWafStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesWafStageOutput)
}

// EdgeServicesWafStageArrayInput is an input type that accepts EdgeServicesWafStageArray and EdgeServicesWafStageArrayOutput values.
// You can construct a concrete instance of `EdgeServicesWafStageArrayInput` via:
//
//	EdgeServicesWafStageArray{ EdgeServicesWafStageArgs{...} }
type EdgeServicesWafStageArrayInput interface {
	pulumi.Input

	ToEdgeServicesWafStageArrayOutput() EdgeServicesWafStageArrayOutput
	ToEdgeServicesWafStageArrayOutputWithContext(context.Context) EdgeServicesWafStageArrayOutput
}

type EdgeServicesWafStageArray []EdgeServicesWafStageInput

func (EdgeServicesWafStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesWafStage)(nil)).Elem()
}

func (i EdgeServicesWafStageArray) ToEdgeServicesWafStageArrayOutput() EdgeServicesWafStageArrayOutput {
	return i.ToEdgeServicesWafStageArrayOutputWithContext(context.Background())
}

func (i EdgeServicesWafStageArray) ToEdgeServicesWafStageArrayOutputWithContext(ctx context.Context) EdgeServicesWafStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesWafStageArrayOutput)
}

// EdgeServicesWafStageMapInput is an input type that accepts EdgeServicesWafStageMap and EdgeServicesWafStageMapOutput values.
// You can construct a concrete instance of `EdgeServicesWafStageMapInput` via:
//
//	EdgeServicesWafStageMap{ "key": EdgeServicesWafStageArgs{...} }
type EdgeServicesWafStageMapInput interface {
	pulumi.Input

	ToEdgeServicesWafStageMapOutput() EdgeServicesWafStageMapOutput
	ToEdgeServicesWafStageMapOutputWithContext(context.Context) EdgeServicesWafStageMapOutput
}

type EdgeServicesWafStageMap map[string]EdgeServicesWafStageInput

func (EdgeServicesWafStageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesWafStage)(nil)).Elem()
}

func (i EdgeServicesWafStageMap) ToEdgeServicesWafStageMapOutput() EdgeServicesWafStageMapOutput {
	return i.ToEdgeServicesWafStageMapOutputWithContext(context.Background())
}

func (i EdgeServicesWafStageMap) ToEdgeServicesWafStageMapOutputWithContext(ctx context.Context) EdgeServicesWafStageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeServicesWafStageMapOutput)
}

type EdgeServicesWafStageOutput struct{ *pulumi.OutputState }

func (EdgeServicesWafStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeServicesWafStage)(nil)).Elem()
}

func (o EdgeServicesWafStageOutput) ToEdgeServicesWafStageOutput() EdgeServicesWafStageOutput {
	return o
}

func (o EdgeServicesWafStageOutput) ToEdgeServicesWafStageOutputWithContext(ctx context.Context) EdgeServicesWafStageOutput {
	return o
}

// The ID of the backend stage to forward requests to after the WAF stage.
func (o EdgeServicesWafStageOutput) BackendStageId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.BackendStageId }).(pulumi.StringOutput)
}

// The date and time of the creation of the WAF stage.
func (o EdgeServicesWafStageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The mode defining WAF behavior (`disable`/`logOnly`/`enable`).
func (o EdgeServicesWafStageOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// The sensitivity level (`1`,`2`,`3`,`4`) to use when classifying requests as malicious. With a high level, requests are more likely to be classed as malicious, and false positives are expected. With a lower level, requests are more likely to be classed as benign.
func (o EdgeServicesWafStageOutput) ParanoiaLevel() pulumi.IntOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.IntOutput { return v.ParanoiaLevel }).(pulumi.IntOutput)
}

// The ID of the pipeline.
func (o EdgeServicesWafStageOutput) PipelineId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.PipelineId }).(pulumi.StringOutput)
}

// `projectId`) The ID of the project the WAF stage is associated with.
func (o EdgeServicesWafStageOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The date and time of the last update of the WAF stage.
func (o EdgeServicesWafStageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeServicesWafStage) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EdgeServicesWafStageArrayOutput struct{ *pulumi.OutputState }

func (EdgeServicesWafStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeServicesWafStage)(nil)).Elem()
}

func (o EdgeServicesWafStageArrayOutput) ToEdgeServicesWafStageArrayOutput() EdgeServicesWafStageArrayOutput {
	return o
}

func (o EdgeServicesWafStageArrayOutput) ToEdgeServicesWafStageArrayOutputWithContext(ctx context.Context) EdgeServicesWafStageArrayOutput {
	return o
}

func (o EdgeServicesWafStageArrayOutput) Index(i pulumi.IntInput) EdgeServicesWafStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeServicesWafStage {
		return vs[0].([]*EdgeServicesWafStage)[vs[1].(int)]
	}).(EdgeServicesWafStageOutput)
}

type EdgeServicesWafStageMapOutput struct{ *pulumi.OutputState }

func (EdgeServicesWafStageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeServicesWafStage)(nil)).Elem()
}

func (o EdgeServicesWafStageMapOutput) ToEdgeServicesWafStageMapOutput() EdgeServicesWafStageMapOutput {
	return o
}

func (o EdgeServicesWafStageMapOutput) ToEdgeServicesWafStageMapOutputWithContext(ctx context.Context) EdgeServicesWafStageMapOutput {
	return o
}

func (o EdgeServicesWafStageMapOutput) MapIndex(k pulumi.StringInput) EdgeServicesWafStageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeServicesWafStage {
		return vs[0].(map[string]*EdgeServicesWafStage)[vs[1].(string)]
	}).(EdgeServicesWafStageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesWafStageInput)(nil)).Elem(), &EdgeServicesWafStage{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesWafStageArrayInput)(nil)).Elem(), EdgeServicesWafStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeServicesWafStageMapInput)(nil)).Elem(), EdgeServicesWafStageMap{})
	pulumi.RegisterOutputType(EdgeServicesWafStageOutput{})
	pulumi.RegisterOutputType(EdgeServicesWafStageArrayOutput{})
	pulumi.RegisterOutputType(EdgeServicesWafStageMapOutput{})
}
