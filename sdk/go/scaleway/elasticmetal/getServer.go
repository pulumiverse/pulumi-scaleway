// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticmetal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a baremetal server.
// For more information, see the [API documentation](https://developers.scaleway.com/en/products/baremetal/api).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/elasticmetal"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get info by server name
//			_, err := elasticmetal.LookupServer(ctx, &elasticmetal.LookupServerArgs{
//				Name: pulumi.StringRef("foobar"),
//				Zone: pulumi.StringRef("fr-par-2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Get info by server id
//			_, err = elasticmetal.LookupServer(ctx, &elasticmetal.LookupServerArgs{
//				ServerId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerResult
	err := ctx.Invoke("scaleway:elasticmetal/getServer:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServer.
type LookupServerArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the baremetal server is associated with.
	ProjectId *string `pulumi:"projectId"`
	ServerId  *string `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getServer.
type LookupServerResult struct {
	Description string `pulumi:"description"`
	Domain      string `pulumi:"domain"`
	Hostname    string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string                    `pulumi:"id"`
	InstallConfigAfterward   bool                      `pulumi:"installConfigAfterward"`
	Ips                      []GetServerIp             `pulumi:"ips"`
	Ipv4s                    []GetServerIpv4           `pulumi:"ipv4s"`
	Ipv6s                    []GetServerIpv6           `pulumi:"ipv6s"`
	Name                     *string                   `pulumi:"name"`
	Offer                    string                    `pulumi:"offer"`
	OfferId                  string                    `pulumi:"offerId"`
	OfferName                string                    `pulumi:"offerName"`
	Options                  []GetServerOption         `pulumi:"options"`
	OrganizationId           string                    `pulumi:"organizationId"`
	Os                       string                    `pulumi:"os"`
	OsName                   string                    `pulumi:"osName"`
	Partitioning             string                    `pulumi:"partitioning"`
	Password                 string                    `pulumi:"password"`
	PrivateIps               []GetServerPrivateIp      `pulumi:"privateIps"`
	PrivateNetworks          []GetServerPrivateNetwork `pulumi:"privateNetworks"`
	ProjectId                *string                   `pulumi:"projectId"`
	ReinstallOnConfigChanges bool                      `pulumi:"reinstallOnConfigChanges"`
	ServerId                 *string                   `pulumi:"serverId"`
	ServicePassword          string                    `pulumi:"servicePassword"`
	ServiceUser              string                    `pulumi:"serviceUser"`
	SshKeyIds                []string                  `pulumi:"sshKeyIds"`
	Tags                     []string                  `pulumi:"tags"`
	User                     string                    `pulumi:"user"`
	Zone                     *string                   `pulumi:"zone"`
}

func LookupServerOutput(ctx *pulumi.Context, args LookupServerOutputArgs, opts ...pulumi.InvokeOption) LookupServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerResultOutput, error) {
			args := v.(LookupServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:elasticmetal/getServer:getServer", args, LookupServerResultOutput{}, options).(LookupServerResultOutput), nil
		}).(LookupServerResultOutput)
}

// A collection of arguments for invoking getServer.
type LookupServerOutputArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the baremetal server is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	ServerId  pulumi.StringPtrInput `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerArgs)(nil)).Elem()
}

// A collection of values returned by getServer.
type LookupServerResultOutput struct{ *pulumi.OutputState }

func (LookupServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerResult)(nil)).Elem()
}

func (o LookupServerResultOutput) ToLookupServerResultOutput() LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) ToLookupServerResultOutputWithContext(ctx context.Context) LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) InstallConfigAfterward() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.InstallConfigAfterward }).(pulumi.BoolOutput)
}

func (o LookupServerResultOutput) Ips() GetServerIpArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerIp { return v.Ips }).(GetServerIpArrayOutput)
}

func (o LookupServerResultOutput) Ipv4s() GetServerIpv4ArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerIpv4 { return v.Ipv4s }).(GetServerIpv4ArrayOutput)
}

func (o LookupServerResultOutput) Ipv6s() GetServerIpv6ArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerIpv6 { return v.Ipv6s }).(GetServerIpv6ArrayOutput)
}

func (o LookupServerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Offer }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) OfferId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.OfferId }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) OfferName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.OfferName }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Options() GetServerOptionArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerOption { return v.Options }).(GetServerOptionArrayOutput)
}

func (o LookupServerResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Os }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.OsName }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Partitioning() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Partitioning }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) PrivateIps() GetServerPrivateIpArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerPrivateIp { return v.PrivateIps }).(GetServerPrivateIpArrayOutput)
}

func (o LookupServerResultOutput) PrivateNetworks() GetServerPrivateNetworkArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerPrivateNetwork { return v.PrivateNetworks }).(GetServerPrivateNetworkArrayOutput)
}

func (o LookupServerResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) ReinstallOnConfigChanges() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.ReinstallOnConfigChanges }).(pulumi.BoolOutput)
}

func (o LookupServerResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) ServiceUser() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.ServiceUser }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) SshKeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.SshKeyIds }).(pulumi.StringArrayOutput)
}

func (o LookupServerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupServerResultOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.User }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerResultOutput{})
}
