// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// The `functions.Namespace` data source is used to retrieve information about a Serverless Functions namespace.
//
// Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
func LookupNamespace(ctx *pulumi.Context, args *LookupNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupNamespaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNamespaceResult
	err := ctx.Invoke("scaleway:functions/getNamespace:getNamespace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNamespace.
type LookupNamespaceArgs struct {
	// The name of the namespace. Only one of `name` and `namespaceId` should be specified.
	Name *string `pulumi:"name"`
	// The unique identifier of the namespace. Only one of `name` and `namespaceId` should be specified.
	NamespaceId *string `pulumi:"namespaceId"`
	// `projectId`) The unique identifier of the project with which the namespace is associated.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region in which the namespace exists.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getNamespace.
type LookupNamespaceResult struct {
	// The description of the namespace.
	Description string `pulumi:"description"`
	// The environment variables of the namespace.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        *string `pulumi:"name"`
	NamespaceId *string `pulumi:"namespaceId"`
	// The unique identifier of the organization with which the namespace is associated.
	OrganizationId string  `pulumi:"organizationId"`
	ProjectId      *string `pulumi:"projectId"`
	Region         *string `pulumi:"region"`
	// The registry endpoint of the namespace.
	RegistryEndpoint string `pulumi:"registryEndpoint"`
	// The unique identifier of the registry namespace of the Serverless Functions namespace.
	RegistryNamespaceId        string            `pulumi:"registryNamespaceId"`
	SecretEnvironmentVariables map[string]string `pulumi:"secretEnvironmentVariables"`
	Tags                       []string          `pulumi:"tags"`
}

func LookupNamespaceOutput(ctx *pulumi.Context, args LookupNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupNamespaceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNamespaceResultOutput, error) {
			args := v.(LookupNamespaceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:functions/getNamespace:getNamespace", args, LookupNamespaceResultOutput{}, options).(LookupNamespaceResultOutput), nil
		}).(LookupNamespaceResultOutput)
}

// A collection of arguments for invoking getNamespace.
type LookupNamespaceOutputArgs struct {
	// The name of the namespace. Only one of `name` and `namespaceId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The unique identifier of the namespace. Only one of `name` and `namespaceId` should be specified.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// `projectId`) The unique identifier of the project with which the namespace is associated.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region in which the namespace exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceArgs)(nil)).Elem()
}

// A collection of values returned by getNamespace.
type LookupNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNamespaceResult)(nil)).Elem()
}

func (o LookupNamespaceResultOutput) ToLookupNamespaceResultOutput() LookupNamespaceResultOutput {
	return o
}

func (o LookupNamespaceResultOutput) ToLookupNamespaceResultOutputWithContext(ctx context.Context) LookupNamespaceResultOutput {
	return o
}

// The description of the namespace.
func (o LookupNamespaceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The environment variables of the namespace.
func (o LookupNamespaceResultOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceResult) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNamespaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNamespaceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupNamespaceResultOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceResult) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

// The unique identifier of the organization with which the namespace is associated.
func (o LookupNamespaceResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupNamespaceResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupNamespaceResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNamespaceResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The registry endpoint of the namespace.
func (o LookupNamespaceResultOutput) RegistryEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.RegistryEndpoint }).(pulumi.StringOutput)
}

// The unique identifier of the registry namespace of the Serverless Functions namespace.
func (o LookupNamespaceResultOutput) RegistryNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNamespaceResult) string { return v.RegistryNamespaceId }).(pulumi.StringOutput)
}

func (o LookupNamespaceResultOutput) SecretEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNamespaceResult) map[string]string { return v.SecretEnvironmentVariables }).(pulumi.StringMapOutput)
}

func (o LookupNamespaceResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNamespaceResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNamespaceResultOutput{})
}
