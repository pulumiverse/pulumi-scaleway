// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Block Volume.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.LookupBlockVolume(ctx, &scaleway.LookupBlockVolumeArgs{
//				VolumeId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBlockVolume(ctx *pulumi.Context, args *LookupBlockVolumeArgs, opts ...pulumi.InvokeOption) (*LookupBlockVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBlockVolumeResult
	err := ctx.Invoke("scaleway:index/getBlockVolume:getBlockVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlockVolume.
type LookupBlockVolumeArgs struct {
	// The name of the volume. Only one of `name` and `volumeId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the volume is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The ID of the volume. Only one of `name` and `volumeId` should be specified.
	VolumeId *string `pulumi:"volumeId"`
	// `zone`) The zone in which the volume exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getBlockVolume.
type LookupBlockVolumeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Iops       int      `pulumi:"iops"`
	Name       *string  `pulumi:"name"`
	ProjectId  *string  `pulumi:"projectId"`
	SizeInGb   int      `pulumi:"sizeInGb"`
	SnapshotId string   `pulumi:"snapshotId"`
	Tags       []string `pulumi:"tags"`
	VolumeId   *string  `pulumi:"volumeId"`
	Zone       *string  `pulumi:"zone"`
}

func LookupBlockVolumeOutput(ctx *pulumi.Context, args LookupBlockVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupBlockVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBlockVolumeResult, error) {
			args := v.(LookupBlockVolumeArgs)
			r, err := LookupBlockVolume(ctx, &args, opts...)
			var s LookupBlockVolumeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBlockVolumeResultOutput)
}

// A collection of arguments for invoking getBlockVolume.
type LookupBlockVolumeOutputArgs struct {
	// The name of the volume. Only one of `name` and `volumeId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the volume is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The ID of the volume. Only one of `name` and `volumeId` should be specified.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// `zone`) The zone in which the volume exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupBlockVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getBlockVolume.
type LookupBlockVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupBlockVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlockVolumeResult)(nil)).Elem()
}

func (o LookupBlockVolumeResultOutput) ToLookupBlockVolumeResultOutput() LookupBlockVolumeResultOutput {
	return o
}

func (o LookupBlockVolumeResultOutput) ToLookupBlockVolumeResultOutputWithContext(ctx context.Context) LookupBlockVolumeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBlockVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBlockVolumeResultOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LookupBlockVolumeResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupBlockVolumeResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupBlockVolumeResultOutput) SizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) int { return v.SizeInGb }).(pulumi.IntOutput)
}

func (o LookupBlockVolumeResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LookupBlockVolumeResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupBlockVolumeResultOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

func (o LookupBlockVolumeResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBlockVolumeResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlockVolumeResultOutput{})
}
