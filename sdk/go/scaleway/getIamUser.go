// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Use this data source to get information on an existing IAM user based on its ID or email address.
// For more information,
// see [the documentation](https://developers.scaleway.com/en/products/iam/api/v1alpha1/#users-06bdcf).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.LookupIamUser(ctx, &scaleway.LookupIamUserArgs{
//				UserId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.LookupIamUser(ctx, &scaleway.LookupIamUserArgs{
//				Email: pulumi.StringRef("foo@bar.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIamUser(ctx *pulumi.Context, args *LookupIamUserArgs, opts ...pulumi.InvokeOption) (*LookupIamUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIamUserResult
	err := ctx.Invoke("scaleway:index/getIamUser:getIamUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamUser.
type LookupIamUserArgs struct {
	// The email address of the IAM user. Only one of the `email` and `userId` should be specified.
	Email *string `pulumi:"email"`
	// `organizationId`) The ID of the
	// organization the user is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// The ID of the IAM user. Only one of the `email` and `userId` should be specified.
	UserId *string `pulumi:"userId"`
}

// A collection of values returned by getIamUser.
type LookupIamUserResult struct {
	Email *string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	OrganizationId *string `pulumi:"organizationId"`
	UserId         *string `pulumi:"userId"`
}

func LookupIamUserOutput(ctx *pulumi.Context, args LookupIamUserOutputArgs, opts ...pulumi.InvokeOption) LookupIamUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIamUserResult, error) {
			args := v.(LookupIamUserArgs)
			r, err := LookupIamUser(ctx, &args, opts...)
			var s LookupIamUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIamUserResultOutput)
}

// A collection of arguments for invoking getIamUser.
type LookupIamUserOutputArgs struct {
	// The email address of the IAM user. Only one of the `email` and `userId` should be specified.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// `organizationId`) The ID of the
	// organization the user is associated with.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// The ID of the IAM user. Only one of the `email` and `userId` should be specified.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (LookupIamUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamUserArgs)(nil)).Elem()
}

// A collection of values returned by getIamUser.
type LookupIamUserResultOutput struct{ *pulumi.OutputState }

func (LookupIamUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamUserResult)(nil)).Elem()
}

func (o LookupIamUserResultOutput) ToLookupIamUserResultOutput() LookupIamUserResultOutput {
	return o
}

func (o LookupIamUserResultOutput) ToLookupIamUserResultOutputWithContext(ctx context.Context) LookupIamUserResultOutput {
	return o
}

func (o LookupIamUserResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamUserResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIamUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIamUserResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamUserResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

func (o LookupIamUserResultOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIamUserResult) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIamUserResultOutput{})
}
