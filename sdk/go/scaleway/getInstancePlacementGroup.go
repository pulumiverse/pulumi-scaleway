// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Security Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.LookupInstancePlacementGroup(ctx, &scaleway.LookupInstancePlacementGroupArgs{
//				PlacementGroupId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstancePlacementGroup(ctx *pulumi.Context, args *LookupInstancePlacementGroupArgs, opts ...pulumi.InvokeOption) (*LookupInstancePlacementGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstancePlacementGroupResult
	err := ctx.Invoke("scaleway:index/getInstancePlacementGroup:getInstancePlacementGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstancePlacementGroup.
type LookupInstancePlacementGroupArgs struct {
	// The placement group name. Only one of `name` and `placementGroupId` should be specified.
	Name *string `pulumi:"name"`
	// The placement group id. Only one of `name` and `placementGroupId` should be specified.
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// `projectId`) The ID of the project the placement group is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `zone`) The zone in which the placement group exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getInstancePlacementGroup.
type LookupInstancePlacementGroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// The organization ID the placement group is associated with.
	OrganizationId   string  `pulumi:"organizationId"`
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// The [policy mode](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
	PolicyMode string `pulumi:"policyMode"`
	// Is true when the policy is respected.
	PolicyRespected bool `pulumi:"policyRespected"`
	// The [policy type](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
	PolicyType string `pulumi:"policyType"`
	ProjectId  string `pulumi:"projectId"`
	// A list of tags to apply to the placement group.
	Tags []string `pulumi:"tags"`
	Zone *string  `pulumi:"zone"`
}

func LookupInstancePlacementGroupOutput(ctx *pulumi.Context, args LookupInstancePlacementGroupOutputArgs, opts ...pulumi.InvokeOption) LookupInstancePlacementGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstancePlacementGroupResult, error) {
			args := v.(LookupInstancePlacementGroupArgs)
			r, err := LookupInstancePlacementGroup(ctx, &args, opts...)
			var s LookupInstancePlacementGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstancePlacementGroupResultOutput)
}

// A collection of arguments for invoking getInstancePlacementGroup.
type LookupInstancePlacementGroupOutputArgs struct {
	// The placement group name. Only one of `name` and `placementGroupId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The placement group id. Only one of `name` and `placementGroupId` should be specified.
	PlacementGroupId pulumi.StringPtrInput `pulumi:"placementGroupId"`
	// `projectId`) The ID of the project the placement group is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `zone`) The zone in which the placement group exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupInstancePlacementGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstancePlacementGroupArgs)(nil)).Elem()
}

// A collection of values returned by getInstancePlacementGroup.
type LookupInstancePlacementGroupResultOutput struct{ *pulumi.OutputState }

func (LookupInstancePlacementGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstancePlacementGroupResult)(nil)).Elem()
}

func (o LookupInstancePlacementGroupResultOutput) ToLookupInstancePlacementGroupResultOutput() LookupInstancePlacementGroupResultOutput {
	return o
}

func (o LookupInstancePlacementGroupResultOutput) ToLookupInstancePlacementGroupResultOutputWithContext(ctx context.Context) LookupInstancePlacementGroupResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstancePlacementGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstancePlacementGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID the placement group is associated with.
func (o LookupInstancePlacementGroupResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupInstancePlacementGroupResultOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) *string { return v.PlacementGroupId }).(pulumi.StringPtrOutput)
}

// The [policy mode](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
func (o LookupInstancePlacementGroupResultOutput) PolicyMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) string { return v.PolicyMode }).(pulumi.StringOutput)
}

// Is true when the policy is respected.
func (o LookupInstancePlacementGroupResultOutput) PolicyRespected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) bool { return v.PolicyRespected }).(pulumi.BoolOutput)
}

// The [policy type](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
func (o LookupInstancePlacementGroupResultOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o LookupInstancePlacementGroupResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// A list of tags to apply to the placement group.
func (o LookupInstancePlacementGroupResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupInstancePlacementGroupResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstancePlacementGroupResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstancePlacementGroupResultOutput{})
}
