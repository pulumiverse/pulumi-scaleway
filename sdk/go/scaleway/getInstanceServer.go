// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an instance server.
//
// Deprecated: scaleway.index/getinstanceserver.getInstanceServer has been deprecated in favor of scaleway.instance/getserver.getServer
func LookupInstanceServer(ctx *pulumi.Context, args *LookupInstanceServerArgs, opts ...pulumi.InvokeOption) (*LookupInstanceServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceServerResult
	err := ctx.Invoke("scaleway:index/getInstanceServer:getInstanceServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceServer.
type LookupInstanceServerArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the instance server is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The server id. Only one of `name` and `serverId` should be specified.
	ServerId *string `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getInstanceServer.
type LookupInstanceServerResult struct {
	// The [additional volumes](https://developers.scaleway.com/en/products/instance/api/#volumes-7e8a39)
	// attached to the server.
	AdditionalVolumeIds             []string `pulumi:"additionalVolumeIds"`
	AdminPasswordEncryptionSshKeyId string   `pulumi:"adminPasswordEncryptionSshKeyId"`
	BootType                        string   `pulumi:"bootType"`
	BootscriptId                    string   `pulumi:"bootscriptId"`
	// The cloud init script associated with this server.
	CloudInit string `pulumi:"cloudInit"`
	// True if dynamic IP in enable on the server.
	EnableDynamicIp bool                          `pulumi:"enableDynamicIp"`
	Filesystems     []GetInstanceServerFilesystem `pulumi:"filesystems"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The UUID and the label of the base image used by the server.
	Image string   `pulumi:"image"`
	IpId  string   `pulumi:"ipId"`
	IpIds []string `pulumi:"ipIds"`
	Name  *string  `pulumi:"name"`
	// The ID of the organization the server is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
	PlacementGroupId string `pulumi:"placementGroupId"`
	// True when the placement group policy is respected.
	PlacementGroupPolicyRespected bool `pulumi:"placementGroupPolicyRespected"`
	// The list of private IPs of the server.
	PrivateIps      []GetInstanceServerPrivateIp      `pulumi:"privateIps"`
	PrivateNetworks []GetInstanceServerPrivateNetwork `pulumi:"privateNetworks"`
	ProjectId       *string                           `pulumi:"projectId"`
	Protected       bool                              `pulumi:"protected"`
	// The list of public IPs of the server
	PublicIps           []GetInstanceServerPublicIp   `pulumi:"publicIps"`
	ReplaceOnTypeChange bool                          `pulumi:"replaceOnTypeChange"`
	RootVolumes         []GetInstanceServerRootVolume `pulumi:"rootVolumes"`
	// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
	SecurityGroupId string  `pulumi:"securityGroupId"`
	ServerId        *string `pulumi:"serverId"`
	// The state of the server. Possible values are: `started`, `stopped` or `standby`.
	State string `pulumi:"state"`
	// The tags associated with the server.
	Tags []string `pulumi:"tags"`
	// The commercial type of the server.
	// You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
	Type string `pulumi:"type"`
	// The user data associated with the server.
	UserData map[string]string `pulumi:"userData"`
	Zone     *string           `pulumi:"zone"`
}

func LookupInstanceServerOutput(ctx *pulumi.Context, args LookupInstanceServerOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceServerResultOutput, error) {
			args := v.(LookupInstanceServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getInstanceServer:getInstanceServer", args, LookupInstanceServerResultOutput{}, options).(LookupInstanceServerResultOutput), nil
		}).(LookupInstanceServerResultOutput)
}

// A collection of arguments for invoking getInstanceServer.
type LookupInstanceServerOutputArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the instance server is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The server id. Only one of `name` and `serverId` should be specified.
	ServerId pulumi.StringPtrInput `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupInstanceServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceServerArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceServer.
type LookupInstanceServerResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceServerResult)(nil)).Elem()
}

func (o LookupInstanceServerResultOutput) ToLookupInstanceServerResultOutput() LookupInstanceServerResultOutput {
	return o
}

func (o LookupInstanceServerResultOutput) ToLookupInstanceServerResultOutputWithContext(ctx context.Context) LookupInstanceServerResultOutput {
	return o
}

// The [additional volumes](https://developers.scaleway.com/en/products/instance/api/#volumes-7e8a39)
// attached to the server.
func (o LookupInstanceServerResultOutput) AdditionalVolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []string { return v.AdditionalVolumeIds }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceServerResultOutput) AdminPasswordEncryptionSshKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.AdminPasswordEncryptionSshKeyId }).(pulumi.StringOutput)
}

func (o LookupInstanceServerResultOutput) BootType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.BootType }).(pulumi.StringOutput)
}

func (o LookupInstanceServerResultOutput) BootscriptId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.BootscriptId }).(pulumi.StringOutput)
}

// The cloud init script associated with this server.
func (o LookupInstanceServerResultOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.CloudInit }).(pulumi.StringOutput)
}

// True if dynamic IP in enable on the server.
func (o LookupInstanceServerResultOutput) EnableDynamicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) bool { return v.EnableDynamicIp }).(pulumi.BoolOutput)
}

func (o LookupInstanceServerResultOutput) Filesystems() GetInstanceServerFilesystemArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []GetInstanceServerFilesystem { return v.Filesystems }).(GetInstanceServerFilesystemArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The UUID and the label of the base image used by the server.
func (o LookupInstanceServerResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.Image }).(pulumi.StringOutput)
}

func (o LookupInstanceServerResultOutput) IpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.IpId }).(pulumi.StringOutput)
}

func (o LookupInstanceServerResultOutput) IpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []string { return v.IpIds }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceServerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the organization the server is associated with.
func (o LookupInstanceServerResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
func (o LookupInstanceServerResultOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

// True when the placement group policy is respected.
func (o LookupInstanceServerResultOutput) PlacementGroupPolicyRespected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) bool { return v.PlacementGroupPolicyRespected }).(pulumi.BoolOutput)
}

// The list of private IPs of the server.
func (o LookupInstanceServerResultOutput) PrivateIps() GetInstanceServerPrivateIpArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []GetInstanceServerPrivateIp { return v.PrivateIps }).(GetInstanceServerPrivateIpArrayOutput)
}

func (o LookupInstanceServerResultOutput) PrivateNetworks() GetInstanceServerPrivateNetworkArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []GetInstanceServerPrivateNetwork { return v.PrivateNetworks }).(GetInstanceServerPrivateNetworkArrayOutput)
}

func (o LookupInstanceServerResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceServerResultOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) bool { return v.Protected }).(pulumi.BoolOutput)
}

// The list of public IPs of the server
func (o LookupInstanceServerResultOutput) PublicIps() GetInstanceServerPublicIpArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []GetInstanceServerPublicIp { return v.PublicIps }).(GetInstanceServerPublicIpArrayOutput)
}

func (o LookupInstanceServerResultOutput) ReplaceOnTypeChange() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) bool { return v.ReplaceOnTypeChange }).(pulumi.BoolOutput)
}

func (o LookupInstanceServerResultOutput) RootVolumes() GetInstanceServerRootVolumeArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []GetInstanceServerRootVolume { return v.RootVolumes }).(GetInstanceServerRootVolumeArrayOutput)
}

// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
func (o LookupInstanceServerResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o LookupInstanceServerResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

// The state of the server. Possible values are: `started`, `stopped` or `standby`.
func (o LookupInstanceServerResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.State }).(pulumi.StringOutput)
}

// The tags associated with the server.
func (o LookupInstanceServerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The commercial type of the server.
// You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
func (o LookupInstanceServerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) string { return v.Type }).(pulumi.StringOutput)
}

// The user data associated with the server.
func (o LookupInstanceServerResultOutput) UserData() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) map[string]string { return v.UserData }).(pulumi.StringMapOutput)
}

func (o LookupInstanceServerResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceServerResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceServerResultOutput{})
}
