// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple Load Balancer IP addresses.
//
// For more information, see the [main documentation](https://www.scaleway.com/en/docs/network/load-balancer/how-to/create-manage-flex-ips/) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-ip-addresses-list-ip-addresses).
func GetLbIps(ctx *pulumi.Context, args *GetLbIpsArgs, opts ...pulumi.InvokeOption) (*GetLbIpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLbIpsResult
	err := ctx.Invoke("scaleway:index/getLbIps:getLbIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLbIps.
type GetLbIpsArgs struct {
	// The IP CIDR range to filter for. IPs within a matching CIDR block are listed.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// The IP type used as a filter.
	IpType *string `pulumi:"ipType"`
	// The ID of the Project the Load Balancer is associated with.
	ProjectId *string `pulumi:"projectId"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which the IPs exist.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getLbIps.
type GetLbIpsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	IpCidrRange *string `pulumi:"ipCidrRange"`
	IpType      *string `pulumi:"ipType"`
	// List of retrieved IPs
	Ips []GetLbIpsIp `pulumi:"ips"`
	// The ID of the Organization the Load Balancer is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the Project the Load Balancer is associated with.
	ProjectId string   `pulumi:"projectId"`
	Tags      []string `pulumi:"tags"`
	// The zone of the Load Balancer.
	Zone string `pulumi:"zone"`
}

func GetLbIpsOutput(ctx *pulumi.Context, args GetLbIpsOutputArgs, opts ...pulumi.InvokeOption) GetLbIpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLbIpsResultOutput, error) {
			args := v.(GetLbIpsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetLbIpsResult
			secret, err := ctx.InvokePackageRaw("scaleway:index/getLbIps:getLbIps", args, &rv, "", opts...)
			if err != nil {
				return GetLbIpsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetLbIpsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetLbIpsResultOutput), nil
			}
			return output, nil
		}).(GetLbIpsResultOutput)
}

// A collection of arguments for invoking getLbIps.
type GetLbIpsOutputArgs struct {
	// The IP CIDR range to filter for. IPs within a matching CIDR block are listed.
	IpCidrRange pulumi.StringPtrInput `pulumi:"ipCidrRange"`
	// The IP type used as a filter.
	IpType pulumi.StringPtrInput `pulumi:"ipType"`
	// The ID of the Project the Load Balancer is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// `zone`) The zone in which the IPs exist.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetLbIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbIpsArgs)(nil)).Elem()
}

// A collection of values returned by getLbIps.
type GetLbIpsResultOutput struct{ *pulumi.OutputState }

func (GetLbIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbIpsResult)(nil)).Elem()
}

func (o GetLbIpsResultOutput) ToGetLbIpsResultOutput() GetLbIpsResultOutput {
	return o
}

func (o GetLbIpsResultOutput) ToGetLbIpsResultOutputWithContext(ctx context.Context) GetLbIpsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLbIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLbIpsResultOutput) IpCidrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLbIpsResult) *string { return v.IpCidrRange }).(pulumi.StringPtrOutput)
}

func (o GetLbIpsResultOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLbIpsResult) *string { return v.IpType }).(pulumi.StringPtrOutput)
}

// List of retrieved IPs
func (o GetLbIpsResultOutput) Ips() GetLbIpsIpArrayOutput {
	return o.ApplyT(func(v GetLbIpsResult) []GetLbIpsIp { return v.Ips }).(GetLbIpsIpArrayOutput)
}

// The ID of the Organization the Load Balancer is associated with.
func (o GetLbIpsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the Project the Load Balancer is associated with.
func (o GetLbIpsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetLbIpsResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbIpsResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The zone of the Load Balancer.
func (o GetLbIpsResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLbIpsResultOutput{})
}
