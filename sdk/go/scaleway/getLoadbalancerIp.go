// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Load Balancer IP address.
//
// For more information, see the [main documentation](https://www.scaleway.com/en/docs/network/load-balancer/how-to/create-manage-flex-ips/) or [API documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-ip-addresses-list-ip-addresses).
func LookupLoadbalancerIp(ctx *pulumi.Context, args *LookupLoadbalancerIpArgs, opts ...pulumi.InvokeOption) (*LookupLoadbalancerIpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadbalancerIpResult
	err := ctx.Invoke("scaleway:index/getLoadbalancerIp:getLoadbalancerIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadbalancerIp.
type LookupLoadbalancerIpArgs struct {
	// The IP address.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP ID.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpId *string `pulumi:"ipId"`
	// The ID of the Project the Load Balancer IP is associated with.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getLoadbalancerIp.
type LookupLoadbalancerIpResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	IpId      *string `pulumi:"ipId"`
	IsIpv6    bool    `pulumi:"isIpv6"`
	// The ID of the associated Load Balancer, if any
	LbId string `pulumi:"lbId"`
	// (Defaults to provider `organizationId`) The ID of the Organization the Load Balancer IP is associated with.
	OrganizationId string `pulumi:"organizationId"`
	ProjectId      string `pulumi:"projectId"`
	Region         string `pulumi:"region"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	// The tags associated with this IP.
	Tags []string `pulumi:"tags"`
	Zone string   `pulumi:"zone"`
}

func LookupLoadbalancerIpOutput(ctx *pulumi.Context, args LookupLoadbalancerIpOutputArgs, opts ...pulumi.InvokeOption) LookupLoadbalancerIpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadbalancerIpResultOutput, error) {
			args := v.(LookupLoadbalancerIpArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupLoadbalancerIpResult
			secret, err := ctx.InvokePackageRaw("scaleway:index/getLoadbalancerIp:getLoadbalancerIp", args, &rv, "", opts...)
			if err != nil {
				return LookupLoadbalancerIpResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupLoadbalancerIpResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupLoadbalancerIpResultOutput), nil
			}
			return output, nil
		}).(LookupLoadbalancerIpResultOutput)
}

// A collection of arguments for invoking getLoadbalancerIp.
type LookupLoadbalancerIpOutputArgs struct {
	// The IP address.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP ID.
	// Only one of `ipAddress` and `ipId` should be specified.
	IpId pulumi.StringPtrInput `pulumi:"ipId"`
	// The ID of the Project the Load Balancer IP is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupLoadbalancerIpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerIpArgs)(nil)).Elem()
}

// A collection of values returned by getLoadbalancerIp.
type LookupLoadbalancerIpResultOutput struct{ *pulumi.OutputState }

func (LookupLoadbalancerIpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerIpResult)(nil)).Elem()
}

func (o LookupLoadbalancerIpResultOutput) ToLookupLoadbalancerIpResultOutput() LookupLoadbalancerIpResultOutput {
	return o
}

func (o LookupLoadbalancerIpResultOutput) ToLookupLoadbalancerIpResultOutputWithContext(ctx context.Context) LookupLoadbalancerIpResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadbalancerIpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIpResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o LookupLoadbalancerIpResultOutput) IpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) *string { return v.IpId }).(pulumi.StringPtrOutput)
}

func (o LookupLoadbalancerIpResultOutput) IsIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) bool { return v.IsIpv6 }).(pulumi.BoolOutput)
}

// The ID of the associated Load Balancer, if any
func (o LookupLoadbalancerIpResultOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.LbId }).(pulumi.StringOutput)
}

// (Defaults to provider `organizationId`) The ID of the Organization the Load Balancer IP is associated with.
func (o LookupLoadbalancerIpResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIpResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerIpResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.Region }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o LookupLoadbalancerIpResultOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.Reverse }).(pulumi.StringOutput)
}

// The tags associated with this IP.
func (o LookupLoadbalancerIpResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupLoadbalancerIpResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerIpResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadbalancerIpResultOutput{})
}
