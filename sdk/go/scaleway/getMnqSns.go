// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about SNS for a Project
//
// ## Examples
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// For default project
//			_, err := scaleway.LookupMnqSns(ctx, &scaleway.LookupMnqSnsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			// For specific project
//			_, err = scaleway.LookupMnqSns(ctx, &scaleway.LookupMnqSnsArgs{
//				ProjectId: pulumi.StringRef(mainScalewayAccountProject.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMnqSns(ctx *pulumi.Context, args *LookupMnqSnsArgs, opts ...pulumi.InvokeOption) (*LookupMnqSnsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMnqSnsResult
	err := ctx.Invoke("scaleway:index/getMnqSns:getMnqSns", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMnqSns.
type LookupMnqSnsArgs struct {
	// `projectId`) The ID of the Project in which sns is enabled.
	ProjectId *string `pulumi:"projectId"`
	// `region`). The region in which sns is enabled.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getMnqSns.
type LookupMnqSnsResult struct {
	// The endpoint of the SNS service for this Project.
	Endpoint string `pulumi:"endpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	ProjectId *string `pulumi:"projectId"`
	Region    *string `pulumi:"region"`
}

func LookupMnqSnsOutput(ctx *pulumi.Context, args LookupMnqSnsOutputArgs, opts ...pulumi.InvokeOption) LookupMnqSnsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMnqSnsResultOutput, error) {
			args := v.(LookupMnqSnsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getMnqSns:getMnqSns", args, LookupMnqSnsResultOutput{}, options).(LookupMnqSnsResultOutput), nil
		}).(LookupMnqSnsResultOutput)
}

// A collection of arguments for invoking getMnqSns.
type LookupMnqSnsOutputArgs struct {
	// `projectId`) The ID of the Project in which sns is enabled.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`). The region in which sns is enabled.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupMnqSnsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMnqSnsArgs)(nil)).Elem()
}

// A collection of values returned by getMnqSns.
type LookupMnqSnsResultOutput struct{ *pulumi.OutputState }

func (LookupMnqSnsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMnqSnsResult)(nil)).Elem()
}

func (o LookupMnqSnsResultOutput) ToLookupMnqSnsResultOutput() LookupMnqSnsResultOutput {
	return o
}

func (o LookupMnqSnsResultOutput) ToLookupMnqSnsResultOutputWithContext(ctx context.Context) LookupMnqSnsResultOutput {
	return o
}

// The endpoint of the SNS service for this Project.
func (o LookupMnqSnsResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMnqSnsResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMnqSnsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMnqSnsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMnqSnsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMnqSnsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupMnqSnsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMnqSnsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMnqSnsResultOutput{})
}
