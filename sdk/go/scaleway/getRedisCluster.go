// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Redis™ cluster.
//
// For further information refer to the Managed Database for Redis™ [API documentation](https://developers.scaleway.com/en/products/redis/api/v1alpha1/#clusters-a85816).
func LookupRedisCluster(ctx *pulumi.Context, args *LookupRedisClusterArgs, opts ...pulumi.InvokeOption) (*LookupRedisClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRedisClusterResult
	err := ctx.Invoke("scaleway:index/getRedisCluster:getRedisCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRedisCluster.
type LookupRedisClusterArgs struct {
	// The Redis cluster ID.
	//
	// > **Note** You must specify at least one: `name` and/or `clusterId`.
	ClusterId *string `pulumi:"clusterId"`
	// The name of the Redis cluster.
	Name *string `pulumi:"name"`
	// The ID of the project the Redis cluster is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The zone in which the server exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getRedisCluster.
type LookupRedisClusterResult struct {
	// List of acl rules.
	Acls []GetRedisClusterAcl `pulumi:"acls"`
	// The PEM of the certificate used by redis, only when `tlsEnabled` is true.
	Certificate string  `pulumi:"certificate"`
	ClusterId   *string `pulumi:"clusterId"`
	// The number of nodes in the Redis Cluster.
	ClusterSize int `pulumi:"clusterSize"`
	// The date and time of creation of the Redis Cluster.
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// The type of Redis Cluster (e.g. `RED1-M`).
	NodeType string `pulumi:"nodeType"`
	// Password of the first user of the Redis Cluster.
	Password string `pulumi:"password"`
	// List of private networks endpoints of the Redis Cluster.
	PrivateNetworks []GetRedisClusterPrivateNetwork `pulumi:"privateNetworks"`
	ProjectId       *string                         `pulumi:"projectId"`
	// Public network details.
	PublicNetworks []GetRedisClusterPublicNetwork `pulumi:"publicNetworks"`
	// Map of settings for redis cluster.
	Settings map[string]string `pulumi:"settings"`
	// The tags associated with the Redis Cluster.
	Tags []string `pulumi:"tags"`
	// Whether TLS is enabled or not.
	TlsEnabled bool `pulumi:"tlsEnabled"`
	// The date and time of the last update of the Redis Cluster.
	UpdatedAt string `pulumi:"updatedAt"`
	// The first user of the Redis Cluster.
	UserName string `pulumi:"userName"`
	// Redis's Cluster version (e.g. `6.2.7`).
	Version string  `pulumi:"version"`
	Zone    *string `pulumi:"zone"`
}

func LookupRedisClusterOutput(ctx *pulumi.Context, args LookupRedisClusterOutputArgs, opts ...pulumi.InvokeOption) LookupRedisClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRedisClusterResultOutput, error) {
			args := v.(LookupRedisClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getRedisCluster:getRedisCluster", args, LookupRedisClusterResultOutput{}, options).(LookupRedisClusterResultOutput), nil
		}).(LookupRedisClusterResultOutput)
}

// A collection of arguments for invoking getRedisCluster.
type LookupRedisClusterOutputArgs struct {
	// The Redis cluster ID.
	//
	// > **Note** You must specify at least one: `name` and/or `clusterId`.
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// The name of the Redis cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the Redis cluster is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The zone in which the server exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupRedisClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisClusterArgs)(nil)).Elem()
}

// A collection of values returned by getRedisCluster.
type LookupRedisClusterResultOutput struct{ *pulumi.OutputState }

func (LookupRedisClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRedisClusterResult)(nil)).Elem()
}

func (o LookupRedisClusterResultOutput) ToLookupRedisClusterResultOutput() LookupRedisClusterResultOutput {
	return o
}

func (o LookupRedisClusterResultOutput) ToLookupRedisClusterResultOutputWithContext(ctx context.Context) LookupRedisClusterResultOutput {
	return o
}

// List of acl rules.
func (o LookupRedisClusterResultOutput) Acls() GetRedisClusterAclArrayOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) []GetRedisClusterAcl { return v.Acls }).(GetRedisClusterAclArrayOutput)
}

// The PEM of the certificate used by redis, only when `tlsEnabled` is true.
func (o LookupRedisClusterResultOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o LookupRedisClusterResultOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// The number of nodes in the Redis Cluster.
func (o LookupRedisClusterResultOutput) ClusterSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) int { return v.ClusterSize }).(pulumi.IntOutput)
}

// The date and time of creation of the Redis Cluster.
func (o LookupRedisClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRedisClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRedisClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of Redis Cluster (e.g. `RED1-M`).
func (o LookupRedisClusterResultOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.NodeType }).(pulumi.StringOutput)
}

// Password of the first user of the Redis Cluster.
func (o LookupRedisClusterResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.Password }).(pulumi.StringOutput)
}

// List of private networks endpoints of the Redis Cluster.
func (o LookupRedisClusterResultOutput) PrivateNetworks() GetRedisClusterPrivateNetworkArrayOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) []GetRedisClusterPrivateNetwork { return v.PrivateNetworks }).(GetRedisClusterPrivateNetworkArrayOutput)
}

func (o LookupRedisClusterResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Public network details.
func (o LookupRedisClusterResultOutput) PublicNetworks() GetRedisClusterPublicNetworkArrayOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) []GetRedisClusterPublicNetwork { return v.PublicNetworks }).(GetRedisClusterPublicNetworkArrayOutput)
}

// Map of settings for redis cluster.
func (o LookupRedisClusterResultOutput) Settings() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) map[string]string { return v.Settings }).(pulumi.StringMapOutput)
}

// The tags associated with the Redis Cluster.
func (o LookupRedisClusterResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Whether TLS is enabled or not.
func (o LookupRedisClusterResultOutput) TlsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) bool { return v.TlsEnabled }).(pulumi.BoolOutput)
}

// The date and time of the last update of the Redis Cluster.
func (o LookupRedisClusterResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The first user of the Redis Cluster.
func (o LookupRedisClusterResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.UserName }).(pulumi.StringOutput)
}

// Redis's Cluster version (e.g. `6.2.7`).
func (o LookupRedisClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func (o LookupRedisClusterResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRedisClusterResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRedisClusterResultOutput{})
}
