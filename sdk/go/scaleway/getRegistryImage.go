// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Container Registry image.
//
// Deprecated: scaleway.index/getregistryimage.getRegistryImage has been deprecated in favor of scaleway.registry/getimage.getImage
func GetRegistryImage(ctx *pulumi.Context, args *GetRegistryImageArgs, opts ...pulumi.InvokeOption) (*GetRegistryImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegistryImageResult
	err := ctx.Invoke("scaleway:index/getRegistryImage:getRegistryImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistryImage.
type GetRegistryImageArgs struct {
	// The image ID.
	//
	// > **Note** You must specify at least one: `name` and/or `imageId`.
	ImageId *string `pulumi:"imageId"`
	// The image name.
	Name *string `pulumi:"name"`
	// The namespace ID in which the image is.
	NamespaceId *string `pulumi:"namespaceId"`
	// `projectId`) The ID of the project the image is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region in which the image exists.
	Region *string `pulumi:"region"`
	// The tags associated with the registry image
	Tags []string `pulumi:"tags"`
}

// A collection of values returned by getRegistryImage.
type GetRegistryImageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	ImageId     *string `pulumi:"imageId"`
	Name        *string `pulumi:"name"`
	NamespaceId string  `pulumi:"namespaceId"`
	// The organization ID the image is associated with.
	OrganizationId string `pulumi:"organizationId"`
	ProjectId      string `pulumi:"projectId"`
	Region         string `pulumi:"region"`
	// The size of the registry image.
	Size int `pulumi:"size"`
	// The tags associated with the registry image
	Tags []string `pulumi:"tags"`
	// The date the image of the last update
	UpdatedAt string `pulumi:"updatedAt"`
	// The privacy policy of the registry image.
	Visibility string `pulumi:"visibility"`
}

func GetRegistryImageOutput(ctx *pulumi.Context, args GetRegistryImageOutputArgs, opts ...pulumi.InvokeOption) GetRegistryImageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegistryImageResultOutput, error) {
			args := v.(GetRegistryImageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getRegistryImage:getRegistryImage", args, GetRegistryImageResultOutput{}, options).(GetRegistryImageResultOutput), nil
		}).(GetRegistryImageResultOutput)
}

// A collection of arguments for invoking getRegistryImage.
type GetRegistryImageOutputArgs struct {
	// The image ID.
	//
	// > **Note** You must specify at least one: `name` and/or `imageId`.
	ImageId pulumi.StringPtrInput `pulumi:"imageId"`
	// The image name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace ID in which the image is.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// `projectId`) The ID of the project the image is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `region`) The region in which the image exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The tags associated with the registry image
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetRegistryImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryImageArgs)(nil)).Elem()
}

// A collection of values returned by getRegistryImage.
type GetRegistryImageResultOutput struct{ *pulumi.OutputState }

func (GetRegistryImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryImageResult)(nil)).Elem()
}

func (o GetRegistryImageResultOutput) ToGetRegistryImageResultOutput() GetRegistryImageResultOutput {
	return o
}

func (o GetRegistryImageResultOutput) ToGetRegistryImageResultOutputWithContext(ctx context.Context) GetRegistryImageResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegistryImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegistryImageResultOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegistryImageResult) *string { return v.ImageId }).(pulumi.StringPtrOutput)
}

func (o GetRegistryImageResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegistryImageResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRegistryImageResultOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The organization ID the image is associated with.
func (o GetRegistryImageResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o GetRegistryImageResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetRegistryImageResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.Region }).(pulumi.StringOutput)
}

// The size of the registry image.
func (o GetRegistryImageResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetRegistryImageResult) int { return v.Size }).(pulumi.IntOutput)
}

// The tags associated with the registry image
func (o GetRegistryImageResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegistryImageResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date the image of the last update
func (o GetRegistryImageResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The privacy policy of the registry image.
func (o GetRegistryImageResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryImageResult) string { return v.Visibility }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegistryImageResultOutput{})
}
