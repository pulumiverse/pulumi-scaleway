// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// The `SecretVersion` data source is used to get information about a specific secret version stored in Scaleway Secret Manager.
//
// Refer to the Secret Manager [product documentation](https://www.scaleway.com/en/docs/identity-and-access-management/secret-manager/) and [API documentation](https://www.scaleway.com/en/developers/api/secret-manager/) for more information.
//
// ## Example Usage
//
// ### Use Secret Manager
//
// The following commands allow you to:
//
// - create a secret named `fooii`
// - create a new version of `fooii` containing data (`yourSecret`)
// - retrieve the secret version specified by the secret ID and the desired version
// - retrieve the secret version specified by the secret name and the desired version
//
// The output blocks display the sensitive data contained in your secret version.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a secret named fooii
//			main, err := scaleway.NewSecret(ctx, "main", &scaleway.SecretArgs{
//				Name:        pulumi.String("fooii"),
//				Description: pulumi.String("barr"),
//			})
//			if err != nil {
//				return err
//			}
//			// Create a version of fooii containing data
//			_, err = scaleway.NewSecretVersion(ctx, "main", &scaleway.SecretVersionArgs{
//				Description: pulumi.String("your description"),
//				SecretId:    main.ID(),
//				Data:        pulumi.String("your_secret"),
//			})
//			if err != nil {
//				return err
//			}
//			// Retrieve the secret version specified by the secret ID and the desired version
//			dataBySecretId := scaleway.LookupSecretVersionOutput(ctx, scaleway.GetSecretVersionOutputArgs{
//				SecretId: main.ID(),
//				Revision: pulumi.String("1"),
//			}, nil)
//			// Retrieve the secret version specified by the secret name and the desired version
//			dataBySecretName := scaleway.LookupSecretVersionOutput(ctx, scaleway.GetSecretVersionOutputArgs{
//				SecretName: main.Name,
//				Revision:   pulumi.String("1"),
//			}, nil)
//			ctx.Export("scalewaySecretAccessPayload", dataBySecretName.ApplyT(func(dataBySecretName scaleway.GetSecretVersionResult) (*string, error) {
//				return &dataBySecretName.Data, nil
//			}).(pulumi.StringPtrOutput))
//			ctx.Export("scalewaySecretAccessPayloadById", dataBySecretId.ApplyT(func(dataBySecretId scaleway.GetSecretVersionResult) (*string, error) {
//				return &dataBySecretId.Data, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
//
// ## Data information
//
// Note: This data source provides you with access to the secret payload, which is encoded in base64.
//
// Keep in mind that this is a sensitive attribute. For more information,
// see Sensitive Data in State.
//
// > **Important:**  This property is sensitive and will not be displayed in the pulumi preview, for security reasons.
func LookupSecretVersion(ctx *pulumi.Context, args *LookupSecretVersionArgs, opts ...pulumi.InvokeOption) (*LookupSecretVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecretVersionResult
	err := ctx.Invoke("scaleway:index/getSecretVersion:getSecretVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretVersion.
type LookupSecretVersionArgs struct {
	OrganizationId *string `pulumi:"organizationId"`
	// The ID of the Scaleway Project associated with the secret version.
	ProjectId *string `pulumi:"projectId"`
	Region    *string `pulumi:"region"`
	// The revision for this secret version. Refer to alternative values (ex: `latest`) in the [API documentation](https://www.scaleway.com/en/developers/api/secret-manager/#path-secret-versions-access-a-secrets-version-using-the-secrets-id)
	Revision *string `pulumi:"revision"`
	// The ID of the secret associated with the secret version. Only one of `secretId` and `secretName` should be specified.
	SecretId *string `pulumi:"secretId"`
	// The name of the secret associated with the secret version.
	// Only one of `secretId` and `secretName` should be specified.
	SecretName *string `pulumi:"secretName"`
}

// A collection of values returned by getSecretVersion.
type LookupSecretVersionResult struct {
	// The date and time of the secret version's creation in RFC 3339 format.
	CreatedAt string `pulumi:"createdAt"`
	// The data payload of the secret version. This is a sensitive attribute containing the secret value. Learn more in the [data section](https://www.terraform.io/#data-information).
	Data string `pulumi:"data"`
	// (Optional) The description of the secret version (e.g. `my-new-description`).
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	OrganizationId string  `pulumi:"organizationId"`
	ProjectId      *string `pulumi:"projectId"`
	Region         *string `pulumi:"region"`
	Revision       *string `pulumi:"revision"`
	SecretId       *string `pulumi:"secretId"`
	SecretName     *string `pulumi:"secretName"`
	// The status of the secret version.
	Status string `pulumi:"status"`
	// The date and time of the secret version's last update in RFC 3339 format.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupSecretVersionOutput(ctx *pulumi.Context, args LookupSecretVersionOutputArgs, opts ...pulumi.InvokeOption) LookupSecretVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecretVersionResultOutput, error) {
			args := v.(LookupSecretVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:index/getSecretVersion:getSecretVersion", args, LookupSecretVersionResultOutput{}, options).(LookupSecretVersionResultOutput), nil
		}).(LookupSecretVersionResultOutput)
}

// A collection of arguments for invoking getSecretVersion.
type LookupSecretVersionOutputArgs struct {
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// The ID of the Scaleway Project associated with the secret version.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	// The revision for this secret version. Refer to alternative values (ex: `latest`) in the [API documentation](https://www.scaleway.com/en/developers/api/secret-manager/#path-secret-versions-access-a-secrets-version-using-the-secrets-id)
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// The ID of the secret associated with the secret version. Only one of `secretId` and `secretName` should be specified.
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	// The name of the secret associated with the secret version.
	// Only one of `secretId` and `secretName` should be specified.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (LookupSecretVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretVersionArgs)(nil)).Elem()
}

// A collection of values returned by getSecretVersion.
type LookupSecretVersionResultOutput struct{ *pulumi.OutputState }

func (LookupSecretVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretVersionResult)(nil)).Elem()
}

func (o LookupSecretVersionResultOutput) ToLookupSecretVersionResultOutput() LookupSecretVersionResultOutput {
	return o
}

func (o LookupSecretVersionResultOutput) ToLookupSecretVersionResultOutputWithContext(ctx context.Context) LookupSecretVersionResultOutput {
	return o
}

// The date and time of the secret version's creation in RFC 3339 format.
func (o LookupSecretVersionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The data payload of the secret version. This is a sensitive attribute containing the secret value. Learn more in the [data section](https://www.terraform.io/#data-information).
func (o LookupSecretVersionResultOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.Data }).(pulumi.StringOutput)
}

// (Optional) The description of the secret version (e.g. `my-new-description`).
func (o LookupSecretVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecretVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSecretVersionResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupSecretVersionResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupSecretVersionResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupSecretVersionResultOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

func (o LookupSecretVersionResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSecretVersionResultOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The status of the secret version.
func (o LookupSecretVersionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time of the secret version's last update in RFC 3339 format.
func (o LookupSecretVersionResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretVersionResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecretVersionResultOutput{})
}
