// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hosting

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a webhosting.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/hosting"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get info by offer domain
//			_, err := hosting.LookupHosting(ctx, &hosting.LookupHostingArgs{
//				Domain: pulumi.StringRef("foobar.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Get info by id
//			_, err = hosting.LookupHosting(ctx, &hosting.LookupHostingArgs{
//				WebhostingId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupHosting(ctx *pulumi.Context, args *LookupHostingArgs, opts ...pulumi.InvokeOption) (*LookupHostingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHostingResult
	err := ctx.Invoke("scaleway:hosting/getHosting:getHosting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHosting.
type LookupHostingArgs struct {
	// The hosting domain name. Only one of `domain` and `webhostingId` should be specified.
	Domain *string `pulumi:"domain"`
	// The ID of the organization the hosting is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// `projectId`) The ID of the project the hosting is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The hosting id. Only one of `domain` and `webhostingId` should be specified.
	WebhostingId *string `pulumi:"webhostingId"`
}

// A collection of values returned by getHosting.
type LookupHostingResult struct {
	CpanelUrls []GetHostingCpanelUrl `pulumi:"cpanelUrls"`
	CreatedAt  string                `pulumi:"createdAt"`
	DnsStatus  string                `pulumi:"dnsStatus"`
	Domain     *string               `pulumi:"domain"`
	Email      string                `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	NameServers      []GetHostingNameServer `pulumi:"nameServers"`
	OfferId          string                 `pulumi:"offerId"`
	OfferName        string                 `pulumi:"offerName"`
	OptionIds        []string               `pulumi:"optionIds"`
	Options          []GetHostingOption     `pulumi:"options"`
	OrganizationId   string                 `pulumi:"organizationId"`
	PlatformHostname string                 `pulumi:"platformHostname"`
	PlatformNumber   int                    `pulumi:"platformNumber"`
	ProjectId        *string                `pulumi:"projectId"`
	Records          []GetHostingRecord     `pulumi:"records"`
	Region           string                 `pulumi:"region"`
	Status           string                 `pulumi:"status"`
	Tags             []string               `pulumi:"tags"`
	UpdatedAt        string                 `pulumi:"updatedAt"`
	Username         string                 `pulumi:"username"`
	WebhostingId     *string                `pulumi:"webhostingId"`
}

func LookupHostingOutput(ctx *pulumi.Context, args LookupHostingOutputArgs, opts ...pulumi.InvokeOption) LookupHostingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHostingResultOutput, error) {
			args := v.(LookupHostingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:hosting/getHosting:getHosting", args, LookupHostingResultOutput{}, options).(LookupHostingResultOutput), nil
		}).(LookupHostingResultOutput)
}

// A collection of arguments for invoking getHosting.
type LookupHostingOutputArgs struct {
	// The hosting domain name. Only one of `domain` and `webhostingId` should be specified.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The ID of the organization the hosting is associated with.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// `projectId`) The ID of the project the hosting is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The hosting id. Only one of `domain` and `webhostingId` should be specified.
	WebhostingId pulumi.StringPtrInput `pulumi:"webhostingId"`
}

func (LookupHostingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostingArgs)(nil)).Elem()
}

// A collection of values returned by getHosting.
type LookupHostingResultOutput struct{ *pulumi.OutputState }

func (LookupHostingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHostingResult)(nil)).Elem()
}

func (o LookupHostingResultOutput) ToLookupHostingResultOutput() LookupHostingResultOutput {
	return o
}

func (o LookupHostingResultOutput) ToLookupHostingResultOutputWithContext(ctx context.Context) LookupHostingResultOutput {
	return o
}

func (o LookupHostingResultOutput) CpanelUrls() GetHostingCpanelUrlArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []GetHostingCpanelUrl { return v.CpanelUrls }).(GetHostingCpanelUrlArrayOutput)
}

func (o LookupHostingResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) DnsStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.DnsStatus }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostingResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o LookupHostingResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.Email }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHostingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) NameServers() GetHostingNameServerArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []GetHostingNameServer { return v.NameServers }).(GetHostingNameServerArrayOutput)
}

func (o LookupHostingResultOutput) OfferId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.OfferId }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) OfferName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.OfferName }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) OptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []string { return v.OptionIds }).(pulumi.StringArrayOutput)
}

func (o LookupHostingResultOutput) Options() GetHostingOptionArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []GetHostingOption { return v.Options }).(GetHostingOptionArrayOutput)
}

func (o LookupHostingResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) PlatformHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.PlatformHostname }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) PlatformNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupHostingResult) int { return v.PlatformNumber }).(pulumi.IntOutput)
}

func (o LookupHostingResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostingResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupHostingResultOutput) Records() GetHostingRecordArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []GetHostingRecord { return v.Records }).(GetHostingRecordArrayOutput)
}

func (o LookupHostingResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupHostingResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupHostingResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHostingResult) string { return v.Username }).(pulumi.StringOutput)
}

func (o LookupHostingResultOutput) WebhostingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupHostingResult) *string { return v.WebhostingId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHostingResultOutput{})
}
