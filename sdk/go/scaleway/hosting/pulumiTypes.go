// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hosting

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type HostingCpanelUrl struct {
	// The URL of the Dashboard.
	Dashboard *string `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail *string `pulumi:"webmail"`
}

// HostingCpanelUrlInput is an input type that accepts HostingCpanelUrlArgs and HostingCpanelUrlOutput values.
// You can construct a concrete instance of `HostingCpanelUrlInput` via:
//
//	HostingCpanelUrlArgs{...}
type HostingCpanelUrlInput interface {
	pulumi.Input

	ToHostingCpanelUrlOutput() HostingCpanelUrlOutput
	ToHostingCpanelUrlOutputWithContext(context.Context) HostingCpanelUrlOutput
}

type HostingCpanelUrlArgs struct {
	// The URL of the Dashboard.
	Dashboard pulumi.StringPtrInput `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail pulumi.StringPtrInput `pulumi:"webmail"`
}

func (HostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCpanelUrl)(nil)).Elem()
}

func (i HostingCpanelUrlArgs) ToHostingCpanelUrlOutput() HostingCpanelUrlOutput {
	return i.ToHostingCpanelUrlOutputWithContext(context.Background())
}

func (i HostingCpanelUrlArgs) ToHostingCpanelUrlOutputWithContext(ctx context.Context) HostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCpanelUrlOutput)
}

// HostingCpanelUrlArrayInput is an input type that accepts HostingCpanelUrlArray and HostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `HostingCpanelUrlArrayInput` via:
//
//	HostingCpanelUrlArray{ HostingCpanelUrlArgs{...} }
type HostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToHostingCpanelUrlArrayOutput() HostingCpanelUrlArrayOutput
	ToHostingCpanelUrlArrayOutputWithContext(context.Context) HostingCpanelUrlArrayOutput
}

type HostingCpanelUrlArray []HostingCpanelUrlInput

func (HostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCpanelUrl)(nil)).Elem()
}

func (i HostingCpanelUrlArray) ToHostingCpanelUrlArrayOutput() HostingCpanelUrlArrayOutput {
	return i.ToHostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i HostingCpanelUrlArray) ToHostingCpanelUrlArrayOutputWithContext(ctx context.Context) HostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingCpanelUrlArrayOutput)
}

type HostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (HostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingCpanelUrl)(nil)).Elem()
}

func (o HostingCpanelUrlOutput) ToHostingCpanelUrlOutput() HostingCpanelUrlOutput {
	return o
}

func (o HostingCpanelUrlOutput) ToHostingCpanelUrlOutputWithContext(ctx context.Context) HostingCpanelUrlOutput {
	return o
}

// The URL of the Dashboard.
func (o HostingCpanelUrlOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCpanelUrl) *string { return v.Dashboard }).(pulumi.StringPtrOutput)
}

// The URL of the Webmail interface.
func (o HostingCpanelUrlOutput) Webmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingCpanelUrl) *string { return v.Webmail }).(pulumi.StringPtrOutput)
}

type HostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (HostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingCpanelUrl)(nil)).Elem()
}

func (o HostingCpanelUrlArrayOutput) ToHostingCpanelUrlArrayOutput() HostingCpanelUrlArrayOutput {
	return o
}

func (o HostingCpanelUrlArrayOutput) ToHostingCpanelUrlArrayOutputWithContext(ctx context.Context) HostingCpanelUrlArrayOutput {
	return o
}

func (o HostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) HostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingCpanelUrl {
		return vs[0].([]HostingCpanelUrl)[vs[1].(int)]
	}).(HostingCpanelUrlOutput)
}

type HostingNameServer struct {
	Hostname  *string `pulumi:"hostname"`
	IsDefault *bool   `pulumi:"isDefault"`
	// The hosting status.
	Status *string `pulumi:"status"`
}

// HostingNameServerInput is an input type that accepts HostingNameServerArgs and HostingNameServerOutput values.
// You can construct a concrete instance of `HostingNameServerInput` via:
//
//	HostingNameServerArgs{...}
type HostingNameServerInput interface {
	pulumi.Input

	ToHostingNameServerOutput() HostingNameServerOutput
	ToHostingNameServerOutputWithContext(context.Context) HostingNameServerOutput
}

type HostingNameServerArgs struct {
	Hostname  pulumi.StringPtrInput `pulumi:"hostname"`
	IsDefault pulumi.BoolPtrInput   `pulumi:"isDefault"`
	// The hosting status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (HostingNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingNameServer)(nil)).Elem()
}

func (i HostingNameServerArgs) ToHostingNameServerOutput() HostingNameServerOutput {
	return i.ToHostingNameServerOutputWithContext(context.Background())
}

func (i HostingNameServerArgs) ToHostingNameServerOutputWithContext(ctx context.Context) HostingNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingNameServerOutput)
}

// HostingNameServerArrayInput is an input type that accepts HostingNameServerArray and HostingNameServerArrayOutput values.
// You can construct a concrete instance of `HostingNameServerArrayInput` via:
//
//	HostingNameServerArray{ HostingNameServerArgs{...} }
type HostingNameServerArrayInput interface {
	pulumi.Input

	ToHostingNameServerArrayOutput() HostingNameServerArrayOutput
	ToHostingNameServerArrayOutputWithContext(context.Context) HostingNameServerArrayOutput
}

type HostingNameServerArray []HostingNameServerInput

func (HostingNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingNameServer)(nil)).Elem()
}

func (i HostingNameServerArray) ToHostingNameServerArrayOutput() HostingNameServerArrayOutput {
	return i.ToHostingNameServerArrayOutputWithContext(context.Background())
}

func (i HostingNameServerArray) ToHostingNameServerArrayOutputWithContext(ctx context.Context) HostingNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingNameServerArrayOutput)
}

type HostingNameServerOutput struct{ *pulumi.OutputState }

func (HostingNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingNameServer)(nil)).Elem()
}

func (o HostingNameServerOutput) ToHostingNameServerOutput() HostingNameServerOutput {
	return o
}

func (o HostingNameServerOutput) ToHostingNameServerOutputWithContext(ctx context.Context) HostingNameServerOutput {
	return o
}

func (o HostingNameServerOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingNameServer) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o HostingNameServerOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostingNameServer) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The hosting status.
func (o HostingNameServerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingNameServer) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type HostingNameServerArrayOutput struct{ *pulumi.OutputState }

func (HostingNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingNameServer)(nil)).Elem()
}

func (o HostingNameServerArrayOutput) ToHostingNameServerArrayOutput() HostingNameServerArrayOutput {
	return o
}

func (o HostingNameServerArrayOutput) ToHostingNameServerArrayOutputWithContext(ctx context.Context) HostingNameServerArrayOutput {
	return o
}

func (o HostingNameServerArrayOutput) Index(i pulumi.IntInput) HostingNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingNameServer {
		return vs[0].([]HostingNameServer)[vs[1].(int)]
	}).(HostingNameServerOutput)
}

type HostingOption struct {
	// The option ID.
	Id *string `pulumi:"id"`
	// The option name.
	Name *string `pulumi:"name"`
}

// HostingOptionInput is an input type that accepts HostingOptionArgs and HostingOptionOutput values.
// You can construct a concrete instance of `HostingOptionInput` via:
//
//	HostingOptionArgs{...}
type HostingOptionInput interface {
	pulumi.Input

	ToHostingOptionOutput() HostingOptionOutput
	ToHostingOptionOutputWithContext(context.Context) HostingOptionOutput
}

type HostingOptionArgs struct {
	// The option ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The option name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (HostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingOption)(nil)).Elem()
}

func (i HostingOptionArgs) ToHostingOptionOutput() HostingOptionOutput {
	return i.ToHostingOptionOutputWithContext(context.Background())
}

func (i HostingOptionArgs) ToHostingOptionOutputWithContext(ctx context.Context) HostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingOptionOutput)
}

// HostingOptionArrayInput is an input type that accepts HostingOptionArray and HostingOptionArrayOutput values.
// You can construct a concrete instance of `HostingOptionArrayInput` via:
//
//	HostingOptionArray{ HostingOptionArgs{...} }
type HostingOptionArrayInput interface {
	pulumi.Input

	ToHostingOptionArrayOutput() HostingOptionArrayOutput
	ToHostingOptionArrayOutputWithContext(context.Context) HostingOptionArrayOutput
}

type HostingOptionArray []HostingOptionInput

func (HostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingOption)(nil)).Elem()
}

func (i HostingOptionArray) ToHostingOptionArrayOutput() HostingOptionArrayOutput {
	return i.ToHostingOptionArrayOutputWithContext(context.Background())
}

func (i HostingOptionArray) ToHostingOptionArrayOutputWithContext(ctx context.Context) HostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingOptionArrayOutput)
}

type HostingOptionOutput struct{ *pulumi.OutputState }

func (HostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingOption)(nil)).Elem()
}

func (o HostingOptionOutput) ToHostingOptionOutput() HostingOptionOutput {
	return o
}

func (o HostingOptionOutput) ToHostingOptionOutputWithContext(ctx context.Context) HostingOptionOutput {
	return o
}

// The option ID.
func (o HostingOptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingOption) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The option name.
func (o HostingOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type HostingOptionArrayOutput struct{ *pulumi.OutputState }

func (HostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingOption)(nil)).Elem()
}

func (o HostingOptionArrayOutput) ToHostingOptionArrayOutput() HostingOptionArrayOutput {
	return o
}

func (o HostingOptionArrayOutput) ToHostingOptionArrayOutputWithContext(ctx context.Context) HostingOptionArrayOutput {
	return o
}

func (o HostingOptionArrayOutput) Index(i pulumi.IntInput) HostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingOption {
		return vs[0].([]HostingOption)[vs[1].(int)]
	}).(HostingOptionOutput)
}

type HostingRecord struct {
	// The option name.
	Name     *string `pulumi:"name"`
	Priority *int    `pulumi:"priority"`
	// The hosting status.
	Status *string `pulumi:"status"`
	Ttl    *int    `pulumi:"ttl"`
	Type   *string `pulumi:"type"`
	Value  *string `pulumi:"value"`
}

// HostingRecordInput is an input type that accepts HostingRecordArgs and HostingRecordOutput values.
// You can construct a concrete instance of `HostingRecordInput` via:
//
//	HostingRecordArgs{...}
type HostingRecordInput interface {
	pulumi.Input

	ToHostingRecordOutput() HostingRecordOutput
	ToHostingRecordOutputWithContext(context.Context) HostingRecordOutput
}

type HostingRecordArgs struct {
	// The option name.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Priority pulumi.IntPtrInput    `pulumi:"priority"`
	// The hosting status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	Ttl    pulumi.IntPtrInput    `pulumi:"ttl"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
	Value  pulumi.StringPtrInput `pulumi:"value"`
}

func (HostingRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingRecord)(nil)).Elem()
}

func (i HostingRecordArgs) ToHostingRecordOutput() HostingRecordOutput {
	return i.ToHostingRecordOutputWithContext(context.Background())
}

func (i HostingRecordArgs) ToHostingRecordOutputWithContext(ctx context.Context) HostingRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingRecordOutput)
}

// HostingRecordArrayInput is an input type that accepts HostingRecordArray and HostingRecordArrayOutput values.
// You can construct a concrete instance of `HostingRecordArrayInput` via:
//
//	HostingRecordArray{ HostingRecordArgs{...} }
type HostingRecordArrayInput interface {
	pulumi.Input

	ToHostingRecordArrayOutput() HostingRecordArrayOutput
	ToHostingRecordArrayOutputWithContext(context.Context) HostingRecordArrayOutput
}

type HostingRecordArray []HostingRecordInput

func (HostingRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingRecord)(nil)).Elem()
}

func (i HostingRecordArray) ToHostingRecordArrayOutput() HostingRecordArrayOutput {
	return i.ToHostingRecordArrayOutputWithContext(context.Background())
}

func (i HostingRecordArray) ToHostingRecordArrayOutputWithContext(ctx context.Context) HostingRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingRecordArrayOutput)
}

type HostingRecordOutput struct{ *pulumi.OutputState }

func (HostingRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingRecord)(nil)).Elem()
}

func (o HostingRecordOutput) ToHostingRecordOutput() HostingRecordOutput {
	return o
}

func (o HostingRecordOutput) ToHostingRecordOutputWithContext(ctx context.Context) HostingRecordOutput {
	return o
}

// The option name.
func (o HostingRecordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingRecord) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o HostingRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingRecord) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The hosting status.
func (o HostingRecordOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingRecord) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o HostingRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HostingRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

func (o HostingRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o HostingRecordOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingRecord) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HostingRecordArrayOutput struct{ *pulumi.OutputState }

func (HostingRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostingRecord)(nil)).Elem()
}

func (o HostingRecordArrayOutput) ToHostingRecordArrayOutput() HostingRecordArrayOutput {
	return o
}

func (o HostingRecordArrayOutput) ToHostingRecordArrayOutputWithContext(ctx context.Context) HostingRecordArrayOutput {
	return o
}

func (o HostingRecordArrayOutput) Index(i pulumi.IntInput) HostingRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostingRecord {
		return vs[0].([]HostingRecord)[vs[1].(int)]
	}).(HostingRecordOutput)
}

type GetHostingCpanelUrl struct {
	Dashboard string `pulumi:"dashboard"`
	Webmail   string `pulumi:"webmail"`
}

// GetHostingCpanelUrlInput is an input type that accepts GetHostingCpanelUrlArgs and GetHostingCpanelUrlOutput values.
// You can construct a concrete instance of `GetHostingCpanelUrlInput` via:
//
//	GetHostingCpanelUrlArgs{...}
type GetHostingCpanelUrlInput interface {
	pulumi.Input

	ToGetHostingCpanelUrlOutput() GetHostingCpanelUrlOutput
	ToGetHostingCpanelUrlOutputWithContext(context.Context) GetHostingCpanelUrlOutput
}

type GetHostingCpanelUrlArgs struct {
	Dashboard pulumi.StringInput `pulumi:"dashboard"`
	Webmail   pulumi.StringInput `pulumi:"webmail"`
}

func (GetHostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingCpanelUrl)(nil)).Elem()
}

func (i GetHostingCpanelUrlArgs) ToGetHostingCpanelUrlOutput() GetHostingCpanelUrlOutput {
	return i.ToGetHostingCpanelUrlOutputWithContext(context.Background())
}

func (i GetHostingCpanelUrlArgs) ToGetHostingCpanelUrlOutputWithContext(ctx context.Context) GetHostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingCpanelUrlOutput)
}

// GetHostingCpanelUrlArrayInput is an input type that accepts GetHostingCpanelUrlArray and GetHostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `GetHostingCpanelUrlArrayInput` via:
//
//	GetHostingCpanelUrlArray{ GetHostingCpanelUrlArgs{...} }
type GetHostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToGetHostingCpanelUrlArrayOutput() GetHostingCpanelUrlArrayOutput
	ToGetHostingCpanelUrlArrayOutputWithContext(context.Context) GetHostingCpanelUrlArrayOutput
}

type GetHostingCpanelUrlArray []GetHostingCpanelUrlInput

func (GetHostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingCpanelUrl)(nil)).Elem()
}

func (i GetHostingCpanelUrlArray) ToGetHostingCpanelUrlArrayOutput() GetHostingCpanelUrlArrayOutput {
	return i.ToGetHostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i GetHostingCpanelUrlArray) ToGetHostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetHostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingCpanelUrlArrayOutput)
}

type GetHostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (GetHostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingCpanelUrl)(nil)).Elem()
}

func (o GetHostingCpanelUrlOutput) ToGetHostingCpanelUrlOutput() GetHostingCpanelUrlOutput {
	return o
}

func (o GetHostingCpanelUrlOutput) ToGetHostingCpanelUrlOutputWithContext(ctx context.Context) GetHostingCpanelUrlOutput {
	return o
}

func (o GetHostingCpanelUrlOutput) Dashboard() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingCpanelUrl) string { return v.Dashboard }).(pulumi.StringOutput)
}

func (o GetHostingCpanelUrlOutput) Webmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingCpanelUrl) string { return v.Webmail }).(pulumi.StringOutput)
}

type GetHostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (GetHostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingCpanelUrl)(nil)).Elem()
}

func (o GetHostingCpanelUrlArrayOutput) ToGetHostingCpanelUrlArrayOutput() GetHostingCpanelUrlArrayOutput {
	return o
}

func (o GetHostingCpanelUrlArrayOutput) ToGetHostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetHostingCpanelUrlArrayOutput {
	return o
}

func (o GetHostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) GetHostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostingCpanelUrl {
		return vs[0].([]GetHostingCpanelUrl)[vs[1].(int)]
	}).(GetHostingCpanelUrlOutput)
}

type GetHostingNameServer struct {
	Hostname  string `pulumi:"hostname"`
	IsDefault bool   `pulumi:"isDefault"`
	Status    string `pulumi:"status"`
}

// GetHostingNameServerInput is an input type that accepts GetHostingNameServerArgs and GetHostingNameServerOutput values.
// You can construct a concrete instance of `GetHostingNameServerInput` via:
//
//	GetHostingNameServerArgs{...}
type GetHostingNameServerInput interface {
	pulumi.Input

	ToGetHostingNameServerOutput() GetHostingNameServerOutput
	ToGetHostingNameServerOutputWithContext(context.Context) GetHostingNameServerOutput
}

type GetHostingNameServerArgs struct {
	Hostname  pulumi.StringInput `pulumi:"hostname"`
	IsDefault pulumi.BoolInput   `pulumi:"isDefault"`
	Status    pulumi.StringInput `pulumi:"status"`
}

func (GetHostingNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingNameServer)(nil)).Elem()
}

func (i GetHostingNameServerArgs) ToGetHostingNameServerOutput() GetHostingNameServerOutput {
	return i.ToGetHostingNameServerOutputWithContext(context.Background())
}

func (i GetHostingNameServerArgs) ToGetHostingNameServerOutputWithContext(ctx context.Context) GetHostingNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingNameServerOutput)
}

// GetHostingNameServerArrayInput is an input type that accepts GetHostingNameServerArray and GetHostingNameServerArrayOutput values.
// You can construct a concrete instance of `GetHostingNameServerArrayInput` via:
//
//	GetHostingNameServerArray{ GetHostingNameServerArgs{...} }
type GetHostingNameServerArrayInput interface {
	pulumi.Input

	ToGetHostingNameServerArrayOutput() GetHostingNameServerArrayOutput
	ToGetHostingNameServerArrayOutputWithContext(context.Context) GetHostingNameServerArrayOutput
}

type GetHostingNameServerArray []GetHostingNameServerInput

func (GetHostingNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingNameServer)(nil)).Elem()
}

func (i GetHostingNameServerArray) ToGetHostingNameServerArrayOutput() GetHostingNameServerArrayOutput {
	return i.ToGetHostingNameServerArrayOutputWithContext(context.Background())
}

func (i GetHostingNameServerArray) ToGetHostingNameServerArrayOutputWithContext(ctx context.Context) GetHostingNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingNameServerArrayOutput)
}

type GetHostingNameServerOutput struct{ *pulumi.OutputState }

func (GetHostingNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingNameServer)(nil)).Elem()
}

func (o GetHostingNameServerOutput) ToGetHostingNameServerOutput() GetHostingNameServerOutput {
	return o
}

func (o GetHostingNameServerOutput) ToGetHostingNameServerOutputWithContext(ctx context.Context) GetHostingNameServerOutput {
	return o
}

func (o GetHostingNameServerOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingNameServer) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetHostingNameServerOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostingNameServer) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o GetHostingNameServerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingNameServer) string { return v.Status }).(pulumi.StringOutput)
}

type GetHostingNameServerArrayOutput struct{ *pulumi.OutputState }

func (GetHostingNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingNameServer)(nil)).Elem()
}

func (o GetHostingNameServerArrayOutput) ToGetHostingNameServerArrayOutput() GetHostingNameServerArrayOutput {
	return o
}

func (o GetHostingNameServerArrayOutput) ToGetHostingNameServerArrayOutputWithContext(ctx context.Context) GetHostingNameServerArrayOutput {
	return o
}

func (o GetHostingNameServerArrayOutput) Index(i pulumi.IntInput) GetHostingNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostingNameServer {
		return vs[0].([]GetHostingNameServer)[vs[1].(int)]
	}).(GetHostingNameServerOutput)
}

type GetHostingOption struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetHostingOptionInput is an input type that accepts GetHostingOptionArgs and GetHostingOptionOutput values.
// You can construct a concrete instance of `GetHostingOptionInput` via:
//
//	GetHostingOptionArgs{...}
type GetHostingOptionInput interface {
	pulumi.Input

	ToGetHostingOptionOutput() GetHostingOptionOutput
	ToGetHostingOptionOutputWithContext(context.Context) GetHostingOptionOutput
}

type GetHostingOptionArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetHostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingOption)(nil)).Elem()
}

func (i GetHostingOptionArgs) ToGetHostingOptionOutput() GetHostingOptionOutput {
	return i.ToGetHostingOptionOutputWithContext(context.Background())
}

func (i GetHostingOptionArgs) ToGetHostingOptionOutputWithContext(ctx context.Context) GetHostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingOptionOutput)
}

// GetHostingOptionArrayInput is an input type that accepts GetHostingOptionArray and GetHostingOptionArrayOutput values.
// You can construct a concrete instance of `GetHostingOptionArrayInput` via:
//
//	GetHostingOptionArray{ GetHostingOptionArgs{...} }
type GetHostingOptionArrayInput interface {
	pulumi.Input

	ToGetHostingOptionArrayOutput() GetHostingOptionArrayOutput
	ToGetHostingOptionArrayOutputWithContext(context.Context) GetHostingOptionArrayOutput
}

type GetHostingOptionArray []GetHostingOptionInput

func (GetHostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingOption)(nil)).Elem()
}

func (i GetHostingOptionArray) ToGetHostingOptionArrayOutput() GetHostingOptionArrayOutput {
	return i.ToGetHostingOptionArrayOutputWithContext(context.Background())
}

func (i GetHostingOptionArray) ToGetHostingOptionArrayOutputWithContext(ctx context.Context) GetHostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingOptionArrayOutput)
}

type GetHostingOptionOutput struct{ *pulumi.OutputState }

func (GetHostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingOption)(nil)).Elem()
}

func (o GetHostingOptionOutput) ToGetHostingOptionOutput() GetHostingOptionOutput {
	return o
}

func (o GetHostingOptionOutput) ToGetHostingOptionOutputWithContext(ctx context.Context) GetHostingOptionOutput {
	return o
}

func (o GetHostingOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingOption) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHostingOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingOption) string { return v.Name }).(pulumi.StringOutput)
}

type GetHostingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetHostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingOption)(nil)).Elem()
}

func (o GetHostingOptionArrayOutput) ToGetHostingOptionArrayOutput() GetHostingOptionArrayOutput {
	return o
}

func (o GetHostingOptionArrayOutput) ToGetHostingOptionArrayOutputWithContext(ctx context.Context) GetHostingOptionArrayOutput {
	return o
}

func (o GetHostingOptionArrayOutput) Index(i pulumi.IntInput) GetHostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostingOption {
		return vs[0].([]GetHostingOption)[vs[1].(int)]
	}).(GetHostingOptionOutput)
}

type GetHostingRecord struct {
	Name     string `pulumi:"name"`
	Priority int    `pulumi:"priority"`
	Status   string `pulumi:"status"`
	Ttl      int    `pulumi:"ttl"`
	Type     string `pulumi:"type"`
	Value    string `pulumi:"value"`
}

// GetHostingRecordInput is an input type that accepts GetHostingRecordArgs and GetHostingRecordOutput values.
// You can construct a concrete instance of `GetHostingRecordInput` via:
//
//	GetHostingRecordArgs{...}
type GetHostingRecordInput interface {
	pulumi.Input

	ToGetHostingRecordOutput() GetHostingRecordOutput
	ToGetHostingRecordOutputWithContext(context.Context) GetHostingRecordOutput
}

type GetHostingRecordArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Priority pulumi.IntInput    `pulumi:"priority"`
	Status   pulumi.StringInput `pulumi:"status"`
	Ttl      pulumi.IntInput    `pulumi:"ttl"`
	Type     pulumi.StringInput `pulumi:"type"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (GetHostingRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingRecord)(nil)).Elem()
}

func (i GetHostingRecordArgs) ToGetHostingRecordOutput() GetHostingRecordOutput {
	return i.ToGetHostingRecordOutputWithContext(context.Background())
}

func (i GetHostingRecordArgs) ToGetHostingRecordOutputWithContext(ctx context.Context) GetHostingRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingRecordOutput)
}

// GetHostingRecordArrayInput is an input type that accepts GetHostingRecordArray and GetHostingRecordArrayOutput values.
// You can construct a concrete instance of `GetHostingRecordArrayInput` via:
//
//	GetHostingRecordArray{ GetHostingRecordArgs{...} }
type GetHostingRecordArrayInput interface {
	pulumi.Input

	ToGetHostingRecordArrayOutput() GetHostingRecordArrayOutput
	ToGetHostingRecordArrayOutputWithContext(context.Context) GetHostingRecordArrayOutput
}

type GetHostingRecordArray []GetHostingRecordInput

func (GetHostingRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingRecord)(nil)).Elem()
}

func (i GetHostingRecordArray) ToGetHostingRecordArrayOutput() GetHostingRecordArrayOutput {
	return i.ToGetHostingRecordArrayOutputWithContext(context.Background())
}

func (i GetHostingRecordArray) ToGetHostingRecordArrayOutputWithContext(ctx context.Context) GetHostingRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostingRecordArrayOutput)
}

type GetHostingRecordOutput struct{ *pulumi.OutputState }

func (GetHostingRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostingRecord)(nil)).Elem()
}

func (o GetHostingRecordOutput) ToGetHostingRecordOutput() GetHostingRecordOutput {
	return o
}

func (o GetHostingRecordOutput) ToGetHostingRecordOutputWithContext(ctx context.Context) GetHostingRecordOutput {
	return o
}

func (o GetHostingRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingRecord) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHostingRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostingRecord) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetHostingRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingRecord) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetHostingRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostingRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o GetHostingRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingRecord) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetHostingRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostingRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetHostingRecordArrayOutput struct{ *pulumi.OutputState }

func (GetHostingRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostingRecord)(nil)).Elem()
}

func (o GetHostingRecordArrayOutput) ToGetHostingRecordArrayOutput() GetHostingRecordArrayOutput {
	return o
}

func (o GetHostingRecordArrayOutput) ToGetHostingRecordArrayOutputWithContext(ctx context.Context) GetHostingRecordArrayOutput {
	return o
}

func (o GetHostingRecordArrayOutput) Index(i pulumi.IntInput) GetHostingRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostingRecord {
		return vs[0].([]GetHostingRecord)[vs[1].(int)]
	}).(GetHostingRecordOutput)
}

type GetOfferOffer struct {
	// Indicates if the offer is available.
	Available bool `pulumi:"available"`
	// The billing operation identifier for the option.
	BillingOperationPath string `pulumi:"billingOperationPath"`
	// The name of the control panel (e.g., Cpanel or Plesk).
	ControlPanelName string `pulumi:"controlPanelName"`
	// Indicates if the offer is deprecated or no longer supported.
	EndOfLife bool `pulumi:"endOfLife"`
	// The unique identifier of the option.
	Id string `pulumi:"id"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// A list of available options for the offer:
	Options []GetOfferOfferOption `pulumi:"options"`
	// The offer price.
	Price string `pulumi:"price"`
	// Warning information regarding quota limitations for the option.
	QuotaWarning string `pulumi:"quotaWarning"`
}

// GetOfferOfferInput is an input type that accepts GetOfferOfferArgs and GetOfferOfferOutput values.
// You can construct a concrete instance of `GetOfferOfferInput` via:
//
//	GetOfferOfferArgs{...}
type GetOfferOfferInput interface {
	pulumi.Input

	ToGetOfferOfferOutput() GetOfferOfferOutput
	ToGetOfferOfferOutputWithContext(context.Context) GetOfferOfferOutput
}

type GetOfferOfferArgs struct {
	// Indicates if the offer is available.
	Available pulumi.BoolInput `pulumi:"available"`
	// The billing operation identifier for the option.
	BillingOperationPath pulumi.StringInput `pulumi:"billingOperationPath"`
	// The name of the control panel (e.g., Cpanel or Plesk).
	ControlPanelName pulumi.StringInput `pulumi:"controlPanelName"`
	// Indicates if the offer is deprecated or no longer supported.
	EndOfLife pulumi.BoolInput `pulumi:"endOfLife"`
	// The unique identifier of the option.
	Id pulumi.StringInput `pulumi:"id"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of available options for the offer:
	Options GetOfferOfferOptionArrayInput `pulumi:"options"`
	// The offer price.
	Price pulumi.StringInput `pulumi:"price"`
	// Warning information regarding quota limitations for the option.
	QuotaWarning pulumi.StringInput `pulumi:"quotaWarning"`
}

func (GetOfferOfferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferOffer)(nil)).Elem()
}

func (i GetOfferOfferArgs) ToGetOfferOfferOutput() GetOfferOfferOutput {
	return i.ToGetOfferOfferOutputWithContext(context.Background())
}

func (i GetOfferOfferArgs) ToGetOfferOfferOutputWithContext(ctx context.Context) GetOfferOfferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferOfferOutput)
}

// GetOfferOfferArrayInput is an input type that accepts GetOfferOfferArray and GetOfferOfferArrayOutput values.
// You can construct a concrete instance of `GetOfferOfferArrayInput` via:
//
//	GetOfferOfferArray{ GetOfferOfferArgs{...} }
type GetOfferOfferArrayInput interface {
	pulumi.Input

	ToGetOfferOfferArrayOutput() GetOfferOfferArrayOutput
	ToGetOfferOfferArrayOutputWithContext(context.Context) GetOfferOfferArrayOutput
}

type GetOfferOfferArray []GetOfferOfferInput

func (GetOfferOfferArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferOffer)(nil)).Elem()
}

func (i GetOfferOfferArray) ToGetOfferOfferArrayOutput() GetOfferOfferArrayOutput {
	return i.ToGetOfferOfferArrayOutputWithContext(context.Background())
}

func (i GetOfferOfferArray) ToGetOfferOfferArrayOutputWithContext(ctx context.Context) GetOfferOfferArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferOfferArrayOutput)
}

type GetOfferOfferOutput struct{ *pulumi.OutputState }

func (GetOfferOfferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferOffer)(nil)).Elem()
}

func (o GetOfferOfferOutput) ToGetOfferOfferOutput() GetOfferOfferOutput {
	return o
}

func (o GetOfferOfferOutput) ToGetOfferOfferOutputWithContext(ctx context.Context) GetOfferOfferOutput {
	return o
}

// Indicates if the offer is available.
func (o GetOfferOfferOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferOffer) bool { return v.Available }).(pulumi.BoolOutput)
}

// The billing operation identifier for the option.
func (o GetOfferOfferOutput) BillingOperationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.BillingOperationPath }).(pulumi.StringOutput)
}

// The name of the control panel (e.g., Cpanel or Plesk).
func (o GetOfferOfferOutput) ControlPanelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.ControlPanelName }).(pulumi.StringOutput)
}

// Indicates if the offer is deprecated or no longer supported.
func (o GetOfferOfferOutput) EndOfLife() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferOffer) bool { return v.EndOfLife }).(pulumi.BoolOutput)
}

// The unique identifier of the option.
func (o GetOfferOfferOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.Id }).(pulumi.StringOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetOfferOfferOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.Name }).(pulumi.StringOutput)
}

// A list of available options for the offer:
func (o GetOfferOfferOutput) Options() GetOfferOfferOptionArrayOutput {
	return o.ApplyT(func(v GetOfferOffer) []GetOfferOfferOption { return v.Options }).(GetOfferOfferOptionArrayOutput)
}

// The offer price.
func (o GetOfferOfferOutput) Price() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.Price }).(pulumi.StringOutput)
}

// Warning information regarding quota limitations for the option.
func (o GetOfferOfferOutput) QuotaWarning() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOffer) string { return v.QuotaWarning }).(pulumi.StringOutput)
}

type GetOfferOfferArrayOutput struct{ *pulumi.OutputState }

func (GetOfferOfferArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferOffer)(nil)).Elem()
}

func (o GetOfferOfferArrayOutput) ToGetOfferOfferArrayOutput() GetOfferOfferArrayOutput {
	return o
}

func (o GetOfferOfferArrayOutput) ToGetOfferOfferArrayOutputWithContext(ctx context.Context) GetOfferOfferArrayOutput {
	return o
}

func (o GetOfferOfferArrayOutput) Index(i pulumi.IntInput) GetOfferOfferOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOfferOffer {
		return vs[0].([]GetOfferOffer)[vs[1].(int)]
	}).(GetOfferOfferOutput)
}

type GetOfferOfferOption struct {
	// The billing operation identifier for the option.
	BillingOperationPath string `pulumi:"billingOperationPath"`
	// The current value set for the option.
	CurrentValue int `pulumi:"currentValue"`
	// The unique identifier of the option.
	Id string `pulumi:"id"`
	// The maximum allowed value for the option.
	MaxValue int `pulumi:"maxValue"`
	// The minimum value for the option.
	MinValue int `pulumi:"minValue"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// The offer price.
	Price string `pulumi:"price"`
	// Warning information regarding quota limitations for the option.
	QuotaWarning string `pulumi:"quotaWarning"`
}

// GetOfferOfferOptionInput is an input type that accepts GetOfferOfferOptionArgs and GetOfferOfferOptionOutput values.
// You can construct a concrete instance of `GetOfferOfferOptionInput` via:
//
//	GetOfferOfferOptionArgs{...}
type GetOfferOfferOptionInput interface {
	pulumi.Input

	ToGetOfferOfferOptionOutput() GetOfferOfferOptionOutput
	ToGetOfferOfferOptionOutputWithContext(context.Context) GetOfferOfferOptionOutput
}

type GetOfferOfferOptionArgs struct {
	// The billing operation identifier for the option.
	BillingOperationPath pulumi.StringInput `pulumi:"billingOperationPath"`
	// The current value set for the option.
	CurrentValue pulumi.IntInput `pulumi:"currentValue"`
	// The unique identifier of the option.
	Id pulumi.StringInput `pulumi:"id"`
	// The maximum allowed value for the option.
	MaxValue pulumi.IntInput `pulumi:"maxValue"`
	// The minimum value for the option.
	MinValue pulumi.IntInput `pulumi:"minValue"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The offer price.
	Price pulumi.StringInput `pulumi:"price"`
	// Warning information regarding quota limitations for the option.
	QuotaWarning pulumi.StringInput `pulumi:"quotaWarning"`
}

func (GetOfferOfferOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferOfferOption)(nil)).Elem()
}

func (i GetOfferOfferOptionArgs) ToGetOfferOfferOptionOutput() GetOfferOfferOptionOutput {
	return i.ToGetOfferOfferOptionOutputWithContext(context.Background())
}

func (i GetOfferOfferOptionArgs) ToGetOfferOfferOptionOutputWithContext(ctx context.Context) GetOfferOfferOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferOfferOptionOutput)
}

// GetOfferOfferOptionArrayInput is an input type that accepts GetOfferOfferOptionArray and GetOfferOfferOptionArrayOutput values.
// You can construct a concrete instance of `GetOfferOfferOptionArrayInput` via:
//
//	GetOfferOfferOptionArray{ GetOfferOfferOptionArgs{...} }
type GetOfferOfferOptionArrayInput interface {
	pulumi.Input

	ToGetOfferOfferOptionArrayOutput() GetOfferOfferOptionArrayOutput
	ToGetOfferOfferOptionArrayOutputWithContext(context.Context) GetOfferOfferOptionArrayOutput
}

type GetOfferOfferOptionArray []GetOfferOfferOptionInput

func (GetOfferOfferOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferOfferOption)(nil)).Elem()
}

func (i GetOfferOfferOptionArray) ToGetOfferOfferOptionArrayOutput() GetOfferOfferOptionArrayOutput {
	return i.ToGetOfferOfferOptionArrayOutputWithContext(context.Background())
}

func (i GetOfferOfferOptionArray) ToGetOfferOfferOptionArrayOutputWithContext(ctx context.Context) GetOfferOfferOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferOfferOptionArrayOutput)
}

type GetOfferOfferOptionOutput struct{ *pulumi.OutputState }

func (GetOfferOfferOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferOfferOption)(nil)).Elem()
}

func (o GetOfferOfferOptionOutput) ToGetOfferOfferOptionOutput() GetOfferOfferOptionOutput {
	return o
}

func (o GetOfferOfferOptionOutput) ToGetOfferOfferOptionOutputWithContext(ctx context.Context) GetOfferOfferOptionOutput {
	return o
}

// The billing operation identifier for the option.
func (o GetOfferOfferOptionOutput) BillingOperationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOfferOption) string { return v.BillingOperationPath }).(pulumi.StringOutput)
}

// The current value set for the option.
func (o GetOfferOfferOptionOutput) CurrentValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferOfferOption) int { return v.CurrentValue }).(pulumi.IntOutput)
}

// The unique identifier of the option.
func (o GetOfferOfferOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOfferOption) string { return v.Id }).(pulumi.StringOutput)
}

// The maximum allowed value for the option.
func (o GetOfferOfferOptionOutput) MaxValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferOfferOption) int { return v.MaxValue }).(pulumi.IntOutput)
}

// The minimum value for the option.
func (o GetOfferOfferOptionOutput) MinValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferOfferOption) int { return v.MinValue }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetOfferOfferOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOfferOption) string { return v.Name }).(pulumi.StringOutput)
}

// The offer price.
func (o GetOfferOfferOptionOutput) Price() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOfferOption) string { return v.Price }).(pulumi.StringOutput)
}

// Warning information regarding quota limitations for the option.
func (o GetOfferOfferOptionOutput) QuotaWarning() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferOfferOption) string { return v.QuotaWarning }).(pulumi.StringOutput)
}

type GetOfferOfferOptionArrayOutput struct{ *pulumi.OutputState }

func (GetOfferOfferOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferOfferOption)(nil)).Elem()
}

func (o GetOfferOfferOptionArrayOutput) ToGetOfferOfferOptionArrayOutput() GetOfferOfferOptionArrayOutput {
	return o
}

func (o GetOfferOfferOptionArrayOutput) ToGetOfferOfferOptionArrayOutputWithContext(ctx context.Context) GetOfferOfferOptionArrayOutput {
	return o
}

func (o GetOfferOfferOptionArrayOutput) Index(i pulumi.IntInput) GetOfferOfferOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOfferOfferOption {
		return vs[0].([]GetOfferOfferOption)[vs[1].(int)]
	}).(GetOfferOfferOptionOutput)
}

type GetOfferProduct struct {
	// The quota of databases.
	DatabasesQuota int `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota int `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota int `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota int `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// The product option.
	Option bool `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram int `pulumi:"ram"`
	// If support is included.
	SupportIncluded bool `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu int `pulumi:"vCpu"`
}

// GetOfferProductInput is an input type that accepts GetOfferProductArgs and GetOfferProductOutput values.
// You can construct a concrete instance of `GetOfferProductInput` via:
//
//	GetOfferProductArgs{...}
type GetOfferProductInput interface {
	pulumi.Input

	ToGetOfferProductOutput() GetOfferProductOutput
	ToGetOfferProductOutputWithContext(context.Context) GetOfferProductOutput
}

type GetOfferProductArgs struct {
	// The quota of databases.
	DatabasesQuota pulumi.IntInput `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota pulumi.IntInput `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota pulumi.IntInput `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota pulumi.IntInput `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The product option.
	Option pulumi.BoolInput `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram pulumi.IntInput `pulumi:"ram"`
	// If support is included.
	SupportIncluded pulumi.BoolInput `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu pulumi.IntInput `pulumi:"vCpu"`
}

func (GetOfferProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferProduct)(nil)).Elem()
}

func (i GetOfferProductArgs) ToGetOfferProductOutput() GetOfferProductOutput {
	return i.ToGetOfferProductOutputWithContext(context.Background())
}

func (i GetOfferProductArgs) ToGetOfferProductOutputWithContext(ctx context.Context) GetOfferProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferProductOutput)
}

// GetOfferProductArrayInput is an input type that accepts GetOfferProductArray and GetOfferProductArrayOutput values.
// You can construct a concrete instance of `GetOfferProductArrayInput` via:
//
//	GetOfferProductArray{ GetOfferProductArgs{...} }
type GetOfferProductArrayInput interface {
	pulumi.Input

	ToGetOfferProductArrayOutput() GetOfferProductArrayOutput
	ToGetOfferProductArrayOutputWithContext(context.Context) GetOfferProductArrayOutput
}

type GetOfferProductArray []GetOfferProductInput

func (GetOfferProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferProduct)(nil)).Elem()
}

func (i GetOfferProductArray) ToGetOfferProductArrayOutput() GetOfferProductArrayOutput {
	return i.ToGetOfferProductArrayOutputWithContext(context.Background())
}

func (i GetOfferProductArray) ToGetOfferProductArrayOutputWithContext(ctx context.Context) GetOfferProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOfferProductArrayOutput)
}

type GetOfferProductOutput struct{ *pulumi.OutputState }

func (GetOfferProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOfferProduct)(nil)).Elem()
}

func (o GetOfferProductOutput) ToGetOfferProductOutput() GetOfferProductOutput {
	return o
}

func (o GetOfferProductOutput) ToGetOfferProductOutputWithContext(ctx context.Context) GetOfferProductOutput {
	return o
}

// The quota of databases.
func (o GetOfferProductOutput) DatabasesQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.DatabasesQuota }).(pulumi.IntOutput)
}

// The quota of email accounts.
func (o GetOfferProductOutput) EmailAccountsQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.EmailAccountsQuota }).(pulumi.IntOutput)
}

// The quota of email storage.
func (o GetOfferProductOutput) EmailStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.EmailStorageQuota }).(pulumi.IntOutput)
}

// The quota of hosting storage.
func (o GetOfferProductOutput) HostingStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.HostingStorageQuota }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetOfferProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOfferProduct) string { return v.Name }).(pulumi.StringOutput)
}

// The product option.
func (o GetOfferProductOutput) Option() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferProduct) bool { return v.Option }).(pulumi.BoolOutput)
}

// The capacity of the memory in GB.
func (o GetOfferProductOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.Ram }).(pulumi.IntOutput)
}

// If support is included.
func (o GetOfferProductOutput) SupportIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOfferProduct) bool { return v.SupportIncluded }).(pulumi.BoolOutput)
}

// The number of cores.
func (o GetOfferProductOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetOfferProduct) int { return v.VCpu }).(pulumi.IntOutput)
}

type GetOfferProductArrayOutput struct{ *pulumi.OutputState }

func (GetOfferProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOfferProduct)(nil)).Elem()
}

func (o GetOfferProductArrayOutput) ToGetOfferProductArrayOutput() GetOfferProductArrayOutput {
	return o
}

func (o GetOfferProductArrayOutput) ToGetOfferProductArrayOutputWithContext(ctx context.Context) GetOfferProductArrayOutput {
	return o
}

func (o GetOfferProductArrayOutput) Index(i pulumi.IntInput) GetOfferProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOfferProduct {
		return vs[0].([]GetOfferProduct)[vs[1].(int)]
	}).(GetOfferProductOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCpanelUrlInput)(nil)).Elem(), HostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingCpanelUrlArrayInput)(nil)).Elem(), HostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingNameServerInput)(nil)).Elem(), HostingNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingNameServerArrayInput)(nil)).Elem(), HostingNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingOptionInput)(nil)).Elem(), HostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingOptionArrayInput)(nil)).Elem(), HostingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingRecordInput)(nil)).Elem(), HostingRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingRecordArrayInput)(nil)).Elem(), HostingRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingCpanelUrlInput)(nil)).Elem(), GetHostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingCpanelUrlArrayInput)(nil)).Elem(), GetHostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingNameServerInput)(nil)).Elem(), GetHostingNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingNameServerArrayInput)(nil)).Elem(), GetHostingNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingOptionInput)(nil)).Elem(), GetHostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingOptionArrayInput)(nil)).Elem(), GetHostingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingRecordInput)(nil)).Elem(), GetHostingRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostingRecordArrayInput)(nil)).Elem(), GetHostingRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferOfferInput)(nil)).Elem(), GetOfferOfferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferOfferArrayInput)(nil)).Elem(), GetOfferOfferArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferOfferOptionInput)(nil)).Elem(), GetOfferOfferOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferOfferOptionArrayInput)(nil)).Elem(), GetOfferOfferOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferProductInput)(nil)).Elem(), GetOfferProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOfferProductArrayInput)(nil)).Elem(), GetOfferProductArray{})
	pulumi.RegisterOutputType(HostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(HostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(HostingNameServerOutput{})
	pulumi.RegisterOutputType(HostingNameServerArrayOutput{})
	pulumi.RegisterOutputType(HostingOptionOutput{})
	pulumi.RegisterOutputType(HostingOptionArrayOutput{})
	pulumi.RegisterOutputType(HostingRecordOutput{})
	pulumi.RegisterOutputType(HostingRecordArrayOutput{})
	pulumi.RegisterOutputType(GetHostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(GetHostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(GetHostingNameServerOutput{})
	pulumi.RegisterOutputType(GetHostingNameServerArrayOutput{})
	pulumi.RegisterOutputType(GetHostingOptionOutput{})
	pulumi.RegisterOutputType(GetHostingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetHostingRecordOutput{})
	pulumi.RegisterOutputType(GetHostingRecordArrayOutput{})
	pulumi.RegisterOutputType(GetOfferOfferOutput{})
	pulumi.RegisterOutputType(GetOfferOfferArrayOutput{})
	pulumi.RegisterOutputType(GetOfferOfferOptionOutput{})
	pulumi.RegisterOutputType(GetOfferOfferOptionArrayOutput{})
	pulumi.RegisterOutputType(GetOfferProductOutput{})
	pulumi.RegisterOutputType(GetOfferProductArrayOutput{})
}
