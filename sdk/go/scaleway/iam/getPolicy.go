// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Use this data source to get information on an existing IAM policy based on its ID.
// For more information refer to the [IAM API documentation](https://developers.scaleway.com/en/products/iam/api/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get policy by id
//			_, err := iam.LookupPolicy(ctx, &iam.LookupPolicyArgs{
//				PolicyId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Get policy by name
//			_, err = iam.LookupPolicy(ctx, &iam.LookupPolicyArgs{
//				Name: pulumi.StringRef("my_policy"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPolicy(ctx *pulumi.Context, args *LookupPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyResult
	err := ctx.Invoke("scaleway:iam/getPolicy:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyArgs struct {
	// The name of the IAM policy.
	Name *string `pulumi:"name"`
	// The ID of the IAM policy.
	//
	// > **Note** You must specify at least one: `name` and/or `policyId`.
	PolicyId *string `pulumi:"policyId"`
}

// A collection of values returned by getPolicy.
type LookupPolicyResult struct {
	// ID of the application the policy is linked to
	ApplicationId string `pulumi:"applicationId"`
	// The date and time of the creation of the policy.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the IAM policy.
	Description string `pulumi:"description"`
	// Whether the policy is editable.
	Editable bool `pulumi:"editable"`
	// ID of the group the policy is linked to
	GroupId string `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// If the policy doesn't apply to a principal.
	NoPrincipal bool `pulumi:"noPrincipal"`
	// ID of organization scoped to the rule.
	OrganizationId string  `pulumi:"organizationId"`
	PolicyId       *string `pulumi:"policyId"`
	// List of rules in the policy.
	Rules []GetPolicyRule `pulumi:"rules"`
	// The tags associated with the IAM policy.
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the policy.
	UpdatedAt string `pulumi:"updatedAt"`
	// ID of the user the policy is linked to
	UserId string `pulumi:"userId"`
}

func LookupPolicyOutput(ctx *pulumi.Context, args LookupPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPolicyResultOutput, error) {
			args := v.(LookupPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:iam/getPolicy:getPolicy", args, LookupPolicyResultOutput{}, options).(LookupPolicyResultOutput), nil
		}).(LookupPolicyResultOutput)
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyOutputArgs struct {
	// The name of the IAM policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the IAM policy.
	//
	// > **Note** You must specify at least one: `name` and/or `policyId`.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
}

func (LookupPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPolicy.
type LookupPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyResult)(nil)).Elem()
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutput() LookupPolicyResultOutput {
	return o
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutputWithContext(ctx context.Context) LookupPolicyResultOutput {
	return o
}

// ID of the application the policy is linked to
func (o LookupPolicyResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The date and time of the creation of the policy.
func (o LookupPolicyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the IAM policy.
func (o LookupPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the policy is editable.
func (o LookupPolicyResultOutput) Editable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPolicyResult) bool { return v.Editable }).(pulumi.BoolOutput)
}

// ID of the group the policy is linked to
func (o LookupPolicyResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPolicyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If the policy doesn't apply to a principal.
func (o LookupPolicyResultOutput) NoPrincipal() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPolicyResult) bool { return v.NoPrincipal }).(pulumi.BoolOutput)
}

// ID of organization scoped to the rule.
func (o LookupPolicyResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupPolicyResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// List of rules in the policy.
func (o LookupPolicyResultOutput) Rules() GetPolicyRuleArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []GetPolicyRule { return v.Rules }).(GetPolicyRuleArrayOutput)
}

// The tags associated with the IAM policy.
func (o LookupPolicyResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date and time of the last update of the policy.
func (o LookupPolicyResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// ID of the user the policy is linked to
func (o LookupPolicyResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyResultOutput{})
}
