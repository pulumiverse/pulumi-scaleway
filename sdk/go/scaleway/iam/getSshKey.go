// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Use this data source to get SSH key information based on its ID or name.
func LookupSshKey(ctx *pulumi.Context, args *LookupSshKeyArgs, opts ...pulumi.InvokeOption) (*LookupSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSshKeyResult
	err := ctx.Invoke("scaleway:iam/getSshKey:getSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSshKey.
type LookupSshKeyArgs struct {
	// The SSH key name.
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the project the SSH
	// key is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The SSH key id.
	//
	// > **Note** You must specify at least one: `name` and/or `sshKeyId`.
	SshKeyId *string `pulumi:"sshKeyId"`
}

// A collection of values returned by getSshKey.
type LookupSshKeyResult struct {
	// The date and time of the creation of the SSH key.
	CreatedAt string `pulumi:"createdAt"`
	// The SSH key status.
	Disabled    bool   `pulumi:"disabled"`
	Fingerprint string `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// The ID of the organization the SSH key is associated with.
	OrganizationId string  `pulumi:"organizationId"`
	ProjectId      *string `pulumi:"projectId"`
	// The SSH public key string
	PublicKey string  `pulumi:"publicKey"`
	SshKeyId  *string `pulumi:"sshKeyId"`
	// The date and time of the last update of the SSH key.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupSshKeyOutput(ctx *pulumi.Context, args LookupSshKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSshKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSshKeyResultOutput, error) {
			args := v.(LookupSshKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:iam/getSshKey:getSshKey", args, LookupSshKeyResultOutput{}, options).(LookupSshKeyResultOutput), nil
		}).(LookupSshKeyResultOutput)
}

// A collection of arguments for invoking getSshKey.
type LookupSshKeyOutputArgs struct {
	// The SSH key name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// `projectId`) The ID of the project the SSH
	// key is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The SSH key id.
	//
	// > **Note** You must specify at least one: `name` and/or `sshKeyId`.
	SshKeyId pulumi.StringPtrInput `pulumi:"sshKeyId"`
}

func (LookupSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSshKey.
type LookupSshKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeyResult)(nil)).Elem()
}

func (o LookupSshKeyResultOutput) ToLookupSshKeyResultOutput() LookupSshKeyResultOutput {
	return o
}

func (o LookupSshKeyResultOutput) ToLookupSshKeyResultOutputWithContext(ctx context.Context) LookupSshKeyResultOutput {
	return o
}

// The date and time of the creation of the SSH key.
func (o LookupSshKeyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The SSH key status.
func (o LookupSshKeyResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSshKeyResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o LookupSshKeyResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSshKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the organization the SSH key is associated with.
func (o LookupSshKeyResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupSshKeyResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The SSH public key string
func (o LookupSshKeyResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

func (o LookupSshKeyResultOutput) SshKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSshKeyResult) *string { return v.SshKeyId }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the SSH key.
func (o LookupSshKeyResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSshKeyResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSshKeyResultOutput{})
}
