// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an instance IP.
func LookupIp(ctx *pulumi.Context, args *LookupIpArgs, opts ...pulumi.InvokeOption) (*LookupIpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpResult
	err := ctx.Invoke("scaleway:instance/getIp:getIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIp.
type LookupIpArgs struct {
	// The IPv4 address to retrieve
	// Only one of `address` and `id` should be specified.
	Address *string `pulumi:"address"`
	// The ID of the IP address to retrieve
	// Only one of `address` and `id` should be specified.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getIp.
type LookupIpResult struct {
	// The IP address.
	Address *string `pulumi:"address"`
	// The ID of the IP.
	Id *string `pulumi:"id"`
	// The organization ID the IP is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The IP Prefix.
	Prefix    string `pulumi:"prefix"`
	ProjectId string `pulumi:"projectId"`
	// The reverse dns attached to this IP
	Reverse  string   `pulumi:"reverse"`
	ServerId string   `pulumi:"serverId"`
	Tags     []string `pulumi:"tags"`
	// The type of the IP
	Type string `pulumi:"type"`
	Zone string `pulumi:"zone"`
}

func LookupIpOutput(ctx *pulumi.Context, args LookupIpOutputArgs, opts ...pulumi.InvokeOption) LookupIpResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIpResultOutput, error) {
			args := v.(LookupIpArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getIp:getIp", args, LookupIpResultOutput{}, options).(LookupIpResultOutput), nil
		}).(LookupIpResultOutput)
}

// A collection of arguments for invoking getIp.
type LookupIpOutputArgs struct {
	// The IPv4 address to retrieve
	// Only one of `address` and `id` should be specified.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IP address to retrieve
	// Only one of `address` and `id` should be specified.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupIpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpArgs)(nil)).Elem()
}

// A collection of values returned by getIp.
type LookupIpResultOutput struct{ *pulumi.OutputState }

func (LookupIpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpResult)(nil)).Elem()
}

func (o LookupIpResultOutput) ToLookupIpResultOutput() LookupIpResultOutput {
	return o
}

func (o LookupIpResultOutput) ToLookupIpResultOutputWithContext(ctx context.Context) LookupIpResultOutput {
	return o
}

// The IP address.
func (o LookupIpResultOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpResult) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IP.
func (o LookupIpResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The organization ID the IP is associated with.
func (o LookupIpResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The IP Prefix.
func (o LookupIpResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o LookupIpResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse dns attached to this IP
func (o LookupIpResultOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.Reverse }).(pulumi.StringOutput)
}

func (o LookupIpResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o LookupIpResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIpResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of the IP
func (o LookupIpResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupIpResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpResultOutput{})
}
