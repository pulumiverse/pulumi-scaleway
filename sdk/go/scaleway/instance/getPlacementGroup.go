// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Security Group.
func LookupPlacementGroup(ctx *pulumi.Context, args *LookupPlacementGroupArgs, opts ...pulumi.InvokeOption) (*LookupPlacementGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlacementGroupResult
	err := ctx.Invoke("scaleway:instance/getPlacementGroup:getPlacementGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlacementGroup.
type LookupPlacementGroupArgs struct {
	// The placement group name. Only one of `name` and `placementGroupId` should be specified.
	Name *string `pulumi:"name"`
	// The placement group id. Only one of `name` and `placementGroupId` should be specified.
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// `projectId`) The ID of the project the placement group is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `zone`) The zone in which the placement group exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getPlacementGroup.
type LookupPlacementGroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name *string `pulumi:"name"`
	// The organization ID the placement group is associated with.
	OrganizationId   string  `pulumi:"organizationId"`
	PlacementGroupId *string `pulumi:"placementGroupId"`
	// The [policy mode](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
	PolicyMode string `pulumi:"policyMode"`
	// Is true when the policy is respected.
	PolicyRespected bool `pulumi:"policyRespected"`
	// The [policy type](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
	PolicyType string `pulumi:"policyType"`
	ProjectId  string `pulumi:"projectId"`
	// A list of tags to apply to the placement group.
	Tags []string `pulumi:"tags"`
	Zone *string  `pulumi:"zone"`
}

func LookupPlacementGroupOutput(ctx *pulumi.Context, args LookupPlacementGroupOutputArgs, opts ...pulumi.InvokeOption) LookupPlacementGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPlacementGroupResultOutput, error) {
			args := v.(LookupPlacementGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getPlacementGroup:getPlacementGroup", args, LookupPlacementGroupResultOutput{}, options).(LookupPlacementGroupResultOutput), nil
		}).(LookupPlacementGroupResultOutput)
}

// A collection of arguments for invoking getPlacementGroup.
type LookupPlacementGroupOutputArgs struct {
	// The placement group name. Only one of `name` and `placementGroupId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The placement group id. Only one of `name` and `placementGroupId` should be specified.
	PlacementGroupId pulumi.StringPtrInput `pulumi:"placementGroupId"`
	// `projectId`) The ID of the project the placement group is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `zone`) The zone in which the placement group exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupPlacementGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlacementGroupArgs)(nil)).Elem()
}

// A collection of values returned by getPlacementGroup.
type LookupPlacementGroupResultOutput struct{ *pulumi.OutputState }

func (LookupPlacementGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlacementGroupResult)(nil)).Elem()
}

func (o LookupPlacementGroupResultOutput) ToLookupPlacementGroupResultOutput() LookupPlacementGroupResultOutput {
	return o
}

func (o LookupPlacementGroupResultOutput) ToLookupPlacementGroupResultOutputWithContext(ctx context.Context) LookupPlacementGroupResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlacementGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPlacementGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID the placement group is associated with.
func (o LookupPlacementGroupResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupPlacementGroupResultOutput) PlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) *string { return v.PlacementGroupId }).(pulumi.StringPtrOutput)
}

// The [policy mode](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
func (o LookupPlacementGroupResultOutput) PolicyMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) string { return v.PolicyMode }).(pulumi.StringOutput)
}

// Is true when the policy is respected.
func (o LookupPlacementGroupResultOutput) PolicyRespected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) bool { return v.PolicyRespected }).(pulumi.BoolOutput)
}

// The [policy type](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) of the placement group.
func (o LookupPlacementGroupResultOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) string { return v.PolicyType }).(pulumi.StringOutput)
}

func (o LookupPlacementGroupResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// A list of tags to apply to the placement group.
func (o LookupPlacementGroupResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupPlacementGroupResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlacementGroupResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlacementGroupResultOutput{})
}
