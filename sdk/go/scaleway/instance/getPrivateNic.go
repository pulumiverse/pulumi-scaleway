// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an instance private NIC.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/instance"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := instance.LookupPrivateNic(ctx, &instance.LookupPrivateNicArgs{
//				ServerId:     "11111111-1111-1111-1111-111111111111",
//				PrivateNicId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = instance.LookupPrivateNic(ctx, &instance.LookupPrivateNicArgs{
//				ServerId:         "11111111-1111-1111-1111-111111111111",
//				PrivateNetworkId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = instance.LookupPrivateNic(ctx, &instance.LookupPrivateNicArgs{
//				ServerId: "11111111-1111-1111-1111-111111111111",
//				Tags: []string{
//					"mytag",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPrivateNic(ctx *pulumi.Context, args *LookupPrivateNicArgs, opts ...pulumi.InvokeOption) (*LookupPrivateNicResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPrivateNicResult
	err := ctx.Invoke("scaleway:instance/getPrivateNic:getPrivateNic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrivateNic.
type LookupPrivateNicArgs struct {
	// The ID of the private network
	// Only one of `privateNicId` and `privateNetworkId` should be specified.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// The ID of the instance server private nic
	// Only one of `privateNicId` and `privateNetworkId` should be specified.
	PrivateNicId *string `pulumi:"privateNicId"`
	// The server's id
	ServerId string `pulumi:"serverId"`
	// The tags associated with the private NIC.
	// As datasource only returns one private NIC, the search with given tags must return only one result
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which the private nic exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getPrivateNic.
type LookupPrivateNicResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                   `pulumi:"id"`
	IpIds            []string                 `pulumi:"ipIds"`
	IpamIpIds        []string                 `pulumi:"ipamIpIds"`
	MacAddress       string                   `pulumi:"macAddress"`
	PrivateIps       []GetPrivateNicPrivateIp `pulumi:"privateIps"`
	PrivateNetworkId *string                  `pulumi:"privateNetworkId"`
	PrivateNicId     *string                  `pulumi:"privateNicId"`
	ServerId         string                   `pulumi:"serverId"`
	Tags             []string                 `pulumi:"tags"`
	Zone             *string                  `pulumi:"zone"`
}

func LookupPrivateNicOutput(ctx *pulumi.Context, args LookupPrivateNicOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateNicResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPrivateNicResultOutput, error) {
			args := v.(LookupPrivateNicArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getPrivateNic:getPrivateNic", args, LookupPrivateNicResultOutput{}, options).(LookupPrivateNicResultOutput), nil
		}).(LookupPrivateNicResultOutput)
}

// A collection of arguments for invoking getPrivateNic.
type LookupPrivateNicOutputArgs struct {
	// The ID of the private network
	// Only one of `privateNicId` and `privateNetworkId` should be specified.
	PrivateNetworkId pulumi.StringPtrInput `pulumi:"privateNetworkId"`
	// The ID of the instance server private nic
	// Only one of `privateNicId` and `privateNetworkId` should be specified.
	PrivateNicId pulumi.StringPtrInput `pulumi:"privateNicId"`
	// The server's id
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The tags associated with the private NIC.
	// As datasource only returns one private NIC, the search with given tags must return only one result
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// `zone`) The zone in which the private nic exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupPrivateNicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateNicArgs)(nil)).Elem()
}

// A collection of values returned by getPrivateNic.
type LookupPrivateNicResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateNicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateNicResult)(nil)).Elem()
}

func (o LookupPrivateNicResultOutput) ToLookupPrivateNicResultOutput() LookupPrivateNicResultOutput {
	return o
}

func (o LookupPrivateNicResultOutput) ToLookupPrivateNicResultOutputWithContext(ctx context.Context) LookupPrivateNicResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPrivateNicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPrivateNicResultOutput) IpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) []string { return v.IpIds }).(pulumi.StringArrayOutput)
}

func (o LookupPrivateNicResultOutput) IpamIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) []string { return v.IpamIpIds }).(pulumi.StringArrayOutput)
}

func (o LookupPrivateNicResultOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o LookupPrivateNicResultOutput) PrivateIps() GetPrivateNicPrivateIpArrayOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) []GetPrivateNicPrivateIp { return v.PrivateIps }).(GetPrivateNicPrivateIpArrayOutput)
}

func (o LookupPrivateNicResultOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) *string { return v.PrivateNetworkId }).(pulumi.StringPtrOutput)
}

func (o LookupPrivateNicResultOutput) PrivateNicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) *string { return v.PrivateNicId }).(pulumi.StringPtrOutput)
}

func (o LookupPrivateNicResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o LookupPrivateNicResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupPrivateNicResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPrivateNicResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateNicResultOutput{})
}
