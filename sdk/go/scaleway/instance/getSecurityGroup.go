// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a Security Group.
func LookupSecurityGroup(ctx *pulumi.Context, args *LookupSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupSecurityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityGroupResult
	err := ctx.Invoke("scaleway:instance/getSecurityGroup:getSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupArgs struct {
	// The security group name. Only one of `name` and `securityGroupId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the security group is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The security group id. Only one of `name` and `securityGroupId` should be specified.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// `zone`) The zone in which the security group exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResult struct {
	Description           string `pulumi:"description"`
	EnableDefaultSecurity bool   `pulumi:"enableDefaultSecurity"`
	ExternalRules         bool   `pulumi:"externalRules"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy string `pulumi:"inboundDefaultPolicy"`
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []GetSecurityGroupInboundRule `pulumi:"inboundRules"`
	Name         *string                       `pulumi:"name"`
	// The ID of the organization the security group is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy string `pulumi:"outboundDefaultPolicy"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules   []GetSecurityGroupOutboundRule `pulumi:"outboundRules"`
	ProjectId       *string                        `pulumi:"projectId"`
	SecurityGroupId *string                        `pulumi:"securityGroupId"`
	Stateful        bool                           `pulumi:"stateful"`
	Tags            []string                       `pulumi:"tags"`
	Zone            *string                        `pulumi:"zone"`
}

func LookupSecurityGroupOutput(ctx *pulumi.Context, args LookupSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityGroupResultOutput, error) {
			args := v.(LookupSecurityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getSecurityGroup:getSecurityGroup", args, LookupSecurityGroupResultOutput{}, options).(LookupSecurityGroupResultOutput), nil
		}).(LookupSecurityGroupResultOutput)
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupOutputArgs struct {
	// The security group name. Only one of `name` and `securityGroupId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the security group is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The security group id. Only one of `name` and `securityGroupId` should be specified.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// `zone`) The zone in which the security group exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupResult)(nil)).Elem()
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutput() LookupSecurityGroupResultOutput {
	return o
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutputWithContext(ctx context.Context) LookupSecurityGroupResultOutput {
	return o
}

func (o LookupSecurityGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSecurityGroupResultOutput) EnableDefaultSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) bool { return v.EnableDefaultSecurity }).(pulumi.BoolOutput)
}

func (o LookupSecurityGroupResultOutput) ExternalRules() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) bool { return v.ExternalRules }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecurityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
func (o LookupSecurityGroupResultOutput) InboundDefaultPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.InboundDefaultPolicy }).(pulumi.StringOutput)
}

// A list of inbound rule to add to the security group. (Structure is documented below.)
func (o LookupSecurityGroupResultOutput) InboundRules() GetSecurityGroupInboundRuleArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupInboundRule { return v.InboundRules }).(GetSecurityGroupInboundRuleArrayOutput)
}

func (o LookupSecurityGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the organization the security group is associated with.
func (o LookupSecurityGroupResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
func (o LookupSecurityGroupResultOutput) OutboundDefaultPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.OutboundDefaultPolicy }).(pulumi.StringOutput)
}

// A list of outbound rule to add to the security group. (Structure is documented below.)
func (o LookupSecurityGroupResultOutput) OutboundRules() GetSecurityGroupOutboundRuleArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupOutboundRule { return v.OutboundRules }).(GetSecurityGroupOutboundRuleArrayOutput)
}

func (o LookupSecurityGroupResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupSecurityGroupResultOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o LookupSecurityGroupResultOutput) Stateful() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) bool { return v.Stateful }).(pulumi.BoolOutput)
}

func (o LookupSecurityGroupResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupSecurityGroupResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityGroupResultOutput{})
}
