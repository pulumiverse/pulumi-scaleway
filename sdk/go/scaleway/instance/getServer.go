// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an instance server.
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerResult
	err := ctx.Invoke("scaleway:instance/getServer:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServer.
type LookupServerArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name *string `pulumi:"name"`
	// The ID of the project the instance server is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The server id. Only one of `name` and `serverId` should be specified.
	ServerId *string `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getServer.
type LookupServerResult struct {
	// The [additional volumes](https://developers.scaleway.com/en/products/instance/api/#volumes-7e8a39)
	// attached to the server.
	AdditionalVolumeIds []string `pulumi:"additionalVolumeIds"`
	BootType            string   `pulumi:"bootType"`
	BootscriptId        string   `pulumi:"bootscriptId"`
	// The cloud init script associated with this server.
	CloudInit string `pulumi:"cloudInit"`
	// True if dynamic IP in enable on the server.
	EnableDynamicIp bool `pulumi:"enableDynamicIp"`
	// Determines if IPv6 is enabled for the server.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The UUID and the label of the base image used by the server.
	Image string   `pulumi:"image"`
	IpId  string   `pulumi:"ipId"`
	IpIds []string `pulumi:"ipIds"`
	// The default ipv6 address routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6Address string `pulumi:"ipv6Address"`
	// The ipv6 gateway address. ( Only set when enableIpv6 is set to true )
	Ipv6Gateway string `pulumi:"ipv6Gateway"`
	// The prefix length of the ipv6 subnet routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6PrefixLength int     `pulumi:"ipv6PrefixLength"`
	Name             *string `pulumi:"name"`
	// The ID of the organization the server is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
	PlacementGroupId string `pulumi:"placementGroupId"`
	// True when the placement group policy is respected.
	PlacementGroupPolicyRespected bool `pulumi:"placementGroupPolicyRespected"`
	// The Scaleway internal IP address of the server.
	PrivateIp       string                    `pulumi:"privateIp"`
	PrivateIps      []GetServerPrivateIp      `pulumi:"privateIps"`
	PrivateNetworks []GetServerPrivateNetwork `pulumi:"privateNetworks"`
	ProjectId       *string                   `pulumi:"projectId"`
	Protected       bool                      `pulumi:"protected"`
	// The public IP address of the server.
	PublicIp string `pulumi:"publicIp"`
	// The list of public IPs of the server
	PublicIps           []GetServerPublicIp   `pulumi:"publicIps"`
	ReplaceOnTypeChange bool                  `pulumi:"replaceOnTypeChange"`
	RootVolumes         []GetServerRootVolume `pulumi:"rootVolumes"`
	// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
	SecurityGroupId string  `pulumi:"securityGroupId"`
	ServerId        *string `pulumi:"serverId"`
	// The state of the server. Possible values are: `started`, `stopped` or `standby`.
	State string `pulumi:"state"`
	// The tags associated with the server.
	Tags []string `pulumi:"tags"`
	// The commercial type of the server.
	// You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
	Type string `pulumi:"type"`
	// The user data associated with the server.
	UserData map[string]string `pulumi:"userData"`
	Zone     *string           `pulumi:"zone"`
}

func LookupServerOutput(ctx *pulumi.Context, args LookupServerOutputArgs, opts ...pulumi.InvokeOption) LookupServerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerResultOutput, error) {
			args := v.(LookupServerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getServer:getServer", args, LookupServerResultOutput{}, options).(LookupServerResultOutput), nil
		}).(LookupServerResultOutput)
}

// A collection of arguments for invoking getServer.
type LookupServerOutputArgs struct {
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the instance server is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The server id. Only one of `name` and `serverId` should be specified.
	ServerId pulumi.StringPtrInput `pulumi:"serverId"`
	// `zone`) The zone in which the server exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerArgs)(nil)).Elem()
}

// A collection of values returned by getServer.
type LookupServerResultOutput struct{ *pulumi.OutputState }

func (LookupServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerResult)(nil)).Elem()
}

func (o LookupServerResultOutput) ToLookupServerResultOutput() LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) ToLookupServerResultOutputWithContext(ctx context.Context) LookupServerResultOutput {
	return o
}

// The [additional volumes](https://developers.scaleway.com/en/products/instance/api/#volumes-7e8a39)
// attached to the server.
func (o LookupServerResultOutput) AdditionalVolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.AdditionalVolumeIds }).(pulumi.StringArrayOutput)
}

func (o LookupServerResultOutput) BootType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.BootType }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) BootscriptId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.BootscriptId }).(pulumi.StringOutput)
}

// The cloud init script associated with this server.
func (o LookupServerResultOutput) CloudInit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.CloudInit }).(pulumi.StringOutput)
}

// True if dynamic IP in enable on the server.
func (o LookupServerResultOutput) EnableDynamicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.EnableDynamicIp }).(pulumi.BoolOutput)
}

// Determines if IPv6 is enabled for the server.
func (o LookupServerResultOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The UUID and the label of the base image used by the server.
func (o LookupServerResultOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Image }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) IpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.IpId }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) IpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.IpIds }).(pulumi.StringArrayOutput)
}

// The default ipv6 address routed to the server. ( Only set when enableIpv6 is set to true )
func (o LookupServerResultOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The ipv6 gateway address. ( Only set when enableIpv6 is set to true )
func (o LookupServerResultOutput) Ipv6Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Ipv6Gateway }).(pulumi.StringOutput)
}

// The prefix length of the ipv6 subnet routed to the server. ( Only set when enableIpv6 is set to true )
func (o LookupServerResultOutput) Ipv6PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerResult) int { return v.Ipv6PrefixLength }).(pulumi.IntOutput)
}

func (o LookupServerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ID of the organization the server is associated with.
func (o LookupServerResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
func (o LookupServerResultOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

// True when the placement group policy is respected.
func (o LookupServerResultOutput) PlacementGroupPolicyRespected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.PlacementGroupPolicyRespected }).(pulumi.BoolOutput)
}

// The Scaleway internal IP address of the server.
func (o LookupServerResultOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) PrivateIps() GetServerPrivateIpArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerPrivateIp { return v.PrivateIps }).(GetServerPrivateIpArrayOutput)
}

func (o LookupServerResultOutput) PrivateNetworks() GetServerPrivateNetworkArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerPrivateNetwork { return v.PrivateNetworks }).(GetServerPrivateNetworkArrayOutput)
}

func (o LookupServerResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupServerResultOutput) Protected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.Protected }).(pulumi.BoolOutput)
}

// The public IP address of the server.
func (o LookupServerResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The list of public IPs of the server
func (o LookupServerResultOutput) PublicIps() GetServerPublicIpArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerPublicIp { return v.PublicIps }).(GetServerPublicIpArrayOutput)
}

func (o LookupServerResultOutput) ReplaceOnTypeChange() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerResult) bool { return v.ReplaceOnTypeChange }).(pulumi.BoolOutput)
}

func (o LookupServerResultOutput) RootVolumes() GetServerRootVolumeArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerRootVolume { return v.RootVolumes }).(GetServerRootVolumeArrayOutput)
}

// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
func (o LookupServerResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o LookupServerResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

// The state of the server. Possible values are: `started`, `stopped` or `standby`.
func (o LookupServerResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.State }).(pulumi.StringOutput)
}

// The tags associated with the server.
func (o LookupServerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The commercial type of the server.
// You find all the available types on the [pricing page](https://www.scaleway.com/en/pricing/).
func (o LookupServerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Type }).(pulumi.StringOutput)
}

// The user data associated with the server.
func (o LookupServerResultOutput) UserData() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerResult) map[string]string { return v.UserData }).(pulumi.StringMapOutput)
}

func (o LookupServerResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerResultOutput{})
}
