// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about a server type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/instance"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := instance.GetServerType(ctx, &instance.GetServerTypeArgs{
//				Name: "PRO2-S",
//				Zone: pulumi.StringRef("nl-ams-1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetServerType(ctx *pulumi.Context, args *GetServerTypeArgs, opts ...pulumi.InvokeOption) (*GetServerTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerTypeResult
	err := ctx.Invoke("scaleway:instance/getServerType:getServerType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerType.
type GetServerTypeArgs struct {
	// The name of the server type.
	// Only one of `name` and `snapshotId` should be specified.
	Name string `pulumi:"name"`
	// `zone`) The zone of the server type (to check the availability of the server type for example).
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getServerType.
type GetServerTypeResult struct {
	// The architecture of the server type.
	Arch string `pulumi:"arch"`
	// Whether the server type is available in the zone.
	Availability string `pulumi:"availability"`
	// The specific capabilities of the server type.
	Capabilities []GetServerTypeCapability `pulumi:"capabilities"`
	// The number of CPU cores of the server type.
	Cpu int `pulumi:"cpu"`
	// Whether the server type will soon reach End Of Service.
	EndOfService bool `pulumi:"endOfService"`
	// The number of GPUs of the server type.
	Gpu int `pulumi:"gpu"`
	// The hourly price of the server type (in euros).
	HourlyPrice float64 `pulumi:"hourlyPrice"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The network specifications of the server type.
	Networks []GetServerTypeNetwork `pulumi:"networks"`
	// The amount of RAM of the server type (in bytes).
	Ram int `pulumi:"ram"`
	// The specifications of volumes allowed for the server type.
	Volumes []GetServerTypeVolume `pulumi:"volumes"`
	Zone    *string               `pulumi:"zone"`
}

func GetServerTypeOutput(ctx *pulumi.Context, args GetServerTypeOutputArgs, opts ...pulumi.InvokeOption) GetServerTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServerTypeResultOutput, error) {
			args := v.(GetServerTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getServerType:getServerType", args, GetServerTypeResultOutput{}, options).(GetServerTypeResultOutput), nil
		}).(GetServerTypeResultOutput)
}

// A collection of arguments for invoking getServerType.
type GetServerTypeOutputArgs struct {
	// The name of the server type.
	// Only one of `name` and `snapshotId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// `zone`) The zone of the server type (to check the availability of the server type for example).
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetServerTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeArgs)(nil)).Elem()
}

// A collection of values returned by getServerType.
type GetServerTypeResultOutput struct{ *pulumi.OutputState }

func (GetServerTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTypeResult)(nil)).Elem()
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutput() GetServerTypeResultOutput {
	return o
}

func (o GetServerTypeResultOutput) ToGetServerTypeResultOutputWithContext(ctx context.Context) GetServerTypeResultOutput {
	return o
}

// The architecture of the server type.
func (o GetServerTypeResultOutput) Arch() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Arch }).(pulumi.StringOutput)
}

// Whether the server type is available in the zone.
func (o GetServerTypeResultOutput) Availability() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Availability }).(pulumi.StringOutput)
}

// The specific capabilities of the server type.
func (o GetServerTypeResultOutput) Capabilities() GetServerTypeCapabilityArrayOutput {
	return o.ApplyT(func(v GetServerTypeResult) []GetServerTypeCapability { return v.Capabilities }).(GetServerTypeCapabilityArrayOutput)
}

// The number of CPU cores of the server type.
func (o GetServerTypeResultOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Cpu }).(pulumi.IntOutput)
}

// Whether the server type will soon reach End Of Service.
func (o GetServerTypeResultOutput) EndOfService() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerTypeResult) bool { return v.EndOfService }).(pulumi.BoolOutput)
}

// The number of GPUs of the server type.
func (o GetServerTypeResultOutput) Gpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Gpu }).(pulumi.IntOutput)
}

// The hourly price of the server type (in euros).
func (o GetServerTypeResultOutput) HourlyPrice() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerTypeResult) float64 { return v.HourlyPrice }).(pulumi.Float64Output)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServerTypeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerTypeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTypeResult) string { return v.Name }).(pulumi.StringOutput)
}

// The network specifications of the server type.
func (o GetServerTypeResultOutput) Networks() GetServerTypeNetworkArrayOutput {
	return o.ApplyT(func(v GetServerTypeResult) []GetServerTypeNetwork { return v.Networks }).(GetServerTypeNetworkArrayOutput)
}

// The amount of RAM of the server type (in bytes).
func (o GetServerTypeResultOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerTypeResult) int { return v.Ram }).(pulumi.IntOutput)
}

// The specifications of volumes allowed for the server type.
func (o GetServerTypeResultOutput) Volumes() GetServerTypeVolumeArrayOutput {
	return o.ApplyT(func(v GetServerTypeResult) []GetServerTypeVolume { return v.Volumes }).(GetServerTypeVolumeArrayOutput)
}

func (o GetServerTypeResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerTypeResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerTypeResultOutput{})
}
