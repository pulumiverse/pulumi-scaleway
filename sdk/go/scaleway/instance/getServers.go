// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple instance servers.
//
// ## Examples
func GetServers(ctx *pulumi.Context, args *GetServersArgs, opts ...pulumi.InvokeOption) (*GetServersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServersResult
	err := ctx.Invoke("scaleway:instance/getServers:getServers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServers.
type GetServersArgs struct {
	// The server name used as filter. Servers with a name like it are listed.
	Name *string `pulumi:"name"`
	// The ID of the project the server is associated with.
	ProjectId *string `pulumi:"projectId"`
	// List of tags used as filter. Servers with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which servers exist.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getServers.
type GetServersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the server.
	Name *string `pulumi:"name"`
	// The organization ID the server is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the project the server is associated with.
	ProjectId string `pulumi:"projectId"`
	// List of found servers
	Servers []GetServersServer `pulumi:"servers"`
	// The tags associated with the server.
	Tags []string `pulumi:"tags"`
	// The zone in which the server is.
	Zone *string `pulumi:"zone"`
}

func GetServersOutput(ctx *pulumi.Context, args GetServersOutputArgs, opts ...pulumi.InvokeOption) GetServersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServersResultOutput, error) {
			args := v.(GetServersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getServers:getServers", args, GetServersResultOutput{}, options).(GetServersResultOutput), nil
		}).(GetServersResultOutput)
}

// A collection of arguments for invoking getServers.
type GetServersOutputArgs struct {
	// The server name used as filter. Servers with a name like it are listed.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the project the server is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// List of tags used as filter. Servers with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// `zone`) The zone in which servers exist.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetServersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersArgs)(nil)).Elem()
}

// A collection of values returned by getServers.
type GetServersResultOutput struct{ *pulumi.OutputState }

func (GetServersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServersResult)(nil)).Elem()
}

func (o GetServersResultOutput) ToGetServersResultOutput() GetServersResultOutput {
	return o
}

func (o GetServersResultOutput) ToGetServersResultOutputWithContext(ctx context.Context) GetServersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetServersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the server.
func (o GetServersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID the server is associated with.
func (o GetServersResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the project the server is associated with.
func (o GetServersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of found servers
func (o GetServersResultOutput) Servers() GetServersServerArrayOutput {
	return o.ApplyT(func(v GetServersResult) []GetServersServer { return v.Servers }).(GetServersServerArrayOutput)
}

// The tags associated with the server.
func (o GetServersResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServersResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The zone in which the server is.
func (o GetServersResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServersResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServersResultOutput{})
}
