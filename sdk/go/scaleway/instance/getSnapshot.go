// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an instance snapshot.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/instance"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Get info by snapshot name
//			_, err := instance.LookupSnapshot(ctx, &instance.LookupSnapshotArgs{
//				Name: pulumi.StringRef("my-snapshot-name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Get info by snapshot ID
//			_, err = instance.LookupSnapshot(ctx, &instance.LookupSnapshotArgs{
//				SnapshotId: pulumi.StringRef("11111111-1111-1111-1111-111111111111"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnapshotResult
	err := ctx.Invoke("scaleway:instance/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	// The snapshot name.
	// Only one of `name` and `snapshotId` should be specified.
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the project the snapshot is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The snapshot id.
	// Only one of `name` and `snapshotId` should be specified.
	SnapshotId *string `pulumi:"snapshotId"`
	// `zone`) The zone in which the snapshot exists.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id             string              `pulumi:"id"`
	Imports        []GetSnapshotImport `pulumi:"imports"`
	Name           *string             `pulumi:"name"`
	OrganizationId string              `pulumi:"organizationId"`
	ProjectId      *string             `pulumi:"projectId"`
	SizeInGb       int                 `pulumi:"sizeInGb"`
	SnapshotId     *string             `pulumi:"snapshotId"`
	Tags           []string            `pulumi:"tags"`
	Type           string              `pulumi:"type"`
	VolumeId       string              `pulumi:"volumeId"`
	Zone           *string             `pulumi:"zone"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResultOutput, error) {
			args := v.(LookupSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:instance/getSnapshot:getSnapshot", args, LookupSnapshotResultOutput{}, options).(LookupSnapshotResultOutput), nil
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	// The snapshot name.
	// Only one of `name` and `snapshotId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// `projectId`) The ID of the project the snapshot is associated with.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// The snapshot id.
	// Only one of `name` and `snapshotId` should be specified.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// `zone`) The zone in which the snapshot exists.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Imports() GetSnapshotImportArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotImport { return v.Imports }).(GetSnapshotImportArrayOutput)
}

func (o LookupSnapshotResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSnapshotResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupSnapshotResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSnapshotResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o LookupSnapshotResultOutput) SizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.SizeInGb }).(pulumi.IntOutput)
}

func (o LookupSnapshotResultOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSnapshotResult) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o LookupSnapshotResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupSnapshotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSnapshotResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
