// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// ## Import
//
// Instance security group can be imported using the `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:instance/securityGroup:SecurityGroup web fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type SecurityGroup struct {
	pulumi.CustomResourceState

	// The description of the security group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
	EnableDefaultSecurity pulumi.BoolPtrOutput `pulumi:"enableDefaultSecurity"`
	// A boolean to specify whether to use instance_security_group_rules.
	// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
	ExternalRules pulumi.BoolPtrOutput `pulumi:"externalRules"`
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy pulumi.StringPtrOutput `pulumi:"inboundDefaultPolicy"`
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupInboundRuleArrayOutput `pulumi:"inboundRules"`
	// The name of the security group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization ID the security group is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy pulumi.StringPtrOutput `pulumi:"outboundDefaultPolicy"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// `projectId`) The ID of the project the security group is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// A boolean to specify whether the security group should be stateful or not.
	Stateful pulumi.BoolPtrOutput `pulumi:"stateful"`
	// The tags associated with the security group
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// `zone`) The zone in which the security group should be created.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil {
		args = &SecurityGroupArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("scaleway:index/instanceSecurityGroup:InstanceSecurityGroup"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroup
	err := ctx.RegisterResource("scaleway:instance/securityGroup:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("scaleway:instance/securityGroup:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
	// The description of the security group.
	Description *string `pulumi:"description"`
	// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
	EnableDefaultSecurity *bool `pulumi:"enableDefaultSecurity"`
	// A boolean to specify whether to use instance_security_group_rules.
	// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
	ExternalRules *bool `pulumi:"externalRules"`
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy *string `pulumi:"inboundDefaultPolicy"`
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []SecurityGroupInboundRule `pulumi:"inboundRules"`
	// The name of the security group.
	Name *string `pulumi:"name"`
	// The organization ID the security group is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy *string `pulumi:"outboundDefaultPolicy"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []SecurityGroupOutboundRule `pulumi:"outboundRules"`
	// `projectId`) The ID of the project the security group is associated with.
	ProjectId *string `pulumi:"projectId"`
	// A boolean to specify whether the security group should be stateful or not.
	Stateful *bool `pulumi:"stateful"`
	// The tags associated with the security group
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which the security group should be created.
	Zone *string `pulumi:"zone"`
}

type SecurityGroupState struct {
	// The description of the security group.
	Description pulumi.StringPtrInput
	// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
	EnableDefaultSecurity pulumi.BoolPtrInput
	// A boolean to specify whether to use instance_security_group_rules.
	// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
	ExternalRules pulumi.BoolPtrInput
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy pulumi.StringPtrInput
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupInboundRuleArrayInput
	// The name of the security group.
	Name pulumi.StringPtrInput
	// The organization ID the security group is associated with.
	OrganizationId pulumi.StringPtrInput
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy pulumi.StringPtrInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupOutboundRuleArrayInput
	// `projectId`) The ID of the project the security group is associated with.
	ProjectId pulumi.StringPtrInput
	// A boolean to specify whether the security group should be stateful or not.
	Stateful pulumi.BoolPtrInput
	// The tags associated with the security group
	Tags pulumi.StringArrayInput
	// `zone`) The zone in which the security group should be created.
	Zone pulumi.StringPtrInput
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	// The description of the security group.
	Description *string `pulumi:"description"`
	// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
	EnableDefaultSecurity *bool `pulumi:"enableDefaultSecurity"`
	// A boolean to specify whether to use instance_security_group_rules.
	// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
	ExternalRules *bool `pulumi:"externalRules"`
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy *string `pulumi:"inboundDefaultPolicy"`
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []SecurityGroupInboundRule `pulumi:"inboundRules"`
	// The name of the security group.
	Name *string `pulumi:"name"`
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy *string `pulumi:"outboundDefaultPolicy"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []SecurityGroupOutboundRule `pulumi:"outboundRules"`
	// `projectId`) The ID of the project the security group is associated with.
	ProjectId *string `pulumi:"projectId"`
	// A boolean to specify whether the security group should be stateful or not.
	Stateful *bool `pulumi:"stateful"`
	// The tags associated with the security group
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which the security group should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	// The description of the security group.
	Description pulumi.StringPtrInput
	// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
	EnableDefaultSecurity pulumi.BoolPtrInput
	// A boolean to specify whether to use instance_security_group_rules.
	// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
	ExternalRules pulumi.BoolPtrInput
	// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
	InboundDefaultPolicy pulumi.StringPtrInput
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupInboundRuleArrayInput
	// The name of the security group.
	Name pulumi.StringPtrInput
	// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
	OutboundDefaultPolicy pulumi.StringPtrInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupOutboundRuleArrayInput
	// `projectId`) The ID of the project the security group is associated with.
	ProjectId pulumi.StringPtrInput
	// A boolean to specify whether the security group should be stateful or not.
	Stateful pulumi.BoolPtrInput
	// The tags associated with the security group
	Tags pulumi.StringArrayInput
	// `zone`) The zone in which the security group should be created.
	Zone pulumi.StringPtrInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}

type SecurityGroupInput interface {
	pulumi.Input

	ToSecurityGroupOutput() SecurityGroupOutput
	ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput
}

func (*SecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroup)(nil)).Elem()
}

func (i *SecurityGroup) ToSecurityGroupOutput() SecurityGroupOutput {
	return i.ToSecurityGroupOutputWithContext(context.Background())
}

func (i *SecurityGroup) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupOutput)
}

// SecurityGroupArrayInput is an input type that accepts SecurityGroupArray and SecurityGroupArrayOutput values.
// You can construct a concrete instance of `SecurityGroupArrayInput` via:
//
//	SecurityGroupArray{ SecurityGroupArgs{...} }
type SecurityGroupArrayInput interface {
	pulumi.Input

	ToSecurityGroupArrayOutput() SecurityGroupArrayOutput
	ToSecurityGroupArrayOutputWithContext(context.Context) SecurityGroupArrayOutput
}

type SecurityGroupArray []SecurityGroupInput

func (SecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroup)(nil)).Elem()
}

func (i SecurityGroupArray) ToSecurityGroupArrayOutput() SecurityGroupArrayOutput {
	return i.ToSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SecurityGroupArray) ToSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupArrayOutput)
}

// SecurityGroupMapInput is an input type that accepts SecurityGroupMap and SecurityGroupMapOutput values.
// You can construct a concrete instance of `SecurityGroupMapInput` via:
//
//	SecurityGroupMap{ "key": SecurityGroupArgs{...} }
type SecurityGroupMapInput interface {
	pulumi.Input

	ToSecurityGroupMapOutput() SecurityGroupMapOutput
	ToSecurityGroupMapOutputWithContext(context.Context) SecurityGroupMapOutput
}

type SecurityGroupMap map[string]SecurityGroupInput

func (SecurityGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroup)(nil)).Elem()
}

func (i SecurityGroupMap) ToSecurityGroupMapOutput() SecurityGroupMapOutput {
	return i.ToSecurityGroupMapOutputWithContext(context.Background())
}

func (i SecurityGroupMap) ToSecurityGroupMapOutputWithContext(ctx context.Context) SecurityGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupMapOutput)
}

type SecurityGroupOutput struct{ *pulumi.OutputState }

func (SecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupOutput) ToSecurityGroupOutput() SecurityGroupOutput {
	return o
}

func (o SecurityGroupOutput) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return o
}

// The description of the security group.
func (o SecurityGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to block SMTP on IPv4/IPv6 (Port 25, 465, 587). Set to false will unblock SMTP if your account is authorized to. If your organization is not yet authorized to send SMTP traffic, [open a support ticket](https://console.scaleway.com/support/tickets).
func (o SecurityGroupOutput) EnableDefaultSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.BoolPtrOutput { return v.EnableDefaultSecurity }).(pulumi.BoolPtrOutput)
}

// A boolean to specify whether to use instance_security_group_rules.
// If `externalRules` is set to `true`, `inboundRule` and `outboundRule` can not be set directly in the security group.
func (o SecurityGroupOutput) ExternalRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.BoolPtrOutput { return v.ExternalRules }).(pulumi.BoolPtrOutput)
}

// The default policy on incoming traffic. Possible values are: `accept` or `drop`.
func (o SecurityGroupOutput) InboundDefaultPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringPtrOutput { return v.InboundDefaultPolicy }).(pulumi.StringPtrOutput)
}

// A list of inbound rule to add to the security group. (Structure is documented below.)
func (o SecurityGroupOutput) InboundRules() SecurityGroupInboundRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroup) SecurityGroupInboundRuleArrayOutput { return v.InboundRules }).(SecurityGroupInboundRuleArrayOutput)
}

// The name of the security group.
func (o SecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization ID the security group is associated with.
func (o SecurityGroupOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The default policy on outgoing traffic. Possible values are: `accept` or `drop`.
func (o SecurityGroupOutput) OutboundDefaultPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringPtrOutput { return v.OutboundDefaultPolicy }).(pulumi.StringPtrOutput)
}

// A list of outbound rule to add to the security group. (Structure is documented below.)
func (o SecurityGroupOutput) OutboundRules() SecurityGroupOutboundRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroup) SecurityGroupOutboundRuleArrayOutput { return v.OutboundRules }).(SecurityGroupOutboundRuleArrayOutput)
}

// `projectId`) The ID of the project the security group is associated with.
func (o SecurityGroupOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// A boolean to specify whether the security group should be stateful or not.
func (o SecurityGroupOutput) Stateful() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.BoolPtrOutput { return v.Stateful }).(pulumi.BoolPtrOutput)
}

// The tags associated with the security group
func (o SecurityGroupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// `zone`) The zone in which the security group should be created.
func (o SecurityGroupOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroup) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type SecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupArrayOutput) ToSecurityGroupArrayOutput() SecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupArrayOutput) ToSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupArrayOutput) Index(i pulumi.IntInput) SecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroup {
		return vs[0].([]*SecurityGroup)[vs[1].(int)]
	}).(SecurityGroupOutput)
}

type SecurityGroupMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroup)(nil)).Elem()
}

func (o SecurityGroupMapOutput) ToSecurityGroupMapOutput() SecurityGroupMapOutput {
	return o
}

func (o SecurityGroupMapOutput) ToSecurityGroupMapOutputWithContext(ctx context.Context) SecurityGroupMapOutput {
	return o
}

func (o SecurityGroupMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroup {
		return vs[0].(map[string]*SecurityGroup)[vs[1].(string)]
	}).(SecurityGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupInput)(nil)).Elem(), &SecurityGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupArrayInput)(nil)).Elem(), SecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupMapInput)(nil)).Elem(), SecurityGroupMap{})
	pulumi.RegisterOutputType(SecurityGroupOutput{})
	pulumi.RegisterOutputType(SecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupMapOutput{})
}
