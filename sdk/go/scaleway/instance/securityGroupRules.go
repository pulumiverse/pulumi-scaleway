// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package instance

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway compute Instance security group rules. For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/instance/#path-security-groups-list-security-groups).
//
// This resource can be used to externalize rules from a `instance.SecurityGroup` to solve circular dependency problems. When using this resource do not forget to set `externalRules = true` on the security group.
//
// > **Warning:** In order to guaranty rules order in a given security group only one instance.SecurityGroupRules is allowed per security group.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/instance"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			sg01, err := instance.NewSecurityGroup(ctx, "sg01", &instance.SecurityGroupArgs{
//				ExternalRules: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = instance.NewSecurityGroupRules(ctx, "sgrs01", &instance.SecurityGroupRulesArgs{
//				SecurityGroupId: sg01.ID(),
//				InboundRules: instance.SecurityGroupRulesInboundRuleArray{
//					&instance.SecurityGroupRulesInboundRuleArgs{
//						Action:  pulumi.String("accept"),
//						Port:    pulumi.Int(80),
//						IpRange: pulumi.String("0.0.0.0/0"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance security group rules can be imported using the `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:instance/securityGroupRules:SecurityGroupRules web fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type SecurityGroupRules struct {
	pulumi.CustomResourceState

	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupRulesInboundRuleArrayOutput `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupRulesOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewSecurityGroupRules registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupRules(ctx *pulumi.Context,
	name string, args *SecurityGroupRulesArgs, opts ...pulumi.ResourceOption) (*SecurityGroupRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroupRules
	err := ctx.RegisterResource("scaleway:instance/securityGroupRules:SecurityGroupRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupRules gets an existing SecurityGroupRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupRulesState, opts ...pulumi.ResourceOption) (*SecurityGroupRules, error) {
	var resource SecurityGroupRules
	err := ctx.ReadResource("scaleway:instance/securityGroupRules:SecurityGroupRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupRules resources.
type securityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []SecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []SecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
}

type SecurityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput
}

func (SecurityGroupRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRulesState)(nil)).Elem()
}

type securityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []SecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []SecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a SecurityGroupRules resource.
type SecurityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules SecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules SecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput
}

func (SecurityGroupRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRulesArgs)(nil)).Elem()
}

type SecurityGroupRulesInput interface {
	pulumi.Input

	ToSecurityGroupRulesOutput() SecurityGroupRulesOutput
	ToSecurityGroupRulesOutputWithContext(ctx context.Context) SecurityGroupRulesOutput
}

func (*SecurityGroupRules) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupRules)(nil)).Elem()
}

func (i *SecurityGroupRules) ToSecurityGroupRulesOutput() SecurityGroupRulesOutput {
	return i.ToSecurityGroupRulesOutputWithContext(context.Background())
}

func (i *SecurityGroupRules) ToSecurityGroupRulesOutputWithContext(ctx context.Context) SecurityGroupRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesOutput)
}

// SecurityGroupRulesArrayInput is an input type that accepts SecurityGroupRulesArray and SecurityGroupRulesArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRulesArrayInput` via:
//
//	SecurityGroupRulesArray{ SecurityGroupRulesArgs{...} }
type SecurityGroupRulesArrayInput interface {
	pulumi.Input

	ToSecurityGroupRulesArrayOutput() SecurityGroupRulesArrayOutput
	ToSecurityGroupRulesArrayOutputWithContext(context.Context) SecurityGroupRulesArrayOutput
}

type SecurityGroupRulesArray []SecurityGroupRulesInput

func (SecurityGroupRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupRules)(nil)).Elem()
}

func (i SecurityGroupRulesArray) ToSecurityGroupRulesArrayOutput() SecurityGroupRulesArrayOutput {
	return i.ToSecurityGroupRulesArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRulesArray) ToSecurityGroupRulesArrayOutputWithContext(ctx context.Context) SecurityGroupRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesArrayOutput)
}

// SecurityGroupRulesMapInput is an input type that accepts SecurityGroupRulesMap and SecurityGroupRulesMapOutput values.
// You can construct a concrete instance of `SecurityGroupRulesMapInput` via:
//
//	SecurityGroupRulesMap{ "key": SecurityGroupRulesArgs{...} }
type SecurityGroupRulesMapInput interface {
	pulumi.Input

	ToSecurityGroupRulesMapOutput() SecurityGroupRulesMapOutput
	ToSecurityGroupRulesMapOutputWithContext(context.Context) SecurityGroupRulesMapOutput
}

type SecurityGroupRulesMap map[string]SecurityGroupRulesInput

func (SecurityGroupRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupRules)(nil)).Elem()
}

func (i SecurityGroupRulesMap) ToSecurityGroupRulesMapOutput() SecurityGroupRulesMapOutput {
	return i.ToSecurityGroupRulesMapOutputWithContext(context.Background())
}

func (i SecurityGroupRulesMap) ToSecurityGroupRulesMapOutputWithContext(ctx context.Context) SecurityGroupRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesMapOutput)
}

type SecurityGroupRulesOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupRules)(nil)).Elem()
}

func (o SecurityGroupRulesOutput) ToSecurityGroupRulesOutput() SecurityGroupRulesOutput {
	return o
}

func (o SecurityGroupRulesOutput) ToSecurityGroupRulesOutputWithContext(ctx context.Context) SecurityGroupRulesOutput {
	return o
}

// A list of inbound rule to add to the security group. (Structure is documented below.)
func (o SecurityGroupRulesOutput) InboundRules() SecurityGroupRulesInboundRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroupRules) SecurityGroupRulesInboundRuleArrayOutput { return v.InboundRules }).(SecurityGroupRulesInboundRuleArrayOutput)
}

// A list of outbound rule to add to the security group. (Structure is documented below.)
func (o SecurityGroupRulesOutput) OutboundRules() SecurityGroupRulesOutboundRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroupRules) SecurityGroupRulesOutboundRuleArrayOutput { return v.OutboundRules }).(SecurityGroupRulesOutboundRuleArrayOutput)
}

// The ID of the security group.
func (o SecurityGroupRulesOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRules) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

type SecurityGroupRulesArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupRules)(nil)).Elem()
}

func (o SecurityGroupRulesArrayOutput) ToSecurityGroupRulesArrayOutput() SecurityGroupRulesArrayOutput {
	return o
}

func (o SecurityGroupRulesArrayOutput) ToSecurityGroupRulesArrayOutputWithContext(ctx context.Context) SecurityGroupRulesArrayOutput {
	return o
}

func (o SecurityGroupRulesArrayOutput) Index(i pulumi.IntInput) SecurityGroupRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroupRules {
		return vs[0].([]*SecurityGroupRules)[vs[1].(int)]
	}).(SecurityGroupRulesOutput)
}

type SecurityGroupRulesMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupRules)(nil)).Elem()
}

func (o SecurityGroupRulesMapOutput) ToSecurityGroupRulesMapOutput() SecurityGroupRulesMapOutput {
	return o
}

func (o SecurityGroupRulesMapOutput) ToSecurityGroupRulesMapOutputWithContext(ctx context.Context) SecurityGroupRulesMapOutput {
	return o
}

func (o SecurityGroupRulesMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroupRules {
		return vs[0].(map[string]*SecurityGroupRules)[vs[1].(string)]
	}).(SecurityGroupRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesInput)(nil)).Elem(), &SecurityGroupRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesArrayInput)(nil)).Elem(), SecurityGroupRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesMapInput)(nil)).Elem(), SecurityGroupRulesMap{})
	pulumi.RegisterOutputType(SecurityGroupRulesOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesMapOutput{})
}
