// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway Compute Instance security group rules. For more information, see [the documentation](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89).
//
// This resource can be used to externalize rules from a `InstanceSecurityGroup` to solve circular dependency problems. When using this resource do not forget to set `externalRules = true` on the security group.
//
// > **Warning:** In order to guaranty rules order in a given security group only one InstanceSecurityGroupRules is allowed per security group.
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			sg01, err := scaleway.NewInstanceSecurityGroup(ctx, "sg01", &scaleway.InstanceSecurityGroupArgs{
//				ExternalRules: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewInstanceSecurityGroupRules(ctx, "sgrs01", &scaleway.InstanceSecurityGroupRulesArgs{
//				SecurityGroupId: sg01.ID(),
//				InboundRules: scaleway.InstanceSecurityGroupRulesInboundRuleArray{
//					&scaleway.InstanceSecurityGroupRulesInboundRuleArgs{
//						Action:  pulumi.String("accept"),
//						Port:    pulumi.Int(80),
//						IpRange: pulumi.String("0.0.0.0/0"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instance security group rules can be imported using the `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules web fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type InstanceSecurityGroupRules struct {
	pulumi.CustomResourceState

	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayOutput `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewInstanceSecurityGroupRules registers a new resource with the given unique name, arguments, and options.
func NewInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, args *InstanceSecurityGroupRulesArgs, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceSecurityGroupRules
	err := ctx.RegisterResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceSecurityGroupRules gets an existing InstanceSecurityGroupRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceSecurityGroupRulesState, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	var resource InstanceSecurityGroupRules
	err := ctx.ReadResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceSecurityGroupRules resources.
type instanceSecurityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
}

type InstanceSecurityGroupRulesState struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringPtrInput
}

func (InstanceSecurityGroupRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesState)(nil)).Elem()
}

type instanceSecurityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The ID of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a InstanceSecurityGroupRules resource.
type InstanceSecurityGroupRulesArgs struct {
	// A list of inbound rule to add to the security group. (Structure is documented below.)
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// A list of outbound rule to add to the security group. (Structure is documented below.)
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The ID of the security group.
	SecurityGroupId pulumi.StringInput
}

func (InstanceSecurityGroupRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesArgs)(nil)).Elem()
}

type InstanceSecurityGroupRulesInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesOutput() InstanceSecurityGroupRulesOutput
	ToInstanceSecurityGroupRulesOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutput
}

func (*InstanceSecurityGroupRules) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSecurityGroupRules)(nil)).Elem()
}

func (i *InstanceSecurityGroupRules) ToInstanceSecurityGroupRulesOutput() InstanceSecurityGroupRulesOutput {
	return i.ToInstanceSecurityGroupRulesOutputWithContext(context.Background())
}

func (i *InstanceSecurityGroupRules) ToInstanceSecurityGroupRulesOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesOutput)
}

// InstanceSecurityGroupRulesArrayInput is an input type that accepts InstanceSecurityGroupRulesArray and InstanceSecurityGroupRulesArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesArrayInput` via:
//
//	InstanceSecurityGroupRulesArray{ InstanceSecurityGroupRulesArgs{...} }
type InstanceSecurityGroupRulesArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesArrayOutput() InstanceSecurityGroupRulesArrayOutput
	ToInstanceSecurityGroupRulesArrayOutputWithContext(context.Context) InstanceSecurityGroupRulesArrayOutput
}

type InstanceSecurityGroupRulesArray []InstanceSecurityGroupRulesInput

func (InstanceSecurityGroupRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceSecurityGroupRules)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesArray) ToInstanceSecurityGroupRulesArrayOutput() InstanceSecurityGroupRulesArrayOutput {
	return i.ToInstanceSecurityGroupRulesArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesArray) ToInstanceSecurityGroupRulesArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesArrayOutput)
}

// InstanceSecurityGroupRulesMapInput is an input type that accepts InstanceSecurityGroupRulesMap and InstanceSecurityGroupRulesMapOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesMapInput` via:
//
//	InstanceSecurityGroupRulesMap{ "key": InstanceSecurityGroupRulesArgs{...} }
type InstanceSecurityGroupRulesMapInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesMapOutput() InstanceSecurityGroupRulesMapOutput
	ToInstanceSecurityGroupRulesMapOutputWithContext(context.Context) InstanceSecurityGroupRulesMapOutput
}

type InstanceSecurityGroupRulesMap map[string]InstanceSecurityGroupRulesInput

func (InstanceSecurityGroupRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceSecurityGroupRules)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesMap) ToInstanceSecurityGroupRulesMapOutput() InstanceSecurityGroupRulesMapOutput {
	return i.ToInstanceSecurityGroupRulesMapOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesMap) ToInstanceSecurityGroupRulesMapOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesMapOutput)
}

type InstanceSecurityGroupRulesOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSecurityGroupRules)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesOutput) ToInstanceSecurityGroupRulesOutput() InstanceSecurityGroupRulesOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutput) ToInstanceSecurityGroupRulesOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutput {
	return o
}

// A list of inbound rule to add to the security group. (Structure is documented below.)
func (o InstanceSecurityGroupRulesOutput) InboundRules() InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return o.ApplyT(func(v *InstanceSecurityGroupRules) InstanceSecurityGroupRulesInboundRuleArrayOutput {
		return v.InboundRules
	}).(InstanceSecurityGroupRulesInboundRuleArrayOutput)
}

// A list of outbound rule to add to the security group. (Structure is documented below.)
func (o InstanceSecurityGroupRulesOutput) OutboundRules() InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return o.ApplyT(func(v *InstanceSecurityGroupRules) InstanceSecurityGroupRulesOutboundRuleArrayOutput {
		return v.OutboundRules
	}).(InstanceSecurityGroupRulesOutboundRuleArrayOutput)
}

// The ID of the security group.
func (o InstanceSecurityGroupRulesOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceSecurityGroupRules) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

type InstanceSecurityGroupRulesArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceSecurityGroupRules)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesArrayOutput) ToInstanceSecurityGroupRulesArrayOutput() InstanceSecurityGroupRulesArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesArrayOutput) ToInstanceSecurityGroupRulesArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceSecurityGroupRules {
		return vs[0].([]*InstanceSecurityGroupRules)[vs[1].(int)]
	}).(InstanceSecurityGroupRulesOutput)
}

type InstanceSecurityGroupRulesMapOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceSecurityGroupRules)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesMapOutput) ToInstanceSecurityGroupRulesMapOutput() InstanceSecurityGroupRulesMapOutput {
	return o
}

func (o InstanceSecurityGroupRulesMapOutput) ToInstanceSecurityGroupRulesMapOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesMapOutput {
	return o
}

func (o InstanceSecurityGroupRulesMapOutput) MapIndex(k pulumi.StringInput) InstanceSecurityGroupRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceSecurityGroupRules {
		return vs[0].(map[string]*InstanceSecurityGroupRules)[vs[1].(string)]
	}).(InstanceSecurityGroupRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesInput)(nil)).Elem(), &InstanceSecurityGroupRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesArrayInput)(nil)).Elem(), InstanceSecurityGroupRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesMapInput)(nil)).Elem(), InstanceSecurityGroupRulesMap{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesMapOutput{})
}
