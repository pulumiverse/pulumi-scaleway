// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about an IOT Device.
func LookupDevice(ctx *pulumi.Context, args *LookupDeviceArgs, opts ...pulumi.InvokeOption) (*LookupDeviceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeviceResult
	err := ctx.Invoke("scaleway:iot/getDevice:getDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDevice.
type LookupDeviceArgs struct {
	// The device ID.
	// Only one of the `name` and `deviceId` should be specified.
	DeviceId *string `pulumi:"deviceId"`
	// The hub ID.
	HubId *string `pulumi:"hubId"`
	// The name of the Hub.
	// Only one of the `name` and `deviceId` should be specified.
	Name *string `pulumi:"name"`
	// `region`) The region in which the hub exists.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getDevice.
type LookupDeviceResult struct {
	AllowInsecure            bool                   `pulumi:"allowInsecure"`
	AllowMultipleConnections bool                   `pulumi:"allowMultipleConnections"`
	Certificates             []GetDeviceCertificate `pulumi:"certificates"`
	CreatedAt                string                 `pulumi:"createdAt"`
	Description              string                 `pulumi:"description"`
	DeviceId                 *string                `pulumi:"deviceId"`
	HubId                    string                 `pulumi:"hubId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                   `pulumi:"id"`
	IsConnected    bool                     `pulumi:"isConnected"`
	LastActivityAt string                   `pulumi:"lastActivityAt"`
	MessageFilters []GetDeviceMessageFilter `pulumi:"messageFilters"`
	Name           *string                  `pulumi:"name"`
	Region         *string                  `pulumi:"region"`
	Status         string                   `pulumi:"status"`
	UpdatedAt      string                   `pulumi:"updatedAt"`
}

func LookupDeviceOutput(ctx *pulumi.Context, args LookupDeviceOutputArgs, opts ...pulumi.InvokeOption) LookupDeviceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDeviceResultOutput, error) {
			args := v.(LookupDeviceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:iot/getDevice:getDevice", args, LookupDeviceResultOutput{}, options).(LookupDeviceResultOutput), nil
		}).(LookupDeviceResultOutput)
}

// A collection of arguments for invoking getDevice.
type LookupDeviceOutputArgs struct {
	// The device ID.
	// Only one of the `name` and `deviceId` should be specified.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// The hub ID.
	HubId pulumi.StringPtrInput `pulumi:"hubId"`
	// The name of the Hub.
	// Only one of the `name` and `deviceId` should be specified.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// `region`) The region in which the hub exists.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceArgs)(nil)).Elem()
}

// A collection of values returned by getDevice.
type LookupDeviceResultOutput struct{ *pulumi.OutputState }

func (LookupDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceResult)(nil)).Elem()
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutput() LookupDeviceResultOutput {
	return o
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutputWithContext(ctx context.Context) LookupDeviceResultOutput {
	return o
}

func (o LookupDeviceResultOutput) AllowInsecure() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeviceResult) bool { return v.AllowInsecure }).(pulumi.BoolOutput)
}

func (o LookupDeviceResultOutput) AllowMultipleConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeviceResult) bool { return v.AllowMultipleConnections }).(pulumi.BoolOutput)
}

func (o LookupDeviceResultOutput) Certificates() GetDeviceCertificateArrayOutput {
	return o.ApplyT(func(v LookupDeviceResult) []GetDeviceCertificate { return v.Certificates }).(GetDeviceCertificateArrayOutput)
}

func (o LookupDeviceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeviceResult) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

func (o LookupDeviceResultOutput) HubId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.HubId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDeviceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) IsConnected() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeviceResult) bool { return v.IsConnected }).(pulumi.BoolOutput)
}

func (o LookupDeviceResultOutput) LastActivityAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.LastActivityAt }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) MessageFilters() GetDeviceMessageFilterArrayOutput {
	return o.ApplyT(func(v LookupDeviceResult) []GetDeviceMessageFilter { return v.MessageFilters }).(GetDeviceMessageFilterArrayOutput)
}

func (o LookupDeviceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeviceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupDeviceResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeviceResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupDeviceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeviceResultOutput{})
}
