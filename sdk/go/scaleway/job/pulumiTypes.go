// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package job

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type DefinitionCron struct {
	// Cron format string.
	Schedule string `pulumi:"schedule"`
	// The timezone, must be a canonical TZ identifier as found in this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
	Timezone string `pulumi:"timezone"`
}

// DefinitionCronInput is an input type that accepts DefinitionCronArgs and DefinitionCronOutput values.
// You can construct a concrete instance of `DefinitionCronInput` via:
//
//	DefinitionCronArgs{...}
type DefinitionCronInput interface {
	pulumi.Input

	ToDefinitionCronOutput() DefinitionCronOutput
	ToDefinitionCronOutputWithContext(context.Context) DefinitionCronOutput
}

type DefinitionCronArgs struct {
	// Cron format string.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// The timezone, must be a canonical TZ identifier as found in this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (DefinitionCronArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefinitionCron)(nil)).Elem()
}

func (i DefinitionCronArgs) ToDefinitionCronOutput() DefinitionCronOutput {
	return i.ToDefinitionCronOutputWithContext(context.Background())
}

func (i DefinitionCronArgs) ToDefinitionCronOutputWithContext(ctx context.Context) DefinitionCronOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefinitionCronOutput)
}

func (i DefinitionCronArgs) ToDefinitionCronPtrOutput() DefinitionCronPtrOutput {
	return i.ToDefinitionCronPtrOutputWithContext(context.Background())
}

func (i DefinitionCronArgs) ToDefinitionCronPtrOutputWithContext(ctx context.Context) DefinitionCronPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefinitionCronOutput).ToDefinitionCronPtrOutputWithContext(ctx)
}

// DefinitionCronPtrInput is an input type that accepts DefinitionCronArgs, DefinitionCronPtr and DefinitionCronPtrOutput values.
// You can construct a concrete instance of `DefinitionCronPtrInput` via:
//
//	        DefinitionCronArgs{...}
//
//	or:
//
//	        nil
type DefinitionCronPtrInput interface {
	pulumi.Input

	ToDefinitionCronPtrOutput() DefinitionCronPtrOutput
	ToDefinitionCronPtrOutputWithContext(context.Context) DefinitionCronPtrOutput
}

type definitionCronPtrType DefinitionCronArgs

func DefinitionCronPtr(v *DefinitionCronArgs) DefinitionCronPtrInput {
	return (*definitionCronPtrType)(v)
}

func (*definitionCronPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DefinitionCron)(nil)).Elem()
}

func (i *definitionCronPtrType) ToDefinitionCronPtrOutput() DefinitionCronPtrOutput {
	return i.ToDefinitionCronPtrOutputWithContext(context.Background())
}

func (i *definitionCronPtrType) ToDefinitionCronPtrOutputWithContext(ctx context.Context) DefinitionCronPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefinitionCronPtrOutput)
}

type DefinitionCronOutput struct{ *pulumi.OutputState }

func (DefinitionCronOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefinitionCron)(nil)).Elem()
}

func (o DefinitionCronOutput) ToDefinitionCronOutput() DefinitionCronOutput {
	return o
}

func (o DefinitionCronOutput) ToDefinitionCronOutputWithContext(ctx context.Context) DefinitionCronOutput {
	return o
}

func (o DefinitionCronOutput) ToDefinitionCronPtrOutput() DefinitionCronPtrOutput {
	return o.ToDefinitionCronPtrOutputWithContext(context.Background())
}

func (o DefinitionCronOutput) ToDefinitionCronPtrOutputWithContext(ctx context.Context) DefinitionCronPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefinitionCron) *DefinitionCron {
		return &v
	}).(DefinitionCronPtrOutput)
}

// Cron format string.
func (o DefinitionCronOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v DefinitionCron) string { return v.Schedule }).(pulumi.StringOutput)
}

// The timezone, must be a canonical TZ identifier as found in this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
func (o DefinitionCronOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v DefinitionCron) string { return v.Timezone }).(pulumi.StringOutput)
}

type DefinitionCronPtrOutput struct{ *pulumi.OutputState }

func (DefinitionCronPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefinitionCron)(nil)).Elem()
}

func (o DefinitionCronPtrOutput) ToDefinitionCronPtrOutput() DefinitionCronPtrOutput {
	return o
}

func (o DefinitionCronPtrOutput) ToDefinitionCronPtrOutputWithContext(ctx context.Context) DefinitionCronPtrOutput {
	return o
}

func (o DefinitionCronPtrOutput) Elem() DefinitionCronOutput {
	return o.ApplyT(func(v *DefinitionCron) DefinitionCron {
		if v != nil {
			return *v
		}
		var ret DefinitionCron
		return ret
	}).(DefinitionCronOutput)
}

// Cron format string.
func (o DefinitionCronPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefinitionCron) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

// The timezone, must be a canonical TZ identifier as found in this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
func (o DefinitionCronPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefinitionCron) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DefinitionCronInput)(nil)).Elem(), DefinitionCronArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DefinitionCronPtrInput)(nil)).Elem(), DefinitionCronArgs{})
	pulumi.RegisterOutputType(DefinitionCronOutput{})
	pulumi.RegisterOutputType(DefinitionCronPtrOutput{})
}
