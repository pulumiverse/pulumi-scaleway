// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type AclAclRule struct {
	// A text describing this rule.
	Description *string `pulumi:"description"`
	// The ID of the ACL resource. It is the same as the ID of the cluster.
	Id *string `pulumi:"id"`
	// The IP range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	//
	// > **Important:** If the `ip` field is set, `scalewayRanges` cannot be set to true in the same rule.
	Ip *string `pulumi:"ip"`
	// Allow access to cluster from all Scaleway ranges as defined in [Scaleway Network Information - IP ranges used by Scaleway](https://www.scaleway.com/en/docs/console/account/reference-content/scaleway-network-information/#ip-ranges-used-by-scaleway).
	// Only one rule with this field set to true can be added.
	//
	// > **Important:** If the `scalewayRanges` field is set to true, the `ip` field cannot be set on the same rule.
	ScalewayRanges *bool `pulumi:"scalewayRanges"`
}

// AclAclRuleInput is an input type that accepts AclAclRuleArgs and AclAclRuleOutput values.
// You can construct a concrete instance of `AclAclRuleInput` via:
//
//	AclAclRuleArgs{...}
type AclAclRuleInput interface {
	pulumi.Input

	ToAclAclRuleOutput() AclAclRuleOutput
	ToAclAclRuleOutputWithContext(context.Context) AclAclRuleOutput
}

type AclAclRuleArgs struct {
	// A text describing this rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ID of the ACL resource. It is the same as the ID of the cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	//
	// > **Important:** If the `ip` field is set, `scalewayRanges` cannot be set to true in the same rule.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Allow access to cluster from all Scaleway ranges as defined in [Scaleway Network Information - IP ranges used by Scaleway](https://www.scaleway.com/en/docs/console/account/reference-content/scaleway-network-information/#ip-ranges-used-by-scaleway).
	// Only one rule with this field set to true can be added.
	//
	// > **Important:** If the `scalewayRanges` field is set to true, the `ip` field cannot be set on the same rule.
	ScalewayRanges pulumi.BoolPtrInput `pulumi:"scalewayRanges"`
}

func (AclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclRule)(nil)).Elem()
}

func (i AclAclRuleArgs) ToAclAclRuleOutput() AclAclRuleOutput {
	return i.ToAclAclRuleOutputWithContext(context.Background())
}

func (i AclAclRuleArgs) ToAclAclRuleOutputWithContext(ctx context.Context) AclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclRuleOutput)
}

// AclAclRuleArrayInput is an input type that accepts AclAclRuleArray and AclAclRuleArrayOutput values.
// You can construct a concrete instance of `AclAclRuleArrayInput` via:
//
//	AclAclRuleArray{ AclAclRuleArgs{...} }
type AclAclRuleArrayInput interface {
	pulumi.Input

	ToAclAclRuleArrayOutput() AclAclRuleArrayOutput
	ToAclAclRuleArrayOutputWithContext(context.Context) AclAclRuleArrayOutput
}

type AclAclRuleArray []AclAclRuleInput

func (AclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclRule)(nil)).Elem()
}

func (i AclAclRuleArray) ToAclAclRuleArrayOutput() AclAclRuleArrayOutput {
	return i.ToAclAclRuleArrayOutputWithContext(context.Background())
}

func (i AclAclRuleArray) ToAclAclRuleArrayOutputWithContext(ctx context.Context) AclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclRuleArrayOutput)
}

type AclAclRuleOutput struct{ *pulumi.OutputState }

func (AclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclRule)(nil)).Elem()
}

func (o AclAclRuleOutput) ToAclAclRuleOutput() AclAclRuleOutput {
	return o
}

func (o AclAclRuleOutput) ToAclAclRuleOutputWithContext(ctx context.Context) AclAclRuleOutput {
	return o
}

// A text describing this rule.
func (o AclAclRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the ACL resource. It is the same as the ID of the cluster.
func (o AclAclRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
//
// > **Important:** If the `ip` field is set, `scalewayRanges` cannot be set to true in the same rule.
func (o AclAclRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Allow access to cluster from all Scaleway ranges as defined in [Scaleway Network Information - IP ranges used by Scaleway](https://www.scaleway.com/en/docs/console/account/reference-content/scaleway-network-information/#ip-ranges-used-by-scaleway).
// Only one rule with this field set to true can be added.
//
// > **Important:** If the `scalewayRanges` field is set to true, the `ip` field cannot be set on the same rule.
func (o AclAclRuleOutput) ScalewayRanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AclAclRule) *bool { return v.ScalewayRanges }).(pulumi.BoolPtrOutput)
}

type AclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (AclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclRule)(nil)).Elem()
}

func (o AclAclRuleArrayOutput) ToAclAclRuleArrayOutput() AclAclRuleArrayOutput {
	return o
}

func (o AclAclRuleArrayOutput) ToAclAclRuleArrayOutputWithContext(ctx context.Context) AclAclRuleArrayOutput {
	return o
}

func (o AclAclRuleArrayOutput) Index(i pulumi.IntInput) AclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclAclRule {
		return vs[0].([]AclAclRule)[vs[1].(int)]
	}).(AclAclRuleOutput)
}

type ClusterAutoUpgrade struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

// ClusterAutoUpgradeInput is an input type that accepts ClusterAutoUpgradeArgs and ClusterAutoUpgradeOutput values.
// You can construct a concrete instance of `ClusterAutoUpgradeInput` via:
//
//	ClusterAutoUpgradeArgs{...}
type ClusterAutoUpgradeInput interface {
	pulumi.Input

	ToClusterAutoUpgradeOutput() ClusterAutoUpgradeOutput
	ToClusterAutoUpgradeOutputWithContext(context.Context) ClusterAutoUpgradeOutput
}

type ClusterAutoUpgradeArgs struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay pulumi.StringInput `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour pulumi.IntInput `pulumi:"maintenanceWindowStartHour"`
}

func (ClusterAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoUpgrade)(nil)).Elem()
}

func (i ClusterAutoUpgradeArgs) ToClusterAutoUpgradeOutput() ClusterAutoUpgradeOutput {
	return i.ToClusterAutoUpgradeOutputWithContext(context.Background())
}

func (i ClusterAutoUpgradeArgs) ToClusterAutoUpgradeOutputWithContext(ctx context.Context) ClusterAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoUpgradeOutput)
}

func (i ClusterAutoUpgradeArgs) ToClusterAutoUpgradePtrOutput() ClusterAutoUpgradePtrOutput {
	return i.ToClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i ClusterAutoUpgradeArgs) ToClusterAutoUpgradePtrOutputWithContext(ctx context.Context) ClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoUpgradeOutput).ToClusterAutoUpgradePtrOutputWithContext(ctx)
}

// ClusterAutoUpgradePtrInput is an input type that accepts ClusterAutoUpgradeArgs, ClusterAutoUpgradePtr and ClusterAutoUpgradePtrOutput values.
// You can construct a concrete instance of `ClusterAutoUpgradePtrInput` via:
//
//	        ClusterAutoUpgradeArgs{...}
//
//	or:
//
//	        nil
type ClusterAutoUpgradePtrInput interface {
	pulumi.Input

	ToClusterAutoUpgradePtrOutput() ClusterAutoUpgradePtrOutput
	ToClusterAutoUpgradePtrOutputWithContext(context.Context) ClusterAutoUpgradePtrOutput
}

type clusterAutoUpgradePtrType ClusterAutoUpgradeArgs

func ClusterAutoUpgradePtr(v *ClusterAutoUpgradeArgs) ClusterAutoUpgradePtrInput {
	return (*clusterAutoUpgradePtrType)(v)
}

func (*clusterAutoUpgradePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoUpgrade)(nil)).Elem()
}

func (i *clusterAutoUpgradePtrType) ToClusterAutoUpgradePtrOutput() ClusterAutoUpgradePtrOutput {
	return i.ToClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i *clusterAutoUpgradePtrType) ToClusterAutoUpgradePtrOutputWithContext(ctx context.Context) ClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoUpgradePtrOutput)
}

type ClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (ClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoUpgrade)(nil)).Elem()
}

func (o ClusterAutoUpgradeOutput) ToClusterAutoUpgradeOutput() ClusterAutoUpgradeOutput {
	return o
}

func (o ClusterAutoUpgradeOutput) ToClusterAutoUpgradeOutputWithContext(ctx context.Context) ClusterAutoUpgradeOutput {
	return o
}

func (o ClusterAutoUpgradeOutput) ToClusterAutoUpgradePtrOutput() ClusterAutoUpgradePtrOutput {
	return o.ToClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (o ClusterAutoUpgradeOutput) ToClusterAutoUpgradePtrOutputWithContext(ctx context.Context) ClusterAutoUpgradePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutoUpgrade) *ClusterAutoUpgrade {
		return &v
	}).(ClusterAutoUpgradePtrOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o ClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o ClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o ClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type ClusterAutoUpgradePtrOutput struct{ *pulumi.OutputState }

func (ClusterAutoUpgradePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoUpgrade)(nil)).Elem()
}

func (o ClusterAutoUpgradePtrOutput) ToClusterAutoUpgradePtrOutput() ClusterAutoUpgradePtrOutput {
	return o
}

func (o ClusterAutoUpgradePtrOutput) ToClusterAutoUpgradePtrOutputWithContext(ctx context.Context) ClusterAutoUpgradePtrOutput {
	return o
}

func (o ClusterAutoUpgradePtrOutput) Elem() ClusterAutoUpgradeOutput {
	return o.ApplyT(func(v *ClusterAutoUpgrade) ClusterAutoUpgrade {
		if v != nil {
			return *v
		}
		var ret ClusterAutoUpgrade
		return ret
	}).(ClusterAutoUpgradeOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o ClusterAutoUpgradePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutoUpgrade) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o ClusterAutoUpgradePtrOutput) MaintenanceWindowDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowDay
	}).(pulumi.StringPtrOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o ClusterAutoUpgradePtrOutput) MaintenanceWindowStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowStartHour
	}).(pulumi.IntPtrOutput)
}

type ClusterAutoscalerConfig struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups *bool `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown *bool `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator *string `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander *string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff *int `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization *bool `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec *int `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime *string `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold *float64 `pulumi:"scaleDownUtilizationThreshold"`
}

// ClusterAutoscalerConfigInput is an input type that accepts ClusterAutoscalerConfigArgs and ClusterAutoscalerConfigOutput values.
// You can construct a concrete instance of `ClusterAutoscalerConfigInput` via:
//
//	ClusterAutoscalerConfigArgs{...}
type ClusterAutoscalerConfigInput interface {
	pulumi.Input

	ToClusterAutoscalerConfigOutput() ClusterAutoscalerConfigOutput
	ToClusterAutoscalerConfigOutputWithContext(context.Context) ClusterAutoscalerConfigOutput
}

type ClusterAutoscalerConfigArgs struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups pulumi.BoolPtrInput `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown pulumi.BoolPtrInput `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator pulumi.StringPtrInput `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff pulumi.IntPtrInput `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization pulumi.BoolPtrInput `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec pulumi.IntPtrInput `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime pulumi.StringPtrInput `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold pulumi.Float64PtrInput `pulumi:"scaleDownUtilizationThreshold"`
}

func (ClusterAutoscalerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoscalerConfig)(nil)).Elem()
}

func (i ClusterAutoscalerConfigArgs) ToClusterAutoscalerConfigOutput() ClusterAutoscalerConfigOutput {
	return i.ToClusterAutoscalerConfigOutputWithContext(context.Background())
}

func (i ClusterAutoscalerConfigArgs) ToClusterAutoscalerConfigOutputWithContext(ctx context.Context) ClusterAutoscalerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerConfigOutput)
}

func (i ClusterAutoscalerConfigArgs) ToClusterAutoscalerConfigPtrOutput() ClusterAutoscalerConfigPtrOutput {
	return i.ToClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i ClusterAutoscalerConfigArgs) ToClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) ClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerConfigOutput).ToClusterAutoscalerConfigPtrOutputWithContext(ctx)
}

// ClusterAutoscalerConfigPtrInput is an input type that accepts ClusterAutoscalerConfigArgs, ClusterAutoscalerConfigPtr and ClusterAutoscalerConfigPtrOutput values.
// You can construct a concrete instance of `ClusterAutoscalerConfigPtrInput` via:
//
//	        ClusterAutoscalerConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterAutoscalerConfigPtrInput interface {
	pulumi.Input

	ToClusterAutoscalerConfigPtrOutput() ClusterAutoscalerConfigPtrOutput
	ToClusterAutoscalerConfigPtrOutputWithContext(context.Context) ClusterAutoscalerConfigPtrOutput
}

type clusterAutoscalerConfigPtrType ClusterAutoscalerConfigArgs

func ClusterAutoscalerConfigPtr(v *ClusterAutoscalerConfigArgs) ClusterAutoscalerConfigPtrInput {
	return (*clusterAutoscalerConfigPtrType)(v)
}

func (*clusterAutoscalerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoscalerConfig)(nil)).Elem()
}

func (i *clusterAutoscalerConfigPtrType) ToClusterAutoscalerConfigPtrOutput() ClusterAutoscalerConfigPtrOutput {
	return i.ToClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i *clusterAutoscalerConfigPtrType) ToClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) ClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerConfigPtrOutput)
}

type ClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAutoscalerConfig)(nil)).Elem()
}

func (o ClusterAutoscalerConfigOutput) ToClusterAutoscalerConfigOutput() ClusterAutoscalerConfigOutput {
	return o
}

func (o ClusterAutoscalerConfigOutput) ToClusterAutoscalerConfigOutputWithContext(ctx context.Context) ClusterAutoscalerConfigOutput {
	return o
}

func (o ClusterAutoscalerConfigOutput) ToClusterAutoscalerConfigPtrOutput() ClusterAutoscalerConfigPtrOutput {
	return o.ToClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (o ClusterAutoscalerConfigOutput) ToClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) ClusterAutoscalerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAutoscalerConfig) *ClusterAutoscalerConfig {
		return &v
	}).(ClusterAutoscalerConfigPtrOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o ClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o ClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *bool { return v.DisableScaleDown }).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o ClusterAutoscalerConfigOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *string { return v.Estimator }).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o ClusterAutoscalerConfigOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o ClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o ClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o ClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *int { return v.MaxGracefulTerminationSec }).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o ClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o ClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *string { return v.ScaleDownUnneededTime }).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o ClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ClusterAutoscalerConfig) *float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type ClusterAutoscalerConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoscalerConfig)(nil)).Elem()
}

func (o ClusterAutoscalerConfigPtrOutput) ToClusterAutoscalerConfigPtrOutput() ClusterAutoscalerConfigPtrOutput {
	return o
}

func (o ClusterAutoscalerConfigPtrOutput) ToClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) ClusterAutoscalerConfigPtrOutput {
	return o
}

func (o ClusterAutoscalerConfigPtrOutput) Elem() ClusterAutoscalerConfigOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) ClusterAutoscalerConfig {
		if v != nil {
			return *v
		}
		var ret ClusterAutoscalerConfig
		return ret
	}).(ClusterAutoscalerConfigOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o ClusterAutoscalerConfigPtrOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o ClusterAutoscalerConfigPtrOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleDown
	}).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o ClusterAutoscalerConfigPtrOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Estimator
	}).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o ClusterAutoscalerConfigPtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o ClusterAutoscalerConfigPtrOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.ExpendablePodsPriorityCutoff
	}).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o ClusterAutoscalerConfigPtrOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreDaemonsetsUtilization
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o ClusterAutoscalerConfigPtrOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o ClusterAutoscalerConfigPtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o ClusterAutoscalerConfigPtrOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneededTime
	}).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o ClusterAutoscalerConfigPtrOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ClusterAutoscalerConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type ClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile *string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host *string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token *string `pulumi:"token"`
}

// ClusterKubeconfigInput is an input type that accepts ClusterKubeconfigArgs and ClusterKubeconfigOutput values.
// You can construct a concrete instance of `ClusterKubeconfigInput` via:
//
//	ClusterKubeconfigArgs{...}
type ClusterKubeconfigInput interface {
	pulumi.Input

	ToClusterKubeconfigOutput() ClusterKubeconfigOutput
	ToClusterKubeconfigOutputWithContext(context.Context) ClusterKubeconfigOutput
}

type ClusterKubeconfigArgs struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile pulumi.StringPtrInput `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (ClusterKubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeconfig)(nil)).Elem()
}

func (i ClusterKubeconfigArgs) ToClusterKubeconfigOutput() ClusterKubeconfigOutput {
	return i.ToClusterKubeconfigOutputWithContext(context.Background())
}

func (i ClusterKubeconfigArgs) ToClusterKubeconfigOutputWithContext(ctx context.Context) ClusterKubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeconfigOutput)
}

// ClusterKubeconfigArrayInput is an input type that accepts ClusterKubeconfigArray and ClusterKubeconfigArrayOutput values.
// You can construct a concrete instance of `ClusterKubeconfigArrayInput` via:
//
//	ClusterKubeconfigArray{ ClusterKubeconfigArgs{...} }
type ClusterKubeconfigArrayInput interface {
	pulumi.Input

	ToClusterKubeconfigArrayOutput() ClusterKubeconfigArrayOutput
	ToClusterKubeconfigArrayOutputWithContext(context.Context) ClusterKubeconfigArrayOutput
}

type ClusterKubeconfigArray []ClusterKubeconfigInput

func (ClusterKubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKubeconfig)(nil)).Elem()
}

func (i ClusterKubeconfigArray) ToClusterKubeconfigArrayOutput() ClusterKubeconfigArrayOutput {
	return i.ToClusterKubeconfigArrayOutputWithContext(context.Background())
}

func (i ClusterKubeconfigArray) ToClusterKubeconfigArrayOutputWithContext(ctx context.Context) ClusterKubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeconfigArrayOutput)
}

type ClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (ClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeconfig)(nil)).Elem()
}

func (o ClusterKubeconfigOutput) ToClusterKubeconfigOutput() ClusterKubeconfigOutput {
	return o
}

func (o ClusterKubeconfigOutput) ToClusterKubeconfigOutputWithContext(ctx context.Context) ClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o ClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeconfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The raw kubeconfig file.
func (o ClusterKubeconfigOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeconfig) *string { return v.ConfigFile }).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes API server.
func (o ClusterKubeconfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeconfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The token to connect to the Kubernetes API server.
func (o ClusterKubeconfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeconfig) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type ClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKubeconfig)(nil)).Elem()
}

func (o ClusterKubeconfigArrayOutput) ToClusterKubeconfigArrayOutput() ClusterKubeconfigArrayOutput {
	return o
}

func (o ClusterKubeconfigArrayOutput) ToClusterKubeconfigArrayOutputWithContext(ctx context.Context) ClusterKubeconfigArrayOutput {
	return o
}

func (o ClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) ClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKubeconfig {
		return vs[0].([]ClusterKubeconfig)[vs[1].(int)]
	}).(ClusterKubeconfigOutput)
}

type ClusterOpenIdConnectConfig struct {
	// A client id that all tokens must be issued for
	ClientId string `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims []string `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl string `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims []string `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim *string `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// ClusterOpenIdConnectConfigInput is an input type that accepts ClusterOpenIdConnectConfigArgs and ClusterOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `ClusterOpenIdConnectConfigInput` via:
//
//	ClusterOpenIdConnectConfigArgs{...}
type ClusterOpenIdConnectConfigInput interface {
	pulumi.Input

	ToClusterOpenIdConnectConfigOutput() ClusterOpenIdConnectConfigOutput
	ToClusterOpenIdConnectConfigOutputWithContext(context.Context) ClusterOpenIdConnectConfigOutput
}

type ClusterOpenIdConnectConfigArgs struct {
	// A client id that all tokens must be issued for
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims pulumi.StringArrayInput `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims pulumi.StringArrayInput `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (ClusterOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i ClusterOpenIdConnectConfigArgs) ToClusterOpenIdConnectConfigOutput() ClusterOpenIdConnectConfigOutput {
	return i.ToClusterOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i ClusterOpenIdConnectConfigArgs) ToClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenIdConnectConfigOutput)
}

func (i ClusterOpenIdConnectConfigArgs) ToClusterOpenIdConnectConfigPtrOutput() ClusterOpenIdConnectConfigPtrOutput {
	return i.ToClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i ClusterOpenIdConnectConfigArgs) ToClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenIdConnectConfigOutput).ToClusterOpenIdConnectConfigPtrOutputWithContext(ctx)
}

// ClusterOpenIdConnectConfigPtrInput is an input type that accepts ClusterOpenIdConnectConfigArgs, ClusterOpenIdConnectConfigPtr and ClusterOpenIdConnectConfigPtrOutput values.
// You can construct a concrete instance of `ClusterOpenIdConnectConfigPtrInput` via:
//
//	        ClusterOpenIdConnectConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterOpenIdConnectConfigPtrInput interface {
	pulumi.Input

	ToClusterOpenIdConnectConfigPtrOutput() ClusterOpenIdConnectConfigPtrOutput
	ToClusterOpenIdConnectConfigPtrOutputWithContext(context.Context) ClusterOpenIdConnectConfigPtrOutput
}

type clusterOpenIdConnectConfigPtrType ClusterOpenIdConnectConfigArgs

func ClusterOpenIdConnectConfigPtr(v *ClusterOpenIdConnectConfigArgs) ClusterOpenIdConnectConfigPtrInput {
	return (*clusterOpenIdConnectConfigPtrType)(v)
}

func (*clusterOpenIdConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i *clusterOpenIdConnectConfigPtrType) ToClusterOpenIdConnectConfigPtrOutput() ClusterOpenIdConnectConfigPtrOutput {
	return i.ToClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i *clusterOpenIdConnectConfigPtrType) ToClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenIdConnectConfigPtrOutput)
}

type ClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (ClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o ClusterOpenIdConnectConfigOutput) ToClusterOpenIdConnectConfigOutput() ClusterOpenIdConnectConfigOutput {
	return o
}

func (o ClusterOpenIdConnectConfigOutput) ToClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigOutput {
	return o
}

func (o ClusterOpenIdConnectConfigOutput) ToClusterOpenIdConnectConfigPtrOutput() ClusterOpenIdConnectConfigPtrOutput {
	return o.ToClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (o ClusterOpenIdConnectConfigOutput) ToClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenIdConnectConfig) *ClusterOpenIdConnectConfig {
		return &v
	}).(ClusterOpenIdConnectConfigPtrOutput)
}

// A client id that all tokens must be issued for
func (o ClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// JWT claim to use as the user's group
func (o ClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o ClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o ClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o ClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o ClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o ClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterOpenIdConnectConfig) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type ClusterOpenIdConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenIdConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o ClusterOpenIdConnectConfigPtrOutput) ToClusterOpenIdConnectConfigPtrOutput() ClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o ClusterOpenIdConnectConfigPtrOutput) ToClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) ClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o ClusterOpenIdConnectConfigPtrOutput) Elem() ClusterOpenIdConnectConfigOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) ClusterOpenIdConnectConfig {
		if v != nil {
			return *v
		}
		var ret ClusterOpenIdConnectConfig
		return ret
	}).(ClusterOpenIdConnectConfigOutput)
}

// A client id that all tokens must be issued for
func (o ClusterOpenIdConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// JWT claim to use as the user's group
func (o ClusterOpenIdConnectConfigPtrOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.GroupsClaims
	}).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o ClusterOpenIdConnectConfigPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o ClusterOpenIdConnectConfigPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o ClusterOpenIdConnectConfigPtrOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.RequiredClaims
	}).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o ClusterOpenIdConnectConfigPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o ClusterOpenIdConnectConfigPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type PoolNode struct {
	// The ID of the IP address resource.
	Id *string `pulumi:"id"`
	// The name for the pool.
	//
	// > **Important:** Updates to this field will recreate a new resource.
	Name *string `pulumi:"name"`
	// The list of private IPv4 and IPv6 addresses associated with the node.
	PrivateIps []PoolNodePrivateIp `pulumi:"privateIps"`
	// The public IPv4. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
	//
	// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
	PublicIp *string `pulumi:"publicIp"`
	// The public IPv6. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
	//
	// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
	PublicIpV6 *string `pulumi:"publicIpV6"`
	// The status of the node.
	Status *string `pulumi:"status"`
}

// PoolNodeInput is an input type that accepts PoolNodeArgs and PoolNodeOutput values.
// You can construct a concrete instance of `PoolNodeInput` via:
//
//	PoolNodeArgs{...}
type PoolNodeInput interface {
	pulumi.Input

	ToPoolNodeOutput() PoolNodeOutput
	ToPoolNodeOutputWithContext(context.Context) PoolNodeOutput
}

type PoolNodeArgs struct {
	// The ID of the IP address resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name for the pool.
	//
	// > **Important:** Updates to this field will recreate a new resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The list of private IPv4 and IPv6 addresses associated with the node.
	PrivateIps PoolNodePrivateIpArrayInput `pulumi:"privateIps"`
	// The public IPv4. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
	//
	// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The public IPv6. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
	//
	// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
	PublicIpV6 pulumi.StringPtrInput `pulumi:"publicIpV6"`
	// The status of the node.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNode)(nil)).Elem()
}

func (i PoolNodeArgs) ToPoolNodeOutput() PoolNodeOutput {
	return i.ToPoolNodeOutputWithContext(context.Background())
}

func (i PoolNodeArgs) ToPoolNodeOutputWithContext(ctx context.Context) PoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodeOutput)
}

// PoolNodeArrayInput is an input type that accepts PoolNodeArray and PoolNodeArrayOutput values.
// You can construct a concrete instance of `PoolNodeArrayInput` via:
//
//	PoolNodeArray{ PoolNodeArgs{...} }
type PoolNodeArrayInput interface {
	pulumi.Input

	ToPoolNodeArrayOutput() PoolNodeArrayOutput
	ToPoolNodeArrayOutputWithContext(context.Context) PoolNodeArrayOutput
}

type PoolNodeArray []PoolNodeInput

func (PoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNode)(nil)).Elem()
}

func (i PoolNodeArray) ToPoolNodeArrayOutput() PoolNodeArrayOutput {
	return i.ToPoolNodeArrayOutputWithContext(context.Background())
}

func (i PoolNodeArray) ToPoolNodeArrayOutputWithContext(ctx context.Context) PoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodeArrayOutput)
}

type PoolNodeOutput struct{ *pulumi.OutputState }

func (PoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNode)(nil)).Elem()
}

func (o PoolNodeOutput) ToPoolNodeOutput() PoolNodeOutput {
	return o
}

func (o PoolNodeOutput) ToPoolNodeOutputWithContext(ctx context.Context) PoolNodeOutput {
	return o
}

// The ID of the IP address resource.
func (o PoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name for the pool.
//
// > **Important:** Updates to this field will recreate a new resource.
func (o PoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The list of private IPv4 and IPv6 addresses associated with the node.
func (o PoolNodeOutput) PrivateIps() PoolNodePrivateIpArrayOutput {
	return o.ApplyT(func(v PoolNode) []PoolNodePrivateIp { return v.PrivateIps }).(PoolNodePrivateIpArrayOutput)
}

// The public IPv4. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
//
// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
func (o PoolNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The public IPv6. (Deprecated, Please use the official Kubernetes provider and the kubernetesNodes data source)
//
// Deprecated: Please use the official Kubernetes provider and the kubernetesNodes data source
func (o PoolNodeOutput) PublicIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNode) *string { return v.PublicIpV6 }).(pulumi.StringPtrOutput)
}

// The status of the node.
func (o PoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PoolNodeArrayOutput struct{ *pulumi.OutputState }

func (PoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNode)(nil)).Elem()
}

func (o PoolNodeArrayOutput) ToPoolNodeArrayOutput() PoolNodeArrayOutput {
	return o
}

func (o PoolNodeArrayOutput) ToPoolNodeArrayOutputWithContext(ctx context.Context) PoolNodeArrayOutput {
	return o
}

func (o PoolNodeArrayOutput) Index(i pulumi.IntInput) PoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolNode {
		return vs[0].([]PoolNode)[vs[1].(int)]
	}).(PoolNodeOutput)
}

type PoolNodePrivateIp struct {
	// The private IP address.
	Address *string `pulumi:"address"`
	// The ID of the IP address resource.
	Id *string `pulumi:"id"`
}

// PoolNodePrivateIpInput is an input type that accepts PoolNodePrivateIpArgs and PoolNodePrivateIpOutput values.
// You can construct a concrete instance of `PoolNodePrivateIpInput` via:
//
//	PoolNodePrivateIpArgs{...}
type PoolNodePrivateIpInput interface {
	pulumi.Input

	ToPoolNodePrivateIpOutput() PoolNodePrivateIpOutput
	ToPoolNodePrivateIpOutputWithContext(context.Context) PoolNodePrivateIpOutput
}

type PoolNodePrivateIpArgs struct {
	// The private IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IP address resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PoolNodePrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNodePrivateIp)(nil)).Elem()
}

func (i PoolNodePrivateIpArgs) ToPoolNodePrivateIpOutput() PoolNodePrivateIpOutput {
	return i.ToPoolNodePrivateIpOutputWithContext(context.Background())
}

func (i PoolNodePrivateIpArgs) ToPoolNodePrivateIpOutputWithContext(ctx context.Context) PoolNodePrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodePrivateIpOutput)
}

// PoolNodePrivateIpArrayInput is an input type that accepts PoolNodePrivateIpArray and PoolNodePrivateIpArrayOutput values.
// You can construct a concrete instance of `PoolNodePrivateIpArrayInput` via:
//
//	PoolNodePrivateIpArray{ PoolNodePrivateIpArgs{...} }
type PoolNodePrivateIpArrayInput interface {
	pulumi.Input

	ToPoolNodePrivateIpArrayOutput() PoolNodePrivateIpArrayOutput
	ToPoolNodePrivateIpArrayOutputWithContext(context.Context) PoolNodePrivateIpArrayOutput
}

type PoolNodePrivateIpArray []PoolNodePrivateIpInput

func (PoolNodePrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNodePrivateIp)(nil)).Elem()
}

func (i PoolNodePrivateIpArray) ToPoolNodePrivateIpArrayOutput() PoolNodePrivateIpArrayOutput {
	return i.ToPoolNodePrivateIpArrayOutputWithContext(context.Background())
}

func (i PoolNodePrivateIpArray) ToPoolNodePrivateIpArrayOutputWithContext(ctx context.Context) PoolNodePrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodePrivateIpArrayOutput)
}

type PoolNodePrivateIpOutput struct{ *pulumi.OutputState }

func (PoolNodePrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNodePrivateIp)(nil)).Elem()
}

func (o PoolNodePrivateIpOutput) ToPoolNodePrivateIpOutput() PoolNodePrivateIpOutput {
	return o
}

func (o PoolNodePrivateIpOutput) ToPoolNodePrivateIpOutputWithContext(ctx context.Context) PoolNodePrivateIpOutput {
	return o
}

// The private IP address.
func (o PoolNodePrivateIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNodePrivateIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IP address resource.
func (o PoolNodePrivateIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNodePrivateIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PoolNodePrivateIpArrayOutput struct{ *pulumi.OutputState }

func (PoolNodePrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNodePrivateIp)(nil)).Elem()
}

func (o PoolNodePrivateIpArrayOutput) ToPoolNodePrivateIpArrayOutput() PoolNodePrivateIpArrayOutput {
	return o
}

func (o PoolNodePrivateIpArrayOutput) ToPoolNodePrivateIpArrayOutputWithContext(ctx context.Context) PoolNodePrivateIpArrayOutput {
	return o
}

func (o PoolNodePrivateIpArrayOutput) Index(i pulumi.IntInput) PoolNodePrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolNodePrivateIp {
		return vs[0].([]PoolNodePrivateIp)[vs[1].(int)]
	}).(PoolNodePrivateIpOutput)
}

type PoolUpgradePolicy struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge *int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable *int `pulumi:"maxUnavailable"`
}

// PoolUpgradePolicyInput is an input type that accepts PoolUpgradePolicyArgs and PoolUpgradePolicyOutput values.
// You can construct a concrete instance of `PoolUpgradePolicyInput` via:
//
//	PoolUpgradePolicyArgs{...}
type PoolUpgradePolicyInput interface {
	pulumi.Input

	ToPoolUpgradePolicyOutput() PoolUpgradePolicyOutput
	ToPoolUpgradePolicyOutputWithContext(context.Context) PoolUpgradePolicyOutput
}

type PoolUpgradePolicyArgs struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
}

func (PoolUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUpgradePolicy)(nil)).Elem()
}

func (i PoolUpgradePolicyArgs) ToPoolUpgradePolicyOutput() PoolUpgradePolicyOutput {
	return i.ToPoolUpgradePolicyOutputWithContext(context.Background())
}

func (i PoolUpgradePolicyArgs) ToPoolUpgradePolicyOutputWithContext(ctx context.Context) PoolUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUpgradePolicyOutput)
}

func (i PoolUpgradePolicyArgs) ToPoolUpgradePolicyPtrOutput() PoolUpgradePolicyPtrOutput {
	return i.ToPoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i PoolUpgradePolicyArgs) ToPoolUpgradePolicyPtrOutputWithContext(ctx context.Context) PoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUpgradePolicyOutput).ToPoolUpgradePolicyPtrOutputWithContext(ctx)
}

// PoolUpgradePolicyPtrInput is an input type that accepts PoolUpgradePolicyArgs, PoolUpgradePolicyPtr and PoolUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `PoolUpgradePolicyPtrInput` via:
//
//	        PoolUpgradePolicyArgs{...}
//
//	or:
//
//	        nil
type PoolUpgradePolicyPtrInput interface {
	pulumi.Input

	ToPoolUpgradePolicyPtrOutput() PoolUpgradePolicyPtrOutput
	ToPoolUpgradePolicyPtrOutputWithContext(context.Context) PoolUpgradePolicyPtrOutput
}

type poolUpgradePolicyPtrType PoolUpgradePolicyArgs

func PoolUpgradePolicyPtr(v *PoolUpgradePolicyArgs) PoolUpgradePolicyPtrInput {
	return (*poolUpgradePolicyPtrType)(v)
}

func (*poolUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolUpgradePolicy)(nil)).Elem()
}

func (i *poolUpgradePolicyPtrType) ToPoolUpgradePolicyPtrOutput() PoolUpgradePolicyPtrOutput {
	return i.ToPoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *poolUpgradePolicyPtrType) ToPoolUpgradePolicyPtrOutputWithContext(ctx context.Context) PoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUpgradePolicyPtrOutput)
}

type PoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (PoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUpgradePolicy)(nil)).Elem()
}

func (o PoolUpgradePolicyOutput) ToPoolUpgradePolicyOutput() PoolUpgradePolicyOutput {
	return o
}

func (o PoolUpgradePolicyOutput) ToPoolUpgradePolicyOutputWithContext(ctx context.Context) PoolUpgradePolicyOutput {
	return o
}

func (o PoolUpgradePolicyOutput) ToPoolUpgradePolicyPtrOutput() PoolUpgradePolicyPtrOutput {
	return o.ToPoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o PoolUpgradePolicyOutput) ToPoolUpgradePolicyPtrOutputWithContext(ctx context.Context) PoolUpgradePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolUpgradePolicy) *PoolUpgradePolicy {
		return &v
	}).(PoolUpgradePolicyPtrOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o PoolUpgradePolicyOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolUpgradePolicy) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o PoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolUpgradePolicy) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

type PoolUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (PoolUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolUpgradePolicy)(nil)).Elem()
}

func (o PoolUpgradePolicyPtrOutput) ToPoolUpgradePolicyPtrOutput() PoolUpgradePolicyPtrOutput {
	return o
}

func (o PoolUpgradePolicyPtrOutput) ToPoolUpgradePolicyPtrOutputWithContext(ctx context.Context) PoolUpgradePolicyPtrOutput {
	return o
}

func (o PoolUpgradePolicyPtrOutput) Elem() PoolUpgradePolicyOutput {
	return o.ApplyT(func(v *PoolUpgradePolicy) PoolUpgradePolicy {
		if v != nil {
			return *v
		}
		var ret PoolUpgradePolicy
		return ret
	}).(PoolUpgradePolicyOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o PoolUpgradePolicyPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o PoolUpgradePolicyPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type GetClusterAutoUpgrade struct {
	// True if Kubernetes patch version auto upgrades is enabled.
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

// GetClusterAutoUpgradeInput is an input type that accepts GetClusterAutoUpgradeArgs and GetClusterAutoUpgradeOutput values.
// You can construct a concrete instance of `GetClusterAutoUpgradeInput` via:
//
//	GetClusterAutoUpgradeArgs{...}
type GetClusterAutoUpgradeInput interface {
	pulumi.Input

	ToGetClusterAutoUpgradeOutput() GetClusterAutoUpgradeOutput
	ToGetClusterAutoUpgradeOutputWithContext(context.Context) GetClusterAutoUpgradeOutput
}

type GetClusterAutoUpgradeArgs struct {
	// True if Kubernetes patch version auto upgrades is enabled.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay pulumi.StringInput `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour pulumi.IntInput `pulumi:"maintenanceWindowStartHour"`
}

func (GetClusterAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutoUpgrade)(nil)).Elem()
}

func (i GetClusterAutoUpgradeArgs) ToGetClusterAutoUpgradeOutput() GetClusterAutoUpgradeOutput {
	return i.ToGetClusterAutoUpgradeOutputWithContext(context.Background())
}

func (i GetClusterAutoUpgradeArgs) ToGetClusterAutoUpgradeOutputWithContext(ctx context.Context) GetClusterAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutoUpgradeOutput)
}

// GetClusterAutoUpgradeArrayInput is an input type that accepts GetClusterAutoUpgradeArray and GetClusterAutoUpgradeArrayOutput values.
// You can construct a concrete instance of `GetClusterAutoUpgradeArrayInput` via:
//
//	GetClusterAutoUpgradeArray{ GetClusterAutoUpgradeArgs{...} }
type GetClusterAutoUpgradeArrayInput interface {
	pulumi.Input

	ToGetClusterAutoUpgradeArrayOutput() GetClusterAutoUpgradeArrayOutput
	ToGetClusterAutoUpgradeArrayOutputWithContext(context.Context) GetClusterAutoUpgradeArrayOutput
}

type GetClusterAutoUpgradeArray []GetClusterAutoUpgradeInput

func (GetClusterAutoUpgradeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutoUpgrade)(nil)).Elem()
}

func (i GetClusterAutoUpgradeArray) ToGetClusterAutoUpgradeArrayOutput() GetClusterAutoUpgradeArrayOutput {
	return i.ToGetClusterAutoUpgradeArrayOutputWithContext(context.Background())
}

func (i GetClusterAutoUpgradeArray) ToGetClusterAutoUpgradeArrayOutputWithContext(ctx context.Context) GetClusterAutoUpgradeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutoUpgradeArrayOutput)
}

type GetClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (GetClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutoUpgrade)(nil)).Elem()
}

func (o GetClusterAutoUpgradeOutput) ToGetClusterAutoUpgradeOutput() GetClusterAutoUpgradeOutput {
	return o
}

func (o GetClusterAutoUpgradeOutput) ToGetClusterAutoUpgradeOutputWithContext(ctx context.Context) GetClusterAutoUpgradeOutput {
	return o
}

// True if Kubernetes patch version auto upgrades is enabled.
func (o GetClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o GetClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o GetClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type GetClusterAutoUpgradeArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAutoUpgradeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutoUpgrade)(nil)).Elem()
}

func (o GetClusterAutoUpgradeArrayOutput) ToGetClusterAutoUpgradeArrayOutput() GetClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetClusterAutoUpgradeArrayOutput) ToGetClusterAutoUpgradeArrayOutputWithContext(ctx context.Context) GetClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetClusterAutoUpgradeArrayOutput) Index(i pulumi.IntInput) GetClusterAutoUpgradeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAutoUpgrade {
		return vs[0].([]GetClusterAutoUpgrade)[vs[1].(int)]
	}).(GetClusterAutoUpgradeOutput)
}

type GetClusterAutoscalerConfig struct {
	// True if detecting similar node groups and balance the number of nodes between them is enabled.
	BalanceSimilarNodeGroups bool `pulumi:"balanceSimilarNodeGroups"`
	// True if the scale down feature of the autoscaler is disabled.
	DisableScaleDown bool `pulumi:"disableScaleDown"`
	// The type of resource estimator used in scale up.
	Estimator string `pulumi:"estimator"`
	// The type of node group expander be used in scale up.
	Expander string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff int `pulumi:"expendablePodsPriorityCutoff"`
	// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
	IgnoreDaemonsetsUtilization bool `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec int `pulumi:"maxGracefulTerminationSec"`
	// The duration after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd string `pulumi:"scaleDownDelayAfterAdd"`
	// The duration a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime string `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold float64 `pulumi:"scaleDownUtilizationThreshold"`
}

// GetClusterAutoscalerConfigInput is an input type that accepts GetClusterAutoscalerConfigArgs and GetClusterAutoscalerConfigOutput values.
// You can construct a concrete instance of `GetClusterAutoscalerConfigInput` via:
//
//	GetClusterAutoscalerConfigArgs{...}
type GetClusterAutoscalerConfigInput interface {
	pulumi.Input

	ToGetClusterAutoscalerConfigOutput() GetClusterAutoscalerConfigOutput
	ToGetClusterAutoscalerConfigOutputWithContext(context.Context) GetClusterAutoscalerConfigOutput
}

type GetClusterAutoscalerConfigArgs struct {
	// True if detecting similar node groups and balance the number of nodes between them is enabled.
	BalanceSimilarNodeGroups pulumi.BoolInput `pulumi:"balanceSimilarNodeGroups"`
	// True if the scale down feature of the autoscaler is disabled.
	DisableScaleDown pulumi.BoolInput `pulumi:"disableScaleDown"`
	// The type of resource estimator used in scale up.
	Estimator pulumi.StringInput `pulumi:"estimator"`
	// The type of node group expander be used in scale up.
	Expander pulumi.StringInput `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff pulumi.IntInput `pulumi:"expendablePodsPriorityCutoff"`
	// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
	IgnoreDaemonsetsUtilization pulumi.BoolInput `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec pulumi.IntInput `pulumi:"maxGracefulTerminationSec"`
	// The duration after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd pulumi.StringInput `pulumi:"scaleDownDelayAfterAdd"`
	// The duration a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime pulumi.StringInput `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold pulumi.Float64Input `pulumi:"scaleDownUtilizationThreshold"`
}

func (GetClusterAutoscalerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutoscalerConfig)(nil)).Elem()
}

func (i GetClusterAutoscalerConfigArgs) ToGetClusterAutoscalerConfigOutput() GetClusterAutoscalerConfigOutput {
	return i.ToGetClusterAutoscalerConfigOutputWithContext(context.Background())
}

func (i GetClusterAutoscalerConfigArgs) ToGetClusterAutoscalerConfigOutputWithContext(ctx context.Context) GetClusterAutoscalerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutoscalerConfigOutput)
}

// GetClusterAutoscalerConfigArrayInput is an input type that accepts GetClusterAutoscalerConfigArray and GetClusterAutoscalerConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterAutoscalerConfigArrayInput` via:
//
//	GetClusterAutoscalerConfigArray{ GetClusterAutoscalerConfigArgs{...} }
type GetClusterAutoscalerConfigArrayInput interface {
	pulumi.Input

	ToGetClusterAutoscalerConfigArrayOutput() GetClusterAutoscalerConfigArrayOutput
	ToGetClusterAutoscalerConfigArrayOutputWithContext(context.Context) GetClusterAutoscalerConfigArrayOutput
}

type GetClusterAutoscalerConfigArray []GetClusterAutoscalerConfigInput

func (GetClusterAutoscalerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutoscalerConfig)(nil)).Elem()
}

func (i GetClusterAutoscalerConfigArray) ToGetClusterAutoscalerConfigArrayOutput() GetClusterAutoscalerConfigArrayOutput {
	return i.ToGetClusterAutoscalerConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterAutoscalerConfigArray) ToGetClusterAutoscalerConfigArrayOutputWithContext(ctx context.Context) GetClusterAutoscalerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterAutoscalerConfigArrayOutput)
}

type GetClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (GetClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetClusterAutoscalerConfigOutput) ToGetClusterAutoscalerConfigOutput() GetClusterAutoscalerConfigOutput {
	return o
}

func (o GetClusterAutoscalerConfigOutput) ToGetClusterAutoscalerConfigOutputWithContext(ctx context.Context) GetClusterAutoscalerConfigOutput {
	return o
}

// True if detecting similar node groups and balance the number of nodes between them is enabled.
func (o GetClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolOutput)
}

// True if the scale down feature of the autoscaler is disabled.
func (o GetClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) bool { return v.DisableScaleDown }).(pulumi.BoolOutput)
}

// The type of resource estimator used in scale up.
func (o GetClusterAutoscalerConfigOutput) Estimator() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) string { return v.Estimator }).(pulumi.StringOutput)
}

// The type of node group expander be used in scale up.
func (o GetClusterAutoscalerConfigOutput) Expander() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) string { return v.Expander }).(pulumi.StringOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o GetClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntOutput)
}

// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
func (o GetClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o GetClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) int { return v.MaxGracefulTerminationSec }).(pulumi.IntOutput)
}

// The duration after scale up that scale down evaluation resumes.
func (o GetClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringOutput)
}

// The duration a node should be unneeded before it is eligible for scale down.
func (o GetClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) string { return v.ScaleDownUnneededTime }).(pulumi.StringOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o GetClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetClusterAutoscalerConfig) float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64Output)
}

type GetClusterAutoscalerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterAutoscalerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetClusterAutoscalerConfigArrayOutput) ToGetClusterAutoscalerConfigArrayOutput() GetClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetClusterAutoscalerConfigArrayOutput) ToGetClusterAutoscalerConfigArrayOutputWithContext(ctx context.Context) GetClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetClusterAutoscalerConfigArrayOutput) Index(i pulumi.IntInput) GetClusterAutoscalerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterAutoscalerConfig {
		return vs[0].([]GetClusterAutoscalerConfig)[vs[1].(int)]
	}).(GetClusterAutoscalerConfigOutput)
}

type GetClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token string `pulumi:"token"`
}

// GetClusterKubeconfigInput is an input type that accepts GetClusterKubeconfigArgs and GetClusterKubeconfigOutput values.
// You can construct a concrete instance of `GetClusterKubeconfigInput` via:
//
//	GetClusterKubeconfigArgs{...}
type GetClusterKubeconfigInput interface {
	pulumi.Input

	ToGetClusterKubeconfigOutput() GetClusterKubeconfigOutput
	ToGetClusterKubeconfigOutputWithContext(context.Context) GetClusterKubeconfigOutput
}

type GetClusterKubeconfigArgs struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile pulumi.StringInput `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host pulumi.StringInput `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetClusterKubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterKubeconfig)(nil)).Elem()
}

func (i GetClusterKubeconfigArgs) ToGetClusterKubeconfigOutput() GetClusterKubeconfigOutput {
	return i.ToGetClusterKubeconfigOutputWithContext(context.Background())
}

func (i GetClusterKubeconfigArgs) ToGetClusterKubeconfigOutputWithContext(ctx context.Context) GetClusterKubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterKubeconfigOutput)
}

// GetClusterKubeconfigArrayInput is an input type that accepts GetClusterKubeconfigArray and GetClusterKubeconfigArrayOutput values.
// You can construct a concrete instance of `GetClusterKubeconfigArrayInput` via:
//
//	GetClusterKubeconfigArray{ GetClusterKubeconfigArgs{...} }
type GetClusterKubeconfigArrayInput interface {
	pulumi.Input

	ToGetClusterKubeconfigArrayOutput() GetClusterKubeconfigArrayOutput
	ToGetClusterKubeconfigArrayOutputWithContext(context.Context) GetClusterKubeconfigArrayOutput
}

type GetClusterKubeconfigArray []GetClusterKubeconfigInput

func (GetClusterKubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterKubeconfig)(nil)).Elem()
}

func (i GetClusterKubeconfigArray) ToGetClusterKubeconfigArrayOutput() GetClusterKubeconfigArrayOutput {
	return i.ToGetClusterKubeconfigArrayOutputWithContext(context.Background())
}

func (i GetClusterKubeconfigArray) ToGetClusterKubeconfigArrayOutputWithContext(ctx context.Context) GetClusterKubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterKubeconfigArrayOutput)
}

type GetClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (GetClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterKubeconfig)(nil)).Elem()
}

func (o GetClusterKubeconfigOutput) ToGetClusterKubeconfigOutput() GetClusterKubeconfigOutput {
	return o
}

func (o GetClusterKubeconfigOutput) ToGetClusterKubeconfigOutputWithContext(ctx context.Context) GetClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o GetClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubeconfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The raw kubeconfig file.
func (o GetClusterKubeconfigOutput) ConfigFile() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubeconfig) string { return v.ConfigFile }).(pulumi.StringOutput)
}

// The URL of the Kubernetes API server.
func (o GetClusterKubeconfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubeconfig) string { return v.Host }).(pulumi.StringOutput)
}

// The token to connect to the Kubernetes API server.
func (o GetClusterKubeconfigOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterKubeconfig) string { return v.Token }).(pulumi.StringOutput)
}

type GetClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterKubeconfig)(nil)).Elem()
}

func (o GetClusterKubeconfigArrayOutput) ToGetClusterKubeconfigArrayOutput() GetClusterKubeconfigArrayOutput {
	return o
}

func (o GetClusterKubeconfigArrayOutput) ToGetClusterKubeconfigArrayOutputWithContext(ctx context.Context) GetClusterKubeconfigArrayOutput {
	return o
}

func (o GetClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) GetClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterKubeconfig {
		return vs[0].([]GetClusterKubeconfig)[vs[1].(int)]
	}).(GetClusterKubeconfigOutput)
}

type GetClusterOpenIdConnectConfig struct {
	// A client id that all tokens must be issued for
	ClientId string `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims []string `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix string `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl string `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims []string `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim string `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix string `pulumi:"usernamePrefix"`
}

// GetClusterOpenIdConnectConfigInput is an input type that accepts GetClusterOpenIdConnectConfigArgs and GetClusterOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `GetClusterOpenIdConnectConfigInput` via:
//
//	GetClusterOpenIdConnectConfigArgs{...}
type GetClusterOpenIdConnectConfigInput interface {
	pulumi.Input

	ToGetClusterOpenIdConnectConfigOutput() GetClusterOpenIdConnectConfigOutput
	ToGetClusterOpenIdConnectConfigOutputWithContext(context.Context) GetClusterOpenIdConnectConfigOutput
}

type GetClusterOpenIdConnectConfigArgs struct {
	// A client id that all tokens must be issued for
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims pulumi.StringArrayInput `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix pulumi.StringInput `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims pulumi.StringArrayInput `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim pulumi.StringInput `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix pulumi.StringInput `pulumi:"usernamePrefix"`
}

func (GetClusterOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i GetClusterOpenIdConnectConfigArgs) ToGetClusterOpenIdConnectConfigOutput() GetClusterOpenIdConnectConfigOutput {
	return i.ToGetClusterOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i GetClusterOpenIdConnectConfigArgs) ToGetClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) GetClusterOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOpenIdConnectConfigOutput)
}

// GetClusterOpenIdConnectConfigArrayInput is an input type that accepts GetClusterOpenIdConnectConfigArray and GetClusterOpenIdConnectConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterOpenIdConnectConfigArrayInput` via:
//
//	GetClusterOpenIdConnectConfigArray{ GetClusterOpenIdConnectConfigArgs{...} }
type GetClusterOpenIdConnectConfigArrayInput interface {
	pulumi.Input

	ToGetClusterOpenIdConnectConfigArrayOutput() GetClusterOpenIdConnectConfigArrayOutput
	ToGetClusterOpenIdConnectConfigArrayOutputWithContext(context.Context) GetClusterOpenIdConnectConfigArrayOutput
}

type GetClusterOpenIdConnectConfigArray []GetClusterOpenIdConnectConfigInput

func (GetClusterOpenIdConnectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i GetClusterOpenIdConnectConfigArray) ToGetClusterOpenIdConnectConfigArrayOutput() GetClusterOpenIdConnectConfigArrayOutput {
	return i.ToGetClusterOpenIdConnectConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterOpenIdConnectConfigArray) ToGetClusterOpenIdConnectConfigArrayOutputWithContext(ctx context.Context) GetClusterOpenIdConnectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterOpenIdConnectConfigArrayOutput)
}

type GetClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (GetClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetClusterOpenIdConnectConfigOutput) ToGetClusterOpenIdConnectConfigOutput() GetClusterOpenIdConnectConfigOutput {
	return o
}

func (o GetClusterOpenIdConnectConfigOutput) ToGetClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) GetClusterOpenIdConnectConfigOutput {
	return o
}

// A client id that all tokens must be issued for
func (o GetClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// JWT claim to use as the user's group
func (o GetClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o GetClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) string { return v.GroupsPrefix }).(pulumi.StringOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o GetClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o GetClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o GetClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) string { return v.UsernameClaim }).(pulumi.StringOutput)
}

// Prefix prepended to username
func (o GetClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterOpenIdConnectConfig) string { return v.UsernamePrefix }).(pulumi.StringOutput)
}

type GetClusterOpenIdConnectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterOpenIdConnectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetClusterOpenIdConnectConfigArrayOutput) ToGetClusterOpenIdConnectConfigArrayOutput() GetClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetClusterOpenIdConnectConfigArrayOutput) ToGetClusterOpenIdConnectConfigArrayOutputWithContext(ctx context.Context) GetClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetClusterOpenIdConnectConfigArrayOutput) Index(i pulumi.IntInput) GetClusterOpenIdConnectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterOpenIdConnectConfig {
		return vs[0].([]GetClusterOpenIdConnectConfig)[vs[1].(int)]
	}).(GetClusterOpenIdConnectConfigOutput)
}

type GetPoolNode struct {
	// The ID of the pool.
	Id string `pulumi:"id"`
	// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
	Name string `pulumi:"name"`
	// List of private IPv4 and IPv6 addresses associated with the node
	PrivateIps []GetPoolNodePrivateIp `pulumi:"privateIps"`
	// The public IPv4.
	PublicIp string `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 string `pulumi:"publicIpV6"`
	// The status of the node.
	Status string `pulumi:"status"`
}

// GetPoolNodeInput is an input type that accepts GetPoolNodeArgs and GetPoolNodeOutput values.
// You can construct a concrete instance of `GetPoolNodeInput` via:
//
//	GetPoolNodeArgs{...}
type GetPoolNodeInput interface {
	pulumi.Input

	ToGetPoolNodeOutput() GetPoolNodeOutput
	ToGetPoolNodeOutputWithContext(context.Context) GetPoolNodeOutput
}

type GetPoolNodeArgs struct {
	// The ID of the pool.
	Id pulumi.StringInput `pulumi:"id"`
	// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
	Name pulumi.StringInput `pulumi:"name"`
	// List of private IPv4 and IPv6 addresses associated with the node
	PrivateIps GetPoolNodePrivateIpArrayInput `pulumi:"privateIps"`
	// The public IPv4.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 pulumi.StringInput `pulumi:"publicIpV6"`
	// The status of the node.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetPoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNode)(nil)).Elem()
}

func (i GetPoolNodeArgs) ToGetPoolNodeOutput() GetPoolNodeOutput {
	return i.ToGetPoolNodeOutputWithContext(context.Background())
}

func (i GetPoolNodeArgs) ToGetPoolNodeOutputWithContext(ctx context.Context) GetPoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodeOutput)
}

// GetPoolNodeArrayInput is an input type that accepts GetPoolNodeArray and GetPoolNodeArrayOutput values.
// You can construct a concrete instance of `GetPoolNodeArrayInput` via:
//
//	GetPoolNodeArray{ GetPoolNodeArgs{...} }
type GetPoolNodeArrayInput interface {
	pulumi.Input

	ToGetPoolNodeArrayOutput() GetPoolNodeArrayOutput
	ToGetPoolNodeArrayOutputWithContext(context.Context) GetPoolNodeArrayOutput
}

type GetPoolNodeArray []GetPoolNodeInput

func (GetPoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNode)(nil)).Elem()
}

func (i GetPoolNodeArray) ToGetPoolNodeArrayOutput() GetPoolNodeArrayOutput {
	return i.ToGetPoolNodeArrayOutputWithContext(context.Background())
}

func (i GetPoolNodeArray) ToGetPoolNodeArrayOutputWithContext(ctx context.Context) GetPoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodeArrayOutput)
}

type GetPoolNodeOutput struct{ *pulumi.OutputState }

func (GetPoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNode)(nil)).Elem()
}

func (o GetPoolNodeOutput) ToGetPoolNodeOutput() GetPoolNodeOutput {
	return o
}

func (o GetPoolNodeOutput) ToGetPoolNodeOutputWithContext(ctx context.Context) GetPoolNodeOutput {
	return o
}

// The ID of the pool.
func (o GetPoolNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNode) string { return v.Id }).(pulumi.StringOutput)
}

// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
func (o GetPoolNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNode) string { return v.Name }).(pulumi.StringOutput)
}

// List of private IPv4 and IPv6 addresses associated with the node
func (o GetPoolNodeOutput) PrivateIps() GetPoolNodePrivateIpArrayOutput {
	return o.ApplyT(func(v GetPoolNode) []GetPoolNodePrivateIp { return v.PrivateIps }).(GetPoolNodePrivateIpArrayOutput)
}

// The public IPv4.
func (o GetPoolNodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNode) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The public IPv6.
func (o GetPoolNodeOutput) PublicIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNode) string { return v.PublicIpV6 }).(pulumi.StringOutput)
}

// The status of the node.
func (o GetPoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetPoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNode)(nil)).Elem()
}

func (o GetPoolNodeArrayOutput) ToGetPoolNodeArrayOutput() GetPoolNodeArrayOutput {
	return o
}

func (o GetPoolNodeArrayOutput) ToGetPoolNodeArrayOutputWithContext(ctx context.Context) GetPoolNodeArrayOutput {
	return o
}

func (o GetPoolNodeArrayOutput) Index(i pulumi.IntInput) GetPoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNode {
		return vs[0].([]GetPoolNode)[vs[1].(int)]
	}).(GetPoolNodeOutput)
}

type GetPoolNodePrivateIp struct {
	// The private IP address
	Address string `pulumi:"address"`
	// The ID of the pool.
	Id string `pulumi:"id"`
}

// GetPoolNodePrivateIpInput is an input type that accepts GetPoolNodePrivateIpArgs and GetPoolNodePrivateIpOutput values.
// You can construct a concrete instance of `GetPoolNodePrivateIpInput` via:
//
//	GetPoolNodePrivateIpArgs{...}
type GetPoolNodePrivateIpInput interface {
	pulumi.Input

	ToGetPoolNodePrivateIpOutput() GetPoolNodePrivateIpOutput
	ToGetPoolNodePrivateIpOutputWithContext(context.Context) GetPoolNodePrivateIpOutput
}

type GetPoolNodePrivateIpArgs struct {
	// The private IP address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the pool.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPoolNodePrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNodePrivateIp)(nil)).Elem()
}

func (i GetPoolNodePrivateIpArgs) ToGetPoolNodePrivateIpOutput() GetPoolNodePrivateIpOutput {
	return i.ToGetPoolNodePrivateIpOutputWithContext(context.Background())
}

func (i GetPoolNodePrivateIpArgs) ToGetPoolNodePrivateIpOutputWithContext(ctx context.Context) GetPoolNodePrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodePrivateIpOutput)
}

// GetPoolNodePrivateIpArrayInput is an input type that accepts GetPoolNodePrivateIpArray and GetPoolNodePrivateIpArrayOutput values.
// You can construct a concrete instance of `GetPoolNodePrivateIpArrayInput` via:
//
//	GetPoolNodePrivateIpArray{ GetPoolNodePrivateIpArgs{...} }
type GetPoolNodePrivateIpArrayInput interface {
	pulumi.Input

	ToGetPoolNodePrivateIpArrayOutput() GetPoolNodePrivateIpArrayOutput
	ToGetPoolNodePrivateIpArrayOutputWithContext(context.Context) GetPoolNodePrivateIpArrayOutput
}

type GetPoolNodePrivateIpArray []GetPoolNodePrivateIpInput

func (GetPoolNodePrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNodePrivateIp)(nil)).Elem()
}

func (i GetPoolNodePrivateIpArray) ToGetPoolNodePrivateIpArrayOutput() GetPoolNodePrivateIpArrayOutput {
	return i.ToGetPoolNodePrivateIpArrayOutputWithContext(context.Background())
}

func (i GetPoolNodePrivateIpArray) ToGetPoolNodePrivateIpArrayOutputWithContext(ctx context.Context) GetPoolNodePrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodePrivateIpArrayOutput)
}

type GetPoolNodePrivateIpOutput struct{ *pulumi.OutputState }

func (GetPoolNodePrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNodePrivateIp)(nil)).Elem()
}

func (o GetPoolNodePrivateIpOutput) ToGetPoolNodePrivateIpOutput() GetPoolNodePrivateIpOutput {
	return o
}

func (o GetPoolNodePrivateIpOutput) ToGetPoolNodePrivateIpOutputWithContext(ctx context.Context) GetPoolNodePrivateIpOutput {
	return o
}

// The private IP address
func (o GetPoolNodePrivateIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNodePrivateIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the pool.
func (o GetPoolNodePrivateIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNodePrivateIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetPoolNodePrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNodePrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNodePrivateIp)(nil)).Elem()
}

func (o GetPoolNodePrivateIpArrayOutput) ToGetPoolNodePrivateIpArrayOutput() GetPoolNodePrivateIpArrayOutput {
	return o
}

func (o GetPoolNodePrivateIpArrayOutput) ToGetPoolNodePrivateIpArrayOutputWithContext(ctx context.Context) GetPoolNodePrivateIpArrayOutput {
	return o
}

func (o GetPoolNodePrivateIpArrayOutput) Index(i pulumi.IntInput) GetPoolNodePrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNodePrivateIp {
		return vs[0].([]GetPoolNodePrivateIp)[vs[1].(int)]
	}).(GetPoolNodePrivateIpOutput)
}

type GetPoolUpgradePolicy struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// GetPoolUpgradePolicyInput is an input type that accepts GetPoolUpgradePolicyArgs and GetPoolUpgradePolicyOutput values.
// You can construct a concrete instance of `GetPoolUpgradePolicyInput` via:
//
//	GetPoolUpgradePolicyArgs{...}
type GetPoolUpgradePolicyInput interface {
	pulumi.Input

	ToGetPoolUpgradePolicyOutput() GetPoolUpgradePolicyOutput
	ToGetPoolUpgradePolicyOutputWithContext(context.Context) GetPoolUpgradePolicyOutput
}

type GetPoolUpgradePolicyArgs struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (GetPoolUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUpgradePolicy)(nil)).Elem()
}

func (i GetPoolUpgradePolicyArgs) ToGetPoolUpgradePolicyOutput() GetPoolUpgradePolicyOutput {
	return i.ToGetPoolUpgradePolicyOutputWithContext(context.Background())
}

func (i GetPoolUpgradePolicyArgs) ToGetPoolUpgradePolicyOutputWithContext(ctx context.Context) GetPoolUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUpgradePolicyOutput)
}

// GetPoolUpgradePolicyArrayInput is an input type that accepts GetPoolUpgradePolicyArray and GetPoolUpgradePolicyArrayOutput values.
// You can construct a concrete instance of `GetPoolUpgradePolicyArrayInput` via:
//
//	GetPoolUpgradePolicyArray{ GetPoolUpgradePolicyArgs{...} }
type GetPoolUpgradePolicyArrayInput interface {
	pulumi.Input

	ToGetPoolUpgradePolicyArrayOutput() GetPoolUpgradePolicyArrayOutput
	ToGetPoolUpgradePolicyArrayOutputWithContext(context.Context) GetPoolUpgradePolicyArrayOutput
}

type GetPoolUpgradePolicyArray []GetPoolUpgradePolicyInput

func (GetPoolUpgradePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUpgradePolicy)(nil)).Elem()
}

func (i GetPoolUpgradePolicyArray) ToGetPoolUpgradePolicyArrayOutput() GetPoolUpgradePolicyArrayOutput {
	return i.ToGetPoolUpgradePolicyArrayOutputWithContext(context.Background())
}

func (i GetPoolUpgradePolicyArray) ToGetPoolUpgradePolicyArrayOutputWithContext(ctx context.Context) GetPoolUpgradePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUpgradePolicyArrayOutput)
}

type GetPoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (GetPoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUpgradePolicy)(nil)).Elem()
}

func (o GetPoolUpgradePolicyOutput) ToGetPoolUpgradePolicyOutput() GetPoolUpgradePolicyOutput {
	return o
}

func (o GetPoolUpgradePolicyOutput) ToGetPoolUpgradePolicyOutputWithContext(ctx context.Context) GetPoolUpgradePolicyOutput {
	return o
}

// The maximum number of nodes to be created during the upgrade
func (o GetPoolUpgradePolicyOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolUpgradePolicy) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o GetPoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolUpgradePolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetPoolUpgradePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoolUpgradePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUpgradePolicy)(nil)).Elem()
}

func (o GetPoolUpgradePolicyArrayOutput) ToGetPoolUpgradePolicyArrayOutput() GetPoolUpgradePolicyArrayOutput {
	return o
}

func (o GetPoolUpgradePolicyArrayOutput) ToGetPoolUpgradePolicyArrayOutputWithContext(ctx context.Context) GetPoolUpgradePolicyArrayOutput {
	return o
}

func (o GetPoolUpgradePolicyArrayOutput) Index(i pulumi.IntInput) GetPoolUpgradePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolUpgradePolicy {
		return vs[0].([]GetPoolUpgradePolicy)[vs[1].(int)]
	}).(GetPoolUpgradePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclRuleInput)(nil)).Elem(), AclAclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclRuleArrayInput)(nil)).Elem(), AclAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoUpgradeInput)(nil)).Elem(), ClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoUpgradePtrInput)(nil)).Elem(), ClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalerConfigInput)(nil)).Elem(), ClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalerConfigPtrInput)(nil)).Elem(), ClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeconfigInput)(nil)).Elem(), ClusterKubeconfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeconfigArrayInput)(nil)).Elem(), ClusterKubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenIdConnectConfigInput)(nil)).Elem(), ClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenIdConnectConfigPtrInput)(nil)).Elem(), ClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodeInput)(nil)).Elem(), PoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodeArrayInput)(nil)).Elem(), PoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodePrivateIpInput)(nil)).Elem(), PoolNodePrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodePrivateIpArrayInput)(nil)).Elem(), PoolNodePrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUpgradePolicyInput)(nil)).Elem(), PoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUpgradePolicyPtrInput)(nil)).Elem(), PoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutoUpgradeInput)(nil)).Elem(), GetClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutoUpgradeArrayInput)(nil)).Elem(), GetClusterAutoUpgradeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutoscalerConfigInput)(nil)).Elem(), GetClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterAutoscalerConfigArrayInput)(nil)).Elem(), GetClusterAutoscalerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterKubeconfigInput)(nil)).Elem(), GetClusterKubeconfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterKubeconfigArrayInput)(nil)).Elem(), GetClusterKubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOpenIdConnectConfigInput)(nil)).Elem(), GetClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterOpenIdConnectConfigArrayInput)(nil)).Elem(), GetClusterOpenIdConnectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodeInput)(nil)).Elem(), GetPoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodeArrayInput)(nil)).Elem(), GetPoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodePrivateIpInput)(nil)).Elem(), GetPoolNodePrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodePrivateIpArrayInput)(nil)).Elem(), GetPoolNodePrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUpgradePolicyInput)(nil)).Elem(), GetPoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUpgradePolicyArrayInput)(nil)).Elem(), GetPoolUpgradePolicyArray{})
	pulumi.RegisterOutputType(AclAclRuleOutput{})
	pulumi.RegisterOutputType(AclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(ClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(ClusterAutoUpgradePtrOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalerConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(ClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(ClusterOpenIdConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(PoolNodeOutput{})
	pulumi.RegisterOutputType(PoolNodeArrayOutput{})
	pulumi.RegisterOutputType(PoolNodePrivateIpOutput{})
	pulumi.RegisterOutputType(PoolNodePrivateIpArrayOutput{})
	pulumi.RegisterOutputType(PoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(PoolUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(GetClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(GetClusterAutoUpgradeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(GetClusterAutoscalerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(GetClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(GetClusterOpenIdConnectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNodeOutput{})
	pulumi.RegisterOutputType(GetPoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNodePrivateIpOutput{})
	pulumi.RegisterOutputType(GetPoolNodePrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetPoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(GetPoolUpgradePolicyArrayOutput{})
}
