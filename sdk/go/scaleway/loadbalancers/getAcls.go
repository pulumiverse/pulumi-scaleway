// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadbalancers

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple Load Balancer ACLs.
//
// For more information, see the [main documentation](https://www.scaleway.com/en/docs/load-balancer/reference-content/acls/) or [API reference](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-acls-get-an-acl).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/loadbalancers"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Find acls that share the same frontend ID
//			_, err := loadbalancers.GetAcls(ctx, &loadbalancers.GetAclsArgs{
//				FrontendId: frt01.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Find acls by frontend ID and name
//			_, err = loadbalancers.GetAcls(ctx, &loadbalancers.GetAclsArgs{
//				FrontendId: frt01.Id,
//				Name:       pulumi.StringRef("tf-acls-datasource"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAcls(ctx *pulumi.Context, args *GetAclsArgs, opts ...pulumi.InvokeOption) (*GetAclsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAclsResult
	err := ctx.Invoke("scaleway:loadbalancers/getAcls:getAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcls.
type GetAclsArgs struct {
	// The frontend ID this ACL is attached to. ACLs with a matching frontend ID are listed.
	// > **Important:** LB frontend IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId string `pulumi:"frontendId"`
	// The ACL name to filter for. ACLs with a matching name are listed.
	Name      *string `pulumi:"name"`
	ProjectId *string `pulumi:"projectId"`
	// `zone`) The zone in which the ACLs exist.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getAcls.
type GetAclsResult struct {
	// List of retrieved ACLs
	Acls       []GetAclsAcl `pulumi:"acls"`
	FrontendId string       `pulumi:"frontendId"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	ProjectId      string  `pulumi:"projectId"`
	Zone           string  `pulumi:"zone"`
}

func GetAclsOutput(ctx *pulumi.Context, args GetAclsOutputArgs, opts ...pulumi.InvokeOption) GetAclsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAclsResultOutput, error) {
			args := v.(GetAclsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:loadbalancers/getAcls:getAcls", args, GetAclsResultOutput{}, options).(GetAclsResultOutput), nil
		}).(GetAclsResultOutput)
}

// A collection of arguments for invoking getAcls.
type GetAclsOutputArgs struct {
	// The frontend ID this ACL is attached to. ACLs with a matching frontend ID are listed.
	// > **Important:** LB frontend IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId pulumi.StringInput `pulumi:"frontendId"`
	// The ACL name to filter for. ACLs with a matching name are listed.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// `zone`) The zone in which the ACLs exist.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsArgs)(nil)).Elem()
}

// A collection of values returned by getAcls.
type GetAclsResultOutput struct{ *pulumi.OutputState }

func (GetAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsResult)(nil)).Elem()
}

func (o GetAclsResultOutput) ToGetAclsResultOutput() GetAclsResultOutput {
	return o
}

func (o GetAclsResultOutput) ToGetAclsResultOutputWithContext(ctx context.Context) GetAclsResultOutput {
	return o
}

// List of retrieved ACLs
func (o GetAclsResultOutput) Acls() GetAclsAclArrayOutput {
	return o.ApplyT(func(v GetAclsResult) []GetAclsAcl { return v.Acls }).(GetAclsAclArrayOutput)
}

func (o GetAclsResultOutput) FrontendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.FrontendId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetAclsResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAclsResultOutput{})
}
