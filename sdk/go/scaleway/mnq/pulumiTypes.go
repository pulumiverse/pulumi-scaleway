// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mnq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type SnsCredentialsPermissions struct {
	// . Defines whether the user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines whether the user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines whether the user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// SnsCredentialsPermissionsInput is an input type that accepts SnsCredentialsPermissionsArgs and SnsCredentialsPermissionsOutput values.
// You can construct a concrete instance of `SnsCredentialsPermissionsInput` via:
//
//	SnsCredentialsPermissionsArgs{...}
type SnsCredentialsPermissionsInput interface {
	pulumi.Input

	ToSnsCredentialsPermissionsOutput() SnsCredentialsPermissionsOutput
	ToSnsCredentialsPermissionsOutputWithContext(context.Context) SnsCredentialsPermissionsOutput
}

type SnsCredentialsPermissionsArgs struct {
	// . Defines whether the user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines whether the user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines whether the user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (SnsCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsCredentialsPermissions)(nil)).Elem()
}

func (i SnsCredentialsPermissionsArgs) ToSnsCredentialsPermissionsOutput() SnsCredentialsPermissionsOutput {
	return i.ToSnsCredentialsPermissionsOutputWithContext(context.Background())
}

func (i SnsCredentialsPermissionsArgs) ToSnsCredentialsPermissionsOutputWithContext(ctx context.Context) SnsCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsCredentialsPermissionsOutput)
}

func (i SnsCredentialsPermissionsArgs) ToSnsCredentialsPermissionsPtrOutput() SnsCredentialsPermissionsPtrOutput {
	return i.ToSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i SnsCredentialsPermissionsArgs) ToSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SnsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsCredentialsPermissionsOutput).ToSnsCredentialsPermissionsPtrOutputWithContext(ctx)
}

// SnsCredentialsPermissionsPtrInput is an input type that accepts SnsCredentialsPermissionsArgs, SnsCredentialsPermissionsPtr and SnsCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `SnsCredentialsPermissionsPtrInput` via:
//
//	        SnsCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type SnsCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToSnsCredentialsPermissionsPtrOutput() SnsCredentialsPermissionsPtrOutput
	ToSnsCredentialsPermissionsPtrOutputWithContext(context.Context) SnsCredentialsPermissionsPtrOutput
}

type snsCredentialsPermissionsPtrType SnsCredentialsPermissionsArgs

func SnsCredentialsPermissionsPtr(v *SnsCredentialsPermissionsArgs) SnsCredentialsPermissionsPtrInput {
	return (*snsCredentialsPermissionsPtrType)(v)
}

func (*snsCredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsCredentialsPermissions)(nil)).Elem()
}

func (i *snsCredentialsPermissionsPtrType) ToSnsCredentialsPermissionsPtrOutput() SnsCredentialsPermissionsPtrOutput {
	return i.ToSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *snsCredentialsPermissionsPtrType) ToSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SnsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnsCredentialsPermissionsPtrOutput)
}

type SnsCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (SnsCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnsCredentialsPermissions)(nil)).Elem()
}

func (o SnsCredentialsPermissionsOutput) ToSnsCredentialsPermissionsOutput() SnsCredentialsPermissionsOutput {
	return o
}

func (o SnsCredentialsPermissionsOutput) ToSnsCredentialsPermissionsOutputWithContext(ctx context.Context) SnsCredentialsPermissionsOutput {
	return o
}

func (o SnsCredentialsPermissionsOutput) ToSnsCredentialsPermissionsPtrOutput() SnsCredentialsPermissionsPtrOutput {
	return o.ToSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o SnsCredentialsPermissionsOutput) ToSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SnsCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnsCredentialsPermissions) *SnsCredentialsPermissions {
		return &v
	}).(SnsCredentialsPermissionsPtrOutput)
}

// . Defines whether the user can manage the associated resource(s).
func (o SnsCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnsCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can publish messages to the service.
func (o SnsCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnsCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can receive messages from the service.
func (o SnsCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnsCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type SnsCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (SnsCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnsCredentialsPermissions)(nil)).Elem()
}

func (o SnsCredentialsPermissionsPtrOutput) ToSnsCredentialsPermissionsPtrOutput() SnsCredentialsPermissionsPtrOutput {
	return o
}

func (o SnsCredentialsPermissionsPtrOutput) ToSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SnsCredentialsPermissionsPtrOutput {
	return o
}

func (o SnsCredentialsPermissionsPtrOutput) Elem() SnsCredentialsPermissionsOutput {
	return o.ApplyT(func(v *SnsCredentialsPermissions) SnsCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret SnsCredentialsPermissions
		return ret
	}).(SnsCredentialsPermissionsOutput)
}

// . Defines whether the user can manage the associated resource(s).
func (o SnsCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can publish messages to the service.
func (o SnsCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can receive messages from the service.
func (o SnsCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

type SqsCredentialsPermissions struct {
	// . Defines whether the user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines whether the user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines whether the user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// SqsCredentialsPermissionsInput is an input type that accepts SqsCredentialsPermissionsArgs and SqsCredentialsPermissionsOutput values.
// You can construct a concrete instance of `SqsCredentialsPermissionsInput` via:
//
//	SqsCredentialsPermissionsArgs{...}
type SqsCredentialsPermissionsInput interface {
	pulumi.Input

	ToSqsCredentialsPermissionsOutput() SqsCredentialsPermissionsOutput
	ToSqsCredentialsPermissionsOutputWithContext(context.Context) SqsCredentialsPermissionsOutput
}

type SqsCredentialsPermissionsArgs struct {
	// . Defines whether the user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines whether the user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines whether the user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (SqsCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqsCredentialsPermissions)(nil)).Elem()
}

func (i SqsCredentialsPermissionsArgs) ToSqsCredentialsPermissionsOutput() SqsCredentialsPermissionsOutput {
	return i.ToSqsCredentialsPermissionsOutputWithContext(context.Background())
}

func (i SqsCredentialsPermissionsArgs) ToSqsCredentialsPermissionsOutputWithContext(ctx context.Context) SqsCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsCredentialsPermissionsOutput)
}

func (i SqsCredentialsPermissionsArgs) ToSqsCredentialsPermissionsPtrOutput() SqsCredentialsPermissionsPtrOutput {
	return i.ToSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i SqsCredentialsPermissionsArgs) ToSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SqsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsCredentialsPermissionsOutput).ToSqsCredentialsPermissionsPtrOutputWithContext(ctx)
}

// SqsCredentialsPermissionsPtrInput is an input type that accepts SqsCredentialsPermissionsArgs, SqsCredentialsPermissionsPtr and SqsCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `SqsCredentialsPermissionsPtrInput` via:
//
//	        SqsCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type SqsCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToSqsCredentialsPermissionsPtrOutput() SqsCredentialsPermissionsPtrOutput
	ToSqsCredentialsPermissionsPtrOutputWithContext(context.Context) SqsCredentialsPermissionsPtrOutput
}

type sqsCredentialsPermissionsPtrType SqsCredentialsPermissionsArgs

func SqsCredentialsPermissionsPtr(v *SqsCredentialsPermissionsArgs) SqsCredentialsPermissionsPtrInput {
	return (*sqsCredentialsPermissionsPtrType)(v)
}

func (*sqsCredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqsCredentialsPermissions)(nil)).Elem()
}

func (i *sqsCredentialsPermissionsPtrType) ToSqsCredentialsPermissionsPtrOutput() SqsCredentialsPermissionsPtrOutput {
	return i.ToSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *sqsCredentialsPermissionsPtrType) ToSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SqsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqsCredentialsPermissionsPtrOutput)
}

type SqsCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (SqsCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqsCredentialsPermissions)(nil)).Elem()
}

func (o SqsCredentialsPermissionsOutput) ToSqsCredentialsPermissionsOutput() SqsCredentialsPermissionsOutput {
	return o
}

func (o SqsCredentialsPermissionsOutput) ToSqsCredentialsPermissionsOutputWithContext(ctx context.Context) SqsCredentialsPermissionsOutput {
	return o
}

func (o SqsCredentialsPermissionsOutput) ToSqsCredentialsPermissionsPtrOutput() SqsCredentialsPermissionsPtrOutput {
	return o.ToSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o SqsCredentialsPermissionsOutput) ToSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SqsCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqsCredentialsPermissions) *SqsCredentialsPermissions {
		return &v
	}).(SqsCredentialsPermissionsPtrOutput)
}

// . Defines whether the user can manage the associated resource(s).
func (o SqsCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqsCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can publish messages to the service.
func (o SqsCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqsCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can receive messages from the service.
func (o SqsCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqsCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type SqsCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (SqsCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqsCredentialsPermissions)(nil)).Elem()
}

func (o SqsCredentialsPermissionsPtrOutput) ToSqsCredentialsPermissionsPtrOutput() SqsCredentialsPermissionsPtrOutput {
	return o
}

func (o SqsCredentialsPermissionsPtrOutput) ToSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) SqsCredentialsPermissionsPtrOutput {
	return o
}

func (o SqsCredentialsPermissionsPtrOutput) Elem() SqsCredentialsPermissionsOutput {
	return o.ApplyT(func(v *SqsCredentialsPermissions) SqsCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret SqsCredentialsPermissions
		return ret
	}).(SqsCredentialsPermissionsOutput)
}

// . Defines whether the user can manage the associated resource(s).
func (o SqsCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can publish messages to the service.
func (o SqsCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines whether the user can receive messages from the service.
func (o SqsCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnsCredentialsPermissionsInput)(nil)).Elem(), SnsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnsCredentialsPermissionsPtrInput)(nil)).Elem(), SnsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqsCredentialsPermissionsInput)(nil)).Elem(), SqsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqsCredentialsPermissionsPtrInput)(nil)).Elem(), SqsCredentialsPermissionsArgs{})
	pulumi.RegisterOutputType(SnsCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(SnsCredentialsPermissionsPtrOutput{})
	pulumi.RegisterOutputType(SqsCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(SqsCredentialsPermissionsPtrOutput{})
}
