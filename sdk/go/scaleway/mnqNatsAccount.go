// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway Messaging and queuing Nats Accounts.
// For further information please check
// our [documentation](https://www.scaleway.com/en/docs/serverless/messaging/reference-content/nats-overview/)
// To use Scaleway's provider with official nats jetstream provider, check out the corresponding guide
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewMnqNatsAccount(ctx, "main", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Namespaces can be imported using the `{region}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/mnqNatsAccount:MnqNatsAccount main fr-par/11111111111111111111111111111111
// ```
type MnqNatsAccount struct {
	pulumi.CustomResourceState

	// The endpoint of the NATS service for this account.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The unique name of the nats account.
	Name pulumi.StringOutput `pulumi:"name"`
	// `projectId`) The ID of the project the
	// account is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// `region`). The region
	// in which the account should be created.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewMnqNatsAccount registers a new resource with the given unique name, arguments, and options.
func NewMnqNatsAccount(ctx *pulumi.Context,
	name string, args *MnqNatsAccountArgs, opts ...pulumi.ResourceOption) (*MnqNatsAccount, error) {
	if args == nil {
		args = &MnqNatsAccountArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MnqNatsAccount
	err := ctx.RegisterResource("scaleway:index/mnqNatsAccount:MnqNatsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMnqNatsAccount gets an existing MnqNatsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMnqNatsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MnqNatsAccountState, opts ...pulumi.ResourceOption) (*MnqNatsAccount, error) {
	var resource MnqNatsAccount
	err := ctx.ReadResource("scaleway:index/mnqNatsAccount:MnqNatsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MnqNatsAccount resources.
type mnqNatsAccountState struct {
	// The endpoint of the NATS service for this account.
	Endpoint *string `pulumi:"endpoint"`
	// The unique name of the nats account.
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the project the
	// account is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`). The region
	// in which the account should be created.
	Region *string `pulumi:"region"`
}

type MnqNatsAccountState struct {
	// The endpoint of the NATS service for this account.
	Endpoint pulumi.StringPtrInput
	// The unique name of the nats account.
	Name pulumi.StringPtrInput
	// `projectId`) The ID of the project the
	// account is associated with.
	ProjectId pulumi.StringPtrInput
	// `region`). The region
	// in which the account should be created.
	Region pulumi.StringPtrInput
}

func (MnqNatsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*mnqNatsAccountState)(nil)).Elem()
}

type mnqNatsAccountArgs struct {
	// The unique name of the nats account.
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the project the
	// account is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`). The region
	// in which the account should be created.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a MnqNatsAccount resource.
type MnqNatsAccountArgs struct {
	// The unique name of the nats account.
	Name pulumi.StringPtrInput
	// `projectId`) The ID of the project the
	// account is associated with.
	ProjectId pulumi.StringPtrInput
	// `region`). The region
	// in which the account should be created.
	Region pulumi.StringPtrInput
}

func (MnqNatsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mnqNatsAccountArgs)(nil)).Elem()
}

type MnqNatsAccountInput interface {
	pulumi.Input

	ToMnqNatsAccountOutput() MnqNatsAccountOutput
	ToMnqNatsAccountOutputWithContext(ctx context.Context) MnqNatsAccountOutput
}

func (*MnqNatsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqNatsAccount)(nil)).Elem()
}

func (i *MnqNatsAccount) ToMnqNatsAccountOutput() MnqNatsAccountOutput {
	return i.ToMnqNatsAccountOutputWithContext(context.Background())
}

func (i *MnqNatsAccount) ToMnqNatsAccountOutputWithContext(ctx context.Context) MnqNatsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqNatsAccountOutput)
}

// MnqNatsAccountArrayInput is an input type that accepts MnqNatsAccountArray and MnqNatsAccountArrayOutput values.
// You can construct a concrete instance of `MnqNatsAccountArrayInput` via:
//
//	MnqNatsAccountArray{ MnqNatsAccountArgs{...} }
type MnqNatsAccountArrayInput interface {
	pulumi.Input

	ToMnqNatsAccountArrayOutput() MnqNatsAccountArrayOutput
	ToMnqNatsAccountArrayOutputWithContext(context.Context) MnqNatsAccountArrayOutput
}

type MnqNatsAccountArray []MnqNatsAccountInput

func (MnqNatsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MnqNatsAccount)(nil)).Elem()
}

func (i MnqNatsAccountArray) ToMnqNatsAccountArrayOutput() MnqNatsAccountArrayOutput {
	return i.ToMnqNatsAccountArrayOutputWithContext(context.Background())
}

func (i MnqNatsAccountArray) ToMnqNatsAccountArrayOutputWithContext(ctx context.Context) MnqNatsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqNatsAccountArrayOutput)
}

// MnqNatsAccountMapInput is an input type that accepts MnqNatsAccountMap and MnqNatsAccountMapOutput values.
// You can construct a concrete instance of `MnqNatsAccountMapInput` via:
//
//	MnqNatsAccountMap{ "key": MnqNatsAccountArgs{...} }
type MnqNatsAccountMapInput interface {
	pulumi.Input

	ToMnqNatsAccountMapOutput() MnqNatsAccountMapOutput
	ToMnqNatsAccountMapOutputWithContext(context.Context) MnqNatsAccountMapOutput
}

type MnqNatsAccountMap map[string]MnqNatsAccountInput

func (MnqNatsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MnqNatsAccount)(nil)).Elem()
}

func (i MnqNatsAccountMap) ToMnqNatsAccountMapOutput() MnqNatsAccountMapOutput {
	return i.ToMnqNatsAccountMapOutputWithContext(context.Background())
}

func (i MnqNatsAccountMap) ToMnqNatsAccountMapOutputWithContext(ctx context.Context) MnqNatsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqNatsAccountMapOutput)
}

type MnqNatsAccountOutput struct{ *pulumi.OutputState }

func (MnqNatsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqNatsAccount)(nil)).Elem()
}

func (o MnqNatsAccountOutput) ToMnqNatsAccountOutput() MnqNatsAccountOutput {
	return o
}

func (o MnqNatsAccountOutput) ToMnqNatsAccountOutputWithContext(ctx context.Context) MnqNatsAccountOutput {
	return o
}

// The endpoint of the NATS service for this account.
func (o MnqNatsAccountOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *MnqNatsAccount) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique name of the nats account.
func (o MnqNatsAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MnqNatsAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// `projectId`) The ID of the project the
// account is associated with.
func (o MnqNatsAccountOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *MnqNatsAccount) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// `region`). The region
// in which the account should be created.
func (o MnqNatsAccountOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MnqNatsAccount) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type MnqNatsAccountArrayOutput struct{ *pulumi.OutputState }

func (MnqNatsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MnqNatsAccount)(nil)).Elem()
}

func (o MnqNatsAccountArrayOutput) ToMnqNatsAccountArrayOutput() MnqNatsAccountArrayOutput {
	return o
}

func (o MnqNatsAccountArrayOutput) ToMnqNatsAccountArrayOutputWithContext(ctx context.Context) MnqNatsAccountArrayOutput {
	return o
}

func (o MnqNatsAccountArrayOutput) Index(i pulumi.IntInput) MnqNatsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MnqNatsAccount {
		return vs[0].([]*MnqNatsAccount)[vs[1].(int)]
	}).(MnqNatsAccountOutput)
}

type MnqNatsAccountMapOutput struct{ *pulumi.OutputState }

func (MnqNatsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MnqNatsAccount)(nil)).Elem()
}

func (o MnqNatsAccountMapOutput) ToMnqNatsAccountMapOutput() MnqNatsAccountMapOutput {
	return o
}

func (o MnqNatsAccountMapOutput) ToMnqNatsAccountMapOutputWithContext(ctx context.Context) MnqNatsAccountMapOutput {
	return o
}

func (o MnqNatsAccountMapOutput) MapIndex(k pulumi.StringInput) MnqNatsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MnqNatsAccount {
		return vs[0].(map[string]*MnqNatsAccount)[vs[1].(string)]
	}).(MnqNatsAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MnqNatsAccountInput)(nil)).Elem(), &MnqNatsAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqNatsAccountArrayInput)(nil)).Elem(), MnqNatsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqNatsAccountMapInput)(nil)).Elem(), MnqNatsAccountMap{})
	pulumi.RegisterOutputType(MnqNatsAccountOutput{})
	pulumi.RegisterOutputType(MnqNatsAccountArrayOutput{})
	pulumi.RegisterOutputType(MnqNatsAccountMapOutput{})
}
