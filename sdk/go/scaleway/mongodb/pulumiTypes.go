// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type InstancePrivateIp struct {
	// The private IPv4 address.
	Address *string `pulumi:"address"`
	// The ID of the endpoint.
	Id *string `pulumi:"id"`
}

// InstancePrivateIpInput is an input type that accepts InstancePrivateIpArgs and InstancePrivateIpOutput values.
// You can construct a concrete instance of `InstancePrivateIpInput` via:
//
//	InstancePrivateIpArgs{...}
type InstancePrivateIpInput interface {
	pulumi.Input

	ToInstancePrivateIpOutput() InstancePrivateIpOutput
	ToInstancePrivateIpOutputWithContext(context.Context) InstancePrivateIpOutput
}

type InstancePrivateIpArgs struct {
	// The private IPv4 address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (InstancePrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateIp)(nil)).Elem()
}

func (i InstancePrivateIpArgs) ToInstancePrivateIpOutput() InstancePrivateIpOutput {
	return i.ToInstancePrivateIpOutputWithContext(context.Background())
}

func (i InstancePrivateIpArgs) ToInstancePrivateIpOutputWithContext(ctx context.Context) InstancePrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateIpOutput)
}

// InstancePrivateIpArrayInput is an input type that accepts InstancePrivateIpArray and InstancePrivateIpArrayOutput values.
// You can construct a concrete instance of `InstancePrivateIpArrayInput` via:
//
//	InstancePrivateIpArray{ InstancePrivateIpArgs{...} }
type InstancePrivateIpArrayInput interface {
	pulumi.Input

	ToInstancePrivateIpArrayOutput() InstancePrivateIpArrayOutput
	ToInstancePrivateIpArrayOutputWithContext(context.Context) InstancePrivateIpArrayOutput
}

type InstancePrivateIpArray []InstancePrivateIpInput

func (InstancePrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePrivateIp)(nil)).Elem()
}

func (i InstancePrivateIpArray) ToInstancePrivateIpArrayOutput() InstancePrivateIpArrayOutput {
	return i.ToInstancePrivateIpArrayOutputWithContext(context.Background())
}

func (i InstancePrivateIpArray) ToInstancePrivateIpArrayOutputWithContext(ctx context.Context) InstancePrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateIpArrayOutput)
}

type InstancePrivateIpOutput struct{ *pulumi.OutputState }

func (InstancePrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateIp)(nil)).Elem()
}

func (o InstancePrivateIpOutput) ToInstancePrivateIpOutput() InstancePrivateIpOutput {
	return o
}

func (o InstancePrivateIpOutput) ToInstancePrivateIpOutputWithContext(ctx context.Context) InstancePrivateIpOutput {
	return o
}

// The private IPv4 address.
func (o InstancePrivateIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the endpoint.
func (o InstancePrivateIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type InstancePrivateIpArrayOutput struct{ *pulumi.OutputState }

func (InstancePrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePrivateIp)(nil)).Elem()
}

func (o InstancePrivateIpArrayOutput) ToInstancePrivateIpArrayOutput() InstancePrivateIpArrayOutput {
	return o
}

func (o InstancePrivateIpArrayOutput) ToInstancePrivateIpArrayOutputWithContext(ctx context.Context) InstancePrivateIpArrayOutput {
	return o
}

func (o InstancePrivateIpArrayOutput) Index(i pulumi.IntInput) InstancePrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePrivateIp {
		return vs[0].([]InstancePrivateIp)[vs[1].(int)]
	}).(InstancePrivateIpOutput)
}

type InstancePrivateNetwork struct {
	// List of DNS records for your endpoint.
	DnsRecords []string `pulumi:"dnsRecords"`
	// The ID of the endpoint.
	Id *string `pulumi:"id"`
	// List of IP addresses for your endpoint.
	Ips []string `pulumi:"ips"`
	// The ID of the Private Network.
	PnId string `pulumi:"pnId"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
}

// InstancePrivateNetworkInput is an input type that accepts InstancePrivateNetworkArgs and InstancePrivateNetworkOutput values.
// You can construct a concrete instance of `InstancePrivateNetworkInput` via:
//
//	InstancePrivateNetworkArgs{...}
type InstancePrivateNetworkInput interface {
	pulumi.Input

	ToInstancePrivateNetworkOutput() InstancePrivateNetworkOutput
	ToInstancePrivateNetworkOutputWithContext(context.Context) InstancePrivateNetworkOutput
}

type InstancePrivateNetworkArgs struct {
	// List of DNS records for your endpoint.
	DnsRecords pulumi.StringArrayInput `pulumi:"dnsRecords"`
	// The ID of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of IP addresses for your endpoint.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The ID of the Private Network.
	PnId pulumi.StringInput `pulumi:"pnId"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (InstancePrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateNetwork)(nil)).Elem()
}

func (i InstancePrivateNetworkArgs) ToInstancePrivateNetworkOutput() InstancePrivateNetworkOutput {
	return i.ToInstancePrivateNetworkOutputWithContext(context.Background())
}

func (i InstancePrivateNetworkArgs) ToInstancePrivateNetworkOutputWithContext(ctx context.Context) InstancePrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateNetworkOutput)
}

func (i InstancePrivateNetworkArgs) ToInstancePrivateNetworkPtrOutput() InstancePrivateNetworkPtrOutput {
	return i.ToInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i InstancePrivateNetworkArgs) ToInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) InstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateNetworkOutput).ToInstancePrivateNetworkPtrOutputWithContext(ctx)
}

// InstancePrivateNetworkPtrInput is an input type that accepts InstancePrivateNetworkArgs, InstancePrivateNetworkPtr and InstancePrivateNetworkPtrOutput values.
// You can construct a concrete instance of `InstancePrivateNetworkPtrInput` via:
//
//	        InstancePrivateNetworkArgs{...}
//
//	or:
//
//	        nil
type InstancePrivateNetworkPtrInput interface {
	pulumi.Input

	ToInstancePrivateNetworkPtrOutput() InstancePrivateNetworkPtrOutput
	ToInstancePrivateNetworkPtrOutputWithContext(context.Context) InstancePrivateNetworkPtrOutput
}

type instancePrivateNetworkPtrType InstancePrivateNetworkArgs

func InstancePrivateNetworkPtr(v *InstancePrivateNetworkArgs) InstancePrivateNetworkPtrInput {
	return (*instancePrivateNetworkPtrType)(v)
}

func (*instancePrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateNetwork)(nil)).Elem()
}

func (i *instancePrivateNetworkPtrType) ToInstancePrivateNetworkPtrOutput() InstancePrivateNetworkPtrOutput {
	return i.ToInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *instancePrivateNetworkPtrType) ToInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) InstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePrivateNetworkPtrOutput)
}

type InstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (InstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePrivateNetwork)(nil)).Elem()
}

func (o InstancePrivateNetworkOutput) ToInstancePrivateNetworkOutput() InstancePrivateNetworkOutput {
	return o
}

func (o InstancePrivateNetworkOutput) ToInstancePrivateNetworkOutputWithContext(ctx context.Context) InstancePrivateNetworkOutput {
	return o
}

func (o InstancePrivateNetworkOutput) ToInstancePrivateNetworkPtrOutput() InstancePrivateNetworkPtrOutput {
	return o.ToInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (o InstancePrivateNetworkOutput) ToInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) InstancePrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePrivateNetwork) *InstancePrivateNetwork {
		return &v
	}).(InstancePrivateNetworkPtrOutput)
}

// List of DNS records for your endpoint.
func (o InstancePrivateNetworkOutput) DnsRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePrivateNetwork) []string { return v.DnsRecords }).(pulumi.StringArrayOutput)
}

// The ID of the endpoint.
func (o InstancePrivateNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePrivateNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of IP addresses for your endpoint.
func (o InstancePrivateNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePrivateNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The ID of the Private Network.
func (o InstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// TCP port of the endpoint.
func (o InstancePrivateNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancePrivateNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type InstancePrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (InstancePrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePrivateNetwork)(nil)).Elem()
}

func (o InstancePrivateNetworkPtrOutput) ToInstancePrivateNetworkPtrOutput() InstancePrivateNetworkPtrOutput {
	return o
}

func (o InstancePrivateNetworkPtrOutput) ToInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) InstancePrivateNetworkPtrOutput {
	return o
}

func (o InstancePrivateNetworkPtrOutput) Elem() InstancePrivateNetworkOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) InstancePrivateNetwork {
		if v != nil {
			return *v
		}
		var ret InstancePrivateNetwork
		return ret
	}).(InstancePrivateNetworkOutput)
}

// List of DNS records for your endpoint.
func (o InstancePrivateNetworkPtrOutput) DnsRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) []string {
		if v == nil {
			return nil
		}
		return v.DnsRecords
	}).(pulumi.StringArrayOutput)
}

// The ID of the endpoint.
func (o InstancePrivateNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// List of IP addresses for your endpoint.
func (o InstancePrivateNetworkPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// The ID of the Private Network.
func (o InstancePrivateNetworkPtrOutput) PnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.PnId
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o InstancePrivateNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstancePrivateNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type InstancePublicNetwork struct {
	// The DNS record of your endpoint
	DnsRecord *string `pulumi:"dnsRecord"`
	// The ID of the endpoint.
	Id *string `pulumi:"id"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
}

// InstancePublicNetworkInput is an input type that accepts InstancePublicNetworkArgs and InstancePublicNetworkOutput values.
// You can construct a concrete instance of `InstancePublicNetworkInput` via:
//
//	InstancePublicNetworkArgs{...}
type InstancePublicNetworkInput interface {
	pulumi.Input

	ToInstancePublicNetworkOutput() InstancePublicNetworkOutput
	ToInstancePublicNetworkOutputWithContext(context.Context) InstancePublicNetworkOutput
}

type InstancePublicNetworkArgs struct {
	// The DNS record of your endpoint
	DnsRecord pulumi.StringPtrInput `pulumi:"dnsRecord"`
	// The ID of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (InstancePublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicNetwork)(nil)).Elem()
}

func (i InstancePublicNetworkArgs) ToInstancePublicNetworkOutput() InstancePublicNetworkOutput {
	return i.ToInstancePublicNetworkOutputWithContext(context.Background())
}

func (i InstancePublicNetworkArgs) ToInstancePublicNetworkOutputWithContext(ctx context.Context) InstancePublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicNetworkOutput)
}

func (i InstancePublicNetworkArgs) ToInstancePublicNetworkPtrOutput() InstancePublicNetworkPtrOutput {
	return i.ToInstancePublicNetworkPtrOutputWithContext(context.Background())
}

func (i InstancePublicNetworkArgs) ToInstancePublicNetworkPtrOutputWithContext(ctx context.Context) InstancePublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicNetworkOutput).ToInstancePublicNetworkPtrOutputWithContext(ctx)
}

// InstancePublicNetworkPtrInput is an input type that accepts InstancePublicNetworkArgs, InstancePublicNetworkPtr and InstancePublicNetworkPtrOutput values.
// You can construct a concrete instance of `InstancePublicNetworkPtrInput` via:
//
//	        InstancePublicNetworkArgs{...}
//
//	or:
//
//	        nil
type InstancePublicNetworkPtrInput interface {
	pulumi.Input

	ToInstancePublicNetworkPtrOutput() InstancePublicNetworkPtrOutput
	ToInstancePublicNetworkPtrOutputWithContext(context.Context) InstancePublicNetworkPtrOutput
}

type instancePublicNetworkPtrType InstancePublicNetworkArgs

func InstancePublicNetworkPtr(v *InstancePublicNetworkArgs) InstancePublicNetworkPtrInput {
	return (*instancePublicNetworkPtrType)(v)
}

func (*instancePublicNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePublicNetwork)(nil)).Elem()
}

func (i *instancePublicNetworkPtrType) ToInstancePublicNetworkPtrOutput() InstancePublicNetworkPtrOutput {
	return i.ToInstancePublicNetworkPtrOutputWithContext(context.Background())
}

func (i *instancePublicNetworkPtrType) ToInstancePublicNetworkPtrOutputWithContext(ctx context.Context) InstancePublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicNetworkPtrOutput)
}

type InstancePublicNetworkOutput struct{ *pulumi.OutputState }

func (InstancePublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicNetwork)(nil)).Elem()
}

func (o InstancePublicNetworkOutput) ToInstancePublicNetworkOutput() InstancePublicNetworkOutput {
	return o
}

func (o InstancePublicNetworkOutput) ToInstancePublicNetworkOutputWithContext(ctx context.Context) InstancePublicNetworkOutput {
	return o
}

func (o InstancePublicNetworkOutput) ToInstancePublicNetworkPtrOutput() InstancePublicNetworkPtrOutput {
	return o.ToInstancePublicNetworkPtrOutputWithContext(context.Background())
}

func (o InstancePublicNetworkOutput) ToInstancePublicNetworkPtrOutputWithContext(ctx context.Context) InstancePublicNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstancePublicNetwork) *InstancePublicNetwork {
		return &v
	}).(InstancePublicNetworkPtrOutput)
}

// The DNS record of your endpoint
func (o InstancePublicNetworkOutput) DnsRecord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePublicNetwork) *string { return v.DnsRecord }).(pulumi.StringPtrOutput)
}

// The ID of the endpoint.
func (o InstancePublicNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePublicNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o InstancePublicNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancePublicNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type InstancePublicNetworkPtrOutput struct{ *pulumi.OutputState }

func (InstancePublicNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstancePublicNetwork)(nil)).Elem()
}

func (o InstancePublicNetworkPtrOutput) ToInstancePublicNetworkPtrOutput() InstancePublicNetworkPtrOutput {
	return o
}

func (o InstancePublicNetworkPtrOutput) ToInstancePublicNetworkPtrOutputWithContext(ctx context.Context) InstancePublicNetworkPtrOutput {
	return o
}

func (o InstancePublicNetworkPtrOutput) Elem() InstancePublicNetworkOutput {
	return o.ApplyT(func(v *InstancePublicNetwork) InstancePublicNetwork {
		if v != nil {
			return *v
		}
		var ret InstancePublicNetwork
		return ret
	}).(InstancePublicNetworkOutput)
}

// The DNS record of your endpoint
func (o InstancePublicNetworkPtrOutput) DnsRecord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePublicNetwork) *string {
		if v == nil {
			return nil
		}
		return v.DnsRecord
	}).(pulumi.StringPtrOutput)
}

// The ID of the endpoint.
func (o InstancePublicNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstancePublicNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o InstancePublicNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstancePublicNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type GetInstancePrivateIp struct {
	// The private IPv4 address
	Address string `pulumi:"address"`
	// The ID of the MongoDB® Instance.
	Id string `pulumi:"id"`
}

// GetInstancePrivateIpInput is an input type that accepts GetInstancePrivateIpArgs and GetInstancePrivateIpOutput values.
// You can construct a concrete instance of `GetInstancePrivateIpInput` via:
//
//	GetInstancePrivateIpArgs{...}
type GetInstancePrivateIpInput interface {
	pulumi.Input

	ToGetInstancePrivateIpOutput() GetInstancePrivateIpOutput
	ToGetInstancePrivateIpOutputWithContext(context.Context) GetInstancePrivateIpOutput
}

type GetInstancePrivateIpArgs struct {
	// The private IPv4 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the MongoDB® Instance.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetInstancePrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateIp)(nil)).Elem()
}

func (i GetInstancePrivateIpArgs) ToGetInstancePrivateIpOutput() GetInstancePrivateIpOutput {
	return i.ToGetInstancePrivateIpOutputWithContext(context.Background())
}

func (i GetInstancePrivateIpArgs) ToGetInstancePrivateIpOutputWithContext(ctx context.Context) GetInstancePrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePrivateIpOutput)
}

// GetInstancePrivateIpArrayInput is an input type that accepts GetInstancePrivateIpArray and GetInstancePrivateIpArrayOutput values.
// You can construct a concrete instance of `GetInstancePrivateIpArrayInput` via:
//
//	GetInstancePrivateIpArray{ GetInstancePrivateIpArgs{...} }
type GetInstancePrivateIpArrayInput interface {
	pulumi.Input

	ToGetInstancePrivateIpArrayOutput() GetInstancePrivateIpArrayOutput
	ToGetInstancePrivateIpArrayOutputWithContext(context.Context) GetInstancePrivateIpArrayOutput
}

type GetInstancePrivateIpArray []GetInstancePrivateIpInput

func (GetInstancePrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePrivateIp)(nil)).Elem()
}

func (i GetInstancePrivateIpArray) ToGetInstancePrivateIpArrayOutput() GetInstancePrivateIpArrayOutput {
	return i.ToGetInstancePrivateIpArrayOutputWithContext(context.Background())
}

func (i GetInstancePrivateIpArray) ToGetInstancePrivateIpArrayOutputWithContext(ctx context.Context) GetInstancePrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePrivateIpArrayOutput)
}

type GetInstancePrivateIpOutput struct{ *pulumi.OutputState }

func (GetInstancePrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateIp)(nil)).Elem()
}

func (o GetInstancePrivateIpOutput) ToGetInstancePrivateIpOutput() GetInstancePrivateIpOutput {
	return o
}

func (o GetInstancePrivateIpOutput) ToGetInstancePrivateIpOutputWithContext(ctx context.Context) GetInstancePrivateIpOutput {
	return o
}

// The private IPv4 address
func (o GetInstancePrivateIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePrivateIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the MongoDB® Instance.
func (o GetInstancePrivateIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePrivateIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetInstancePrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePrivateIp)(nil)).Elem()
}

func (o GetInstancePrivateIpArrayOutput) ToGetInstancePrivateIpArrayOutput() GetInstancePrivateIpArrayOutput {
	return o
}

func (o GetInstancePrivateIpArrayOutput) ToGetInstancePrivateIpArrayOutputWithContext(ctx context.Context) GetInstancePrivateIpArrayOutput {
	return o
}

func (o GetInstancePrivateIpArrayOutput) Index(i pulumi.IntInput) GetInstancePrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePrivateIp {
		return vs[0].([]GetInstancePrivateIp)[vs[1].(int)]
	}).(GetInstancePrivateIpOutput)
}

type GetInstancePrivateNetwork struct {
	// List of DNS records for your endpoint
	DnsRecords []string `pulumi:"dnsRecords"`
	// The ID of the MongoDB® Instance.
	Id string `pulumi:"id"`
	// List of IP addresses for your endpoint
	Ips []string `pulumi:"ips"`
	// The private network ID
	PnId string `pulumi:"pnId"`
	// TCP port of the endpoint
	Port int `pulumi:"port"`
}

// GetInstancePrivateNetworkInput is an input type that accepts GetInstancePrivateNetworkArgs and GetInstancePrivateNetworkOutput values.
// You can construct a concrete instance of `GetInstancePrivateNetworkInput` via:
//
//	GetInstancePrivateNetworkArgs{...}
type GetInstancePrivateNetworkInput interface {
	pulumi.Input

	ToGetInstancePrivateNetworkOutput() GetInstancePrivateNetworkOutput
	ToGetInstancePrivateNetworkOutputWithContext(context.Context) GetInstancePrivateNetworkOutput
}

type GetInstancePrivateNetworkArgs struct {
	// List of DNS records for your endpoint
	DnsRecords pulumi.StringArrayInput `pulumi:"dnsRecords"`
	// The ID of the MongoDB® Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// List of IP addresses for your endpoint
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The private network ID
	PnId pulumi.StringInput `pulumi:"pnId"`
	// TCP port of the endpoint
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetInstancePrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateNetwork)(nil)).Elem()
}

func (i GetInstancePrivateNetworkArgs) ToGetInstancePrivateNetworkOutput() GetInstancePrivateNetworkOutput {
	return i.ToGetInstancePrivateNetworkOutputWithContext(context.Background())
}

func (i GetInstancePrivateNetworkArgs) ToGetInstancePrivateNetworkOutputWithContext(ctx context.Context) GetInstancePrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePrivateNetworkOutput)
}

// GetInstancePrivateNetworkArrayInput is an input type that accepts GetInstancePrivateNetworkArray and GetInstancePrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetInstancePrivateNetworkArrayInput` via:
//
//	GetInstancePrivateNetworkArray{ GetInstancePrivateNetworkArgs{...} }
type GetInstancePrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetInstancePrivateNetworkArrayOutput() GetInstancePrivateNetworkArrayOutput
	ToGetInstancePrivateNetworkArrayOutputWithContext(context.Context) GetInstancePrivateNetworkArrayOutput
}

type GetInstancePrivateNetworkArray []GetInstancePrivateNetworkInput

func (GetInstancePrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePrivateNetwork)(nil)).Elem()
}

func (i GetInstancePrivateNetworkArray) ToGetInstancePrivateNetworkArrayOutput() GetInstancePrivateNetworkArrayOutput {
	return i.ToGetInstancePrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetInstancePrivateNetworkArray) ToGetInstancePrivateNetworkArrayOutputWithContext(ctx context.Context) GetInstancePrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePrivateNetworkArrayOutput)
}

type GetInstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetInstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePrivateNetwork)(nil)).Elem()
}

func (o GetInstancePrivateNetworkOutput) ToGetInstancePrivateNetworkOutput() GetInstancePrivateNetworkOutput {
	return o
}

func (o GetInstancePrivateNetworkOutput) ToGetInstancePrivateNetworkOutputWithContext(ctx context.Context) GetInstancePrivateNetworkOutput {
	return o
}

// List of DNS records for your endpoint
func (o GetInstancePrivateNetworkOutput) DnsRecords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePrivateNetwork) []string { return v.DnsRecords }).(pulumi.StringArrayOutput)
}

// The ID of the MongoDB® Instance.
func (o GetInstancePrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// List of IP addresses for your endpoint
func (o GetInstancePrivateNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancePrivateNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The private network ID
func (o GetInstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// TCP port of the endpoint
func (o GetInstancePrivateNetworkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancePrivateNetwork) int { return v.Port }).(pulumi.IntOutput)
}

type GetInstancePrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePrivateNetwork)(nil)).Elem()
}

func (o GetInstancePrivateNetworkArrayOutput) ToGetInstancePrivateNetworkArrayOutput() GetInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetInstancePrivateNetworkArrayOutput) ToGetInstancePrivateNetworkArrayOutputWithContext(ctx context.Context) GetInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetInstancePrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetInstancePrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePrivateNetwork {
		return vs[0].([]GetInstancePrivateNetwork)[vs[1].(int)]
	}).(GetInstancePrivateNetworkOutput)
}

type GetInstancePublicNetwork struct {
	// The DNS record of your endpoint
	DnsRecord string `pulumi:"dnsRecord"`
	// The ID of the MongoDB® Instance.
	Id string `pulumi:"id"`
	// TCP port of the endpoint
	Port int `pulumi:"port"`
}

// GetInstancePublicNetworkInput is an input type that accepts GetInstancePublicNetworkArgs and GetInstancePublicNetworkOutput values.
// You can construct a concrete instance of `GetInstancePublicNetworkInput` via:
//
//	GetInstancePublicNetworkArgs{...}
type GetInstancePublicNetworkInput interface {
	pulumi.Input

	ToGetInstancePublicNetworkOutput() GetInstancePublicNetworkOutput
	ToGetInstancePublicNetworkOutputWithContext(context.Context) GetInstancePublicNetworkOutput
}

type GetInstancePublicNetworkArgs struct {
	// The DNS record of your endpoint
	DnsRecord pulumi.StringInput `pulumi:"dnsRecord"`
	// The ID of the MongoDB® Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// TCP port of the endpoint
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetInstancePublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePublicNetwork)(nil)).Elem()
}

func (i GetInstancePublicNetworkArgs) ToGetInstancePublicNetworkOutput() GetInstancePublicNetworkOutput {
	return i.ToGetInstancePublicNetworkOutputWithContext(context.Background())
}

func (i GetInstancePublicNetworkArgs) ToGetInstancePublicNetworkOutputWithContext(ctx context.Context) GetInstancePublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePublicNetworkOutput)
}

// GetInstancePublicNetworkArrayInput is an input type that accepts GetInstancePublicNetworkArray and GetInstancePublicNetworkArrayOutput values.
// You can construct a concrete instance of `GetInstancePublicNetworkArrayInput` via:
//
//	GetInstancePublicNetworkArray{ GetInstancePublicNetworkArgs{...} }
type GetInstancePublicNetworkArrayInput interface {
	pulumi.Input

	ToGetInstancePublicNetworkArrayOutput() GetInstancePublicNetworkArrayOutput
	ToGetInstancePublicNetworkArrayOutputWithContext(context.Context) GetInstancePublicNetworkArrayOutput
}

type GetInstancePublicNetworkArray []GetInstancePublicNetworkInput

func (GetInstancePublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePublicNetwork)(nil)).Elem()
}

func (i GetInstancePublicNetworkArray) ToGetInstancePublicNetworkArrayOutput() GetInstancePublicNetworkArrayOutput {
	return i.ToGetInstancePublicNetworkArrayOutputWithContext(context.Background())
}

func (i GetInstancePublicNetworkArray) ToGetInstancePublicNetworkArrayOutputWithContext(ctx context.Context) GetInstancePublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancePublicNetworkArrayOutput)
}

type GetInstancePublicNetworkOutput struct{ *pulumi.OutputState }

func (GetInstancePublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancePublicNetwork)(nil)).Elem()
}

func (o GetInstancePublicNetworkOutput) ToGetInstancePublicNetworkOutput() GetInstancePublicNetworkOutput {
	return o
}

func (o GetInstancePublicNetworkOutput) ToGetInstancePublicNetworkOutputWithContext(ctx context.Context) GetInstancePublicNetworkOutput {
	return o
}

// The DNS record of your endpoint
func (o GetInstancePublicNetworkOutput) DnsRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePublicNetwork) string { return v.DnsRecord }).(pulumi.StringOutput)
}

// The ID of the MongoDB® Instance.
func (o GetInstancePublicNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancePublicNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// TCP port of the endpoint
func (o GetInstancePublicNetworkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancePublicNetwork) int { return v.Port }).(pulumi.IntOutput)
}

type GetInstancePublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetInstancePublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancePublicNetwork)(nil)).Elem()
}

func (o GetInstancePublicNetworkArrayOutput) ToGetInstancePublicNetworkArrayOutput() GetInstancePublicNetworkArrayOutput {
	return o
}

func (o GetInstancePublicNetworkArrayOutput) ToGetInstancePublicNetworkArrayOutputWithContext(ctx context.Context) GetInstancePublicNetworkArrayOutput {
	return o
}

func (o GetInstancePublicNetworkArrayOutput) Index(i pulumi.IntInput) GetInstancePublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancePublicNetwork {
		return vs[0].([]GetInstancePublicNetwork)[vs[1].(int)]
	}).(GetInstancePublicNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateIpInput)(nil)).Elem(), InstancePrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateIpArrayInput)(nil)).Elem(), InstancePrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateNetworkInput)(nil)).Elem(), InstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePrivateNetworkPtrInput)(nil)).Elem(), InstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicNetworkInput)(nil)).Elem(), InstancePublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicNetworkPtrInput)(nil)).Elem(), InstancePublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePrivateIpInput)(nil)).Elem(), GetInstancePrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePrivateIpArrayInput)(nil)).Elem(), GetInstancePrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePrivateNetworkInput)(nil)).Elem(), GetInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePrivateNetworkArrayInput)(nil)).Elem(), GetInstancePrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePublicNetworkInput)(nil)).Elem(), GetInstancePublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancePublicNetworkArrayInput)(nil)).Elem(), GetInstancePublicNetworkArray{})
	pulumi.RegisterOutputType(InstancePrivateIpOutput{})
	pulumi.RegisterOutputType(InstancePrivateIpArrayOutput{})
	pulumi.RegisterOutputType(InstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(InstancePrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(InstancePublicNetworkOutput{})
	pulumi.RegisterOutputType(InstancePublicNetworkPtrOutput{})
	pulumi.RegisterOutputType(GetInstancePrivateIpOutput{})
	pulumi.RegisterOutputType(GetInstancePrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetInstancePrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetInstancePublicNetworkOutput{})
	pulumi.RegisterOutputType(GetInstancePublicNetworkArrayOutput{})
}
