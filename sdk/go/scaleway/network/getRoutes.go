// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Gets information about multiple VPC routes.
func GetRoutes(ctx *pulumi.Context, args *GetRoutesArgs, opts ...pulumi.InvokeOption) (*GetRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoutesResult
	err := ctx.Invoke("scaleway:network/getRoutes:getRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutes.
type GetRoutesArgs struct {
	// Routes with an IPv6 destination will be listed.
	IsIpv6 *bool `pulumi:"isIpv6"`
	// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
	NexthopPrivateNetworkId *string `pulumi:"nexthopPrivateNetworkId"`
	// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
	NexthopResourceId *string `pulumi:"nexthopResourceId"`
	// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
	NexthopResourceType *string `pulumi:"nexthopResourceType"`
	// `region`). The region in which the routes exist.
	Region *string `pulumi:"region"`
	// List of tags to filter for. routes with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// The VPC ID to filter for. routes with a similar VPC ID are listed.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getRoutes.
type GetRoutesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                      string  `pulumi:"id"`
	IsIpv6                  *bool   `pulumi:"isIpv6"`
	NexthopPrivateNetworkId *string `pulumi:"nexthopPrivateNetworkId"`
	NexthopResourceId       *string `pulumi:"nexthopResourceId"`
	NexthopResourceType     *string `pulumi:"nexthopResourceType"`
	Region                  *string `pulumi:"region"`
	// List of retrieved routes
	Routes []GetRoutesRoute `pulumi:"routes"`
	Tags   []string         `pulumi:"tags"`
	VpcId  *string          `pulumi:"vpcId"`
}

func GetRoutesOutput(ctx *pulumi.Context, args GetRoutesOutputArgs, opts ...pulumi.InvokeOption) GetRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRoutesResultOutput, error) {
			args := v.(GetRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("scaleway:network/getRoutes:getRoutes", args, GetRoutesResultOutput{}, options).(GetRoutesResultOutput), nil
		}).(GetRoutesResultOutput)
}

// A collection of arguments for invoking getRoutes.
type GetRoutesOutputArgs struct {
	// Routes with an IPv6 destination will be listed.
	IsIpv6 pulumi.BoolPtrInput `pulumi:"isIpv6"`
	// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
	NexthopPrivateNetworkId pulumi.StringPtrInput `pulumi:"nexthopPrivateNetworkId"`
	// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
	NexthopResourceId pulumi.StringPtrInput `pulumi:"nexthopResourceId"`
	// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
	NexthopResourceType pulumi.StringPtrInput `pulumi:"nexthopResourceType"`
	// `region`). The region in which the routes exist.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// List of tags to filter for. routes with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The VPC ID to filter for. routes with a similar VPC ID are listed.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getRoutes.
type GetRoutesResultOutput struct{ *pulumi.OutputState }

func (GetRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesResult)(nil)).Elem()
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutput() GetRoutesResultOutput {
	return o
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutputWithContext(ctx context.Context) GetRoutesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRoutesResultOutput) IsIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *bool { return v.IsIpv6 }).(pulumi.BoolPtrOutput)
}

func (o GetRoutesResultOutput) NexthopPrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.NexthopPrivateNetworkId }).(pulumi.StringPtrOutput)
}

func (o GetRoutesResultOutput) NexthopResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.NexthopResourceId }).(pulumi.StringPtrOutput)
}

func (o GetRoutesResultOutput) NexthopResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.NexthopResourceType }).(pulumi.StringPtrOutput)
}

func (o GetRoutesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// List of retrieved routes
func (o GetRoutesResultOutput) Routes() GetRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetRoutesResult) []GetRoutesRoute { return v.Routes }).(GetRoutesRouteArrayOutput)
}

func (o GetRoutesResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRoutesResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetRoutesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoutesResultOutput{})
}
