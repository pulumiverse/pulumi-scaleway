// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages Scaleway VPC Private Networks.
// For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/vpc/#private-networks-ac2df4).
//
// ## Example Usage
//
// ### Basic
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/network"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.NewPrivateNetwork(ctx, "pn_priv", &network.PrivateNetworkArgs{
//				Name: pulumi.String("subnet_demo"),
//				Tags: pulumi.StringArray{
//					pulumi.String("demo"),
//					pulumi.String("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With subnets
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/network"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.NewPrivateNetwork(ctx, "pn_priv", &network.PrivateNetworkArgs{
//				Name: pulumi.String("subnet_demo"),
//				Tags: pulumi.StringArray{
//					pulumi.String("demo"),
//					pulumi.String("terraform"),
//				},
//				Ipv4Subnet: &network.PrivateNetworkIpv4SubnetArgs{
//					Subnet: pulumi.String("192.168.0.0/24"),
//				},
//				Ipv6Subnets: network.PrivateNetworkIpv6SubnetArray{
//					&network.PrivateNetworkIpv6SubnetArgs{
//						Subnet: pulumi.String("fd46:78ab:30b8:177c::/64"),
//					},
//					&network.PrivateNetworkIpv6SubnetArgs{
//						Subnet: pulumi.String("fd46:78ab:30b8:c7df::/64"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Private Networks can be imported using `{region}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:network/privateNetwork:PrivateNetwork main fr-par/11111111-1111-1111-1111-111111111111
// ```
type PrivateNetwork struct {
	pulumi.CustomResourceState

	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Defines whether default v4 and v6 routes are propagated for this Private Network.
	EnableDefaultRoutePropagation pulumi.BoolOutput `pulumi:"enableDefaultRoutePropagation"`
	// The IPv4 subnet to associate with the Private Network.
	Ipv4Subnet PrivateNetworkIpv4SubnetOutput `pulumi:"ipv4Subnet"`
	// The IPv6 subnets to associate with the private network.
	Ipv6Subnets PrivateNetworkIpv6SubnetArrayOutput `pulumi:"ipv6Subnets"`
	// Private Networks are now all necessarily regional.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version
	IsRegional pulumi.BoolOutput `pulumi:"isRegional"`
	// The name of the Private Network. If not provided, it will be randomly generated.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Organization ID the Private Network is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// `projectId`) The ID of the Project the private network is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// `region`) The region of the Private Network.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The tags associated with the Private Network.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The VPC in which to create the Private Network.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Use `region` instead.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewPrivateNetwork registers a new resource with the given unique name, arguments, and options.
func NewPrivateNetwork(ctx *pulumi.Context,
	name string, args *PrivateNetworkArgs, opts ...pulumi.ResourceOption) (*PrivateNetwork, error) {
	if args == nil {
		args = &PrivateNetworkArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("scaleway:index/vpcPrivateNetwork:VpcPrivateNetwork"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateNetwork
	err := ctx.RegisterResource("scaleway:network/privateNetwork:PrivateNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateNetwork gets an existing PrivateNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateNetworkState, opts ...pulumi.ResourceOption) (*PrivateNetwork, error) {
	var resource PrivateNetwork
	err := ctx.ReadResource("scaleway:network/privateNetwork:PrivateNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateNetwork resources.
type privateNetworkState struct {
	// The date and time of the creation of the subnet.
	CreatedAt *string `pulumi:"createdAt"`
	// Defines whether default v4 and v6 routes are propagated for this Private Network.
	EnableDefaultRoutePropagation *bool `pulumi:"enableDefaultRoutePropagation"`
	// The IPv4 subnet to associate with the Private Network.
	Ipv4Subnet *PrivateNetworkIpv4Subnet `pulumi:"ipv4Subnet"`
	// The IPv6 subnets to associate with the private network.
	Ipv6Subnets []PrivateNetworkIpv6Subnet `pulumi:"ipv6Subnets"`
	// Private Networks are now all necessarily regional.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version
	IsRegional *bool `pulumi:"isRegional"`
	// The name of the Private Network. If not provided, it will be randomly generated.
	Name *string `pulumi:"name"`
	// The Organization ID the Private Network is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// `projectId`) The ID of the Project the private network is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region of the Private Network.
	Region *string `pulumi:"region"`
	// The tags associated with the Private Network.
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the subnet.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The VPC in which to create the Private Network.
	VpcId *string `pulumi:"vpcId"`
	// Use `region` instead.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
	Zone *string `pulumi:"zone"`
}

type PrivateNetworkState struct {
	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringPtrInput
	// Defines whether default v4 and v6 routes are propagated for this Private Network.
	EnableDefaultRoutePropagation pulumi.BoolPtrInput
	// The IPv4 subnet to associate with the Private Network.
	Ipv4Subnet PrivateNetworkIpv4SubnetPtrInput
	// The IPv6 subnets to associate with the private network.
	Ipv6Subnets PrivateNetworkIpv6SubnetArrayInput
	// Private Networks are now all necessarily regional.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version
	IsRegional pulumi.BoolPtrInput
	// The name of the Private Network. If not provided, it will be randomly generated.
	Name pulumi.StringPtrInput
	// The Organization ID the Private Network is associated with.
	OrganizationId pulumi.StringPtrInput
	// `projectId`) The ID of the Project the private network is associated with.
	ProjectId pulumi.StringPtrInput
	// `region`) The region of the Private Network.
	Region pulumi.StringPtrInput
	// The tags associated with the Private Network.
	Tags pulumi.StringArrayInput
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringPtrInput
	// The VPC in which to create the Private Network.
	VpcId pulumi.StringPtrInput
	// Use `region` instead.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
	Zone pulumi.StringPtrInput
}

func (PrivateNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNetworkState)(nil)).Elem()
}

type privateNetworkArgs struct {
	// Defines whether default v4 and v6 routes are propagated for this Private Network.
	EnableDefaultRoutePropagation *bool `pulumi:"enableDefaultRoutePropagation"`
	// The IPv4 subnet to associate with the Private Network.
	Ipv4Subnet *PrivateNetworkIpv4Subnet `pulumi:"ipv4Subnet"`
	// The IPv6 subnets to associate with the private network.
	Ipv6Subnets []PrivateNetworkIpv6Subnet `pulumi:"ipv6Subnets"`
	// Private Networks are now all necessarily regional.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version
	IsRegional *bool `pulumi:"isRegional"`
	// The name of the Private Network. If not provided, it will be randomly generated.
	Name *string `pulumi:"name"`
	// `projectId`) The ID of the Project the private network is associated with.
	ProjectId *string `pulumi:"projectId"`
	// `region`) The region of the Private Network.
	Region *string `pulumi:"region"`
	// The tags associated with the Private Network.
	Tags []string `pulumi:"tags"`
	// The VPC in which to create the Private Network.
	VpcId *string `pulumi:"vpcId"`
	// Use `region` instead.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PrivateNetwork resource.
type PrivateNetworkArgs struct {
	// Defines whether default v4 and v6 routes are propagated for this Private Network.
	EnableDefaultRoutePropagation pulumi.BoolPtrInput
	// The IPv4 subnet to associate with the Private Network.
	Ipv4Subnet PrivateNetworkIpv4SubnetPtrInput
	// The IPv6 subnets to associate with the private network.
	Ipv6Subnets PrivateNetworkIpv6SubnetArrayInput
	// Private Networks are now all necessarily regional.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version
	IsRegional pulumi.BoolPtrInput
	// The name of the Private Network. If not provided, it will be randomly generated.
	Name pulumi.StringPtrInput
	// `projectId`) The ID of the Project the private network is associated with.
	ProjectId pulumi.StringPtrInput
	// `region`) The region of the Private Network.
	Region pulumi.StringPtrInput
	// The tags associated with the Private Network.
	Tags pulumi.StringArrayInput
	// The VPC in which to create the Private Network.
	VpcId pulumi.StringPtrInput
	// Use `region` instead.
	//
	// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
	Zone pulumi.StringPtrInput
}

func (PrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNetworkArgs)(nil)).Elem()
}

type PrivateNetworkInput interface {
	pulumi.Input

	ToPrivateNetworkOutput() PrivateNetworkOutput
	ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput
}

func (*PrivateNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetwork)(nil)).Elem()
}

func (i *PrivateNetwork) ToPrivateNetworkOutput() PrivateNetworkOutput {
	return i.ToPrivateNetworkOutputWithContext(context.Background())
}

func (i *PrivateNetwork) ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkOutput)
}

// PrivateNetworkArrayInput is an input type that accepts PrivateNetworkArray and PrivateNetworkArrayOutput values.
// You can construct a concrete instance of `PrivateNetworkArrayInput` via:
//
//	PrivateNetworkArray{ PrivateNetworkArgs{...} }
type PrivateNetworkArrayInput interface {
	pulumi.Input

	ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput
	ToPrivateNetworkArrayOutputWithContext(context.Context) PrivateNetworkArrayOutput
}

type PrivateNetworkArray []PrivateNetworkInput

func (PrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateNetwork)(nil)).Elem()
}

func (i PrivateNetworkArray) ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput {
	return i.ToPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i PrivateNetworkArray) ToPrivateNetworkArrayOutputWithContext(ctx context.Context) PrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkArrayOutput)
}

// PrivateNetworkMapInput is an input type that accepts PrivateNetworkMap and PrivateNetworkMapOutput values.
// You can construct a concrete instance of `PrivateNetworkMapInput` via:
//
//	PrivateNetworkMap{ "key": PrivateNetworkArgs{...} }
type PrivateNetworkMapInput interface {
	pulumi.Input

	ToPrivateNetworkMapOutput() PrivateNetworkMapOutput
	ToPrivateNetworkMapOutputWithContext(context.Context) PrivateNetworkMapOutput
}

type PrivateNetworkMap map[string]PrivateNetworkInput

func (PrivateNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateNetwork)(nil)).Elem()
}

func (i PrivateNetworkMap) ToPrivateNetworkMapOutput() PrivateNetworkMapOutput {
	return i.ToPrivateNetworkMapOutputWithContext(context.Background())
}

func (i PrivateNetworkMap) ToPrivateNetworkMapOutputWithContext(ctx context.Context) PrivateNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkMapOutput)
}

type PrivateNetworkOutput struct{ *pulumi.OutputState }

func (PrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkOutput) ToPrivateNetworkOutput() PrivateNetworkOutput {
	return o
}

func (o PrivateNetworkOutput) ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput {
	return o
}

// The date and time of the creation of the subnet.
func (o PrivateNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Defines whether default v4 and v6 routes are propagated for this Private Network.
func (o PrivateNetworkOutput) EnableDefaultRoutePropagation() pulumi.BoolOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.BoolOutput { return v.EnableDefaultRoutePropagation }).(pulumi.BoolOutput)
}

// The IPv4 subnet to associate with the Private Network.
func (o PrivateNetworkOutput) Ipv4Subnet() PrivateNetworkIpv4SubnetOutput {
	return o.ApplyT(func(v *PrivateNetwork) PrivateNetworkIpv4SubnetOutput { return v.Ipv4Subnet }).(PrivateNetworkIpv4SubnetOutput)
}

// The IPv6 subnets to associate with the private network.
func (o PrivateNetworkOutput) Ipv6Subnets() PrivateNetworkIpv6SubnetArrayOutput {
	return o.ApplyT(func(v *PrivateNetwork) PrivateNetworkIpv6SubnetArrayOutput { return v.Ipv6Subnets }).(PrivateNetworkIpv6SubnetArrayOutput)
}

// Private Networks are now all necessarily regional.
//
// Deprecated: This field is deprecated and will be removed in the next major version
func (o PrivateNetworkOutput) IsRegional() pulumi.BoolOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.BoolOutput { return v.IsRegional }).(pulumi.BoolOutput)
}

// The name of the Private Network. If not provided, it will be randomly generated.
func (o PrivateNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Organization ID the Private Network is associated with.
func (o PrivateNetworkOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// `projectId`) The ID of the Project the private network is associated with.
func (o PrivateNetworkOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// `region`) The region of the Private Network.
func (o PrivateNetworkOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The tags associated with the Private Network.
func (o PrivateNetworkOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date and time of the last update of the subnet.
func (o PrivateNetworkOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The VPC in which to create the Private Network.
func (o PrivateNetworkOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// Use `region` instead.
//
// Deprecated: This field is deprecated and will be removed in the next major version, please use `region` instead
func (o PrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type PrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (PrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkArrayOutput) ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput {
	return o
}

func (o PrivateNetworkArrayOutput) ToPrivateNetworkArrayOutputWithContext(ctx context.Context) PrivateNetworkArrayOutput {
	return o
}

func (o PrivateNetworkArrayOutput) Index(i pulumi.IntInput) PrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateNetwork {
		return vs[0].([]*PrivateNetwork)[vs[1].(int)]
	}).(PrivateNetworkOutput)
}

type PrivateNetworkMapOutput struct{ *pulumi.OutputState }

func (PrivateNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkMapOutput) ToPrivateNetworkMapOutput() PrivateNetworkMapOutput {
	return o
}

func (o PrivateNetworkMapOutput) ToPrivateNetworkMapOutputWithContext(ctx context.Context) PrivateNetworkMapOutput {
	return o
}

func (o PrivateNetworkMapOutput) MapIndex(k pulumi.StringInput) PrivateNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateNetwork {
		return vs[0].(map[string]*PrivateNetwork)[vs[1].(string)]
	}).(PrivateNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkInput)(nil)).Elem(), &PrivateNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkArrayInput)(nil)).Elem(), PrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkMapInput)(nil)).Elem(), PrivateNetworkMap{})
	pulumi.RegisterOutputType(PrivateNetworkOutput{})
	pulumi.RegisterOutputType(PrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(PrivateNetworkMapOutput{})
}
