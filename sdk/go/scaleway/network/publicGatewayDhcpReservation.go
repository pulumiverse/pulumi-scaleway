// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// Creates and manages [Scaleway DHCP Reservations](https://www.scaleway.com/en/docs/vpc/concepts/#dhcp).
//
// These static associations are used to assign IP addresses based on the MAC addresses of the resource.
//
// Statically assigned IP addresses should fall within the configured subnet, but be outside of the dynamic range.
//
// For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/public-gateway/#dhcp-c05544).
//
// [DHCP reservations](https://www.scaleway.com/en/developers/api/public-gateway/#dhcp-entries-e40fb6) hold both dynamic DHCP leases (IP addresses dynamically assigned by the gateway to resources) and static user-created DHCP reservations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/instance"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/network"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := network.NewPrivateNetwork(ctx, "main", &network.PrivateNetworkArgs{
//				Name: pulumi.String("your_private_network"),
//			})
//			if err != nil {
//				return err
//			}
//			mainServer, err := instance.NewServer(ctx, "main", &instance.ServerArgs{
//				Image: pulumi.String("ubuntu_jammy"),
//				Type:  pulumi.String("DEV1-S"),
//				Zone:  pulumi.String("fr-par-1"),
//				PrivateNetworks: instance.ServerPrivateNetworkArray{
//					&instance.ServerPrivateNetworkArgs{
//						PnId: main.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mainPublicGatewayIp, err := network.NewPublicGatewayIp(ctx, "main", nil)
//			if err != nil {
//				return err
//			}
//			mainPublicGatewayDhcp, err := network.NewPublicGatewayDhcp(ctx, "main", &network.PublicGatewayDhcpArgs{
//				Subnet: pulumi.String("192.168.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			mainPublicGateway, err := network.NewPublicGateway(ctx, "main", &network.PublicGatewayArgs{
//				Name: pulumi.String("foobar"),
//				Type: pulumi.String("VPC-GW-S"),
//				IpId: mainPublicGatewayIp.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			mainGatewayNetwork, err := network.NewGatewayNetwork(ctx, "main", &network.GatewayNetworkArgs{
//				GatewayId:        mainPublicGateway.ID(),
//				PrivateNetworkId: main.ID(),
//				DhcpId:           mainPublicGatewayDhcp.ID(),
//				CleanupDhcp:      pulumi.Bool(true),
//				EnableMasquerade: pulumi.Bool(true),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				mainPublicGatewayIp,
//				main,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = network.NewPublicGatewayDhcpReservation(ctx, "main", &network.PublicGatewayDhcpReservationArgs{
//				GatewayNetworkId: mainGatewayNetwork.ID(),
//				MacAddress: pulumi.String(mainServer.PrivateNetworks.ApplyT(func(privateNetworks []instance.ServerPrivateNetwork) (*string, error) {
//					return &privateNetworks[0].MacAddress, nil
//				}).(pulumi.StringPtrOutput)),
//				IpAddress: pulumi.String("192.168.1.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Public Gateway DHCP reservation configurations can be imported using `{zone}/{id}`, e.g.
//
// bash
//
// ```sh
// $ pulumi import scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type PublicGatewayDhcpReservation struct {
	pulumi.CustomResourceState

	// The date and time of the creation of the Public Gateway DHCP configuration.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringOutput `pulumi:"gatewayNetworkId"`
	// The hostname of the client machine.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// The IP address to give to the machine.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The MAC address for the static entry.
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `reservation` and `lease`.
	Type pulumi.StringOutput `pulumi:"type"`
	// The date and time of the last update of the Public Gateway DHCP configuration.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewPublicGatewayDhcpReservation registers a new resource with the given unique name, arguments, and options.
func NewPublicGatewayDhcpReservation(ctx *pulumi.Context,
	name string, args *PublicGatewayDhcpReservationArgs, opts ...pulumi.ResourceOption) (*PublicGatewayDhcpReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayNetworkId'")
	}
	if args.IpAddress == nil {
		return nil, errors.New("invalid value for required argument 'IpAddress'")
	}
	if args.MacAddress == nil {
		return nil, errors.New("invalid value for required argument 'MacAddress'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicGatewayDhcpReservation
	err := ctx.RegisterResource("scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicGatewayDhcpReservation gets an existing PublicGatewayDhcpReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicGatewayDhcpReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicGatewayDhcpReservationState, opts ...pulumi.ResourceOption) (*PublicGatewayDhcpReservation, error) {
	var resource PublicGatewayDhcpReservation
	err := ctx.ReadResource("scaleway:network/publicGatewayDhcpReservation:PublicGatewayDhcpReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicGatewayDhcpReservation resources.
type publicGatewayDhcpReservationState struct {
	// The date and time of the creation of the Public Gateway DHCP configuration.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId *string `pulumi:"gatewayNetworkId"`
	// The hostname of the client machine.
	Hostname *string `pulumi:"hostname"`
	// The IP address to give to the machine.
	IpAddress *string `pulumi:"ipAddress"`
	// The MAC address for the static entry.
	MacAddress *string `pulumi:"macAddress"`
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `reservation` and `lease`.
	Type *string `pulumi:"type"`
	// The date and time of the last update of the Public Gateway DHCP configuration.
	UpdatedAt *string `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

type PublicGatewayDhcpReservationState struct {
	// The date and time of the creation of the Public Gateway DHCP configuration.
	CreatedAt pulumi.StringPtrInput
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringPtrInput
	// The hostname of the client machine.
	Hostname pulumi.StringPtrInput
	// The IP address to give to the machine.
	IpAddress pulumi.StringPtrInput
	// The MAC address for the static entry.
	MacAddress pulumi.StringPtrInput
	// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `reservation` and `lease`.
	Type pulumi.StringPtrInput
	// The date and time of the last update of the Public Gateway DHCP configuration.
	UpdatedAt pulumi.StringPtrInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDhcpReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDhcpReservationState)(nil)).Elem()
}

type publicGatewayDhcpReservationArgs struct {
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId string `pulumi:"gatewayNetworkId"`
	// The IP address to give to the machine.
	IpAddress string `pulumi:"ipAddress"`
	// The MAC address for the static entry.
	MacAddress string `pulumi:"macAddress"`
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PublicGatewayDhcpReservation resource.
type PublicGatewayDhcpReservationArgs struct {
	// The ID of the owning GatewayNetwork.
	GatewayNetworkId pulumi.StringInput
	// The IP address to give to the machine.
	IpAddress pulumi.StringInput
	// The MAC address for the static entry.
	MacAddress pulumi.StringInput
	// `zone`) The zone in which the public gateway DHCP config should be created.
	Zone pulumi.StringPtrInput
}

func (PublicGatewayDhcpReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicGatewayDhcpReservationArgs)(nil)).Elem()
}

type PublicGatewayDhcpReservationInput interface {
	pulumi.Input

	ToPublicGatewayDhcpReservationOutput() PublicGatewayDhcpReservationOutput
	ToPublicGatewayDhcpReservationOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationOutput
}

func (*PublicGatewayDhcpReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDhcpReservation)(nil)).Elem()
}

func (i *PublicGatewayDhcpReservation) ToPublicGatewayDhcpReservationOutput() PublicGatewayDhcpReservationOutput {
	return i.ToPublicGatewayDhcpReservationOutputWithContext(context.Background())
}

func (i *PublicGatewayDhcpReservation) ToPublicGatewayDhcpReservationOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDhcpReservationOutput)
}

// PublicGatewayDhcpReservationArrayInput is an input type that accepts PublicGatewayDhcpReservationArray and PublicGatewayDhcpReservationArrayOutput values.
// You can construct a concrete instance of `PublicGatewayDhcpReservationArrayInput` via:
//
//	PublicGatewayDhcpReservationArray{ PublicGatewayDhcpReservationArgs{...} }
type PublicGatewayDhcpReservationArrayInput interface {
	pulumi.Input

	ToPublicGatewayDhcpReservationArrayOutput() PublicGatewayDhcpReservationArrayOutput
	ToPublicGatewayDhcpReservationArrayOutputWithContext(context.Context) PublicGatewayDhcpReservationArrayOutput
}

type PublicGatewayDhcpReservationArray []PublicGatewayDhcpReservationInput

func (PublicGatewayDhcpReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDhcpReservation)(nil)).Elem()
}

func (i PublicGatewayDhcpReservationArray) ToPublicGatewayDhcpReservationArrayOutput() PublicGatewayDhcpReservationArrayOutput {
	return i.ToPublicGatewayDhcpReservationArrayOutputWithContext(context.Background())
}

func (i PublicGatewayDhcpReservationArray) ToPublicGatewayDhcpReservationArrayOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDhcpReservationArrayOutput)
}

// PublicGatewayDhcpReservationMapInput is an input type that accepts PublicGatewayDhcpReservationMap and PublicGatewayDhcpReservationMapOutput values.
// You can construct a concrete instance of `PublicGatewayDhcpReservationMapInput` via:
//
//	PublicGatewayDhcpReservationMap{ "key": PublicGatewayDhcpReservationArgs{...} }
type PublicGatewayDhcpReservationMapInput interface {
	pulumi.Input

	ToPublicGatewayDhcpReservationMapOutput() PublicGatewayDhcpReservationMapOutput
	ToPublicGatewayDhcpReservationMapOutputWithContext(context.Context) PublicGatewayDhcpReservationMapOutput
}

type PublicGatewayDhcpReservationMap map[string]PublicGatewayDhcpReservationInput

func (PublicGatewayDhcpReservationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDhcpReservation)(nil)).Elem()
}

func (i PublicGatewayDhcpReservationMap) ToPublicGatewayDhcpReservationMapOutput() PublicGatewayDhcpReservationMapOutput {
	return i.ToPublicGatewayDhcpReservationMapOutputWithContext(context.Background())
}

func (i PublicGatewayDhcpReservationMap) ToPublicGatewayDhcpReservationMapOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicGatewayDhcpReservationMapOutput)
}

type PublicGatewayDhcpReservationOutput struct{ *pulumi.OutputState }

func (PublicGatewayDhcpReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicGatewayDhcpReservation)(nil)).Elem()
}

func (o PublicGatewayDhcpReservationOutput) ToPublicGatewayDhcpReservationOutput() PublicGatewayDhcpReservationOutput {
	return o
}

func (o PublicGatewayDhcpReservationOutput) ToPublicGatewayDhcpReservationOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationOutput {
	return o
}

// The date and time of the creation of the Public Gateway DHCP configuration.
func (o PublicGatewayDhcpReservationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the owning GatewayNetwork.
func (o PublicGatewayDhcpReservationOutput) GatewayNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.GatewayNetworkId }).(pulumi.StringOutput)
}

// The hostname of the client machine.
func (o PublicGatewayDhcpReservationOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// The IP address to give to the machine.
func (o PublicGatewayDhcpReservationOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// The MAC address for the static entry.
func (o PublicGatewayDhcpReservationOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.MacAddress }).(pulumi.StringOutput)
}

// The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are `reservation` and `lease`.
func (o PublicGatewayDhcpReservationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The date and time of the last update of the Public Gateway DHCP configuration.
func (o PublicGatewayDhcpReservationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which the public gateway DHCP config should be created.
func (o PublicGatewayDhcpReservationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicGatewayDhcpReservation) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type PublicGatewayDhcpReservationArrayOutput struct{ *pulumi.OutputState }

func (PublicGatewayDhcpReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicGatewayDhcpReservation)(nil)).Elem()
}

func (o PublicGatewayDhcpReservationArrayOutput) ToPublicGatewayDhcpReservationArrayOutput() PublicGatewayDhcpReservationArrayOutput {
	return o
}

func (o PublicGatewayDhcpReservationArrayOutput) ToPublicGatewayDhcpReservationArrayOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationArrayOutput {
	return o
}

func (o PublicGatewayDhcpReservationArrayOutput) Index(i pulumi.IntInput) PublicGatewayDhcpReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicGatewayDhcpReservation {
		return vs[0].([]*PublicGatewayDhcpReservation)[vs[1].(int)]
	}).(PublicGatewayDhcpReservationOutput)
}

type PublicGatewayDhcpReservationMapOutput struct{ *pulumi.OutputState }

func (PublicGatewayDhcpReservationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicGatewayDhcpReservation)(nil)).Elem()
}

func (o PublicGatewayDhcpReservationMapOutput) ToPublicGatewayDhcpReservationMapOutput() PublicGatewayDhcpReservationMapOutput {
	return o
}

func (o PublicGatewayDhcpReservationMapOutput) ToPublicGatewayDhcpReservationMapOutputWithContext(ctx context.Context) PublicGatewayDhcpReservationMapOutput {
	return o
}

func (o PublicGatewayDhcpReservationMapOutput) MapIndex(k pulumi.StringInput) PublicGatewayDhcpReservationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicGatewayDhcpReservation {
		return vs[0].(map[string]*PublicGatewayDhcpReservation)[vs[1].(string)]
	}).(PublicGatewayDhcpReservationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDhcpReservationInput)(nil)).Elem(), &PublicGatewayDhcpReservation{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDhcpReservationArrayInput)(nil)).Elem(), PublicGatewayDhcpReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicGatewayDhcpReservationMapInput)(nil)).Elem(), PublicGatewayDhcpReservationMap{})
	pulumi.RegisterOutputType(PublicGatewayDhcpReservationOutput{})
	pulumi.RegisterOutputType(PublicGatewayDhcpReservationArrayOutput{})
	pulumi.RegisterOutputType(PublicGatewayDhcpReservationMapOutput{})
}
