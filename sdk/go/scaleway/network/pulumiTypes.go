// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type AclRule struct {
	// The policy to apply to the packet.
	Action *string `pulumi:"action"`
	// The rule description.
	Description *string `pulumi:"description"`
	// The destination IP range to which this rule applies (CIDR notation with subnet mask).
	Destination *string `pulumi:"destination"`
	// The ending port of the destination port range to which this rule applies (inclusive).
	DstPortHigh *int `pulumi:"dstPortHigh"`
	// The starting port of the destination port range to which this rule applies (inclusive).
	DstPortLow *int `pulumi:"dstPortLow"`
	// The protocol to which this rule applies. Default value: ANY.
	Protocol *string `pulumi:"protocol"`
	// The Source IP range to which this rule applies (CIDR notation with subnet mask).
	Source *string `pulumi:"source"`
	// The ending port of the source port range to which this rule applies (inclusive).
	SrcPortHigh *int `pulumi:"srcPortHigh"`
	// The starting port of the source port range to which this rule applies (inclusive).
	SrcPortLow *int `pulumi:"srcPortLow"`
}

// AclRuleInput is an input type that accepts AclRuleArgs and AclRuleOutput values.
// You can construct a concrete instance of `AclRuleInput` via:
//
//	AclRuleArgs{...}
type AclRuleInput interface {
	pulumi.Input

	ToAclRuleOutput() AclRuleOutput
	ToAclRuleOutputWithContext(context.Context) AclRuleOutput
}

type AclRuleArgs struct {
	// The policy to apply to the packet.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination IP range to which this rule applies (CIDR notation with subnet mask).
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// The ending port of the destination port range to which this rule applies (inclusive).
	DstPortHigh pulumi.IntPtrInput `pulumi:"dstPortHigh"`
	// The starting port of the destination port range to which this rule applies (inclusive).
	DstPortLow pulumi.IntPtrInput `pulumi:"dstPortLow"`
	// The protocol to which this rule applies. Default value: ANY.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The Source IP range to which this rule applies (CIDR notation with subnet mask).
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The ending port of the source port range to which this rule applies (inclusive).
	SrcPortHigh pulumi.IntPtrInput `pulumi:"srcPortHigh"`
	// The starting port of the source port range to which this rule applies (inclusive).
	SrcPortLow pulumi.IntPtrInput `pulumi:"srcPortLow"`
}

func (AclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRule)(nil)).Elem()
}

func (i AclRuleArgs) ToAclRuleOutput() AclRuleOutput {
	return i.ToAclRuleOutputWithContext(context.Background())
}

func (i AclRuleArgs) ToAclRuleOutputWithContext(ctx context.Context) AclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleOutput)
}

// AclRuleArrayInput is an input type that accepts AclRuleArray and AclRuleArrayOutput values.
// You can construct a concrete instance of `AclRuleArrayInput` via:
//
//	AclRuleArray{ AclRuleArgs{...} }
type AclRuleArrayInput interface {
	pulumi.Input

	ToAclRuleArrayOutput() AclRuleArrayOutput
	ToAclRuleArrayOutputWithContext(context.Context) AclRuleArrayOutput
}

type AclRuleArray []AclRuleInput

func (AclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRule)(nil)).Elem()
}

func (i AclRuleArray) ToAclRuleArrayOutput() AclRuleArrayOutput {
	return i.ToAclRuleArrayOutputWithContext(context.Background())
}

func (i AclRuleArray) ToAclRuleArrayOutputWithContext(ctx context.Context) AclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleArrayOutput)
}

type AclRuleOutput struct{ *pulumi.OutputState }

func (AclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRule)(nil)).Elem()
}

func (o AclRuleOutput) ToAclRuleOutput() AclRuleOutput {
	return o
}

func (o AclRuleOutput) ToAclRuleOutputWithContext(ctx context.Context) AclRuleOutput {
	return o
}

// The policy to apply to the packet.
func (o AclRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The rule description.
func (o AclRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination IP range to which this rule applies (CIDR notation with subnet mask).
func (o AclRuleOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRule) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The ending port of the destination port range to which this rule applies (inclusive).
func (o AclRuleOutput) DstPortHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRule) *int { return v.DstPortHigh }).(pulumi.IntPtrOutput)
}

// The starting port of the destination port range to which this rule applies (inclusive).
func (o AclRuleOutput) DstPortLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRule) *int { return v.DstPortLow }).(pulumi.IntPtrOutput)
}

// The protocol to which this rule applies. Default value: ANY.
func (o AclRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The Source IP range to which this rule applies (CIDR notation with subnet mask).
func (o AclRuleOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRule) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The ending port of the source port range to which this rule applies (inclusive).
func (o AclRuleOutput) SrcPortHigh() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRule) *int { return v.SrcPortHigh }).(pulumi.IntPtrOutput)
}

// The starting port of the source port range to which this rule applies (inclusive).
func (o AclRuleOutput) SrcPortLow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRule) *int { return v.SrcPortLow }).(pulumi.IntPtrOutput)
}

type AclRuleArrayOutput struct{ *pulumi.OutputState }

func (AclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRule)(nil)).Elem()
}

func (o AclRuleArrayOutput) ToAclRuleArrayOutput() AclRuleArrayOutput {
	return o
}

func (o AclRuleArrayOutput) ToAclRuleArrayOutputWithContext(ctx context.Context) AclRuleArrayOutput {
	return o
}

func (o AclRuleArrayOutput) Index(i pulumi.IntInput) AclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRule {
		return vs[0].([]AclRule)[vs[1].(int)]
	}).(AclRuleOutput)
}

type GatewayNetworkIpamConfig struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	IpamIpId *string `pulumi:"ipamIpId"`
	// Defines whether to enable the default route on the GatewayNetwork.
	PushDefaultRoute *bool `pulumi:"pushDefaultRoute"`
}

// GatewayNetworkIpamConfigInput is an input type that accepts GatewayNetworkIpamConfigArgs and GatewayNetworkIpamConfigOutput values.
// You can construct a concrete instance of `GatewayNetworkIpamConfigInput` via:
//
//	GatewayNetworkIpamConfigArgs{...}
type GatewayNetworkIpamConfigInput interface {
	pulumi.Input

	ToGatewayNetworkIpamConfigOutput() GatewayNetworkIpamConfigOutput
	ToGatewayNetworkIpamConfigOutputWithContext(context.Context) GatewayNetworkIpamConfigOutput
}

type GatewayNetworkIpamConfigArgs struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	IpamIpId pulumi.StringPtrInput `pulumi:"ipamIpId"`
	// Defines whether to enable the default route on the GatewayNetwork.
	PushDefaultRoute pulumi.BoolPtrInput `pulumi:"pushDefaultRoute"`
}

func (GatewayNetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GatewayNetworkIpamConfigArgs) ToGatewayNetworkIpamConfigOutput() GatewayNetworkIpamConfigOutput {
	return i.ToGatewayNetworkIpamConfigOutputWithContext(context.Background())
}

func (i GatewayNetworkIpamConfigArgs) ToGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GatewayNetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkIpamConfigOutput)
}

// GatewayNetworkIpamConfigArrayInput is an input type that accepts GatewayNetworkIpamConfigArray and GatewayNetworkIpamConfigArrayOutput values.
// You can construct a concrete instance of `GatewayNetworkIpamConfigArrayInput` via:
//
//	GatewayNetworkIpamConfigArray{ GatewayNetworkIpamConfigArgs{...} }
type GatewayNetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToGatewayNetworkIpamConfigArrayOutput() GatewayNetworkIpamConfigArrayOutput
	ToGatewayNetworkIpamConfigArrayOutputWithContext(context.Context) GatewayNetworkIpamConfigArrayOutput
}

type GatewayNetworkIpamConfigArray []GatewayNetworkIpamConfigInput

func (GatewayNetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GatewayNetworkIpamConfigArray) ToGatewayNetworkIpamConfigArrayOutput() GatewayNetworkIpamConfigArrayOutput {
	return i.ToGatewayNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i GatewayNetworkIpamConfigArray) ToGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GatewayNetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkIpamConfigArrayOutput)
}

type GatewayNetworkIpamConfigOutput struct{ *pulumi.OutputState }

func (GatewayNetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GatewayNetworkIpamConfigOutput) ToGatewayNetworkIpamConfigOutput() GatewayNetworkIpamConfigOutput {
	return o
}

func (o GatewayNetworkIpamConfigOutput) ToGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GatewayNetworkIpamConfigOutput {
	return o
}

// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
func (o GatewayNetworkIpamConfigOutput) IpamIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkIpamConfig) *string { return v.IpamIpId }).(pulumi.StringPtrOutput)
}

// Defines whether to enable the default route on the GatewayNetwork.
func (o GatewayNetworkIpamConfigOutput) PushDefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GatewayNetworkIpamConfig) *bool { return v.PushDefaultRoute }).(pulumi.BoolPtrOutput)
}

type GatewayNetworkIpamConfigArrayOutput struct{ *pulumi.OutputState }

func (GatewayNetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GatewayNetworkIpamConfigArrayOutput) ToGatewayNetworkIpamConfigArrayOutput() GatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GatewayNetworkIpamConfigArrayOutput) ToGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GatewayNetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) GatewayNetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayNetworkIpamConfig {
		return vs[0].([]GatewayNetworkIpamConfig)[vs[1].(int)]
	}).(GatewayNetworkIpamConfigOutput)
}

type GatewayNetworkPrivateIp struct {
	// The private IPv4 address.
	Address *string `pulumi:"address"`
	// The ID of the IPv4 address resource.
	Id *string `pulumi:"id"`
}

// GatewayNetworkPrivateIpInput is an input type that accepts GatewayNetworkPrivateIpArgs and GatewayNetworkPrivateIpOutput values.
// You can construct a concrete instance of `GatewayNetworkPrivateIpInput` via:
//
//	GatewayNetworkPrivateIpArgs{...}
type GatewayNetworkPrivateIpInput interface {
	pulumi.Input

	ToGatewayNetworkPrivateIpOutput() GatewayNetworkPrivateIpOutput
	ToGatewayNetworkPrivateIpOutputWithContext(context.Context) GatewayNetworkPrivateIpOutput
}

type GatewayNetworkPrivateIpArgs struct {
	// The private IPv4 address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IPv4 address resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GatewayNetworkPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkPrivateIp)(nil)).Elem()
}

func (i GatewayNetworkPrivateIpArgs) ToGatewayNetworkPrivateIpOutput() GatewayNetworkPrivateIpOutput {
	return i.ToGatewayNetworkPrivateIpOutputWithContext(context.Background())
}

func (i GatewayNetworkPrivateIpArgs) ToGatewayNetworkPrivateIpOutputWithContext(ctx context.Context) GatewayNetworkPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkPrivateIpOutput)
}

// GatewayNetworkPrivateIpArrayInput is an input type that accepts GatewayNetworkPrivateIpArray and GatewayNetworkPrivateIpArrayOutput values.
// You can construct a concrete instance of `GatewayNetworkPrivateIpArrayInput` via:
//
//	GatewayNetworkPrivateIpArray{ GatewayNetworkPrivateIpArgs{...} }
type GatewayNetworkPrivateIpArrayInput interface {
	pulumi.Input

	ToGatewayNetworkPrivateIpArrayOutput() GatewayNetworkPrivateIpArrayOutput
	ToGatewayNetworkPrivateIpArrayOutputWithContext(context.Context) GatewayNetworkPrivateIpArrayOutput
}

type GatewayNetworkPrivateIpArray []GatewayNetworkPrivateIpInput

func (GatewayNetworkPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetworkPrivateIp)(nil)).Elem()
}

func (i GatewayNetworkPrivateIpArray) ToGatewayNetworkPrivateIpArrayOutput() GatewayNetworkPrivateIpArrayOutput {
	return i.ToGatewayNetworkPrivateIpArrayOutputWithContext(context.Background())
}

func (i GatewayNetworkPrivateIpArray) ToGatewayNetworkPrivateIpArrayOutputWithContext(ctx context.Context) GatewayNetworkPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayNetworkPrivateIpArrayOutput)
}

type GatewayNetworkPrivateIpOutput struct{ *pulumi.OutputState }

func (GatewayNetworkPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayNetworkPrivateIp)(nil)).Elem()
}

func (o GatewayNetworkPrivateIpOutput) ToGatewayNetworkPrivateIpOutput() GatewayNetworkPrivateIpOutput {
	return o
}

func (o GatewayNetworkPrivateIpOutput) ToGatewayNetworkPrivateIpOutputWithContext(ctx context.Context) GatewayNetworkPrivateIpOutput {
	return o
}

// The private IPv4 address.
func (o GatewayNetworkPrivateIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkPrivateIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IPv4 address resource.
func (o GatewayNetworkPrivateIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayNetworkPrivateIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type GatewayNetworkPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GatewayNetworkPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayNetworkPrivateIp)(nil)).Elem()
}

func (o GatewayNetworkPrivateIpArrayOutput) ToGatewayNetworkPrivateIpArrayOutput() GatewayNetworkPrivateIpArrayOutput {
	return o
}

func (o GatewayNetworkPrivateIpArrayOutput) ToGatewayNetworkPrivateIpArrayOutputWithContext(ctx context.Context) GatewayNetworkPrivateIpArrayOutput {
	return o
}

func (o GatewayNetworkPrivateIpArrayOutput) Index(i pulumi.IntInput) GatewayNetworkPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayNetworkPrivateIp {
		return vs[0].([]GatewayNetworkPrivateIp)[vs[1].(int)]
	}).(GatewayNetworkPrivateIpOutput)
}

type PrivateNetworkIpv4Subnet struct {
	// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt *string `pulumi:"createdAt"`
	// The subnet ID.
	Id *string `pulumi:"id"`
	// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
	PrefixLength *int `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet *string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask *string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// PrivateNetworkIpv4SubnetInput is an input type that accepts PrivateNetworkIpv4SubnetArgs and PrivateNetworkIpv4SubnetOutput values.
// You can construct a concrete instance of `PrivateNetworkIpv4SubnetInput` via:
//
//	PrivateNetworkIpv4SubnetArgs{...}
type PrivateNetworkIpv4SubnetInput interface {
	pulumi.Input

	ToPrivateNetworkIpv4SubnetOutput() PrivateNetworkIpv4SubnetOutput
	ToPrivateNetworkIpv4SubnetOutputWithContext(context.Context) PrivateNetworkIpv4SubnetOutput
}

type PrivateNetworkIpv4SubnetArgs struct {
	// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The subnet ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (PrivateNetworkIpv4SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i PrivateNetworkIpv4SubnetArgs) ToPrivateNetworkIpv4SubnetOutput() PrivateNetworkIpv4SubnetOutput {
	return i.ToPrivateNetworkIpv4SubnetOutputWithContext(context.Background())
}

func (i PrivateNetworkIpv4SubnetArgs) ToPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkIpv4SubnetOutput)
}

func (i PrivateNetworkIpv4SubnetArgs) ToPrivateNetworkIpv4SubnetPtrOutput() PrivateNetworkIpv4SubnetPtrOutput {
	return i.ToPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (i PrivateNetworkIpv4SubnetArgs) ToPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkIpv4SubnetOutput).ToPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx)
}

// PrivateNetworkIpv4SubnetPtrInput is an input type that accepts PrivateNetworkIpv4SubnetArgs, PrivateNetworkIpv4SubnetPtr and PrivateNetworkIpv4SubnetPtrOutput values.
// You can construct a concrete instance of `PrivateNetworkIpv4SubnetPtrInput` via:
//
//	        PrivateNetworkIpv4SubnetArgs{...}
//
//	or:
//
//	        nil
type PrivateNetworkIpv4SubnetPtrInput interface {
	pulumi.Input

	ToPrivateNetworkIpv4SubnetPtrOutput() PrivateNetworkIpv4SubnetPtrOutput
	ToPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Context) PrivateNetworkIpv4SubnetPtrOutput
}

type privateNetworkIpv4SubnetPtrType PrivateNetworkIpv4SubnetArgs

func PrivateNetworkIpv4SubnetPtr(v *PrivateNetworkIpv4SubnetArgs) PrivateNetworkIpv4SubnetPtrInput {
	return (*privateNetworkIpv4SubnetPtrType)(v)
}

func (*privateNetworkIpv4SubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i *privateNetworkIpv4SubnetPtrType) ToPrivateNetworkIpv4SubnetPtrOutput() PrivateNetworkIpv4SubnetPtrOutput {
	return i.ToPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (i *privateNetworkIpv4SubnetPtrType) ToPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkIpv4SubnetPtrOutput)
}

type PrivateNetworkIpv4SubnetOutput struct{ *pulumi.OutputState }

func (PrivateNetworkIpv4SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o PrivateNetworkIpv4SubnetOutput) ToPrivateNetworkIpv4SubnetOutput() PrivateNetworkIpv4SubnetOutput {
	return o
}

func (o PrivateNetworkIpv4SubnetOutput) ToPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetOutput {
	return o
}

func (o PrivateNetworkIpv4SubnetOutput) ToPrivateNetworkIpv4SubnetPtrOutput() PrivateNetworkIpv4SubnetPtrOutput {
	return o.ToPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (o PrivateNetworkIpv4SubnetOutput) ToPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateNetworkIpv4Subnet) *PrivateNetworkIpv4Subnet {
		return &v
	}).(PrivateNetworkIpv4SubnetPtrOutput)
}

// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
func (o PrivateNetworkIpv4SubnetOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o PrivateNetworkIpv4SubnetOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o PrivateNetworkIpv4SubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
func (o PrivateNetworkIpv4SubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o PrivateNetworkIpv4SubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o PrivateNetworkIpv4SubnetOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o PrivateNetworkIpv4SubnetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv4Subnet) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type PrivateNetworkIpv4SubnetPtrOutput struct{ *pulumi.OutputState }

func (PrivateNetworkIpv4SubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o PrivateNetworkIpv4SubnetPtrOutput) ToPrivateNetworkIpv4SubnetPtrOutput() PrivateNetworkIpv4SubnetPtrOutput {
	return o
}

func (o PrivateNetworkIpv4SubnetPtrOutput) ToPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) PrivateNetworkIpv4SubnetPtrOutput {
	return o
}

func (o PrivateNetworkIpv4SubnetPtrOutput) Elem() PrivateNetworkIpv4SubnetOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) PrivateNetworkIpv4Subnet {
		if v != nil {
			return *v
		}
		var ret PrivateNetworkIpv4Subnet
		return ret
	}).(PrivateNetworkIpv4SubnetOutput)
}

// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
func (o PrivateNetworkIpv4SubnetPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o PrivateNetworkIpv4SubnetPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o PrivateNetworkIpv4SubnetPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
func (o PrivateNetworkIpv4SubnetPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o PrivateNetworkIpv4SubnetPtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o PrivateNetworkIpv4SubnetPtrOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.SubnetMask
	}).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o PrivateNetworkIpv4SubnetPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type PrivateNetworkIpv6Subnet struct {
	// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt *string `pulumi:"createdAt"`
	// The subnet ID.
	Id *string `pulumi:"id"`
	// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
	PrefixLength *int `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet *string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask *string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// PrivateNetworkIpv6SubnetInput is an input type that accepts PrivateNetworkIpv6SubnetArgs and PrivateNetworkIpv6SubnetOutput values.
// You can construct a concrete instance of `PrivateNetworkIpv6SubnetInput` via:
//
//	PrivateNetworkIpv6SubnetArgs{...}
type PrivateNetworkIpv6SubnetInput interface {
	pulumi.Input

	ToPrivateNetworkIpv6SubnetOutput() PrivateNetworkIpv6SubnetOutput
	ToPrivateNetworkIpv6SubnetOutputWithContext(context.Context) PrivateNetworkIpv6SubnetOutput
}

type PrivateNetworkIpv6SubnetArgs struct {
	// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The subnet ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (PrivateNetworkIpv6SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i PrivateNetworkIpv6SubnetArgs) ToPrivateNetworkIpv6SubnetOutput() PrivateNetworkIpv6SubnetOutput {
	return i.ToPrivateNetworkIpv6SubnetOutputWithContext(context.Background())
}

func (i PrivateNetworkIpv6SubnetArgs) ToPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) PrivateNetworkIpv6SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkIpv6SubnetOutput)
}

// PrivateNetworkIpv6SubnetArrayInput is an input type that accepts PrivateNetworkIpv6SubnetArray and PrivateNetworkIpv6SubnetArrayOutput values.
// You can construct a concrete instance of `PrivateNetworkIpv6SubnetArrayInput` via:
//
//	PrivateNetworkIpv6SubnetArray{ PrivateNetworkIpv6SubnetArgs{...} }
type PrivateNetworkIpv6SubnetArrayInput interface {
	pulumi.Input

	ToPrivateNetworkIpv6SubnetArrayOutput() PrivateNetworkIpv6SubnetArrayOutput
	ToPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Context) PrivateNetworkIpv6SubnetArrayOutput
}

type PrivateNetworkIpv6SubnetArray []PrivateNetworkIpv6SubnetInput

func (PrivateNetworkIpv6SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i PrivateNetworkIpv6SubnetArray) ToPrivateNetworkIpv6SubnetArrayOutput() PrivateNetworkIpv6SubnetArrayOutput {
	return i.ToPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Background())
}

func (i PrivateNetworkIpv6SubnetArray) ToPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) PrivateNetworkIpv6SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkIpv6SubnetArrayOutput)
}

type PrivateNetworkIpv6SubnetOutput struct{ *pulumi.OutputState }

func (PrivateNetworkIpv6SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o PrivateNetworkIpv6SubnetOutput) ToPrivateNetworkIpv6SubnetOutput() PrivateNetworkIpv6SubnetOutput {
	return o
}

func (o PrivateNetworkIpv6SubnetOutput) ToPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) PrivateNetworkIpv6SubnetOutput {
	return o
}

// The network address of the subnet in hexadecimal notation, e.g., '2001:db8::' for a '2001:db8::/64' subnet.
func (o PrivateNetworkIpv6SubnetOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o PrivateNetworkIpv6SubnetOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o PrivateNetworkIpv6SubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 64 for a 'ffff:ffff:ffff:ffff::' mask.
func (o PrivateNetworkIpv6SubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o PrivateNetworkIpv6SubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o PrivateNetworkIpv6SubnetOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o PrivateNetworkIpv6SubnetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkIpv6Subnet) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type PrivateNetworkIpv6SubnetArrayOutput struct{ *pulumi.OutputState }

func (PrivateNetworkIpv6SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o PrivateNetworkIpv6SubnetArrayOutput) ToPrivateNetworkIpv6SubnetArrayOutput() PrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o PrivateNetworkIpv6SubnetArrayOutput) ToPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) PrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o PrivateNetworkIpv6SubnetArrayOutput) Index(i pulumi.IntInput) PrivateNetworkIpv6SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateNetworkIpv6Subnet {
		return vs[0].([]PrivateNetworkIpv6Subnet)[vs[1].(int)]
	}).(PrivateNetworkIpv6SubnetOutput)
}

type GetGatewayNetworkIpamConfig struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIpId string `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute bool `pulumi:"pushDefaultRoute"`
}

// GetGatewayNetworkIpamConfigInput is an input type that accepts GetGatewayNetworkIpamConfigArgs and GetGatewayNetworkIpamConfigOutput values.
// You can construct a concrete instance of `GetGatewayNetworkIpamConfigInput` via:
//
//	GetGatewayNetworkIpamConfigArgs{...}
type GetGatewayNetworkIpamConfigInput interface {
	pulumi.Input

	ToGetGatewayNetworkIpamConfigOutput() GetGatewayNetworkIpamConfigOutput
	ToGetGatewayNetworkIpamConfigOutputWithContext(context.Context) GetGatewayNetworkIpamConfigOutput
}

type GetGatewayNetworkIpamConfigArgs struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIpId pulumi.StringInput `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute pulumi.BoolInput `pulumi:"pushDefaultRoute"`
}

func (GetGatewayNetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GetGatewayNetworkIpamConfigArgs) ToGetGatewayNetworkIpamConfigOutput() GetGatewayNetworkIpamConfigOutput {
	return i.ToGetGatewayNetworkIpamConfigOutputWithContext(context.Background())
}

func (i GetGatewayNetworkIpamConfigArgs) ToGetGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GetGatewayNetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayNetworkIpamConfigOutput)
}

// GetGatewayNetworkIpamConfigArrayInput is an input type that accepts GetGatewayNetworkIpamConfigArray and GetGatewayNetworkIpamConfigArrayOutput values.
// You can construct a concrete instance of `GetGatewayNetworkIpamConfigArrayInput` via:
//
//	GetGatewayNetworkIpamConfigArray{ GetGatewayNetworkIpamConfigArgs{...} }
type GetGatewayNetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToGetGatewayNetworkIpamConfigArrayOutput() GetGatewayNetworkIpamConfigArrayOutput
	ToGetGatewayNetworkIpamConfigArrayOutputWithContext(context.Context) GetGatewayNetworkIpamConfigArrayOutput
}

type GetGatewayNetworkIpamConfigArray []GetGatewayNetworkIpamConfigInput

func (GetGatewayNetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GetGatewayNetworkIpamConfigArray) ToGetGatewayNetworkIpamConfigArrayOutput() GetGatewayNetworkIpamConfigArrayOutput {
	return i.ToGetGatewayNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i GetGatewayNetworkIpamConfigArray) ToGetGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetGatewayNetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayNetworkIpamConfigArrayOutput)
}

type GetGatewayNetworkIpamConfigOutput struct{ *pulumi.OutputState }

func (GetGatewayNetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GetGatewayNetworkIpamConfigOutput) ToGetGatewayNetworkIpamConfigOutput() GetGatewayNetworkIpamConfigOutput {
	return o
}

func (o GetGatewayNetworkIpamConfigOutput) ToGetGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GetGatewayNetworkIpamConfigOutput {
	return o
}

// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
func (o GetGatewayNetworkIpamConfigOutput) IpamIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayNetworkIpamConfig) string { return v.IpamIpId }).(pulumi.StringOutput)
}

// Defines whether the default route is enabled on that Gateway Network
func (o GetGatewayNetworkIpamConfigOutput) PushDefaultRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGatewayNetworkIpamConfig) bool { return v.PushDefaultRoute }).(pulumi.BoolOutput)
}

type GetGatewayNetworkIpamConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayNetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GetGatewayNetworkIpamConfigArrayOutput) ToGetGatewayNetworkIpamConfigArrayOutput() GetGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GetGatewayNetworkIpamConfigArrayOutput) ToGetGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GetGatewayNetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) GetGatewayNetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayNetworkIpamConfig {
		return vs[0].([]GetGatewayNetworkIpamConfig)[vs[1].(int)]
	}).(GetGatewayNetworkIpamConfigOutput)
}

type GetGatewayNetworkPrivateIp struct {
	// The private IPv4 address.
	Address string `pulumi:"address"`
	// The ID of the IPv4 address resource.
	Id string `pulumi:"id"`
}

// GetGatewayNetworkPrivateIpInput is an input type that accepts GetGatewayNetworkPrivateIpArgs and GetGatewayNetworkPrivateIpOutput values.
// You can construct a concrete instance of `GetGatewayNetworkPrivateIpInput` via:
//
//	GetGatewayNetworkPrivateIpArgs{...}
type GetGatewayNetworkPrivateIpInput interface {
	pulumi.Input

	ToGetGatewayNetworkPrivateIpOutput() GetGatewayNetworkPrivateIpOutput
	ToGetGatewayNetworkPrivateIpOutputWithContext(context.Context) GetGatewayNetworkPrivateIpOutput
}

type GetGatewayNetworkPrivateIpArgs struct {
	// The private IPv4 address.
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the IPv4 address resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetGatewayNetworkPrivateIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayNetworkPrivateIp)(nil)).Elem()
}

func (i GetGatewayNetworkPrivateIpArgs) ToGetGatewayNetworkPrivateIpOutput() GetGatewayNetworkPrivateIpOutput {
	return i.ToGetGatewayNetworkPrivateIpOutputWithContext(context.Background())
}

func (i GetGatewayNetworkPrivateIpArgs) ToGetGatewayNetworkPrivateIpOutputWithContext(ctx context.Context) GetGatewayNetworkPrivateIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayNetworkPrivateIpOutput)
}

// GetGatewayNetworkPrivateIpArrayInput is an input type that accepts GetGatewayNetworkPrivateIpArray and GetGatewayNetworkPrivateIpArrayOutput values.
// You can construct a concrete instance of `GetGatewayNetworkPrivateIpArrayInput` via:
//
//	GetGatewayNetworkPrivateIpArray{ GetGatewayNetworkPrivateIpArgs{...} }
type GetGatewayNetworkPrivateIpArrayInput interface {
	pulumi.Input

	ToGetGatewayNetworkPrivateIpArrayOutput() GetGatewayNetworkPrivateIpArrayOutput
	ToGetGatewayNetworkPrivateIpArrayOutputWithContext(context.Context) GetGatewayNetworkPrivateIpArrayOutput
}

type GetGatewayNetworkPrivateIpArray []GetGatewayNetworkPrivateIpInput

func (GetGatewayNetworkPrivateIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayNetworkPrivateIp)(nil)).Elem()
}

func (i GetGatewayNetworkPrivateIpArray) ToGetGatewayNetworkPrivateIpArrayOutput() GetGatewayNetworkPrivateIpArrayOutput {
	return i.ToGetGatewayNetworkPrivateIpArrayOutputWithContext(context.Background())
}

func (i GetGatewayNetworkPrivateIpArray) ToGetGatewayNetworkPrivateIpArrayOutputWithContext(ctx context.Context) GetGatewayNetworkPrivateIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayNetworkPrivateIpArrayOutput)
}

type GetGatewayNetworkPrivateIpOutput struct{ *pulumi.OutputState }

func (GetGatewayNetworkPrivateIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayNetworkPrivateIp)(nil)).Elem()
}

func (o GetGatewayNetworkPrivateIpOutput) ToGetGatewayNetworkPrivateIpOutput() GetGatewayNetworkPrivateIpOutput {
	return o
}

func (o GetGatewayNetworkPrivateIpOutput) ToGetGatewayNetworkPrivateIpOutputWithContext(ctx context.Context) GetGatewayNetworkPrivateIpOutput {
	return o
}

// The private IPv4 address.
func (o GetGatewayNetworkPrivateIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayNetworkPrivateIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the IPv4 address resource.
func (o GetGatewayNetworkPrivateIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayNetworkPrivateIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetGatewayNetworkPrivateIpArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayNetworkPrivateIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayNetworkPrivateIp)(nil)).Elem()
}

func (o GetGatewayNetworkPrivateIpArrayOutput) ToGetGatewayNetworkPrivateIpArrayOutput() GetGatewayNetworkPrivateIpArrayOutput {
	return o
}

func (o GetGatewayNetworkPrivateIpArrayOutput) ToGetGatewayNetworkPrivateIpArrayOutputWithContext(ctx context.Context) GetGatewayNetworkPrivateIpArrayOutput {
	return o
}

func (o GetGatewayNetworkPrivateIpArrayOutput) Index(i pulumi.IntInput) GetGatewayNetworkPrivateIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayNetworkPrivateIp {
		return vs[0].([]GetGatewayNetworkPrivateIp)[vs[1].(int)]
	}).(GetGatewayNetworkPrivateIpOutput)
}

type GetPrivateNetworkIpv4Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address string `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the Private Network.
	Id string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength int `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPrivateNetworkIpv4SubnetInput is an input type that accepts GetPrivateNetworkIpv4SubnetArgs and GetPrivateNetworkIpv4SubnetOutput values.
// You can construct a concrete instance of `GetPrivateNetworkIpv4SubnetInput` via:
//
//	GetPrivateNetworkIpv4SubnetArgs{...}
type GetPrivateNetworkIpv4SubnetInput interface {
	pulumi.Input

	ToGetPrivateNetworkIpv4SubnetOutput() GetPrivateNetworkIpv4SubnetOutput
	ToGetPrivateNetworkIpv4SubnetOutputWithContext(context.Context) GetPrivateNetworkIpv4SubnetOutput
}

type GetPrivateNetworkIpv4SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the Private Network.
	Id pulumi.StringInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPrivateNetworkIpv4SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i GetPrivateNetworkIpv4SubnetArgs) ToGetPrivateNetworkIpv4SubnetOutput() GetPrivateNetworkIpv4SubnetOutput {
	return i.ToGetPrivateNetworkIpv4SubnetOutputWithContext(context.Background())
}

func (i GetPrivateNetworkIpv4SubnetArgs) ToGetPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) GetPrivateNetworkIpv4SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkIpv4SubnetOutput)
}

// GetPrivateNetworkIpv4SubnetArrayInput is an input type that accepts GetPrivateNetworkIpv4SubnetArray and GetPrivateNetworkIpv4SubnetArrayOutput values.
// You can construct a concrete instance of `GetPrivateNetworkIpv4SubnetArrayInput` via:
//
//	GetPrivateNetworkIpv4SubnetArray{ GetPrivateNetworkIpv4SubnetArgs{...} }
type GetPrivateNetworkIpv4SubnetArrayInput interface {
	pulumi.Input

	ToGetPrivateNetworkIpv4SubnetArrayOutput() GetPrivateNetworkIpv4SubnetArrayOutput
	ToGetPrivateNetworkIpv4SubnetArrayOutputWithContext(context.Context) GetPrivateNetworkIpv4SubnetArrayOutput
}

type GetPrivateNetworkIpv4SubnetArray []GetPrivateNetworkIpv4SubnetInput

func (GetPrivateNetworkIpv4SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i GetPrivateNetworkIpv4SubnetArray) ToGetPrivateNetworkIpv4SubnetArrayOutput() GetPrivateNetworkIpv4SubnetArrayOutput {
	return i.ToGetPrivateNetworkIpv4SubnetArrayOutputWithContext(context.Background())
}

func (i GetPrivateNetworkIpv4SubnetArray) ToGetPrivateNetworkIpv4SubnetArrayOutputWithContext(ctx context.Context) GetPrivateNetworkIpv4SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkIpv4SubnetArrayOutput)
}

type GetPrivateNetworkIpv4SubnetOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkIpv4SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o GetPrivateNetworkIpv4SubnetOutput) ToGetPrivateNetworkIpv4SubnetOutput() GetPrivateNetworkIpv4SubnetOutput {
	return o
}

func (o GetPrivateNetworkIpv4SubnetOutput) ToGetPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) GetPrivateNetworkIpv4SubnetOutput {
	return o
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
func (o GetPrivateNetworkIpv4SubnetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the subnet
func (o GetPrivateNetworkIpv4SubnetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the Private Network.
func (o GetPrivateNetworkIpv4SubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.Id }).(pulumi.StringOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
func (o GetPrivateNetworkIpv4SubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// The subnet CIDR
func (o GetPrivateNetworkIpv4SubnetOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.Subnet }).(pulumi.StringOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o GetPrivateNetworkIpv4SubnetOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The date and time of the last update of the subnet
func (o GetPrivateNetworkIpv4SubnetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv4Subnet) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetPrivateNetworkIpv4SubnetArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkIpv4SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o GetPrivateNetworkIpv4SubnetArrayOutput) ToGetPrivateNetworkIpv4SubnetArrayOutput() GetPrivateNetworkIpv4SubnetArrayOutput {
	return o
}

func (o GetPrivateNetworkIpv4SubnetArrayOutput) ToGetPrivateNetworkIpv4SubnetArrayOutputWithContext(ctx context.Context) GetPrivateNetworkIpv4SubnetArrayOutput {
	return o
}

func (o GetPrivateNetworkIpv4SubnetArrayOutput) Index(i pulumi.IntInput) GetPrivateNetworkIpv4SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateNetworkIpv4Subnet {
		return vs[0].([]GetPrivateNetworkIpv4Subnet)[vs[1].(int)]
	}).(GetPrivateNetworkIpv4SubnetOutput)
}

type GetPrivateNetworkIpv6Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address string `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the Private Network.
	Id string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength int `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPrivateNetworkIpv6SubnetInput is an input type that accepts GetPrivateNetworkIpv6SubnetArgs and GetPrivateNetworkIpv6SubnetOutput values.
// You can construct a concrete instance of `GetPrivateNetworkIpv6SubnetInput` via:
//
//	GetPrivateNetworkIpv6SubnetArgs{...}
type GetPrivateNetworkIpv6SubnetInput interface {
	pulumi.Input

	ToGetPrivateNetworkIpv6SubnetOutput() GetPrivateNetworkIpv6SubnetOutput
	ToGetPrivateNetworkIpv6SubnetOutputWithContext(context.Context) GetPrivateNetworkIpv6SubnetOutput
}

type GetPrivateNetworkIpv6SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the Private Network.
	Id pulumi.StringInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPrivateNetworkIpv6SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i GetPrivateNetworkIpv6SubnetArgs) ToGetPrivateNetworkIpv6SubnetOutput() GetPrivateNetworkIpv6SubnetOutput {
	return i.ToGetPrivateNetworkIpv6SubnetOutputWithContext(context.Background())
}

func (i GetPrivateNetworkIpv6SubnetArgs) ToGetPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) GetPrivateNetworkIpv6SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkIpv6SubnetOutput)
}

// GetPrivateNetworkIpv6SubnetArrayInput is an input type that accepts GetPrivateNetworkIpv6SubnetArray and GetPrivateNetworkIpv6SubnetArrayOutput values.
// You can construct a concrete instance of `GetPrivateNetworkIpv6SubnetArrayInput` via:
//
//	GetPrivateNetworkIpv6SubnetArray{ GetPrivateNetworkIpv6SubnetArgs{...} }
type GetPrivateNetworkIpv6SubnetArrayInput interface {
	pulumi.Input

	ToGetPrivateNetworkIpv6SubnetArrayOutput() GetPrivateNetworkIpv6SubnetArrayOutput
	ToGetPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Context) GetPrivateNetworkIpv6SubnetArrayOutput
}

type GetPrivateNetworkIpv6SubnetArray []GetPrivateNetworkIpv6SubnetInput

func (GetPrivateNetworkIpv6SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i GetPrivateNetworkIpv6SubnetArray) ToGetPrivateNetworkIpv6SubnetArrayOutput() GetPrivateNetworkIpv6SubnetArrayOutput {
	return i.ToGetPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Background())
}

func (i GetPrivateNetworkIpv6SubnetArray) ToGetPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) GetPrivateNetworkIpv6SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkIpv6SubnetArrayOutput)
}

type GetPrivateNetworkIpv6SubnetOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkIpv6SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o GetPrivateNetworkIpv6SubnetOutput) ToGetPrivateNetworkIpv6SubnetOutput() GetPrivateNetworkIpv6SubnetOutput {
	return o
}

func (o GetPrivateNetworkIpv6SubnetOutput) ToGetPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) GetPrivateNetworkIpv6SubnetOutput {
	return o
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
func (o GetPrivateNetworkIpv6SubnetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the subnet
func (o GetPrivateNetworkIpv6SubnetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the Private Network.
func (o GetPrivateNetworkIpv6SubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.Id }).(pulumi.StringOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
func (o GetPrivateNetworkIpv6SubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// The subnet CIDR
func (o GetPrivateNetworkIpv6SubnetOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.Subnet }).(pulumi.StringOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o GetPrivateNetworkIpv6SubnetOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The date and time of the last update of the subnet
func (o GetPrivateNetworkIpv6SubnetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkIpv6Subnet) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetPrivateNetworkIpv6SubnetArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkIpv6SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o GetPrivateNetworkIpv6SubnetArrayOutput) ToGetPrivateNetworkIpv6SubnetArrayOutput() GetPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o GetPrivateNetworkIpv6SubnetArrayOutput) ToGetPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) GetPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o GetPrivateNetworkIpv6SubnetArrayOutput) Index(i pulumi.IntInput) GetPrivateNetworkIpv6SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateNetworkIpv6Subnet {
		return vs[0].([]GetPrivateNetworkIpv6Subnet)[vs[1].(int)]
	}).(GetPrivateNetworkIpv6SubnetOutput)
}

type GetRoutesRoute struct {
	// The date on which the route was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The description of the route.
	Description string `pulumi:"description"`
	// The destination IP or IP range of the route.
	Destination string `pulumi:"destination"`
	// The ID of the route.
	// > **Important:** route IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id string `pulumi:"id"`
	// The IP of the route's next hop.
	NexthopIp string `pulumi:"nexthopIp"`
	// The name of the route's next hop.
	NexthopName string `pulumi:"nexthopName"`
	// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
	NexthopPrivateNetworkId string `pulumi:"nexthopPrivateNetworkId"`
	// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
	NexthopResourceId string `pulumi:"nexthopResourceId"`
	// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
	NexthopResourceType string `pulumi:"nexthopResourceType"`
	// `region`). The region in which the routes exist.
	Region string `pulumi:"region"`
	// List of tags to filter for. routes with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// The VPC ID to filter for. routes with a similar VPC ID are listed.
	VpcId string `pulumi:"vpcId"`
}

// GetRoutesRouteInput is an input type that accepts GetRoutesRouteArgs and GetRoutesRouteOutput values.
// You can construct a concrete instance of `GetRoutesRouteInput` via:
//
//	GetRoutesRouteArgs{...}
type GetRoutesRouteInput interface {
	pulumi.Input

	ToGetRoutesRouteOutput() GetRoutesRouteOutput
	ToGetRoutesRouteOutputWithContext(context.Context) GetRoutesRouteOutput
}

type GetRoutesRouteArgs struct {
	// The date on which the route was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the route.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination IP or IP range of the route.
	Destination pulumi.StringInput `pulumi:"destination"`
	// The ID of the route.
	// > **Important:** route IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id pulumi.StringInput `pulumi:"id"`
	// The IP of the route's next hop.
	NexthopIp pulumi.StringInput `pulumi:"nexthopIp"`
	// The name of the route's next hop.
	NexthopName pulumi.StringInput `pulumi:"nexthopName"`
	// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
	NexthopPrivateNetworkId pulumi.StringInput `pulumi:"nexthopPrivateNetworkId"`
	// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
	NexthopResourceId pulumi.StringInput `pulumi:"nexthopResourceId"`
	// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
	NexthopResourceType pulumi.StringInput `pulumi:"nexthopResourceType"`
	// `region`). The region in which the routes exist.
	Region pulumi.StringInput `pulumi:"region"`
	// List of tags to filter for. routes with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The VPC ID to filter for. routes with a similar VPC ID are listed.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRoute)(nil)).Elem()
}

func (i GetRoutesRouteArgs) ToGetRoutesRouteOutput() GetRoutesRouteOutput {
	return i.ToGetRoutesRouteOutputWithContext(context.Background())
}

func (i GetRoutesRouteArgs) ToGetRoutesRouteOutputWithContext(ctx context.Context) GetRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteOutput)
}

// GetRoutesRouteArrayInput is an input type that accepts GetRoutesRouteArray and GetRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetRoutesRouteArrayInput` via:
//
//	GetRoutesRouteArray{ GetRoutesRouteArgs{...} }
type GetRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput
	ToGetRoutesRouteArrayOutputWithContext(context.Context) GetRoutesRouteArrayOutput
}

type GetRoutesRouteArray []GetRoutesRouteInput

func (GetRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRoute)(nil)).Elem()
}

func (i GetRoutesRouteArray) ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput {
	return i.ToGetRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetRoutesRouteArray) ToGetRoutesRouteArrayOutputWithContext(ctx context.Context) GetRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoutesRouteArrayOutput)
}

type GetRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesRoute)(nil)).Elem()
}

func (o GetRoutesRouteOutput) ToGetRoutesRouteOutput() GetRoutesRouteOutput {
	return o
}

func (o GetRoutesRouteOutput) ToGetRoutesRouteOutputWithContext(ctx context.Context) GetRoutesRouteOutput {
	return o
}

// The date on which the route was created (RFC 3339 format).
func (o GetRoutesRouteOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the route.
func (o GetRoutesRouteOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Description }).(pulumi.StringOutput)
}

// The destination IP or IP range of the route.
func (o GetRoutesRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Destination }).(pulumi.StringOutput)
}

// The ID of the route.
// > **Important:** route IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
func (o GetRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// The IP of the route's next hop.
func (o GetRoutesRouteOutput) NexthopIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.NexthopIp }).(pulumi.StringOutput)
}

// The name of the route's next hop.
func (o GetRoutesRouteOutput) NexthopName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.NexthopName }).(pulumi.StringOutput)
}

// The next hop private network ID to filter for. routes with a similar next hop private network ID are listed.
func (o GetRoutesRouteOutput) NexthopPrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.NexthopPrivateNetworkId }).(pulumi.StringOutput)
}

// The next hop resource ID to filter for. routes with a similar next hop resource ID are listed.
func (o GetRoutesRouteOutput) NexthopResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.NexthopResourceId }).(pulumi.StringOutput)
}

// The next hop resource type to filter for. routes with a similar next hop resource type are listed.
func (o GetRoutesRouteOutput) NexthopResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.NexthopResourceType }).(pulumi.StringOutput)
}

// `region`). The region in which the routes exist.
func (o GetRoutesRouteOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.Region }).(pulumi.StringOutput)
}

// List of tags to filter for. routes with these exact tags are listed.
func (o GetRoutesRouteOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRoutesRoute) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The VPC ID to filter for. routes with a similar VPC ID are listed.
func (o GetRoutesRouteOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesRoute) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoutesRoute)(nil)).Elem()
}

func (o GetRoutesRouteArrayOutput) ToGetRoutesRouteArrayOutput() GetRoutesRouteArrayOutput {
	return o
}

func (o GetRoutesRouteArrayOutput) ToGetRoutesRouteArrayOutputWithContext(ctx context.Context) GetRoutesRouteArrayOutput {
	return o
}

func (o GetRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoutesRoute {
		return vs[0].([]GetRoutesRoute)[vs[1].(int)]
	}).(GetRoutesRouteOutput)
}

type GetVpcsVpc struct {
	// Date and time of VPC's creation (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The associated VPC ID.
	// > **Important:** VPC IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id string `pulumi:"id"`
	// Defines whether the VPC is the default one for its Project.
	IsDefault bool `pulumi:"isDefault"`
	// The VPC name to filter for. VPCs with a similar name are listed.
	Name string `pulumi:"name"`
	// The Organization ID the VPC is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the Project the VPC is associated with.
	ProjectId string `pulumi:"projectId"`
	// `region`). The region in which the VPCs exist.
	Region string `pulumi:"region"`
	// List of tags to filter for. VPCs with these exact tags are listed.
	Tags     []string `pulumi:"tags"`
	UpdateAt string   `pulumi:"updateAt"`
}

// GetVpcsVpcInput is an input type that accepts GetVpcsVpcArgs and GetVpcsVpcOutput values.
// You can construct a concrete instance of `GetVpcsVpcInput` via:
//
//	GetVpcsVpcArgs{...}
type GetVpcsVpcInput interface {
	pulumi.Input

	ToGetVpcsVpcOutput() GetVpcsVpcOutput
	ToGetVpcsVpcOutputWithContext(context.Context) GetVpcsVpcOutput
}

type GetVpcsVpcArgs struct {
	// Date and time of VPC's creation (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The associated VPC ID.
	// > **Important:** VPC IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id pulumi.StringInput `pulumi:"id"`
	// Defines whether the VPC is the default one for its Project.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The VPC name to filter for. VPCs with a similar name are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// The Organization ID the VPC is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The ID of the Project the VPC is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// `region`). The region in which the VPCs exist.
	Region pulumi.StringInput `pulumi:"region"`
	// List of tags to filter for. VPCs with these exact tags are listed.
	Tags     pulumi.StringArrayInput `pulumi:"tags"`
	UpdateAt pulumi.StringInput      `pulumi:"updateAt"`
}

func (GetVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return i.ToGetVpcsVpcOutputWithContext(context.Background())
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcOutput)
}

// GetVpcsVpcArrayInput is an input type that accepts GetVpcsVpcArray and GetVpcsVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcArrayInput` via:
//
//	GetVpcsVpcArray{ GetVpcsVpcArgs{...} }
type GetVpcsVpcArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput
	ToGetVpcsVpcArrayOutputWithContext(context.Context) GetVpcsVpcArrayOutput
}

type GetVpcsVpcArray []GetVpcsVpcInput

func (GetVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return i.ToGetVpcsVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcArrayOutput)
}

type GetVpcsVpcOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return o
}

// Date and time of VPC's creation (RFC 3339 format).
func (o GetVpcsVpcOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The associated VPC ID.
// > **Important:** VPC IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
func (o GetVpcsVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Id }).(pulumi.StringOutput)
}

// Defines whether the VPC is the default one for its Project.
func (o GetVpcsVpcOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcsVpc) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The VPC name to filter for. VPCs with a similar name are listed.
func (o GetVpcsVpcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Name }).(pulumi.StringOutput)
}

// The Organization ID the VPC is associated with.
func (o GetVpcsVpcOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the Project the VPC is associated with.
func (o GetVpcsVpcOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ProjectId }).(pulumi.StringOutput)
}

// `region`). The region in which the VPCs exist.
func (o GetVpcsVpcOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Region }).(pulumi.StringOutput)
}

// List of tags to filter for. VPCs with these exact tags are listed.
func (o GetVpcsVpcOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetVpcsVpcOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpc {
		return vs[0].([]GetVpcsVpc)[vs[1].(int)]
	}).(GetVpcsVpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleInput)(nil)).Elem(), AclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleArrayInput)(nil)).Elem(), AclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkIpamConfigInput)(nil)).Elem(), GatewayNetworkIpamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkIpamConfigArrayInput)(nil)).Elem(), GatewayNetworkIpamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkPrivateIpInput)(nil)).Elem(), GatewayNetworkPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayNetworkPrivateIpArrayInput)(nil)).Elem(), GatewayNetworkPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkIpv4SubnetInput)(nil)).Elem(), PrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkIpv4SubnetPtrInput)(nil)).Elem(), PrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkIpv6SubnetInput)(nil)).Elem(), PrivateNetworkIpv6SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkIpv6SubnetArrayInput)(nil)).Elem(), PrivateNetworkIpv6SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayNetworkIpamConfigInput)(nil)).Elem(), GetGatewayNetworkIpamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayNetworkIpamConfigArrayInput)(nil)).Elem(), GetGatewayNetworkIpamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayNetworkPrivateIpInput)(nil)).Elem(), GetGatewayNetworkPrivateIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayNetworkPrivateIpArrayInput)(nil)).Elem(), GetGatewayNetworkPrivateIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkIpv4SubnetInput)(nil)).Elem(), GetPrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkIpv4SubnetArrayInput)(nil)).Elem(), GetPrivateNetworkIpv4SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkIpv6SubnetInput)(nil)).Elem(), GetPrivateNetworkIpv6SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkIpv6SubnetArrayInput)(nil)).Elem(), GetPrivateNetworkIpv6SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteInput)(nil)).Elem(), GetRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoutesRouteArrayInput)(nil)).Elem(), GetRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcInput)(nil)).Elem(), GetVpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcArrayInput)(nil)).Elem(), GetVpcsVpcArray{})
	pulumi.RegisterOutputType(AclRuleOutput{})
	pulumi.RegisterOutputType(AclRuleArrayOutput{})
	pulumi.RegisterOutputType(GatewayNetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(GatewayNetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(GatewayNetworkPrivateIpOutput{})
	pulumi.RegisterOutputType(GatewayNetworkPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(PrivateNetworkIpv4SubnetOutput{})
	pulumi.RegisterOutputType(PrivateNetworkIpv4SubnetPtrOutput{})
	pulumi.RegisterOutputType(PrivateNetworkIpv6SubnetOutput{})
	pulumi.RegisterOutputType(PrivateNetworkIpv6SubnetArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayNetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(GetGatewayNetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayNetworkPrivateIpOutput{})
	pulumi.RegisterOutputType(GetGatewayNetworkPrivateIpArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkIpv4SubnetOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkIpv4SubnetArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkIpv6SubnetOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkIpv6SubnetArrayOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcArrayOutput{})
}
