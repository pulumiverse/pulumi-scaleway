// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// The `ObjectBucket` resource allows you to create and manage buckets for [Scaleway Object storage](https://www.scaleway.com/en/docs/storage/object/).
//
// Refer to the [dedicated documentation](https://www.scaleway.com/en/docs/storage/object/how-to/create-a-bucket/) for more information on Object Storage buckets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewObjectBucket(ctx, "some_bucket", &scaleway.ObjectBucketArgs{
//				Name: pulumi.String("some-unique-name"),
//				Tags: pulumi.StringMap{
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Creating the bucket in a specific project
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewObjectBucket(ctx, "some_bucket", &scaleway.ObjectBucketArgs{
//				Name:      pulumi.String("some-unique-name"),
//				ProjectId: pulumi.String("11111111-1111-1111-1111-111111111111"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Using object lifecycle
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := scaleway.NewObjectBucket(ctx, "main", &scaleway.ObjectBucketArgs{
//				Name:   pulumi.String("mybuckectid"),
//				Region: pulumi.String("fr-par"),
//				LifecycleRules: scaleway.ObjectBucketLifecycleRuleArray{
//					&scaleway.ObjectBucketLifecycleRuleArgs{
//						Id:      pulumi.String("id1"),
//						Prefix:  pulumi.String("path1/"),
//						Enabled: pulumi.Bool(true),
//						Expiration: &scaleway.ObjectBucketLifecycleRuleExpirationArgs{
//							Days: pulumi.Int(365),
//						},
//						Transitions: scaleway.ObjectBucketLifecycleRuleTransitionArray{
//							&scaleway.ObjectBucketLifecycleRuleTransitionArgs{
//								Days:         pulumi.Int(120),
//								StorageClass: pulumi.String("GLACIER"),
//							},
//						},
//					},
//					&scaleway.ObjectBucketLifecycleRuleArgs{
//						Id:      pulumi.String("id2"),
//						Prefix:  pulumi.String("path2/"),
//						Enabled: pulumi.Bool(true),
//						Expiration: &scaleway.ObjectBucketLifecycleRuleExpirationArgs{
//							Days: pulumi.Int(50),
//						},
//					},
//					&scaleway.ObjectBucketLifecycleRuleArgs{
//						Id:      pulumi.String("id3"),
//						Prefix:  pulumi.String("path3/"),
//						Enabled: pulumi.Bool(false),
//						Tags: pulumi.StringMap{
//							"tagKey":    pulumi.String("tagValue"),
//							"terraform": pulumi.String("hashicorp"),
//						},
//						Expiration: &scaleway.ObjectBucketLifecycleRuleExpirationArgs{
//							Days: pulumi.Int(1),
//						},
//					},
//					&scaleway.ObjectBucketLifecycleRuleArgs{
//						Id:      pulumi.String("id4"),
//						Enabled: pulumi.Bool(true),
//						Tags: pulumi.StringMap{
//							"tag1": pulumi.String("value1"),
//						},
//						Transitions: scaleway.ObjectBucketLifecycleRuleTransitionArray{
//							&scaleway.ObjectBucketLifecycleRuleTransitionArgs{
//								Days:         pulumi.Int(1),
//								StorageClass: pulumi.String("GLACIER"),
//							},
//						},
//					},
//					&scaleway.ObjectBucketLifecycleRuleArgs{
//						Enabled:                            pulumi.Bool(true),
//						AbortIncompleteMultipartUploadDays: pulumi.Int(30),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Buckets can be imported using the `{region}/{bucketName}` identifier, as shown below:
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/objectBucket:ObjectBucket some_bucket fr-par/some-bucket
// ```
//
// ~> **Important:** The `project_id` attribute has a particular behavior with s3 products because the s3 API is scoped by project.
//
// If you are using a project different from the default one, you have to specify the project ID at the end of the import command.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/objectBucket:ObjectBucket some_bucket fr-par/some-bucket@11111111-1111-1111-1111-111111111111
// ```
type ObjectBucket struct {
	pulumi.CustomResourceState

	// (Deprecated) The canned ACL you want to apply to the bucket.
	//
	// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
	//
	// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
	Acl pulumi.StringPtrOutput `pulumi:"acl"`
	// API URL of the bucket
	ApiEndpoint pulumi.StringOutput             `pulumi:"apiEndpoint"`
	CorsRules   ObjectBucketCorsRuleArrayOutput `pulumi:"corsRules"`
	// The endpoint URL of the bucket.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayOutput `pulumi:"lifecycleRules"`
	// The name of the bucket.
	Name pulumi.StringOutput `pulumi:"name"`
	// Enable object lock
	ObjectLockEnabled pulumi.BoolPtrOutput `pulumi:"objectLockEnabled"`
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
	Region pulumi.StringOutput `pulumi:"region"`
	// A list of tags (key/value) for the bucket.
	//
	// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
	// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningOutput `pulumi:"versioning"`
}

// NewObjectBucket registers a new resource with the given unique name, arguments, and options.
func NewObjectBucket(ctx *pulumi.Context,
	name string, args *ObjectBucketArgs, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	if args == nil {
		args = &ObjectBucketArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectBucket
	err := ctx.RegisterResource("scaleway:index/objectBucket:ObjectBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectBucket gets an existing ObjectBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectBucketState, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	var resource ObjectBucket
	err := ctx.ReadResource("scaleway:index/objectBucket:ObjectBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectBucket resources.
type objectBucketState struct {
	// (Deprecated) The canned ACL you want to apply to the bucket.
	//
	// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
	//
	// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
	Acl *string `pulumi:"acl"`
	// API URL of the bucket
	ApiEndpoint *string                `pulumi:"apiEndpoint"`
	CorsRules   []ObjectBucketCorsRule `pulumi:"corsRules"`
	// The endpoint URL of the bucket.
	Endpoint *string `pulumi:"endpoint"`
	// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules []ObjectBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The name of the bucket.
	Name *string `pulumi:"name"`
	// Enable object lock
	ObjectLockEnabled *bool `pulumi:"objectLockEnabled"`
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
	Region *string `pulumi:"region"`
	// A list of tags (key/value) for the bucket.
	//
	// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
	// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
	Tags map[string]string `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning *ObjectBucketVersioning `pulumi:"versioning"`
}

type ObjectBucketState struct {
	// (Deprecated) The canned ACL you want to apply to the bucket.
	//
	// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
	//
	// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
	Acl pulumi.StringPtrInput
	// API URL of the bucket
	ApiEndpoint pulumi.StringPtrInput
	CorsRules   ObjectBucketCorsRuleArrayInput
	// The endpoint URL of the bucket.
	Endpoint pulumi.StringPtrInput
	// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
	ForceDestroy pulumi.BoolPtrInput
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayInput
	// The name of the bucket.
	Name pulumi.StringPtrInput
	// Enable object lock
	ObjectLockEnabled pulumi.BoolPtrInput
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId pulumi.StringPtrInput
	// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
	Region pulumi.StringPtrInput
	// A list of tags (key/value) for the bucket.
	//
	// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
	// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
	Tags pulumi.StringMapInput
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningPtrInput
}

func (ObjectBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketState)(nil)).Elem()
}

type objectBucketArgs struct {
	// (Deprecated) The canned ACL you want to apply to the bucket.
	//
	// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
	//
	// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
	Acl       *string                `pulumi:"acl"`
	CorsRules []ObjectBucketCorsRule `pulumi:"corsRules"`
	// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules []ObjectBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The name of the bucket.
	Name *string `pulumi:"name"`
	// Enable object lock
	ObjectLockEnabled *bool `pulumi:"objectLockEnabled"`
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
	Region *string `pulumi:"region"`
	// A list of tags (key/value) for the bucket.
	//
	// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
	// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
	Tags map[string]string `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning *ObjectBucketVersioning `pulumi:"versioning"`
}

// The set of arguments for constructing a ObjectBucket resource.
type ObjectBucketArgs struct {
	// (Deprecated) The canned ACL you want to apply to the bucket.
	//
	// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
	//
	// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
	Acl       pulumi.StringPtrInput
	CorsRules ObjectBucketCorsRuleArrayInput
	// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
	ForceDestroy pulumi.BoolPtrInput
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayInput
	// The name of the bucket.
	Name pulumi.StringPtrInput
	// Enable object lock
	ObjectLockEnabled pulumi.BoolPtrInput
	// `projectId`) The ID of the project the bucket is associated with.
	ProjectId pulumi.StringPtrInput
	// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
	Region pulumi.StringPtrInput
	// A list of tags (key/value) for the bucket.
	//
	// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
	// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
	Tags pulumi.StringMapInput
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningPtrInput
}

func (ObjectBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketArgs)(nil)).Elem()
}

type ObjectBucketInput interface {
	pulumi.Input

	ToObjectBucketOutput() ObjectBucketOutput
	ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput
}

func (*ObjectBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucket)(nil)).Elem()
}

func (i *ObjectBucket) ToObjectBucketOutput() ObjectBucketOutput {
	return i.ToObjectBucketOutputWithContext(context.Background())
}

func (i *ObjectBucket) ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketOutput)
}

// ObjectBucketArrayInput is an input type that accepts ObjectBucketArray and ObjectBucketArrayOutput values.
// You can construct a concrete instance of `ObjectBucketArrayInput` via:
//
//	ObjectBucketArray{ ObjectBucketArgs{...} }
type ObjectBucketArrayInput interface {
	pulumi.Input

	ToObjectBucketArrayOutput() ObjectBucketArrayOutput
	ToObjectBucketArrayOutputWithContext(context.Context) ObjectBucketArrayOutput
}

type ObjectBucketArray []ObjectBucketInput

func (ObjectBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectBucket)(nil)).Elem()
}

func (i ObjectBucketArray) ToObjectBucketArrayOutput() ObjectBucketArrayOutput {
	return i.ToObjectBucketArrayOutputWithContext(context.Background())
}

func (i ObjectBucketArray) ToObjectBucketArrayOutputWithContext(ctx context.Context) ObjectBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketArrayOutput)
}

// ObjectBucketMapInput is an input type that accepts ObjectBucketMap and ObjectBucketMapOutput values.
// You can construct a concrete instance of `ObjectBucketMapInput` via:
//
//	ObjectBucketMap{ "key": ObjectBucketArgs{...} }
type ObjectBucketMapInput interface {
	pulumi.Input

	ToObjectBucketMapOutput() ObjectBucketMapOutput
	ToObjectBucketMapOutputWithContext(context.Context) ObjectBucketMapOutput
}

type ObjectBucketMap map[string]ObjectBucketInput

func (ObjectBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectBucket)(nil)).Elem()
}

func (i ObjectBucketMap) ToObjectBucketMapOutput() ObjectBucketMapOutput {
	return i.ToObjectBucketMapOutputWithContext(context.Background())
}

func (i ObjectBucketMap) ToObjectBucketMapOutputWithContext(ctx context.Context) ObjectBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketMapOutput)
}

type ObjectBucketOutput struct{ *pulumi.OutputState }

func (ObjectBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucket)(nil)).Elem()
}

func (o ObjectBucketOutput) ToObjectBucketOutput() ObjectBucketOutput {
	return o
}

func (o ObjectBucketOutput) ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput {
	return o
}

// (Deprecated) The canned ACL you want to apply to the bucket.
//
// > **Note:** The `acl` attribute is deprecated. See ObjectBucketAcl resource documentation. Refer to the [official canned ACL documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl_overview.html#canned-acl) for more information on the different roles.
//
// Deprecated: ACL attribute is deprecated. Please use the resource ObjectBucketAcl instead.
func (o ObjectBucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

// API URL of the bucket
func (o ObjectBucketOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.ApiEndpoint }).(pulumi.StringOutput)
}

func (o ObjectBucketOutput) CorsRules() ObjectBucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketCorsRuleArrayOutput { return v.CorsRules }).(ObjectBucketCorsRuleArrayOutput)
}

// The endpoint URL of the bucket.
func (o ObjectBucketOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Enable deletion of objects in the bucket before destroying, locked objects or under legal hold are also deleted and **not** recoverable
func (o ObjectBucketOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
func (o ObjectBucketOutput) LifecycleRules() ObjectBucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(ObjectBucketLifecycleRuleArrayOutput)
}

// The name of the bucket.
func (o ObjectBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Enable object lock
func (o ObjectBucketOutput) ObjectLockEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.BoolPtrOutput { return v.ObjectLockEnabled }).(pulumi.BoolPtrOutput)
}

// `projectId`) The ID of the project the bucket is associated with.
func (o ObjectBucketOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The [region](https://www.scaleway.com/en/developers/api/#region-definition) in which the bucket will be created.
func (o ObjectBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// A list of tags (key/value) for the bucket.
//
// * > **Important:** The Scaleway console does not support `key/value` tags yet, so only the tags' values will be displayed.
// If you make any change to your bucket's tags using the console, it will overwrite them with the format `value/value`.
func (o ObjectBucketOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Allow multiple versions of an object in the same bucket
func (o ObjectBucketOutput) Versioning() ObjectBucketVersioningOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketVersioningOutput { return v.Versioning }).(ObjectBucketVersioningOutput)
}

type ObjectBucketArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectBucket)(nil)).Elem()
}

func (o ObjectBucketArrayOutput) ToObjectBucketArrayOutput() ObjectBucketArrayOutput {
	return o
}

func (o ObjectBucketArrayOutput) ToObjectBucketArrayOutputWithContext(ctx context.Context) ObjectBucketArrayOutput {
	return o
}

func (o ObjectBucketArrayOutput) Index(i pulumi.IntInput) ObjectBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectBucket {
		return vs[0].([]*ObjectBucket)[vs[1].(int)]
	}).(ObjectBucketOutput)
}

type ObjectBucketMapOutput struct{ *pulumi.OutputState }

func (ObjectBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectBucket)(nil)).Elem()
}

func (o ObjectBucketMapOutput) ToObjectBucketMapOutput() ObjectBucketMapOutput {
	return o
}

func (o ObjectBucketMapOutput) ToObjectBucketMapOutputWithContext(ctx context.Context) ObjectBucketMapOutput {
	return o
}

func (o ObjectBucketMapOutput) MapIndex(k pulumi.StringInput) ObjectBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectBucket {
		return vs[0].(map[string]*ObjectBucket)[vs[1].(string)]
	}).(ObjectBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketInput)(nil)).Elem(), &ObjectBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketArrayInput)(nil)).Elem(), ObjectBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketMapInput)(nil)).Elem(), ObjectBucketMap{})
	pulumi.RegisterOutputType(ObjectBucketOutput{})
	pulumi.RegisterOutputType(ObjectBucketArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketMapOutput{})
}
