// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type BaremetalServerIp struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The ID of the IPv6.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BaremetalServerIpInput is an input type that accepts BaremetalServerIpArgs and BaremetalServerIpOutput values.
// You can construct a concrete instance of `BaremetalServerIpInput` via:
//
//	BaremetalServerIpArgs{...}
type BaremetalServerIpInput interface {
	pulumi.Input

	ToBaremetalServerIpOutput() BaremetalServerIpOutput
	ToBaremetalServerIpOutputWithContext(context.Context) BaremetalServerIpOutput
}

type BaremetalServerIpArgs struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IPv6.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BaremetalServerIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIp)(nil)).Elem()
}

func (i BaremetalServerIpArgs) ToBaremetalServerIpOutput() BaremetalServerIpOutput {
	return i.ToBaremetalServerIpOutputWithContext(context.Background())
}

func (i BaremetalServerIpArgs) ToBaremetalServerIpOutputWithContext(ctx context.Context) BaremetalServerIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpOutput)
}

// BaremetalServerIpArrayInput is an input type that accepts BaremetalServerIpArray and BaremetalServerIpArrayOutput values.
// You can construct a concrete instance of `BaremetalServerIpArrayInput` via:
//
//	BaremetalServerIpArray{ BaremetalServerIpArgs{...} }
type BaremetalServerIpArrayInput interface {
	pulumi.Input

	ToBaremetalServerIpArrayOutput() BaremetalServerIpArrayOutput
	ToBaremetalServerIpArrayOutputWithContext(context.Context) BaremetalServerIpArrayOutput
}

type BaremetalServerIpArray []BaremetalServerIpInput

func (BaremetalServerIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIp)(nil)).Elem()
}

func (i BaremetalServerIpArray) ToBaremetalServerIpArrayOutput() BaremetalServerIpArrayOutput {
	return i.ToBaremetalServerIpArrayOutputWithContext(context.Background())
}

func (i BaremetalServerIpArray) ToBaremetalServerIpArrayOutputWithContext(ctx context.Context) BaremetalServerIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpArrayOutput)
}

type BaremetalServerIpOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIp)(nil)).Elem()
}

func (o BaremetalServerIpOutput) ToBaremetalServerIpOutput() BaremetalServerIpOutput {
	return o
}

func (o BaremetalServerIpOutput) ToBaremetalServerIpOutputWithContext(ctx context.Context) BaremetalServerIpOutput {
	return o
}

// The address of the IPv6.
func (o BaremetalServerIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IPv6.
func (o BaremetalServerIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BaremetalServerIpOutput) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BaremetalServerIpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BaremetalServerIpArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIp)(nil)).Elem()
}

func (o BaremetalServerIpArrayOutput) ToBaremetalServerIpArrayOutput() BaremetalServerIpArrayOutput {
	return o
}

func (o BaremetalServerIpArrayOutput) ToBaremetalServerIpArrayOutputWithContext(ctx context.Context) BaremetalServerIpArrayOutput {
	return o
}

func (o BaremetalServerIpArrayOutput) Index(i pulumi.IntInput) BaremetalServerIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerIp {
		return vs[0].([]BaremetalServerIp)[vs[1].(int)]
	}).(BaremetalServerIpOutput)
}

type BaremetalServerIpv4 struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The ID of the IPv6.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BaremetalServerIpv4Input is an input type that accepts BaremetalServerIpv4Args and BaremetalServerIpv4Output values.
// You can construct a concrete instance of `BaremetalServerIpv4Input` via:
//
//	BaremetalServerIpv4Args{...}
type BaremetalServerIpv4Input interface {
	pulumi.Input

	ToBaremetalServerIpv4Output() BaremetalServerIpv4Output
	ToBaremetalServerIpv4OutputWithContext(context.Context) BaremetalServerIpv4Output
}

type BaremetalServerIpv4Args struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IPv6.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BaremetalServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIpv4)(nil)).Elem()
}

func (i BaremetalServerIpv4Args) ToBaremetalServerIpv4Output() BaremetalServerIpv4Output {
	return i.ToBaremetalServerIpv4OutputWithContext(context.Background())
}

func (i BaremetalServerIpv4Args) ToBaremetalServerIpv4OutputWithContext(ctx context.Context) BaremetalServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpv4Output)
}

// BaremetalServerIpv4ArrayInput is an input type that accepts BaremetalServerIpv4Array and BaremetalServerIpv4ArrayOutput values.
// You can construct a concrete instance of `BaremetalServerIpv4ArrayInput` via:
//
//	BaremetalServerIpv4Array{ BaremetalServerIpv4Args{...} }
type BaremetalServerIpv4ArrayInput interface {
	pulumi.Input

	ToBaremetalServerIpv4ArrayOutput() BaremetalServerIpv4ArrayOutput
	ToBaremetalServerIpv4ArrayOutputWithContext(context.Context) BaremetalServerIpv4ArrayOutput
}

type BaremetalServerIpv4Array []BaremetalServerIpv4Input

func (BaremetalServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIpv4)(nil)).Elem()
}

func (i BaremetalServerIpv4Array) ToBaremetalServerIpv4ArrayOutput() BaremetalServerIpv4ArrayOutput {
	return i.ToBaremetalServerIpv4ArrayOutputWithContext(context.Background())
}

func (i BaremetalServerIpv4Array) ToBaremetalServerIpv4ArrayOutputWithContext(ctx context.Context) BaremetalServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpv4ArrayOutput)
}

type BaremetalServerIpv4Output struct{ *pulumi.OutputState }

func (BaremetalServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIpv4)(nil)).Elem()
}

func (o BaremetalServerIpv4Output) ToBaremetalServerIpv4Output() BaremetalServerIpv4Output {
	return o
}

func (o BaremetalServerIpv4Output) ToBaremetalServerIpv4OutputWithContext(ctx context.Context) BaremetalServerIpv4Output {
	return o
}

// The address of the IPv6.
func (o BaremetalServerIpv4Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv4) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IPv6.
func (o BaremetalServerIpv4Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv4) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BaremetalServerIpv4Output) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv4) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BaremetalServerIpv4Output) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv4) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BaremetalServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIpv4)(nil)).Elem()
}

func (o BaremetalServerIpv4ArrayOutput) ToBaremetalServerIpv4ArrayOutput() BaremetalServerIpv4ArrayOutput {
	return o
}

func (o BaremetalServerIpv4ArrayOutput) ToBaremetalServerIpv4ArrayOutputWithContext(ctx context.Context) BaremetalServerIpv4ArrayOutput {
	return o
}

func (o BaremetalServerIpv4ArrayOutput) Index(i pulumi.IntInput) BaremetalServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerIpv4 {
		return vs[0].([]BaremetalServerIpv4)[vs[1].(int)]
	}).(BaremetalServerIpv4Output)
}

type BaremetalServerIpv6 struct {
	// The address of the IPv6.
	Address *string `pulumi:"address"`
	// The ID of the IPv6.
	Id *string `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse *string `pulumi:"reverse"`
	// The type of the IPv6.
	Version *string `pulumi:"version"`
}

// BaremetalServerIpv6Input is an input type that accepts BaremetalServerIpv6Args and BaremetalServerIpv6Output values.
// You can construct a concrete instance of `BaremetalServerIpv6Input` via:
//
//	BaremetalServerIpv6Args{...}
type BaremetalServerIpv6Input interface {
	pulumi.Input

	ToBaremetalServerIpv6Output() BaremetalServerIpv6Output
	ToBaremetalServerIpv6OutputWithContext(context.Context) BaremetalServerIpv6Output
}

type BaremetalServerIpv6Args struct {
	// The address of the IPv6.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IPv6.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reverse of the IPv6.
	Reverse pulumi.StringPtrInput `pulumi:"reverse"`
	// The type of the IPv6.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (BaremetalServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIpv6)(nil)).Elem()
}

func (i BaremetalServerIpv6Args) ToBaremetalServerIpv6Output() BaremetalServerIpv6Output {
	return i.ToBaremetalServerIpv6OutputWithContext(context.Background())
}

func (i BaremetalServerIpv6Args) ToBaremetalServerIpv6OutputWithContext(ctx context.Context) BaremetalServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpv6Output)
}

// BaremetalServerIpv6ArrayInput is an input type that accepts BaremetalServerIpv6Array and BaremetalServerIpv6ArrayOutput values.
// You can construct a concrete instance of `BaremetalServerIpv6ArrayInput` via:
//
//	BaremetalServerIpv6Array{ BaremetalServerIpv6Args{...} }
type BaremetalServerIpv6ArrayInput interface {
	pulumi.Input

	ToBaremetalServerIpv6ArrayOutput() BaremetalServerIpv6ArrayOutput
	ToBaremetalServerIpv6ArrayOutputWithContext(context.Context) BaremetalServerIpv6ArrayOutput
}

type BaremetalServerIpv6Array []BaremetalServerIpv6Input

func (BaremetalServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIpv6)(nil)).Elem()
}

func (i BaremetalServerIpv6Array) ToBaremetalServerIpv6ArrayOutput() BaremetalServerIpv6ArrayOutput {
	return i.ToBaremetalServerIpv6ArrayOutputWithContext(context.Background())
}

func (i BaremetalServerIpv6Array) ToBaremetalServerIpv6ArrayOutputWithContext(ctx context.Context) BaremetalServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerIpv6ArrayOutput)
}

type BaremetalServerIpv6Output struct{ *pulumi.OutputState }

func (BaremetalServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIpv6)(nil)).Elem()
}

func (o BaremetalServerIpv6Output) ToBaremetalServerIpv6Output() BaremetalServerIpv6Output {
	return o
}

func (o BaremetalServerIpv6Output) ToBaremetalServerIpv6OutputWithContext(ctx context.Context) BaremetalServerIpv6Output {
	return o
}

// The address of the IPv6.
func (o BaremetalServerIpv6Output) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv6) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IPv6.
func (o BaremetalServerIpv6Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv6) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IPv6.
func (o BaremetalServerIpv6Output) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv6) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

// The type of the IPv6.
func (o BaremetalServerIpv6Output) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIpv6) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BaremetalServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIpv6)(nil)).Elem()
}

func (o BaremetalServerIpv6ArrayOutput) ToBaremetalServerIpv6ArrayOutput() BaremetalServerIpv6ArrayOutput {
	return o
}

func (o BaremetalServerIpv6ArrayOutput) ToBaremetalServerIpv6ArrayOutputWithContext(ctx context.Context) BaremetalServerIpv6ArrayOutput {
	return o
}

func (o BaremetalServerIpv6ArrayOutput) Index(i pulumi.IntInput) BaremetalServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerIpv6 {
		return vs[0].([]BaremetalServerIpv6)[vs[1].(int)]
	}).(BaremetalServerIpv6Output)
}

type BaremetalServerOption struct {
	// The auto expiration date for compatible options
	ExpiresAt *string `pulumi:"expiresAt"`
	// The id of the option to enable. Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-012dcc) to find the available options IDs.
	Id string `pulumi:"id"`
	// The name of the server.
	Name *string `pulumi:"name"`
}

// BaremetalServerOptionInput is an input type that accepts BaremetalServerOptionArgs and BaremetalServerOptionOutput values.
// You can construct a concrete instance of `BaremetalServerOptionInput` via:
//
//	BaremetalServerOptionArgs{...}
type BaremetalServerOptionInput interface {
	pulumi.Input

	ToBaremetalServerOptionOutput() BaremetalServerOptionOutput
	ToBaremetalServerOptionOutputWithContext(context.Context) BaremetalServerOptionOutput
}

type BaremetalServerOptionArgs struct {
	// The auto expiration date for compatible options
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The id of the option to enable. Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-012dcc) to find the available options IDs.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the server.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BaremetalServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerOption)(nil)).Elem()
}

func (i BaremetalServerOptionArgs) ToBaremetalServerOptionOutput() BaremetalServerOptionOutput {
	return i.ToBaremetalServerOptionOutputWithContext(context.Background())
}

func (i BaremetalServerOptionArgs) ToBaremetalServerOptionOutputWithContext(ctx context.Context) BaremetalServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerOptionOutput)
}

// BaremetalServerOptionArrayInput is an input type that accepts BaremetalServerOptionArray and BaremetalServerOptionArrayOutput values.
// You can construct a concrete instance of `BaremetalServerOptionArrayInput` via:
//
//	BaremetalServerOptionArray{ BaremetalServerOptionArgs{...} }
type BaremetalServerOptionArrayInput interface {
	pulumi.Input

	ToBaremetalServerOptionArrayOutput() BaremetalServerOptionArrayOutput
	ToBaremetalServerOptionArrayOutputWithContext(context.Context) BaremetalServerOptionArrayOutput
}

type BaremetalServerOptionArray []BaremetalServerOptionInput

func (BaremetalServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerOption)(nil)).Elem()
}

func (i BaremetalServerOptionArray) ToBaremetalServerOptionArrayOutput() BaremetalServerOptionArrayOutput {
	return i.ToBaremetalServerOptionArrayOutputWithContext(context.Background())
}

func (i BaremetalServerOptionArray) ToBaremetalServerOptionArrayOutputWithContext(ctx context.Context) BaremetalServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerOptionArrayOutput)
}

type BaremetalServerOptionOutput struct{ *pulumi.OutputState }

func (BaremetalServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerOption)(nil)).Elem()
}

func (o BaremetalServerOptionOutput) ToBaremetalServerOptionOutput() BaremetalServerOptionOutput {
	return o
}

func (o BaremetalServerOptionOutput) ToBaremetalServerOptionOutputWithContext(ctx context.Context) BaremetalServerOptionOutput {
	return o
}

// The auto expiration date for compatible options
func (o BaremetalServerOptionOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerOption) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The id of the option to enable. Use [this endpoint](https://developers.scaleway.com/en/products/baremetal/api/#get-012dcc) to find the available options IDs.
func (o BaremetalServerOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BaremetalServerOption) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the server.
func (o BaremetalServerOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BaremetalServerOptionArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerOption)(nil)).Elem()
}

func (o BaremetalServerOptionArrayOutput) ToBaremetalServerOptionArrayOutput() BaremetalServerOptionArrayOutput {
	return o
}

func (o BaremetalServerOptionArrayOutput) ToBaremetalServerOptionArrayOutputWithContext(ctx context.Context) BaremetalServerOptionArrayOutput {
	return o
}

func (o BaremetalServerOptionArrayOutput) Index(i pulumi.IntInput) BaremetalServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerOption {
		return vs[0].([]BaremetalServerOption)[vs[1].(int)]
	}).(BaremetalServerOptionOutput)
}

type BaremetalServerPrivateNetwork struct {
	// The date and time of the creation of the private network.
	CreatedAt *string `pulumi:"createdAt"`
	// The id of the private network to attach.
	Id string `pulumi:"id"`
	// The private network status.
	Status *string `pulumi:"status"`
	// The date and time of the last update of the private network.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network.
	Vlan *int `pulumi:"vlan"`
}

// BaremetalServerPrivateNetworkInput is an input type that accepts BaremetalServerPrivateNetworkArgs and BaremetalServerPrivateNetworkOutput values.
// You can construct a concrete instance of `BaremetalServerPrivateNetworkInput` via:
//
//	BaremetalServerPrivateNetworkArgs{...}
type BaremetalServerPrivateNetworkInput interface {
	pulumi.Input

	ToBaremetalServerPrivateNetworkOutput() BaremetalServerPrivateNetworkOutput
	ToBaremetalServerPrivateNetworkOutputWithContext(context.Context) BaremetalServerPrivateNetworkOutput
}

type BaremetalServerPrivateNetworkArgs struct {
	// The date and time of the creation of the private network.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The id of the private network to attach.
	Id pulumi.StringInput `pulumi:"id"`
	// The private network status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The date and time of the last update of the private network.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network.
	Vlan pulumi.IntPtrInput `pulumi:"vlan"`
}

func (BaremetalServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerPrivateNetwork)(nil)).Elem()
}

func (i BaremetalServerPrivateNetworkArgs) ToBaremetalServerPrivateNetworkOutput() BaremetalServerPrivateNetworkOutput {
	return i.ToBaremetalServerPrivateNetworkOutputWithContext(context.Background())
}

func (i BaremetalServerPrivateNetworkArgs) ToBaremetalServerPrivateNetworkOutputWithContext(ctx context.Context) BaremetalServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerPrivateNetworkOutput)
}

// BaremetalServerPrivateNetworkArrayInput is an input type that accepts BaremetalServerPrivateNetworkArray and BaremetalServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `BaremetalServerPrivateNetworkArrayInput` via:
//
//	BaremetalServerPrivateNetworkArray{ BaremetalServerPrivateNetworkArgs{...} }
type BaremetalServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToBaremetalServerPrivateNetworkArrayOutput() BaremetalServerPrivateNetworkArrayOutput
	ToBaremetalServerPrivateNetworkArrayOutputWithContext(context.Context) BaremetalServerPrivateNetworkArrayOutput
}

type BaremetalServerPrivateNetworkArray []BaremetalServerPrivateNetworkInput

func (BaremetalServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerPrivateNetwork)(nil)).Elem()
}

func (i BaremetalServerPrivateNetworkArray) ToBaremetalServerPrivateNetworkArrayOutput() BaremetalServerPrivateNetworkArrayOutput {
	return i.ToBaremetalServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i BaremetalServerPrivateNetworkArray) ToBaremetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) BaremetalServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerPrivateNetworkArrayOutput)
}

type BaremetalServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (BaremetalServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerPrivateNetwork)(nil)).Elem()
}

func (o BaremetalServerPrivateNetworkOutput) ToBaremetalServerPrivateNetworkOutput() BaremetalServerPrivateNetworkOutput {
	return o
}

func (o BaremetalServerPrivateNetworkOutput) ToBaremetalServerPrivateNetworkOutputWithContext(ctx context.Context) BaremetalServerPrivateNetworkOutput {
	return o
}

// The date and time of the creation of the private network.
func (o BaremetalServerPrivateNetworkOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerPrivateNetwork) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The id of the private network to attach.
func (o BaremetalServerPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BaremetalServerPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The private network status.
func (o BaremetalServerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the private network.
func (o BaremetalServerPrivateNetworkOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerPrivateNetwork) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The VLAN ID associated to the private network.
func (o BaremetalServerPrivateNetworkOutput) Vlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BaremetalServerPrivateNetwork) *int { return v.Vlan }).(pulumi.IntPtrOutput)
}

type BaremetalServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerPrivateNetwork)(nil)).Elem()
}

func (o BaremetalServerPrivateNetworkArrayOutput) ToBaremetalServerPrivateNetworkArrayOutput() BaremetalServerPrivateNetworkArrayOutput {
	return o
}

func (o BaremetalServerPrivateNetworkArrayOutput) ToBaremetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) BaremetalServerPrivateNetworkArrayOutput {
	return o
}

func (o BaremetalServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) BaremetalServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerPrivateNetwork {
		return vs[0].([]BaremetalServerPrivateNetwork)[vs[1].(int)]
	}).(BaremetalServerPrivateNetworkOutput)
}

type CockpitEndpoint struct {
	// The alertmanager URL.
	AlertmanagerUrl *string `pulumi:"alertmanagerUrl"`
	// The grafana URL.
	GrafanaUrl *string `pulumi:"grafanaUrl"`
	// The logs URL.
	LogsUrl *string `pulumi:"logsUrl"`
	// The metrics URL.
	MetricsUrl *string `pulumi:"metricsUrl"`
	// The traces URL.
	TracesUrl *string `pulumi:"tracesUrl"`
}

// CockpitEndpointInput is an input type that accepts CockpitEndpointArgs and CockpitEndpointOutput values.
// You can construct a concrete instance of `CockpitEndpointInput` via:
//
//	CockpitEndpointArgs{...}
type CockpitEndpointInput interface {
	pulumi.Input

	ToCockpitEndpointOutput() CockpitEndpointOutput
	ToCockpitEndpointOutputWithContext(context.Context) CockpitEndpointOutput
}

type CockpitEndpointArgs struct {
	// The alertmanager URL.
	AlertmanagerUrl pulumi.StringPtrInput `pulumi:"alertmanagerUrl"`
	// The grafana URL.
	GrafanaUrl pulumi.StringPtrInput `pulumi:"grafanaUrl"`
	// The logs URL.
	LogsUrl pulumi.StringPtrInput `pulumi:"logsUrl"`
	// The metrics URL.
	MetricsUrl pulumi.StringPtrInput `pulumi:"metricsUrl"`
	// The traces URL.
	TracesUrl pulumi.StringPtrInput `pulumi:"tracesUrl"`
}

func (CockpitEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitEndpoint)(nil)).Elem()
}

func (i CockpitEndpointArgs) ToCockpitEndpointOutput() CockpitEndpointOutput {
	return i.ToCockpitEndpointOutputWithContext(context.Background())
}

func (i CockpitEndpointArgs) ToCockpitEndpointOutputWithContext(ctx context.Context) CockpitEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitEndpointOutput)
}

// CockpitEndpointArrayInput is an input type that accepts CockpitEndpointArray and CockpitEndpointArrayOutput values.
// You can construct a concrete instance of `CockpitEndpointArrayInput` via:
//
//	CockpitEndpointArray{ CockpitEndpointArgs{...} }
type CockpitEndpointArrayInput interface {
	pulumi.Input

	ToCockpitEndpointArrayOutput() CockpitEndpointArrayOutput
	ToCockpitEndpointArrayOutputWithContext(context.Context) CockpitEndpointArrayOutput
}

type CockpitEndpointArray []CockpitEndpointInput

func (CockpitEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CockpitEndpoint)(nil)).Elem()
}

func (i CockpitEndpointArray) ToCockpitEndpointArrayOutput() CockpitEndpointArrayOutput {
	return i.ToCockpitEndpointArrayOutputWithContext(context.Background())
}

func (i CockpitEndpointArray) ToCockpitEndpointArrayOutputWithContext(ctx context.Context) CockpitEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitEndpointArrayOutput)
}

type CockpitEndpointOutput struct{ *pulumi.OutputState }

func (CockpitEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitEndpoint)(nil)).Elem()
}

func (o CockpitEndpointOutput) ToCockpitEndpointOutput() CockpitEndpointOutput {
	return o
}

func (o CockpitEndpointOutput) ToCockpitEndpointOutputWithContext(ctx context.Context) CockpitEndpointOutput {
	return o
}

// The alertmanager URL.
func (o CockpitEndpointOutput) AlertmanagerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitEndpoint) *string { return v.AlertmanagerUrl }).(pulumi.StringPtrOutput)
}

// The grafana URL.
func (o CockpitEndpointOutput) GrafanaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitEndpoint) *string { return v.GrafanaUrl }).(pulumi.StringPtrOutput)
}

// The logs URL.
func (o CockpitEndpointOutput) LogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitEndpoint) *string { return v.LogsUrl }).(pulumi.StringPtrOutput)
}

// The metrics URL.
func (o CockpitEndpointOutput) MetricsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitEndpoint) *string { return v.MetricsUrl }).(pulumi.StringPtrOutput)
}

// The traces URL.
func (o CockpitEndpointOutput) TracesUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitEndpoint) *string { return v.TracesUrl }).(pulumi.StringPtrOutput)
}

type CockpitEndpointArrayOutput struct{ *pulumi.OutputState }

func (CockpitEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CockpitEndpoint)(nil)).Elem()
}

func (o CockpitEndpointArrayOutput) ToCockpitEndpointArrayOutput() CockpitEndpointArrayOutput {
	return o
}

func (o CockpitEndpointArrayOutput) ToCockpitEndpointArrayOutputWithContext(ctx context.Context) CockpitEndpointArrayOutput {
	return o
}

func (o CockpitEndpointArrayOutput) Index(i pulumi.IntInput) CockpitEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CockpitEndpoint {
		return vs[0].([]CockpitEndpoint)[vs[1].(int)]
	}).(CockpitEndpointOutput)
}

type CockpitPushUrl struct {
	// Push URL for logs (Grafana Loki)
	PushLogsUrl *string `pulumi:"pushLogsUrl"`
	// Push URL for metrics (Grafana Mimir)
	PushMetricsUrl *string `pulumi:"pushMetricsUrl"`
}

// CockpitPushUrlInput is an input type that accepts CockpitPushUrlArgs and CockpitPushUrlOutput values.
// You can construct a concrete instance of `CockpitPushUrlInput` via:
//
//	CockpitPushUrlArgs{...}
type CockpitPushUrlInput interface {
	pulumi.Input

	ToCockpitPushUrlOutput() CockpitPushUrlOutput
	ToCockpitPushUrlOutputWithContext(context.Context) CockpitPushUrlOutput
}

type CockpitPushUrlArgs struct {
	// Push URL for logs (Grafana Loki)
	PushLogsUrl pulumi.StringPtrInput `pulumi:"pushLogsUrl"`
	// Push URL for metrics (Grafana Mimir)
	PushMetricsUrl pulumi.StringPtrInput `pulumi:"pushMetricsUrl"`
}

func (CockpitPushUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitPushUrl)(nil)).Elem()
}

func (i CockpitPushUrlArgs) ToCockpitPushUrlOutput() CockpitPushUrlOutput {
	return i.ToCockpitPushUrlOutputWithContext(context.Background())
}

func (i CockpitPushUrlArgs) ToCockpitPushUrlOutputWithContext(ctx context.Context) CockpitPushUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitPushUrlOutput)
}

// CockpitPushUrlArrayInput is an input type that accepts CockpitPushUrlArray and CockpitPushUrlArrayOutput values.
// You can construct a concrete instance of `CockpitPushUrlArrayInput` via:
//
//	CockpitPushUrlArray{ CockpitPushUrlArgs{...} }
type CockpitPushUrlArrayInput interface {
	pulumi.Input

	ToCockpitPushUrlArrayOutput() CockpitPushUrlArrayOutput
	ToCockpitPushUrlArrayOutputWithContext(context.Context) CockpitPushUrlArrayOutput
}

type CockpitPushUrlArray []CockpitPushUrlInput

func (CockpitPushUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CockpitPushUrl)(nil)).Elem()
}

func (i CockpitPushUrlArray) ToCockpitPushUrlArrayOutput() CockpitPushUrlArrayOutput {
	return i.ToCockpitPushUrlArrayOutputWithContext(context.Background())
}

func (i CockpitPushUrlArray) ToCockpitPushUrlArrayOutputWithContext(ctx context.Context) CockpitPushUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitPushUrlArrayOutput)
}

type CockpitPushUrlOutput struct{ *pulumi.OutputState }

func (CockpitPushUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitPushUrl)(nil)).Elem()
}

func (o CockpitPushUrlOutput) ToCockpitPushUrlOutput() CockpitPushUrlOutput {
	return o
}

func (o CockpitPushUrlOutput) ToCockpitPushUrlOutputWithContext(ctx context.Context) CockpitPushUrlOutput {
	return o
}

// Push URL for logs (Grafana Loki)
func (o CockpitPushUrlOutput) PushLogsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitPushUrl) *string { return v.PushLogsUrl }).(pulumi.StringPtrOutput)
}

// Push URL for metrics (Grafana Mimir)
func (o CockpitPushUrlOutput) PushMetricsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CockpitPushUrl) *string { return v.PushMetricsUrl }).(pulumi.StringPtrOutput)
}

type CockpitPushUrlArrayOutput struct{ *pulumi.OutputState }

func (CockpitPushUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CockpitPushUrl)(nil)).Elem()
}

func (o CockpitPushUrlArrayOutput) ToCockpitPushUrlArrayOutput() CockpitPushUrlArrayOutput {
	return o
}

func (o CockpitPushUrlArrayOutput) ToCockpitPushUrlArrayOutputWithContext(ctx context.Context) CockpitPushUrlArrayOutput {
	return o
}

func (o CockpitPushUrlArrayOutput) Index(i pulumi.IntInput) CockpitPushUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CockpitPushUrl {
		return vs[0].([]CockpitPushUrl)[vs[1].(int)]
	}).(CockpitPushUrlOutput)
}

type CockpitTokenScopes struct {
	// Query logs.
	QueryLogs *bool `pulumi:"queryLogs"`
	// Query metrics.
	QueryMetrics *bool `pulumi:"queryMetrics"`
	// Query traces.
	QueryTraces *bool `pulumi:"queryTraces"`
	// Setup alerts.
	SetupAlerts *bool `pulumi:"setupAlerts"`
	// Setup logs rules.
	SetupLogsRules *bool `pulumi:"setupLogsRules"`
	// Setup metrics rules.
	SetupMetricsRules *bool `pulumi:"setupMetricsRules"`
	// Write logs.
	WriteLogs *bool `pulumi:"writeLogs"`
	// Write metrics.
	WriteMetrics *bool `pulumi:"writeMetrics"`
	// Write traces.
	WriteTraces *bool `pulumi:"writeTraces"`
}

// CockpitTokenScopesInput is an input type that accepts CockpitTokenScopesArgs and CockpitTokenScopesOutput values.
// You can construct a concrete instance of `CockpitTokenScopesInput` via:
//
//	CockpitTokenScopesArgs{...}
type CockpitTokenScopesInput interface {
	pulumi.Input

	ToCockpitTokenScopesOutput() CockpitTokenScopesOutput
	ToCockpitTokenScopesOutputWithContext(context.Context) CockpitTokenScopesOutput
}

type CockpitTokenScopesArgs struct {
	// Query logs.
	QueryLogs pulumi.BoolPtrInput `pulumi:"queryLogs"`
	// Query metrics.
	QueryMetrics pulumi.BoolPtrInput `pulumi:"queryMetrics"`
	// Query traces.
	QueryTraces pulumi.BoolPtrInput `pulumi:"queryTraces"`
	// Setup alerts.
	SetupAlerts pulumi.BoolPtrInput `pulumi:"setupAlerts"`
	// Setup logs rules.
	SetupLogsRules pulumi.BoolPtrInput `pulumi:"setupLogsRules"`
	// Setup metrics rules.
	SetupMetricsRules pulumi.BoolPtrInput `pulumi:"setupMetricsRules"`
	// Write logs.
	WriteLogs pulumi.BoolPtrInput `pulumi:"writeLogs"`
	// Write metrics.
	WriteMetrics pulumi.BoolPtrInput `pulumi:"writeMetrics"`
	// Write traces.
	WriteTraces pulumi.BoolPtrInput `pulumi:"writeTraces"`
}

func (CockpitTokenScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitTokenScopes)(nil)).Elem()
}

func (i CockpitTokenScopesArgs) ToCockpitTokenScopesOutput() CockpitTokenScopesOutput {
	return i.ToCockpitTokenScopesOutputWithContext(context.Background())
}

func (i CockpitTokenScopesArgs) ToCockpitTokenScopesOutputWithContext(ctx context.Context) CockpitTokenScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitTokenScopesOutput)
}

func (i CockpitTokenScopesArgs) ToCockpitTokenScopesPtrOutput() CockpitTokenScopesPtrOutput {
	return i.ToCockpitTokenScopesPtrOutputWithContext(context.Background())
}

func (i CockpitTokenScopesArgs) ToCockpitTokenScopesPtrOutputWithContext(ctx context.Context) CockpitTokenScopesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitTokenScopesOutput).ToCockpitTokenScopesPtrOutputWithContext(ctx)
}

// CockpitTokenScopesPtrInput is an input type that accepts CockpitTokenScopesArgs, CockpitTokenScopesPtr and CockpitTokenScopesPtrOutput values.
// You can construct a concrete instance of `CockpitTokenScopesPtrInput` via:
//
//	        CockpitTokenScopesArgs{...}
//
//	or:
//
//	        nil
type CockpitTokenScopesPtrInput interface {
	pulumi.Input

	ToCockpitTokenScopesPtrOutput() CockpitTokenScopesPtrOutput
	ToCockpitTokenScopesPtrOutputWithContext(context.Context) CockpitTokenScopesPtrOutput
}

type cockpitTokenScopesPtrType CockpitTokenScopesArgs

func CockpitTokenScopesPtr(v *CockpitTokenScopesArgs) CockpitTokenScopesPtrInput {
	return (*cockpitTokenScopesPtrType)(v)
}

func (*cockpitTokenScopesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CockpitTokenScopes)(nil)).Elem()
}

func (i *cockpitTokenScopesPtrType) ToCockpitTokenScopesPtrOutput() CockpitTokenScopesPtrOutput {
	return i.ToCockpitTokenScopesPtrOutputWithContext(context.Background())
}

func (i *cockpitTokenScopesPtrType) ToCockpitTokenScopesPtrOutputWithContext(ctx context.Context) CockpitTokenScopesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CockpitTokenScopesPtrOutput)
}

type CockpitTokenScopesOutput struct{ *pulumi.OutputState }

func (CockpitTokenScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CockpitTokenScopes)(nil)).Elem()
}

func (o CockpitTokenScopesOutput) ToCockpitTokenScopesOutput() CockpitTokenScopesOutput {
	return o
}

func (o CockpitTokenScopesOutput) ToCockpitTokenScopesOutputWithContext(ctx context.Context) CockpitTokenScopesOutput {
	return o
}

func (o CockpitTokenScopesOutput) ToCockpitTokenScopesPtrOutput() CockpitTokenScopesPtrOutput {
	return o.ToCockpitTokenScopesPtrOutputWithContext(context.Background())
}

func (o CockpitTokenScopesOutput) ToCockpitTokenScopesPtrOutputWithContext(ctx context.Context) CockpitTokenScopesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CockpitTokenScopes) *CockpitTokenScopes {
		return &v
	}).(CockpitTokenScopesPtrOutput)
}

// Query logs.
func (o CockpitTokenScopesOutput) QueryLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.QueryLogs }).(pulumi.BoolPtrOutput)
}

// Query metrics.
func (o CockpitTokenScopesOutput) QueryMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.QueryMetrics }).(pulumi.BoolPtrOutput)
}

// Query traces.
func (o CockpitTokenScopesOutput) QueryTraces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.QueryTraces }).(pulumi.BoolPtrOutput)
}

// Setup alerts.
func (o CockpitTokenScopesOutput) SetupAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.SetupAlerts }).(pulumi.BoolPtrOutput)
}

// Setup logs rules.
func (o CockpitTokenScopesOutput) SetupLogsRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.SetupLogsRules }).(pulumi.BoolPtrOutput)
}

// Setup metrics rules.
func (o CockpitTokenScopesOutput) SetupMetricsRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.SetupMetricsRules }).(pulumi.BoolPtrOutput)
}

// Write logs.
func (o CockpitTokenScopesOutput) WriteLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.WriteLogs }).(pulumi.BoolPtrOutput)
}

// Write metrics.
func (o CockpitTokenScopesOutput) WriteMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.WriteMetrics }).(pulumi.BoolPtrOutput)
}

// Write traces.
func (o CockpitTokenScopesOutput) WriteTraces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CockpitTokenScopes) *bool { return v.WriteTraces }).(pulumi.BoolPtrOutput)
}

type CockpitTokenScopesPtrOutput struct{ *pulumi.OutputState }

func (CockpitTokenScopesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CockpitTokenScopes)(nil)).Elem()
}

func (o CockpitTokenScopesPtrOutput) ToCockpitTokenScopesPtrOutput() CockpitTokenScopesPtrOutput {
	return o
}

func (o CockpitTokenScopesPtrOutput) ToCockpitTokenScopesPtrOutputWithContext(ctx context.Context) CockpitTokenScopesPtrOutput {
	return o
}

func (o CockpitTokenScopesPtrOutput) Elem() CockpitTokenScopesOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) CockpitTokenScopes {
		if v != nil {
			return *v
		}
		var ret CockpitTokenScopes
		return ret
	}).(CockpitTokenScopesOutput)
}

// Query logs.
func (o CockpitTokenScopesPtrOutput) QueryLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.QueryLogs
	}).(pulumi.BoolPtrOutput)
}

// Query metrics.
func (o CockpitTokenScopesPtrOutput) QueryMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.QueryMetrics
	}).(pulumi.BoolPtrOutput)
}

// Query traces.
func (o CockpitTokenScopesPtrOutput) QueryTraces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.QueryTraces
	}).(pulumi.BoolPtrOutput)
}

// Setup alerts.
func (o CockpitTokenScopesPtrOutput) SetupAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.SetupAlerts
	}).(pulumi.BoolPtrOutput)
}

// Setup logs rules.
func (o CockpitTokenScopesPtrOutput) SetupLogsRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.SetupLogsRules
	}).(pulumi.BoolPtrOutput)
}

// Setup metrics rules.
func (o CockpitTokenScopesPtrOutput) SetupMetricsRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.SetupMetricsRules
	}).(pulumi.BoolPtrOutput)
}

// Write logs.
func (o CockpitTokenScopesPtrOutput) WriteLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.WriteLogs
	}).(pulumi.BoolPtrOutput)
}

// Write metrics.
func (o CockpitTokenScopesPtrOutput) WriteMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.WriteMetrics
	}).(pulumi.BoolPtrOutput)
}

// Write traces.
func (o CockpitTokenScopesPtrOutput) WriteTraces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CockpitTokenScopes) *bool {
		if v == nil {
			return nil
		}
		return v.WriteTraces
	}).(pulumi.BoolPtrOutput)
}

type ContainerTriggerNats struct {
	// ID of the mnq nats account.
	AccountId *string `pulumi:"accountId"`
	// ID of the project that contain the mnq nats account, defaults to provider's project
	ProjectId *string `pulumi:"projectId"`
	// Region where the mnq nats account is, defaults to provider's region
	Region *string `pulumi:"region"`
	// The subject to listen to
	Subject string `pulumi:"subject"`
}

// ContainerTriggerNatsInput is an input type that accepts ContainerTriggerNatsArgs and ContainerTriggerNatsOutput values.
// You can construct a concrete instance of `ContainerTriggerNatsInput` via:
//
//	ContainerTriggerNatsArgs{...}
type ContainerTriggerNatsInput interface {
	pulumi.Input

	ToContainerTriggerNatsOutput() ContainerTriggerNatsOutput
	ToContainerTriggerNatsOutputWithContext(context.Context) ContainerTriggerNatsOutput
}

type ContainerTriggerNatsArgs struct {
	// ID of the mnq nats account.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// ID of the project that contain the mnq nats account, defaults to provider's project
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Region where the mnq nats account is, defaults to provider's region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The subject to listen to
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ContainerTriggerNatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerTriggerNats)(nil)).Elem()
}

func (i ContainerTriggerNatsArgs) ToContainerTriggerNatsOutput() ContainerTriggerNatsOutput {
	return i.ToContainerTriggerNatsOutputWithContext(context.Background())
}

func (i ContainerTriggerNatsArgs) ToContainerTriggerNatsOutputWithContext(ctx context.Context) ContainerTriggerNatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerNatsOutput)
}

func (i ContainerTriggerNatsArgs) ToContainerTriggerNatsPtrOutput() ContainerTriggerNatsPtrOutput {
	return i.ToContainerTriggerNatsPtrOutputWithContext(context.Background())
}

func (i ContainerTriggerNatsArgs) ToContainerTriggerNatsPtrOutputWithContext(ctx context.Context) ContainerTriggerNatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerNatsOutput).ToContainerTriggerNatsPtrOutputWithContext(ctx)
}

// ContainerTriggerNatsPtrInput is an input type that accepts ContainerTriggerNatsArgs, ContainerTriggerNatsPtr and ContainerTriggerNatsPtrOutput values.
// You can construct a concrete instance of `ContainerTriggerNatsPtrInput` via:
//
//	        ContainerTriggerNatsArgs{...}
//
//	or:
//
//	        nil
type ContainerTriggerNatsPtrInput interface {
	pulumi.Input

	ToContainerTriggerNatsPtrOutput() ContainerTriggerNatsPtrOutput
	ToContainerTriggerNatsPtrOutputWithContext(context.Context) ContainerTriggerNatsPtrOutput
}

type containerTriggerNatsPtrType ContainerTriggerNatsArgs

func ContainerTriggerNatsPtr(v *ContainerTriggerNatsArgs) ContainerTriggerNatsPtrInput {
	return (*containerTriggerNatsPtrType)(v)
}

func (*containerTriggerNatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerTriggerNats)(nil)).Elem()
}

func (i *containerTriggerNatsPtrType) ToContainerTriggerNatsPtrOutput() ContainerTriggerNatsPtrOutput {
	return i.ToContainerTriggerNatsPtrOutputWithContext(context.Background())
}

func (i *containerTriggerNatsPtrType) ToContainerTriggerNatsPtrOutputWithContext(ctx context.Context) ContainerTriggerNatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerNatsPtrOutput)
}

type ContainerTriggerNatsOutput struct{ *pulumi.OutputState }

func (ContainerTriggerNatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerTriggerNats)(nil)).Elem()
}

func (o ContainerTriggerNatsOutput) ToContainerTriggerNatsOutput() ContainerTriggerNatsOutput {
	return o
}

func (o ContainerTriggerNatsOutput) ToContainerTriggerNatsOutputWithContext(ctx context.Context) ContainerTriggerNatsOutput {
	return o
}

func (o ContainerTriggerNatsOutput) ToContainerTriggerNatsPtrOutput() ContainerTriggerNatsPtrOutput {
	return o.ToContainerTriggerNatsPtrOutputWithContext(context.Background())
}

func (o ContainerTriggerNatsOutput) ToContainerTriggerNatsPtrOutputWithContext(ctx context.Context) ContainerTriggerNatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerTriggerNats) *ContainerTriggerNats {
		return &v
	}).(ContainerTriggerNatsPtrOutput)
}

// ID of the mnq nats account.
func (o ContainerTriggerNatsOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerNats) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq nats account, defaults to provider's project
func (o ContainerTriggerNatsOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerNats) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Region where the mnq nats account is, defaults to provider's region
func (o ContainerTriggerNatsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerNats) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The subject to listen to
func (o ContainerTriggerNatsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerTriggerNats) string { return v.Subject }).(pulumi.StringOutput)
}

type ContainerTriggerNatsPtrOutput struct{ *pulumi.OutputState }

func (ContainerTriggerNatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerTriggerNats)(nil)).Elem()
}

func (o ContainerTriggerNatsPtrOutput) ToContainerTriggerNatsPtrOutput() ContainerTriggerNatsPtrOutput {
	return o
}

func (o ContainerTriggerNatsPtrOutput) ToContainerTriggerNatsPtrOutputWithContext(ctx context.Context) ContainerTriggerNatsPtrOutput {
	return o
}

func (o ContainerTriggerNatsPtrOutput) Elem() ContainerTriggerNatsOutput {
	return o.ApplyT(func(v *ContainerTriggerNats) ContainerTriggerNats {
		if v != nil {
			return *v
		}
		var ret ContainerTriggerNats
		return ret
	}).(ContainerTriggerNatsOutput)
}

// ID of the mnq nats account.
func (o ContainerTriggerNatsPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.AccountId
	}).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq nats account, defaults to provider's project
func (o ContainerTriggerNatsPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Region where the mnq nats account is, defaults to provider's region
func (o ContainerTriggerNatsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The subject to listen to
func (o ContainerTriggerNatsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerNats) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

type ContainerTriggerSqs struct {
	// ID of the mnq namespace. Deprecated.
	NamespaceId *string `pulumi:"namespaceId"`
	// ID of the project where sqs is enabled, defaults to provider's project
	ProjectId *string `pulumi:"projectId"`
	// Name of the queue
	Queue string `pulumi:"queue"`
	// Region where sqs is enabled, defaults to provider's region
	Region *string `pulumi:"region"`
}

// ContainerTriggerSqsInput is an input type that accepts ContainerTriggerSqsArgs and ContainerTriggerSqsOutput values.
// You can construct a concrete instance of `ContainerTriggerSqsInput` via:
//
//	ContainerTriggerSqsArgs{...}
type ContainerTriggerSqsInput interface {
	pulumi.Input

	ToContainerTriggerSqsOutput() ContainerTriggerSqsOutput
	ToContainerTriggerSqsOutputWithContext(context.Context) ContainerTriggerSqsOutput
}

type ContainerTriggerSqsArgs struct {
	// ID of the mnq namespace. Deprecated.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// ID of the project where sqs is enabled, defaults to provider's project
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Name of the queue
	Queue pulumi.StringInput `pulumi:"queue"`
	// Region where sqs is enabled, defaults to provider's region
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (ContainerTriggerSqsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerTriggerSqs)(nil)).Elem()
}

func (i ContainerTriggerSqsArgs) ToContainerTriggerSqsOutput() ContainerTriggerSqsOutput {
	return i.ToContainerTriggerSqsOutputWithContext(context.Background())
}

func (i ContainerTriggerSqsArgs) ToContainerTriggerSqsOutputWithContext(ctx context.Context) ContainerTriggerSqsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerSqsOutput)
}

func (i ContainerTriggerSqsArgs) ToContainerTriggerSqsPtrOutput() ContainerTriggerSqsPtrOutput {
	return i.ToContainerTriggerSqsPtrOutputWithContext(context.Background())
}

func (i ContainerTriggerSqsArgs) ToContainerTriggerSqsPtrOutputWithContext(ctx context.Context) ContainerTriggerSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerSqsOutput).ToContainerTriggerSqsPtrOutputWithContext(ctx)
}

// ContainerTriggerSqsPtrInput is an input type that accepts ContainerTriggerSqsArgs, ContainerTriggerSqsPtr and ContainerTriggerSqsPtrOutput values.
// You can construct a concrete instance of `ContainerTriggerSqsPtrInput` via:
//
//	        ContainerTriggerSqsArgs{...}
//
//	or:
//
//	        nil
type ContainerTriggerSqsPtrInput interface {
	pulumi.Input

	ToContainerTriggerSqsPtrOutput() ContainerTriggerSqsPtrOutput
	ToContainerTriggerSqsPtrOutputWithContext(context.Context) ContainerTriggerSqsPtrOutput
}

type containerTriggerSqsPtrType ContainerTriggerSqsArgs

func ContainerTriggerSqsPtr(v *ContainerTriggerSqsArgs) ContainerTriggerSqsPtrInput {
	return (*containerTriggerSqsPtrType)(v)
}

func (*containerTriggerSqsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerTriggerSqs)(nil)).Elem()
}

func (i *containerTriggerSqsPtrType) ToContainerTriggerSqsPtrOutput() ContainerTriggerSqsPtrOutput {
	return i.ToContainerTriggerSqsPtrOutputWithContext(context.Background())
}

func (i *containerTriggerSqsPtrType) ToContainerTriggerSqsPtrOutputWithContext(ctx context.Context) ContainerTriggerSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTriggerSqsPtrOutput)
}

type ContainerTriggerSqsOutput struct{ *pulumi.OutputState }

func (ContainerTriggerSqsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerTriggerSqs)(nil)).Elem()
}

func (o ContainerTriggerSqsOutput) ToContainerTriggerSqsOutput() ContainerTriggerSqsOutput {
	return o
}

func (o ContainerTriggerSqsOutput) ToContainerTriggerSqsOutputWithContext(ctx context.Context) ContainerTriggerSqsOutput {
	return o
}

func (o ContainerTriggerSqsOutput) ToContainerTriggerSqsPtrOutput() ContainerTriggerSqsPtrOutput {
	return o.ToContainerTriggerSqsPtrOutputWithContext(context.Background())
}

func (o ContainerTriggerSqsOutput) ToContainerTriggerSqsPtrOutputWithContext(ctx context.Context) ContainerTriggerSqsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerTriggerSqs) *ContainerTriggerSqs {
		return &v
	}).(ContainerTriggerSqsPtrOutput)
}

// ID of the mnq namespace. Deprecated.
func (o ContainerTriggerSqsOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerSqs) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

// ID of the project where sqs is enabled, defaults to provider's project
func (o ContainerTriggerSqsOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerSqs) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Name of the queue
func (o ContainerTriggerSqsOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerTriggerSqs) string { return v.Queue }).(pulumi.StringOutput)
}

// Region where sqs is enabled, defaults to provider's region
func (o ContainerTriggerSqsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerTriggerSqs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ContainerTriggerSqsPtrOutput struct{ *pulumi.OutputState }

func (ContainerTriggerSqsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerTriggerSqs)(nil)).Elem()
}

func (o ContainerTriggerSqsPtrOutput) ToContainerTriggerSqsPtrOutput() ContainerTriggerSqsPtrOutput {
	return o
}

func (o ContainerTriggerSqsPtrOutput) ToContainerTriggerSqsPtrOutputWithContext(ctx context.Context) ContainerTriggerSqsPtrOutput {
	return o
}

func (o ContainerTriggerSqsPtrOutput) Elem() ContainerTriggerSqsOutput {
	return o.ApplyT(func(v *ContainerTriggerSqs) ContainerTriggerSqs {
		if v != nil {
			return *v
		}
		var ret ContainerTriggerSqs
		return ret
	}).(ContainerTriggerSqsOutput)
}

// ID of the mnq namespace. Deprecated.
func (o ContainerTriggerSqsPtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

// ID of the project where sqs is enabled, defaults to provider's project
func (o ContainerTriggerSqsPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the queue
func (o ContainerTriggerSqsPtrOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(pulumi.StringPtrOutput)
}

// Region where sqs is enabled, defaults to provider's region
func (o ContainerTriggerSqsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type DatabaseAclAclRule struct {
	// A text describing this rule. Default description: `IP allowed`
	Description *string `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip string `pulumi:"ip"`
}

// DatabaseAclAclRuleInput is an input type that accepts DatabaseAclAclRuleArgs and DatabaseAclAclRuleOutput values.
// You can construct a concrete instance of `DatabaseAclAclRuleInput` via:
//
//	DatabaseAclAclRuleArgs{...}
type DatabaseAclAclRuleInput interface {
	pulumi.Input

	ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput
	ToDatabaseAclAclRuleOutputWithContext(context.Context) DatabaseAclAclRuleOutput
}

type DatabaseAclAclRuleArgs struct {
	// A text describing this rule. Default description: `IP allowed`
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (DatabaseAclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAclAclRule)(nil)).Elem()
}

func (i DatabaseAclAclRuleArgs) ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput {
	return i.ToDatabaseAclAclRuleOutputWithContext(context.Background())
}

func (i DatabaseAclAclRuleArgs) ToDatabaseAclAclRuleOutputWithContext(ctx context.Context) DatabaseAclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAclAclRuleOutput)
}

// DatabaseAclAclRuleArrayInput is an input type that accepts DatabaseAclAclRuleArray and DatabaseAclAclRuleArrayOutput values.
// You can construct a concrete instance of `DatabaseAclAclRuleArrayInput` via:
//
//	DatabaseAclAclRuleArray{ DatabaseAclAclRuleArgs{...} }
type DatabaseAclAclRuleArrayInput interface {
	pulumi.Input

	ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput
	ToDatabaseAclAclRuleArrayOutputWithContext(context.Context) DatabaseAclAclRuleArrayOutput
}

type DatabaseAclAclRuleArray []DatabaseAclAclRuleInput

func (DatabaseAclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAclAclRule)(nil)).Elem()
}

func (i DatabaseAclAclRuleArray) ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput {
	return i.ToDatabaseAclAclRuleArrayOutputWithContext(context.Background())
}

func (i DatabaseAclAclRuleArray) ToDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) DatabaseAclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAclAclRuleArrayOutput)
}

type DatabaseAclAclRuleOutput struct{ *pulumi.OutputState }

func (DatabaseAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAclAclRule)(nil)).Elem()
}

func (o DatabaseAclAclRuleOutput) ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput {
	return o
}

func (o DatabaseAclAclRuleOutput) ToDatabaseAclAclRuleOutputWithContext(ctx context.Context) DatabaseAclAclRuleOutput {
	return o
}

// A text describing this rule. Default description: `IP allowed`
func (o DatabaseAclAclRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseAclAclRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
func (o DatabaseAclAclRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAclAclRule) string { return v.Ip }).(pulumi.StringOutput)
}

type DatabaseAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAclAclRule)(nil)).Elem()
}

func (o DatabaseAclAclRuleArrayOutput) ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput {
	return o
}

func (o DatabaseAclAclRuleArrayOutput) ToDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) DatabaseAclAclRuleArrayOutput {
	return o
}

func (o DatabaseAclAclRuleArrayOutput) Index(i pulumi.IntInput) DatabaseAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAclAclRule {
		return vs[0].([]DatabaseAclAclRule)[vs[1].(int)]
	}).(DatabaseAclAclRuleOutput)
}

type DatabaseInstanceLoadBalancer struct {
	// The ID of the endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address on the network.
	Ip *string `pulumi:"ip"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// Port in the Private Network.
	Port *int `pulumi:"port"`
}

// DatabaseInstanceLoadBalancerInput is an input type that accepts DatabaseInstanceLoadBalancerArgs and DatabaseInstanceLoadBalancerOutput values.
// You can construct a concrete instance of `DatabaseInstanceLoadBalancerInput` via:
//
//	DatabaseInstanceLoadBalancerArgs{...}
type DatabaseInstanceLoadBalancerInput interface {
	pulumi.Input

	ToDatabaseInstanceLoadBalancerOutput() DatabaseInstanceLoadBalancerOutput
	ToDatabaseInstanceLoadBalancerOutputWithContext(context.Context) DatabaseInstanceLoadBalancerOutput
}

type DatabaseInstanceLoadBalancerArgs struct {
	// The ID of the endpoint.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address on the network.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The name of the Database Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port in the Private Network.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (DatabaseInstanceLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (i DatabaseInstanceLoadBalancerArgs) ToDatabaseInstanceLoadBalancerOutput() DatabaseInstanceLoadBalancerOutput {
	return i.ToDatabaseInstanceLoadBalancerOutputWithContext(context.Background())
}

func (i DatabaseInstanceLoadBalancerArgs) ToDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceLoadBalancerOutput)
}

// DatabaseInstanceLoadBalancerArrayInput is an input type that accepts DatabaseInstanceLoadBalancerArray and DatabaseInstanceLoadBalancerArrayOutput values.
// You can construct a concrete instance of `DatabaseInstanceLoadBalancerArrayInput` via:
//
//	DatabaseInstanceLoadBalancerArray{ DatabaseInstanceLoadBalancerArgs{...} }
type DatabaseInstanceLoadBalancerArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceLoadBalancerArrayOutput() DatabaseInstanceLoadBalancerArrayOutput
	ToDatabaseInstanceLoadBalancerArrayOutputWithContext(context.Context) DatabaseInstanceLoadBalancerArrayOutput
}

type DatabaseInstanceLoadBalancerArray []DatabaseInstanceLoadBalancerInput

func (DatabaseInstanceLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (i DatabaseInstanceLoadBalancerArray) ToDatabaseInstanceLoadBalancerArrayOutput() DatabaseInstanceLoadBalancerArrayOutput {
	return i.ToDatabaseInstanceLoadBalancerArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceLoadBalancerArray) ToDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceLoadBalancerArrayOutput)
}

type DatabaseInstanceLoadBalancerOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o DatabaseInstanceLoadBalancerOutput) ToDatabaseInstanceLoadBalancerOutput() DatabaseInstanceLoadBalancerOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerOutput) ToDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerOutput {
	return o
}

// The ID of the endpoint.
func (o DatabaseInstanceLoadBalancerOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint.
func (o DatabaseInstanceLoadBalancerOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address on the network.
func (o DatabaseInstanceLoadBalancerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstanceLoadBalancerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port in the Private Network.
func (o DatabaseInstanceLoadBalancerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o DatabaseInstanceLoadBalancerArrayOutput) ToDatabaseInstanceLoadBalancerArrayOutput() DatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerArrayOutput) ToDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceLoadBalancer {
		return vs[0].([]DatabaseInstanceLoadBalancer)[vs[1].(int)]
	}).(DatabaseInstanceLoadBalancerOutput)
}

type DatabaseInstancePrivateNetwork struct {
	// Whether or not the private network endpoint should be configured with IPAM
	EnableIpam *bool `pulumi:"enableIpam"`
	// The ID of the endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address on the network.
	Ip *string `pulumi:"ip"`
	// The IP with the given mask within the private subnet
	IpNet *string `pulumi:"ipNet"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// The private network ID
	PnId string `pulumi:"pnId"`
	// Port in the Private Network.
	Port *int `pulumi:"port"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// DatabaseInstancePrivateNetworkInput is an input type that accepts DatabaseInstancePrivateNetworkArgs and DatabaseInstancePrivateNetworkOutput values.
// You can construct a concrete instance of `DatabaseInstancePrivateNetworkInput` via:
//
//	DatabaseInstancePrivateNetworkArgs{...}
type DatabaseInstancePrivateNetworkInput interface {
	pulumi.Input

	ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput
	ToDatabaseInstancePrivateNetworkOutputWithContext(context.Context) DatabaseInstancePrivateNetworkOutput
}

type DatabaseInstancePrivateNetworkArgs struct {
	// Whether or not the private network endpoint should be configured with IPAM
	EnableIpam pulumi.BoolPtrInput `pulumi:"enableIpam"`
	// The ID of the endpoint.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address on the network.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The IP with the given mask within the private subnet
	IpNet pulumi.StringPtrInput `pulumi:"ipNet"`
	// The name of the Database Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private network ID
	PnId pulumi.StringInput `pulumi:"pnId"`
	// Port in the Private Network.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstancePrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput {
	return i.ToDatabaseInstancePrivateNetworkOutputWithContext(context.Background())
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkOutput)
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return i.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkOutput).ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx)
}

// DatabaseInstancePrivateNetworkPtrInput is an input type that accepts DatabaseInstancePrivateNetworkArgs, DatabaseInstancePrivateNetworkPtr and DatabaseInstancePrivateNetworkPtrOutput values.
// You can construct a concrete instance of `DatabaseInstancePrivateNetworkPtrInput` via:
//
//	        DatabaseInstancePrivateNetworkArgs{...}
//
//	or:
//
//	        nil
type DatabaseInstancePrivateNetworkPtrInput interface {
	pulumi.Input

	ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput
	ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Context) DatabaseInstancePrivateNetworkPtrOutput
}

type databaseInstancePrivateNetworkPtrType DatabaseInstancePrivateNetworkArgs

func DatabaseInstancePrivateNetworkPtr(v *DatabaseInstancePrivateNetworkArgs) DatabaseInstancePrivateNetworkPtrInput {
	return (*databaseInstancePrivateNetworkPtrType)(v)
}

func (*databaseInstancePrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i *databaseInstancePrivateNetworkPtrType) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return i.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *databaseInstancePrivateNetworkPtrType) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkPtrOutput)
}

type DatabaseInstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseInstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return o.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseInstancePrivateNetwork) *DatabaseInstancePrivateNetwork {
		return &v
	}).(DatabaseInstancePrivateNetworkPtrOutput)
}

// Whether or not the private network endpoint should be configured with IPAM
func (o DatabaseInstancePrivateNetworkOutput) EnableIpam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *bool { return v.EnableIpam }).(pulumi.BoolPtrOutput)
}

// The ID of the endpoint.
func (o DatabaseInstancePrivateNetworkOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint.
func (o DatabaseInstancePrivateNetworkOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address on the network.
func (o DatabaseInstancePrivateNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The IP with the given mask within the private subnet
func (o DatabaseInstancePrivateNetworkOutput) IpNet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.IpNet }).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstancePrivateNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private network ID
func (o DatabaseInstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// Port in the Private Network.
func (o DatabaseInstancePrivateNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The zone you want to attach the resource to
func (o DatabaseInstancePrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstancePrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstancePrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o DatabaseInstancePrivateNetworkPtrOutput) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkPtrOutput) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkPtrOutput) Elem() DatabaseInstancePrivateNetworkOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) DatabaseInstancePrivateNetwork {
		if v != nil {
			return *v
		}
		var ret DatabaseInstancePrivateNetwork
		return ret
	}).(DatabaseInstancePrivateNetworkOutput)
}

// Whether or not the private network endpoint should be configured with IPAM
func (o DatabaseInstancePrivateNetworkPtrOutput) EnableIpam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpam
	}).(pulumi.BoolPtrOutput)
}

// The ID of the endpoint.
func (o DatabaseInstancePrivateNetworkPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint.
func (o DatabaseInstancePrivateNetworkPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IPv4 address on the network.
func (o DatabaseInstancePrivateNetworkPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// The IP with the given mask within the private subnet
func (o DatabaseInstancePrivateNetworkPtrOutput) IpNet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.IpNet
	}).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstancePrivateNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private network ID
func (o DatabaseInstancePrivateNetworkPtrOutput) PnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.PnId
	}).(pulumi.StringPtrOutput)
}

// Port in the Private Network.
func (o DatabaseInstancePrivateNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The zone you want to attach the resource to
func (o DatabaseInstancePrivateNetworkPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DatabaseInstanceReadReplica struct {
	// IPv4 address on the network.
	Ip *string `pulumi:"ip"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// Port in the Private Network.
	Port *int `pulumi:"port"`
}

// DatabaseInstanceReadReplicaInput is an input type that accepts DatabaseInstanceReadReplicaArgs and DatabaseInstanceReadReplicaOutput values.
// You can construct a concrete instance of `DatabaseInstanceReadReplicaInput` via:
//
//	DatabaseInstanceReadReplicaArgs{...}
type DatabaseInstanceReadReplicaInput interface {
	pulumi.Input

	ToDatabaseInstanceReadReplicaOutput() DatabaseInstanceReadReplicaOutput
	ToDatabaseInstanceReadReplicaOutputWithContext(context.Context) DatabaseInstanceReadReplicaOutput
}

type DatabaseInstanceReadReplicaArgs struct {
	// IPv4 address on the network.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The name of the Database Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port in the Private Network.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (DatabaseInstanceReadReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReadReplica)(nil)).Elem()
}

func (i DatabaseInstanceReadReplicaArgs) ToDatabaseInstanceReadReplicaOutput() DatabaseInstanceReadReplicaOutput {
	return i.ToDatabaseInstanceReadReplicaOutputWithContext(context.Background())
}

func (i DatabaseInstanceReadReplicaArgs) ToDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReadReplicaOutput)
}

// DatabaseInstanceReadReplicaArrayInput is an input type that accepts DatabaseInstanceReadReplicaArray and DatabaseInstanceReadReplicaArrayOutput values.
// You can construct a concrete instance of `DatabaseInstanceReadReplicaArrayInput` via:
//
//	DatabaseInstanceReadReplicaArray{ DatabaseInstanceReadReplicaArgs{...} }
type DatabaseInstanceReadReplicaArrayInput interface {
	pulumi.Input

	ToDatabaseInstanceReadReplicaArrayOutput() DatabaseInstanceReadReplicaArrayOutput
	ToDatabaseInstanceReadReplicaArrayOutputWithContext(context.Context) DatabaseInstanceReadReplicaArrayOutput
}

type DatabaseInstanceReadReplicaArray []DatabaseInstanceReadReplicaInput

func (DatabaseInstanceReadReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceReadReplica)(nil)).Elem()
}

func (i DatabaseInstanceReadReplicaArray) ToDatabaseInstanceReadReplicaArrayOutput() DatabaseInstanceReadReplicaArrayOutput {
	return i.ToDatabaseInstanceReadReplicaArrayOutputWithContext(context.Background())
}

func (i DatabaseInstanceReadReplicaArray) ToDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstanceReadReplicaArrayOutput)
}

type DatabaseInstanceReadReplicaOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReadReplica)(nil)).Elem()
}

func (o DatabaseInstanceReadReplicaOutput) ToDatabaseInstanceReadReplicaOutput() DatabaseInstanceReadReplicaOutput {
	return o
}

func (o DatabaseInstanceReadReplicaOutput) ToDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaOutput {
	return o
}

// IPv4 address on the network.
func (o DatabaseInstanceReadReplicaOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstanceReadReplicaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port in the Private Network.
func (o DatabaseInstanceReadReplicaOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceReadReplica)(nil)).Elem()
}

func (o DatabaseInstanceReadReplicaArrayOutput) ToDatabaseInstanceReadReplicaArrayOutput() DatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o DatabaseInstanceReadReplicaArrayOutput) ToDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o DatabaseInstanceReadReplicaArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceReadReplica {
		return vs[0].([]DatabaseInstanceReadReplica)[vs[1].(int)]
	}).(DatabaseInstanceReadReplicaOutput)
}

type DatabaseReadReplicaDirectAccess struct {
	// The ID of the endpoint of the read replica.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip *string `pulumi:"ip"`
	// Name of the endpoint.
	Name *string `pulumi:"name"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
}

// DatabaseReadReplicaDirectAccessInput is an input type that accepts DatabaseReadReplicaDirectAccessArgs and DatabaseReadReplicaDirectAccessOutput values.
// You can construct a concrete instance of `DatabaseReadReplicaDirectAccessInput` via:
//
//	DatabaseReadReplicaDirectAccessArgs{...}
type DatabaseReadReplicaDirectAccessInput interface {
	pulumi.Input

	ToDatabaseReadReplicaDirectAccessOutput() DatabaseReadReplicaDirectAccessOutput
	ToDatabaseReadReplicaDirectAccessOutputWithContext(context.Context) DatabaseReadReplicaDirectAccessOutput
}

type DatabaseReadReplicaDirectAccessArgs struct {
	// The ID of the endpoint of the read replica.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Name of the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (DatabaseReadReplicaDirectAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaDirectAccess)(nil)).Elem()
}

func (i DatabaseReadReplicaDirectAccessArgs) ToDatabaseReadReplicaDirectAccessOutput() DatabaseReadReplicaDirectAccessOutput {
	return i.ToDatabaseReadReplicaDirectAccessOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaDirectAccessArgs) ToDatabaseReadReplicaDirectAccessOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaDirectAccessOutput)
}

func (i DatabaseReadReplicaDirectAccessArgs) ToDatabaseReadReplicaDirectAccessPtrOutput() DatabaseReadReplicaDirectAccessPtrOutput {
	return i.ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaDirectAccessArgs) ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaDirectAccessOutput).ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(ctx)
}

// DatabaseReadReplicaDirectAccessPtrInput is an input type that accepts DatabaseReadReplicaDirectAccessArgs, DatabaseReadReplicaDirectAccessPtr and DatabaseReadReplicaDirectAccessPtrOutput values.
// You can construct a concrete instance of `DatabaseReadReplicaDirectAccessPtrInput` via:
//
//	        DatabaseReadReplicaDirectAccessArgs{...}
//
//	or:
//
//	        nil
type DatabaseReadReplicaDirectAccessPtrInput interface {
	pulumi.Input

	ToDatabaseReadReplicaDirectAccessPtrOutput() DatabaseReadReplicaDirectAccessPtrOutput
	ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(context.Context) DatabaseReadReplicaDirectAccessPtrOutput
}

type databaseReadReplicaDirectAccessPtrType DatabaseReadReplicaDirectAccessArgs

func DatabaseReadReplicaDirectAccessPtr(v *DatabaseReadReplicaDirectAccessArgs) DatabaseReadReplicaDirectAccessPtrInput {
	return (*databaseReadReplicaDirectAccessPtrType)(v)
}

func (*databaseReadReplicaDirectAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaDirectAccess)(nil)).Elem()
}

func (i *databaseReadReplicaDirectAccessPtrType) ToDatabaseReadReplicaDirectAccessPtrOutput() DatabaseReadReplicaDirectAccessPtrOutput {
	return i.ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (i *databaseReadReplicaDirectAccessPtrType) ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaDirectAccessPtrOutput)
}

type DatabaseReadReplicaDirectAccessOutput struct{ *pulumi.OutputState }

func (DatabaseReadReplicaDirectAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaDirectAccess)(nil)).Elem()
}

func (o DatabaseReadReplicaDirectAccessOutput) ToDatabaseReadReplicaDirectAccessOutput() DatabaseReadReplicaDirectAccessOutput {
	return o
}

func (o DatabaseReadReplicaDirectAccessOutput) ToDatabaseReadReplicaDirectAccessOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessOutput {
	return o
}

func (o DatabaseReadReplicaDirectAccessOutput) ToDatabaseReadReplicaDirectAccessPtrOutput() DatabaseReadReplicaDirectAccessPtrOutput {
	return o.ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (o DatabaseReadReplicaDirectAccessOutput) ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseReadReplicaDirectAccess) *DatabaseReadReplicaDirectAccess {
		return &v
	}).(DatabaseReadReplicaDirectAccessPtrOutput)
}

// The ID of the endpoint of the read replica.
func (o DatabaseReadReplicaDirectAccessOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaDirectAccess) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DatabaseReadReplicaDirectAccessOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaDirectAccess) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DatabaseReadReplicaDirectAccessOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaDirectAccess) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseReadReplicaDirectAccessOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaDirectAccess) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DatabaseReadReplicaDirectAccessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaDirectAccess) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DatabaseReadReplicaDirectAccessPtrOutput struct{ *pulumi.OutputState }

func (DatabaseReadReplicaDirectAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaDirectAccess)(nil)).Elem()
}

func (o DatabaseReadReplicaDirectAccessPtrOutput) ToDatabaseReadReplicaDirectAccessPtrOutput() DatabaseReadReplicaDirectAccessPtrOutput {
	return o
}

func (o DatabaseReadReplicaDirectAccessPtrOutput) ToDatabaseReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaDirectAccessPtrOutput {
	return o
}

func (o DatabaseReadReplicaDirectAccessPtrOutput) Elem() DatabaseReadReplicaDirectAccessOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) DatabaseReadReplicaDirectAccess {
		if v != nil {
			return *v
		}
		var ret DatabaseReadReplicaDirectAccess
		return ret
	}).(DatabaseReadReplicaDirectAccessOutput)
}

// The ID of the endpoint of the read replica.
func (o DatabaseReadReplicaDirectAccessPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DatabaseReadReplicaDirectAccessPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DatabaseReadReplicaDirectAccessPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseReadReplicaDirectAccessPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DatabaseReadReplicaDirectAccessPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaDirectAccess) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type DatabaseReadReplicaPrivateNetwork struct {
	// If true, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	EnableIpam *bool `pulumi:"enableIpam"`
	// The ID of the endpoint of the read replica.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip *string `pulumi:"ip"`
	// Name of the endpoint.
	Name *string `pulumi:"name"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
	// UUID of the private network to be connected to the read replica.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// The IP network address within the private subnet. This must be an IPv4 address with a CIDR notation. If not set, The IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	ServiceIp *string `pulumi:"serviceIp"`
	// Private network zone
	Zone *string `pulumi:"zone"`
}

// DatabaseReadReplicaPrivateNetworkInput is an input type that accepts DatabaseReadReplicaPrivateNetworkArgs and DatabaseReadReplicaPrivateNetworkOutput values.
// You can construct a concrete instance of `DatabaseReadReplicaPrivateNetworkInput` via:
//
//	DatabaseReadReplicaPrivateNetworkArgs{...}
type DatabaseReadReplicaPrivateNetworkInput interface {
	pulumi.Input

	ToDatabaseReadReplicaPrivateNetworkOutput() DatabaseReadReplicaPrivateNetworkOutput
	ToDatabaseReadReplicaPrivateNetworkOutputWithContext(context.Context) DatabaseReadReplicaPrivateNetworkOutput
}

type DatabaseReadReplicaPrivateNetworkArgs struct {
	// If true, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	EnableIpam pulumi.BoolPtrInput `pulumi:"enableIpam"`
	// The ID of the endpoint of the read replica.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Name of the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// UUID of the private network to be connected to the read replica.
	PrivateNetworkId pulumi.StringInput `pulumi:"privateNetworkId"`
	// The IP network address within the private subnet. This must be an IPv4 address with a CIDR notation. If not set, The IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	ServiceIp pulumi.StringPtrInput `pulumi:"serviceIp"`
	// Private network zone
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseReadReplicaPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaPrivateNetwork)(nil)).Elem()
}

func (i DatabaseReadReplicaPrivateNetworkArgs) ToDatabaseReadReplicaPrivateNetworkOutput() DatabaseReadReplicaPrivateNetworkOutput {
	return i.ToDatabaseReadReplicaPrivateNetworkOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaPrivateNetworkArgs) ToDatabaseReadReplicaPrivateNetworkOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaPrivateNetworkOutput)
}

func (i DatabaseReadReplicaPrivateNetworkArgs) ToDatabaseReadReplicaPrivateNetworkPtrOutput() DatabaseReadReplicaPrivateNetworkPtrOutput {
	return i.ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaPrivateNetworkArgs) ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaPrivateNetworkOutput).ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(ctx)
}

// DatabaseReadReplicaPrivateNetworkPtrInput is an input type that accepts DatabaseReadReplicaPrivateNetworkArgs, DatabaseReadReplicaPrivateNetworkPtr and DatabaseReadReplicaPrivateNetworkPtrOutput values.
// You can construct a concrete instance of `DatabaseReadReplicaPrivateNetworkPtrInput` via:
//
//	        DatabaseReadReplicaPrivateNetworkArgs{...}
//
//	or:
//
//	        nil
type DatabaseReadReplicaPrivateNetworkPtrInput interface {
	pulumi.Input

	ToDatabaseReadReplicaPrivateNetworkPtrOutput() DatabaseReadReplicaPrivateNetworkPtrOutput
	ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(context.Context) DatabaseReadReplicaPrivateNetworkPtrOutput
}

type databaseReadReplicaPrivateNetworkPtrType DatabaseReadReplicaPrivateNetworkArgs

func DatabaseReadReplicaPrivateNetworkPtr(v *DatabaseReadReplicaPrivateNetworkArgs) DatabaseReadReplicaPrivateNetworkPtrInput {
	return (*databaseReadReplicaPrivateNetworkPtrType)(v)
}

func (*databaseReadReplicaPrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaPrivateNetwork)(nil)).Elem()
}

func (i *databaseReadReplicaPrivateNetworkPtrType) ToDatabaseReadReplicaPrivateNetworkPtrOutput() DatabaseReadReplicaPrivateNetworkPtrOutput {
	return i.ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *databaseReadReplicaPrivateNetworkPtrType) ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaPrivateNetworkPtrOutput)
}

type DatabaseReadReplicaPrivateNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseReadReplicaPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaPrivateNetwork)(nil)).Elem()
}

func (o DatabaseReadReplicaPrivateNetworkOutput) ToDatabaseReadReplicaPrivateNetworkOutput() DatabaseReadReplicaPrivateNetworkOutput {
	return o
}

func (o DatabaseReadReplicaPrivateNetworkOutput) ToDatabaseReadReplicaPrivateNetworkOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkOutput {
	return o
}

func (o DatabaseReadReplicaPrivateNetworkOutput) ToDatabaseReadReplicaPrivateNetworkPtrOutput() DatabaseReadReplicaPrivateNetworkPtrOutput {
	return o.ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (o DatabaseReadReplicaPrivateNetworkOutput) ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseReadReplicaPrivateNetwork) *DatabaseReadReplicaPrivateNetwork {
		return &v
	}).(DatabaseReadReplicaPrivateNetworkPtrOutput)
}

// If true, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
func (o DatabaseReadReplicaPrivateNetworkOutput) EnableIpam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *bool { return v.EnableIpam }).(pulumi.BoolPtrOutput)
}

// The ID of the endpoint of the read replica.
func (o DatabaseReadReplicaPrivateNetworkOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DatabaseReadReplicaPrivateNetworkOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DatabaseReadReplicaPrivateNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseReadReplicaPrivateNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DatabaseReadReplicaPrivateNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// UUID of the private network to be connected to the read replica.
func (o DatabaseReadReplicaPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

// The IP network address within the private subnet. This must be an IPv4 address with a CIDR notation. If not set, The IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
func (o DatabaseReadReplicaPrivateNetworkOutput) ServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.ServiceIp }).(pulumi.StringPtrOutput)
}

// Private network zone
func (o DatabaseReadReplicaPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseReadReplicaPrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (DatabaseReadReplicaPrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaPrivateNetwork)(nil)).Elem()
}

func (o DatabaseReadReplicaPrivateNetworkPtrOutput) ToDatabaseReadReplicaPrivateNetworkPtrOutput() DatabaseReadReplicaPrivateNetworkPtrOutput {
	return o
}

func (o DatabaseReadReplicaPrivateNetworkPtrOutput) ToDatabaseReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseReadReplicaPrivateNetworkPtrOutput {
	return o
}

func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Elem() DatabaseReadReplicaPrivateNetworkOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) DatabaseReadReplicaPrivateNetwork {
		if v != nil {
			return *v
		}
		var ret DatabaseReadReplicaPrivateNetwork
		return ret
	}).(DatabaseReadReplicaPrivateNetworkOutput)
}

// If true, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) EnableIpam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpam
	}).(pulumi.BoolPtrOutput)
}

// The ID of the endpoint of the read replica.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// UUID of the private network to be connected to the read replica.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateNetworkId
	}).(pulumi.StringPtrOutput)
}

// The IP network address within the private subnet. This must be an IPv4 address with a CIDR notation. If not set, The IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) ServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIp
	}).(pulumi.StringPtrOutput)
}

// Private network zone
func (o DatabaseReadReplicaPrivateNetworkPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DocumentdbReadReplicaDirectAccess struct {
	// The ID of the endpoint of the read replica.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip *string `pulumi:"ip"`
	// Name of the endpoint.
	Name *string `pulumi:"name"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
}

// DocumentdbReadReplicaDirectAccessInput is an input type that accepts DocumentdbReadReplicaDirectAccessArgs and DocumentdbReadReplicaDirectAccessOutput values.
// You can construct a concrete instance of `DocumentdbReadReplicaDirectAccessInput` via:
//
//	DocumentdbReadReplicaDirectAccessArgs{...}
type DocumentdbReadReplicaDirectAccessInput interface {
	pulumi.Input

	ToDocumentdbReadReplicaDirectAccessOutput() DocumentdbReadReplicaDirectAccessOutput
	ToDocumentdbReadReplicaDirectAccessOutputWithContext(context.Context) DocumentdbReadReplicaDirectAccessOutput
}

type DocumentdbReadReplicaDirectAccessArgs struct {
	// The ID of the endpoint of the read replica.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Name of the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (DocumentdbReadReplicaDirectAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentdbReadReplicaDirectAccess)(nil)).Elem()
}

func (i DocumentdbReadReplicaDirectAccessArgs) ToDocumentdbReadReplicaDirectAccessOutput() DocumentdbReadReplicaDirectAccessOutput {
	return i.ToDocumentdbReadReplicaDirectAccessOutputWithContext(context.Background())
}

func (i DocumentdbReadReplicaDirectAccessArgs) ToDocumentdbReadReplicaDirectAccessOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaDirectAccessOutput)
}

func (i DocumentdbReadReplicaDirectAccessArgs) ToDocumentdbReadReplicaDirectAccessPtrOutput() DocumentdbReadReplicaDirectAccessPtrOutput {
	return i.ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (i DocumentdbReadReplicaDirectAccessArgs) ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaDirectAccessOutput).ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(ctx)
}

// DocumentdbReadReplicaDirectAccessPtrInput is an input type that accepts DocumentdbReadReplicaDirectAccessArgs, DocumentdbReadReplicaDirectAccessPtr and DocumentdbReadReplicaDirectAccessPtrOutput values.
// You can construct a concrete instance of `DocumentdbReadReplicaDirectAccessPtrInput` via:
//
//	        DocumentdbReadReplicaDirectAccessArgs{...}
//
//	or:
//
//	        nil
type DocumentdbReadReplicaDirectAccessPtrInput interface {
	pulumi.Input

	ToDocumentdbReadReplicaDirectAccessPtrOutput() DocumentdbReadReplicaDirectAccessPtrOutput
	ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(context.Context) DocumentdbReadReplicaDirectAccessPtrOutput
}

type documentdbReadReplicaDirectAccessPtrType DocumentdbReadReplicaDirectAccessArgs

func DocumentdbReadReplicaDirectAccessPtr(v *DocumentdbReadReplicaDirectAccessArgs) DocumentdbReadReplicaDirectAccessPtrInput {
	return (*documentdbReadReplicaDirectAccessPtrType)(v)
}

func (*documentdbReadReplicaDirectAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentdbReadReplicaDirectAccess)(nil)).Elem()
}

func (i *documentdbReadReplicaDirectAccessPtrType) ToDocumentdbReadReplicaDirectAccessPtrOutput() DocumentdbReadReplicaDirectAccessPtrOutput {
	return i.ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (i *documentdbReadReplicaDirectAccessPtrType) ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaDirectAccessPtrOutput)
}

type DocumentdbReadReplicaDirectAccessOutput struct{ *pulumi.OutputState }

func (DocumentdbReadReplicaDirectAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentdbReadReplicaDirectAccess)(nil)).Elem()
}

func (o DocumentdbReadReplicaDirectAccessOutput) ToDocumentdbReadReplicaDirectAccessOutput() DocumentdbReadReplicaDirectAccessOutput {
	return o
}

func (o DocumentdbReadReplicaDirectAccessOutput) ToDocumentdbReadReplicaDirectAccessOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessOutput {
	return o
}

func (o DocumentdbReadReplicaDirectAccessOutput) ToDocumentdbReadReplicaDirectAccessPtrOutput() DocumentdbReadReplicaDirectAccessPtrOutput {
	return o.ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(context.Background())
}

func (o DocumentdbReadReplicaDirectAccessOutput) ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentdbReadReplicaDirectAccess) *DocumentdbReadReplicaDirectAccess {
		return &v
	}).(DocumentdbReadReplicaDirectAccessPtrOutput)
}

// The ID of the endpoint of the read replica.
func (o DocumentdbReadReplicaDirectAccessOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaDirectAccess) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaDirectAccessOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaDirectAccess) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaDirectAccessOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaDirectAccess) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DocumentdbReadReplicaDirectAccessOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaDirectAccess) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DocumentdbReadReplicaDirectAccessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaDirectAccess) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DocumentdbReadReplicaDirectAccessPtrOutput struct{ *pulumi.OutputState }

func (DocumentdbReadReplicaDirectAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentdbReadReplicaDirectAccess)(nil)).Elem()
}

func (o DocumentdbReadReplicaDirectAccessPtrOutput) ToDocumentdbReadReplicaDirectAccessPtrOutput() DocumentdbReadReplicaDirectAccessPtrOutput {
	return o
}

func (o DocumentdbReadReplicaDirectAccessPtrOutput) ToDocumentdbReadReplicaDirectAccessPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaDirectAccessPtrOutput {
	return o
}

func (o DocumentdbReadReplicaDirectAccessPtrOutput) Elem() DocumentdbReadReplicaDirectAccessOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) DocumentdbReadReplicaDirectAccess {
		if v != nil {
			return *v
		}
		var ret DocumentdbReadReplicaDirectAccess
		return ret
	}).(DocumentdbReadReplicaDirectAccessOutput)
}

// The ID of the endpoint of the read replica.
func (o DocumentdbReadReplicaDirectAccessPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaDirectAccessPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaDirectAccessPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DocumentdbReadReplicaDirectAccessPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DocumentdbReadReplicaDirectAccessPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaDirectAccess) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type DocumentdbReadReplicaPrivateNetwork struct {
	// The ID of the endpoint of the read replica.
	EndpointId *string `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname *string `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip *string `pulumi:"ip"`
	// Name of the endpoint.
	Name *string `pulumi:"name"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
	// UUID of the private network to be connected to the read replica.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// The IP network address within the private subnet. This must be an IPv4 address with a
	// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
	// service if not set.
	ServiceIp *string `pulumi:"serviceIp"`
	// Private network zone
	Zone *string `pulumi:"zone"`
}

// DocumentdbReadReplicaPrivateNetworkInput is an input type that accepts DocumentdbReadReplicaPrivateNetworkArgs and DocumentdbReadReplicaPrivateNetworkOutput values.
// You can construct a concrete instance of `DocumentdbReadReplicaPrivateNetworkInput` via:
//
//	DocumentdbReadReplicaPrivateNetworkArgs{...}
type DocumentdbReadReplicaPrivateNetworkInput interface {
	pulumi.Input

	ToDocumentdbReadReplicaPrivateNetworkOutput() DocumentdbReadReplicaPrivateNetworkOutput
	ToDocumentdbReadReplicaPrivateNetworkOutputWithContext(context.Context) DocumentdbReadReplicaPrivateNetworkOutput
}

type DocumentdbReadReplicaPrivateNetworkArgs struct {
	// The ID of the endpoint of the read replica.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Hostname of the endpoint. Only one of ip and hostname may be set.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Name of the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// UUID of the private network to be connected to the read replica.
	PrivateNetworkId pulumi.StringInput `pulumi:"privateNetworkId"`
	// The IP network address within the private subnet. This must be an IPv4 address with a
	// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
	// service if not set.
	ServiceIp pulumi.StringPtrInput `pulumi:"serviceIp"`
	// Private network zone
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DocumentdbReadReplicaPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentdbReadReplicaPrivateNetwork)(nil)).Elem()
}

func (i DocumentdbReadReplicaPrivateNetworkArgs) ToDocumentdbReadReplicaPrivateNetworkOutput() DocumentdbReadReplicaPrivateNetworkOutput {
	return i.ToDocumentdbReadReplicaPrivateNetworkOutputWithContext(context.Background())
}

func (i DocumentdbReadReplicaPrivateNetworkArgs) ToDocumentdbReadReplicaPrivateNetworkOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaPrivateNetworkOutput)
}

func (i DocumentdbReadReplicaPrivateNetworkArgs) ToDocumentdbReadReplicaPrivateNetworkPtrOutput() DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return i.ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i DocumentdbReadReplicaPrivateNetworkArgs) ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaPrivateNetworkOutput).ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(ctx)
}

// DocumentdbReadReplicaPrivateNetworkPtrInput is an input type that accepts DocumentdbReadReplicaPrivateNetworkArgs, DocumentdbReadReplicaPrivateNetworkPtr and DocumentdbReadReplicaPrivateNetworkPtrOutput values.
// You can construct a concrete instance of `DocumentdbReadReplicaPrivateNetworkPtrInput` via:
//
//	        DocumentdbReadReplicaPrivateNetworkArgs{...}
//
//	or:
//
//	        nil
type DocumentdbReadReplicaPrivateNetworkPtrInput interface {
	pulumi.Input

	ToDocumentdbReadReplicaPrivateNetworkPtrOutput() DocumentdbReadReplicaPrivateNetworkPtrOutput
	ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(context.Context) DocumentdbReadReplicaPrivateNetworkPtrOutput
}

type documentdbReadReplicaPrivateNetworkPtrType DocumentdbReadReplicaPrivateNetworkArgs

func DocumentdbReadReplicaPrivateNetworkPtr(v *DocumentdbReadReplicaPrivateNetworkArgs) DocumentdbReadReplicaPrivateNetworkPtrInput {
	return (*documentdbReadReplicaPrivateNetworkPtrType)(v)
}

func (*documentdbReadReplicaPrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentdbReadReplicaPrivateNetwork)(nil)).Elem()
}

func (i *documentdbReadReplicaPrivateNetworkPtrType) ToDocumentdbReadReplicaPrivateNetworkPtrOutput() DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return i.ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *documentdbReadReplicaPrivateNetworkPtrType) ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentdbReadReplicaPrivateNetworkPtrOutput)
}

type DocumentdbReadReplicaPrivateNetworkOutput struct{ *pulumi.OutputState }

func (DocumentdbReadReplicaPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentdbReadReplicaPrivateNetwork)(nil)).Elem()
}

func (o DocumentdbReadReplicaPrivateNetworkOutput) ToDocumentdbReadReplicaPrivateNetworkOutput() DocumentdbReadReplicaPrivateNetworkOutput {
	return o
}

func (o DocumentdbReadReplicaPrivateNetworkOutput) ToDocumentdbReadReplicaPrivateNetworkOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkOutput {
	return o
}

func (o DocumentdbReadReplicaPrivateNetworkOutput) ToDocumentdbReadReplicaPrivateNetworkPtrOutput() DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return o.ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(context.Background())
}

func (o DocumentdbReadReplicaPrivateNetworkOutput) ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DocumentdbReadReplicaPrivateNetwork) *DocumentdbReadReplicaPrivateNetwork {
		return &v
	}).(DocumentdbReadReplicaPrivateNetworkPtrOutput)
}

// The ID of the endpoint of the read replica.
func (o DocumentdbReadReplicaPrivateNetworkOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaPrivateNetworkOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaPrivateNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DocumentdbReadReplicaPrivateNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DocumentdbReadReplicaPrivateNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// UUID of the private network to be connected to the read replica.
func (o DocumentdbReadReplicaPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

// The IP network address within the private subnet. This must be an IPv4 address with a
// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
// service if not set.
func (o DocumentdbReadReplicaPrivateNetworkOutput) ServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.ServiceIp }).(pulumi.StringPtrOutput)
}

// Private network zone
func (o DocumentdbReadReplicaPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentdbReadReplicaPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DocumentdbReadReplicaPrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (DocumentdbReadReplicaPrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentdbReadReplicaPrivateNetwork)(nil)).Elem()
}

func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) ToDocumentdbReadReplicaPrivateNetworkPtrOutput() DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return o
}

func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) ToDocumentdbReadReplicaPrivateNetworkPtrOutputWithContext(ctx context.Context) DocumentdbReadReplicaPrivateNetworkPtrOutput {
	return o
}

func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Elem() DocumentdbReadReplicaPrivateNetworkOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) DocumentdbReadReplicaPrivateNetwork {
		if v != nil {
			return *v
		}
		var ret DocumentdbReadReplicaPrivateNetwork
		return ret
	}).(DocumentdbReadReplicaPrivateNetworkOutput)
}

// The ID of the endpoint of the read replica.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Hostname of the endpoint. Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// TCP port of the endpoint.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// UUID of the private network to be connected to the read replica.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateNetworkId
	}).(pulumi.StringPtrOutput)
}

// The IP network address within the private subnet. This must be an IPv4 address with a
// CIDR notation. The IP network address within the private subnet is determined by the IP Address Management (IPAM)
// service if not set.
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) ServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ServiceIp
	}).(pulumi.StringPtrOutput)
}

// Private network zone
func (o DocumentdbReadReplicaPrivateNetworkPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentdbReadReplicaPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DomainRecordGeoIp struct {
	// The list of matches
	Matches []DomainRecordGeoIpMatch `pulumi:"matches"`
}

// DomainRecordGeoIpInput is an input type that accepts DomainRecordGeoIpArgs and DomainRecordGeoIpOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpInput` via:
//
//	DomainRecordGeoIpArgs{...}
type DomainRecordGeoIpInput interface {
	pulumi.Input

	ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput
	ToDomainRecordGeoIpOutputWithContext(context.Context) DomainRecordGeoIpOutput
}

type DomainRecordGeoIpArgs struct {
	// The list of matches
	Matches DomainRecordGeoIpMatchArrayInput `pulumi:"matches"`
}

func (DomainRecordGeoIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIp)(nil)).Elem()
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput {
	return i.ToDomainRecordGeoIpOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpOutputWithContext(ctx context.Context) DomainRecordGeoIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpOutput)
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return i.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpOutput).ToDomainRecordGeoIpPtrOutputWithContext(ctx)
}

// DomainRecordGeoIpPtrInput is an input type that accepts DomainRecordGeoIpArgs, DomainRecordGeoIpPtr and DomainRecordGeoIpPtrOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpPtrInput` via:
//
//	        DomainRecordGeoIpArgs{...}
//
//	or:
//
//	        nil
type DomainRecordGeoIpPtrInput interface {
	pulumi.Input

	ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput
	ToDomainRecordGeoIpPtrOutputWithContext(context.Context) DomainRecordGeoIpPtrOutput
}

type domainRecordGeoIpPtrType DomainRecordGeoIpArgs

func DomainRecordGeoIpPtr(v *DomainRecordGeoIpArgs) DomainRecordGeoIpPtrInput {
	return (*domainRecordGeoIpPtrType)(v)
}

func (*domainRecordGeoIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordGeoIp)(nil)).Elem()
}

func (i *domainRecordGeoIpPtrType) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return i.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (i *domainRecordGeoIpPtrType) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpPtrOutput)
}

type DomainRecordGeoIpOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIp)(nil)).Elem()
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput {
	return o
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpOutputWithContext(ctx context.Context) DomainRecordGeoIpOutput {
	return o
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return o.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRecordGeoIp) *DomainRecordGeoIp {
		return &v
	}).(DomainRecordGeoIpPtrOutput)
}

// The list of matches
func (o DomainRecordGeoIpOutput) Matches() DomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIp) []DomainRecordGeoIpMatch { return v.Matches }).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpPtrOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordGeoIp)(nil)).Elem()
}

func (o DomainRecordGeoIpPtrOutput) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return o
}

func (o DomainRecordGeoIpPtrOutput) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return o
}

func (o DomainRecordGeoIpPtrOutput) Elem() DomainRecordGeoIpOutput {
	return o.ApplyT(func(v *DomainRecordGeoIp) DomainRecordGeoIp {
		if v != nil {
			return *v
		}
		var ret DomainRecordGeoIp
		return ret
	}).(DomainRecordGeoIpOutput)
}

// The list of matches
func (o DomainRecordGeoIpPtrOutput) Matches() DomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v *DomainRecordGeoIp) []DomainRecordGeoIpMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpMatch struct {
	// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
	Continents []string `pulumi:"continents"`
	// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
	Countries []string `pulumi:"countries"`
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	Data string `pulumi:"data"`
}

// DomainRecordGeoIpMatchInput is an input type that accepts DomainRecordGeoIpMatchArgs and DomainRecordGeoIpMatchOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpMatchInput` via:
//
//	DomainRecordGeoIpMatchArgs{...}
type DomainRecordGeoIpMatchInput interface {
	pulumi.Input

	ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput
	ToDomainRecordGeoIpMatchOutputWithContext(context.Context) DomainRecordGeoIpMatchOutput
}

type DomainRecordGeoIpMatchArgs struct {
	// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
	Continents pulumi.StringArrayInput `pulumi:"continents"`
	// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	Data pulumi.StringInput `pulumi:"data"`
}

func (DomainRecordGeoIpMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIpMatch)(nil)).Elem()
}

func (i DomainRecordGeoIpMatchArgs) ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput {
	return i.ToDomainRecordGeoIpMatchOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpMatchArgs) ToDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpMatchOutput)
}

// DomainRecordGeoIpMatchArrayInput is an input type that accepts DomainRecordGeoIpMatchArray and DomainRecordGeoIpMatchArrayOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpMatchArrayInput` via:
//
//	DomainRecordGeoIpMatchArray{ DomainRecordGeoIpMatchArgs{...} }
type DomainRecordGeoIpMatchArrayInput interface {
	pulumi.Input

	ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput
	ToDomainRecordGeoIpMatchArrayOutputWithContext(context.Context) DomainRecordGeoIpMatchArrayOutput
}

type DomainRecordGeoIpMatchArray []DomainRecordGeoIpMatchInput

func (DomainRecordGeoIpMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordGeoIpMatch)(nil)).Elem()
}

func (i DomainRecordGeoIpMatchArray) ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput {
	return i.ToDomainRecordGeoIpMatchArrayOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpMatchArray) ToDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpMatchOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIpMatch)(nil)).Elem()
}

func (o DomainRecordGeoIpMatchOutput) ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput {
	return o
}

func (o DomainRecordGeoIpMatchOutput) ToDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchOutput {
	return o
}

// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
func (o DomainRecordGeoIpMatchOutput) Continents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) []string { return v.Continents }).(pulumi.StringArrayOutput)
}

// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
func (o DomainRecordGeoIpMatchOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
func (o DomainRecordGeoIpMatchOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) string { return v.Data }).(pulumi.StringOutput)
}

type DomainRecordGeoIpMatchArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordGeoIpMatch)(nil)).Elem()
}

func (o DomainRecordGeoIpMatchArrayOutput) ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o DomainRecordGeoIpMatchArrayOutput) ToDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o DomainRecordGeoIpMatchArrayOutput) Index(i pulumi.IntInput) DomainRecordGeoIpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordGeoIpMatch {
		return vs[0].([]DomainRecordGeoIpMatch)[vs[1].(int)]
	}).(DomainRecordGeoIpMatchOutput)
}

type DomainRecordHttpService struct {
	// IPs to check
	Ips []string `pulumi:"ips"`
	// Text to search
	MustContain string `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list
	Strategy string `pulumi:"strategy"`
	// URL to match the mustContain text to validate an IP
	Url string `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent *string `pulumi:"userAgent"`
}

// DomainRecordHttpServiceInput is an input type that accepts DomainRecordHttpServiceArgs and DomainRecordHttpServiceOutput values.
// You can construct a concrete instance of `DomainRecordHttpServiceInput` via:
//
//	DomainRecordHttpServiceArgs{...}
type DomainRecordHttpServiceInput interface {
	pulumi.Input

	ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput
	ToDomainRecordHttpServiceOutputWithContext(context.Context) DomainRecordHttpServiceOutput
}

type DomainRecordHttpServiceArgs struct {
	// IPs to check
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Text to search
	MustContain pulumi.StringInput `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// URL to match the mustContain text to validate an IP
	Url pulumi.StringInput `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent pulumi.StringPtrInput `pulumi:"userAgent"`
}

func (DomainRecordHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordHttpService)(nil)).Elem()
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput {
	return i.ToDomainRecordHttpServiceOutputWithContext(context.Background())
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServiceOutputWithContext(ctx context.Context) DomainRecordHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServiceOutput)
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return i.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServiceOutput).ToDomainRecordHttpServicePtrOutputWithContext(ctx)
}

// DomainRecordHttpServicePtrInput is an input type that accepts DomainRecordHttpServiceArgs, DomainRecordHttpServicePtr and DomainRecordHttpServicePtrOutput values.
// You can construct a concrete instance of `DomainRecordHttpServicePtrInput` via:
//
//	        DomainRecordHttpServiceArgs{...}
//
//	or:
//
//	        nil
type DomainRecordHttpServicePtrInput interface {
	pulumi.Input

	ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput
	ToDomainRecordHttpServicePtrOutputWithContext(context.Context) DomainRecordHttpServicePtrOutput
}

type domainRecordHttpServicePtrType DomainRecordHttpServiceArgs

func DomainRecordHttpServicePtr(v *DomainRecordHttpServiceArgs) DomainRecordHttpServicePtrInput {
	return (*domainRecordHttpServicePtrType)(v)
}

func (*domainRecordHttpServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordHttpService)(nil)).Elem()
}

func (i *domainRecordHttpServicePtrType) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return i.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (i *domainRecordHttpServicePtrType) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServicePtrOutput)
}

type DomainRecordHttpServiceOutput struct{ *pulumi.OutputState }

func (DomainRecordHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordHttpService)(nil)).Elem()
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput {
	return o
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServiceOutputWithContext(ctx context.Context) DomainRecordHttpServiceOutput {
	return o
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return o.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRecordHttpService) *DomainRecordHttpService {
		return &v
	}).(DomainRecordHttpServicePtrOutput)
}

// IPs to check
func (o DomainRecordHttpServiceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordHttpService) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Text to search
func (o DomainRecordHttpServiceOutput) MustContain() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.MustContain }).(pulumi.StringOutput)
}

// Strategy to return an IP from the IPs list
func (o DomainRecordHttpServiceOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.Strategy }).(pulumi.StringOutput)
}

// URL to match the mustContain text to validate an IP
func (o DomainRecordHttpServiceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.Url }).(pulumi.StringOutput)
}

// User-agent used when checking the URL
func (o DomainRecordHttpServiceOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRecordHttpService) *string { return v.UserAgent }).(pulumi.StringPtrOutput)
}

type DomainRecordHttpServicePtrOutput struct{ *pulumi.OutputState }

func (DomainRecordHttpServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordHttpService)(nil)).Elem()
}

func (o DomainRecordHttpServicePtrOutput) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return o
}

func (o DomainRecordHttpServicePtrOutput) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return o
}

func (o DomainRecordHttpServicePtrOutput) Elem() DomainRecordHttpServiceOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) DomainRecordHttpService {
		if v != nil {
			return *v
		}
		var ret DomainRecordHttpService
		return ret
	}).(DomainRecordHttpServiceOutput)
}

// IPs to check
func (o DomainRecordHttpServicePtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// Text to search
func (o DomainRecordHttpServicePtrOutput) MustContain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.MustContain
	}).(pulumi.StringPtrOutput)
}

// Strategy to return an IP from the IPs list
func (o DomainRecordHttpServicePtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

// URL to match the mustContain text to validate an IP
func (o DomainRecordHttpServicePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// User-agent used when checking the URL
func (o DomainRecordHttpServicePtrOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return v.UserAgent
	}).(pulumi.StringPtrOutput)
}

type DomainRecordView struct {
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	Data string `pulumi:"data"`
	// The subnet of the view
	Subnet string `pulumi:"subnet"`
}

// DomainRecordViewInput is an input type that accepts DomainRecordViewArgs and DomainRecordViewOutput values.
// You can construct a concrete instance of `DomainRecordViewInput` via:
//
//	DomainRecordViewArgs{...}
type DomainRecordViewInput interface {
	pulumi.Input

	ToDomainRecordViewOutput() DomainRecordViewOutput
	ToDomainRecordViewOutputWithContext(context.Context) DomainRecordViewOutput
}

type DomainRecordViewArgs struct {
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	Data pulumi.StringInput `pulumi:"data"`
	// The subnet of the view
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (DomainRecordViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordView)(nil)).Elem()
}

func (i DomainRecordViewArgs) ToDomainRecordViewOutput() DomainRecordViewOutput {
	return i.ToDomainRecordViewOutputWithContext(context.Background())
}

func (i DomainRecordViewArgs) ToDomainRecordViewOutputWithContext(ctx context.Context) DomainRecordViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordViewOutput)
}

// DomainRecordViewArrayInput is an input type that accepts DomainRecordViewArray and DomainRecordViewArrayOutput values.
// You can construct a concrete instance of `DomainRecordViewArrayInput` via:
//
//	DomainRecordViewArray{ DomainRecordViewArgs{...} }
type DomainRecordViewArrayInput interface {
	pulumi.Input

	ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput
	ToDomainRecordViewArrayOutputWithContext(context.Context) DomainRecordViewArrayOutput
}

type DomainRecordViewArray []DomainRecordViewInput

func (DomainRecordViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordView)(nil)).Elem()
}

func (i DomainRecordViewArray) ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput {
	return i.ToDomainRecordViewArrayOutputWithContext(context.Background())
}

func (i DomainRecordViewArray) ToDomainRecordViewArrayOutputWithContext(ctx context.Context) DomainRecordViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordViewArrayOutput)
}

type DomainRecordViewOutput struct{ *pulumi.OutputState }

func (DomainRecordViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordView)(nil)).Elem()
}

func (o DomainRecordViewOutput) ToDomainRecordViewOutput() DomainRecordViewOutput {
	return o
}

func (o DomainRecordViewOutput) ToDomainRecordViewOutputWithContext(ctx context.Context) DomainRecordViewOutput {
	return o
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
func (o DomainRecordViewOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordView) string { return v.Data }).(pulumi.StringOutput)
}

// The subnet of the view
func (o DomainRecordViewOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordView) string { return v.Subnet }).(pulumi.StringOutput)
}

type DomainRecordViewArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordView)(nil)).Elem()
}

func (o DomainRecordViewArrayOutput) ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput {
	return o
}

func (o DomainRecordViewArrayOutput) ToDomainRecordViewArrayOutputWithContext(ctx context.Context) DomainRecordViewArrayOutput {
	return o
}

func (o DomainRecordViewArrayOutput) Index(i pulumi.IntInput) DomainRecordViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordView {
		return vs[0].([]DomainRecordView)[vs[1].(int)]
	}).(DomainRecordViewOutput)
}

type DomainRecordWeighted struct {
	// The weighted IP
	Ip string `pulumi:"ip"`
	// The weight of the IP
	Weight int `pulumi:"weight"`
}

// DomainRecordWeightedInput is an input type that accepts DomainRecordWeightedArgs and DomainRecordWeightedOutput values.
// You can construct a concrete instance of `DomainRecordWeightedInput` via:
//
//	DomainRecordWeightedArgs{...}
type DomainRecordWeightedInput interface {
	pulumi.Input

	ToDomainRecordWeightedOutput() DomainRecordWeightedOutput
	ToDomainRecordWeightedOutputWithContext(context.Context) DomainRecordWeightedOutput
}

type DomainRecordWeightedArgs struct {
	// The weighted IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// The weight of the IP
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (DomainRecordWeightedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordWeighted)(nil)).Elem()
}

func (i DomainRecordWeightedArgs) ToDomainRecordWeightedOutput() DomainRecordWeightedOutput {
	return i.ToDomainRecordWeightedOutputWithContext(context.Background())
}

func (i DomainRecordWeightedArgs) ToDomainRecordWeightedOutputWithContext(ctx context.Context) DomainRecordWeightedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordWeightedOutput)
}

// DomainRecordWeightedArrayInput is an input type that accepts DomainRecordWeightedArray and DomainRecordWeightedArrayOutput values.
// You can construct a concrete instance of `DomainRecordWeightedArrayInput` via:
//
//	DomainRecordWeightedArray{ DomainRecordWeightedArgs{...} }
type DomainRecordWeightedArrayInput interface {
	pulumi.Input

	ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput
	ToDomainRecordWeightedArrayOutputWithContext(context.Context) DomainRecordWeightedArrayOutput
}

type DomainRecordWeightedArray []DomainRecordWeightedInput

func (DomainRecordWeightedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordWeighted)(nil)).Elem()
}

func (i DomainRecordWeightedArray) ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput {
	return i.ToDomainRecordWeightedArrayOutputWithContext(context.Background())
}

func (i DomainRecordWeightedArray) ToDomainRecordWeightedArrayOutputWithContext(ctx context.Context) DomainRecordWeightedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordWeightedArrayOutput)
}

type DomainRecordWeightedOutput struct{ *pulumi.OutputState }

func (DomainRecordWeightedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordWeighted)(nil)).Elem()
}

func (o DomainRecordWeightedOutput) ToDomainRecordWeightedOutput() DomainRecordWeightedOutput {
	return o
}

func (o DomainRecordWeightedOutput) ToDomainRecordWeightedOutputWithContext(ctx context.Context) DomainRecordWeightedOutput {
	return o
}

// The weighted IP
func (o DomainRecordWeightedOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordWeighted) string { return v.Ip }).(pulumi.StringOutput)
}

// The weight of the IP
func (o DomainRecordWeightedOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v DomainRecordWeighted) int { return v.Weight }).(pulumi.IntOutput)
}

type DomainRecordWeightedArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordWeightedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordWeighted)(nil)).Elem()
}

func (o DomainRecordWeightedArrayOutput) ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput {
	return o
}

func (o DomainRecordWeightedArrayOutput) ToDomainRecordWeightedArrayOutputWithContext(ctx context.Context) DomainRecordWeightedArrayOutput {
	return o
}

func (o DomainRecordWeightedArrayOutput) Index(i pulumi.IntInput) DomainRecordWeightedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordWeighted {
		return vs[0].([]DomainRecordWeighted)[vs[1].(int)]
	}).(DomainRecordWeightedOutput)
}

type FunctionTriggerNats struct {
	// ID of the mnq nats account.
	AccountId *string `pulumi:"accountId"`
	// ID of the project that contain the mnq nats account, defaults to provider's project
	ProjectId *string `pulumi:"projectId"`
	// Region where the mnq nats account is, defaults to provider's region
	Region *string `pulumi:"region"`
	// The subject to listen to
	Subject string `pulumi:"subject"`
}

// FunctionTriggerNatsInput is an input type that accepts FunctionTriggerNatsArgs and FunctionTriggerNatsOutput values.
// You can construct a concrete instance of `FunctionTriggerNatsInput` via:
//
//	FunctionTriggerNatsArgs{...}
type FunctionTriggerNatsInput interface {
	pulumi.Input

	ToFunctionTriggerNatsOutput() FunctionTriggerNatsOutput
	ToFunctionTriggerNatsOutputWithContext(context.Context) FunctionTriggerNatsOutput
}

type FunctionTriggerNatsArgs struct {
	// ID of the mnq nats account.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// ID of the project that contain the mnq nats account, defaults to provider's project
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Region where the mnq nats account is, defaults to provider's region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The subject to listen to
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (FunctionTriggerNatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerNats)(nil)).Elem()
}

func (i FunctionTriggerNatsArgs) ToFunctionTriggerNatsOutput() FunctionTriggerNatsOutput {
	return i.ToFunctionTriggerNatsOutputWithContext(context.Background())
}

func (i FunctionTriggerNatsArgs) ToFunctionTriggerNatsOutputWithContext(ctx context.Context) FunctionTriggerNatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerNatsOutput)
}

func (i FunctionTriggerNatsArgs) ToFunctionTriggerNatsPtrOutput() FunctionTriggerNatsPtrOutput {
	return i.ToFunctionTriggerNatsPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerNatsArgs) ToFunctionTriggerNatsPtrOutputWithContext(ctx context.Context) FunctionTriggerNatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerNatsOutput).ToFunctionTriggerNatsPtrOutputWithContext(ctx)
}

// FunctionTriggerNatsPtrInput is an input type that accepts FunctionTriggerNatsArgs, FunctionTriggerNatsPtr and FunctionTriggerNatsPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerNatsPtrInput` via:
//
//	        FunctionTriggerNatsArgs{...}
//
//	or:
//
//	        nil
type FunctionTriggerNatsPtrInput interface {
	pulumi.Input

	ToFunctionTriggerNatsPtrOutput() FunctionTriggerNatsPtrOutput
	ToFunctionTriggerNatsPtrOutputWithContext(context.Context) FunctionTriggerNatsPtrOutput
}

type functionTriggerNatsPtrType FunctionTriggerNatsArgs

func FunctionTriggerNatsPtr(v *FunctionTriggerNatsArgs) FunctionTriggerNatsPtrInput {
	return (*functionTriggerNatsPtrType)(v)
}

func (*functionTriggerNatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerNats)(nil)).Elem()
}

func (i *functionTriggerNatsPtrType) ToFunctionTriggerNatsPtrOutput() FunctionTriggerNatsPtrOutput {
	return i.ToFunctionTriggerNatsPtrOutputWithContext(context.Background())
}

func (i *functionTriggerNatsPtrType) ToFunctionTriggerNatsPtrOutputWithContext(ctx context.Context) FunctionTriggerNatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerNatsPtrOutput)
}

type FunctionTriggerNatsOutput struct{ *pulumi.OutputState }

func (FunctionTriggerNatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerNats)(nil)).Elem()
}

func (o FunctionTriggerNatsOutput) ToFunctionTriggerNatsOutput() FunctionTriggerNatsOutput {
	return o
}

func (o FunctionTriggerNatsOutput) ToFunctionTriggerNatsOutputWithContext(ctx context.Context) FunctionTriggerNatsOutput {
	return o
}

func (o FunctionTriggerNatsOutput) ToFunctionTriggerNatsPtrOutput() FunctionTriggerNatsPtrOutput {
	return o.ToFunctionTriggerNatsPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerNatsOutput) ToFunctionTriggerNatsPtrOutputWithContext(ctx context.Context) FunctionTriggerNatsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTriggerNats) *FunctionTriggerNats {
		return &v
	}).(FunctionTriggerNatsPtrOutput)
}

// ID of the mnq nats account.
func (o FunctionTriggerNatsOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerNats) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq nats account, defaults to provider's project
func (o FunctionTriggerNatsOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerNats) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Region where the mnq nats account is, defaults to provider's region
func (o FunctionTriggerNatsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerNats) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The subject to listen to
func (o FunctionTriggerNatsOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerNats) string { return v.Subject }).(pulumi.StringOutput)
}

type FunctionTriggerNatsPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerNatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerNats)(nil)).Elem()
}

func (o FunctionTriggerNatsPtrOutput) ToFunctionTriggerNatsPtrOutput() FunctionTriggerNatsPtrOutput {
	return o
}

func (o FunctionTriggerNatsPtrOutput) ToFunctionTriggerNatsPtrOutputWithContext(ctx context.Context) FunctionTriggerNatsPtrOutput {
	return o
}

func (o FunctionTriggerNatsPtrOutput) Elem() FunctionTriggerNatsOutput {
	return o.ApplyT(func(v *FunctionTriggerNats) FunctionTriggerNats {
		if v != nil {
			return *v
		}
		var ret FunctionTriggerNats
		return ret
	}).(FunctionTriggerNatsOutput)
}

// ID of the mnq nats account.
func (o FunctionTriggerNatsPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.AccountId
	}).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq nats account, defaults to provider's project
func (o FunctionTriggerNatsPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Region where the mnq nats account is, defaults to provider's region
func (o FunctionTriggerNatsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerNats) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The subject to listen to
func (o FunctionTriggerNatsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerNats) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

type FunctionTriggerSqs struct {
	// ID of the mnq namespace. Deprecated.
	NamespaceId *string `pulumi:"namespaceId"`
	// ID of the project that contain the mnq namespace, defaults to provider's project
	ProjectId *string `pulumi:"projectId"`
	// Name of the queue
	Queue string `pulumi:"queue"`
	// Region where the mnq namespace is, defaults to provider's region
	Region *string `pulumi:"region"`
}

// FunctionTriggerSqsInput is an input type that accepts FunctionTriggerSqsArgs and FunctionTriggerSqsOutput values.
// You can construct a concrete instance of `FunctionTriggerSqsInput` via:
//
//	FunctionTriggerSqsArgs{...}
type FunctionTriggerSqsInput interface {
	pulumi.Input

	ToFunctionTriggerSqsOutput() FunctionTriggerSqsOutput
	ToFunctionTriggerSqsOutputWithContext(context.Context) FunctionTriggerSqsOutput
}

type FunctionTriggerSqsArgs struct {
	// ID of the mnq namespace. Deprecated.
	NamespaceId pulumi.StringPtrInput `pulumi:"namespaceId"`
	// ID of the project that contain the mnq namespace, defaults to provider's project
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Name of the queue
	Queue pulumi.StringInput `pulumi:"queue"`
	// Region where the mnq namespace is, defaults to provider's region
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (FunctionTriggerSqsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerSqs)(nil)).Elem()
}

func (i FunctionTriggerSqsArgs) ToFunctionTriggerSqsOutput() FunctionTriggerSqsOutput {
	return i.ToFunctionTriggerSqsOutputWithContext(context.Background())
}

func (i FunctionTriggerSqsArgs) ToFunctionTriggerSqsOutputWithContext(ctx context.Context) FunctionTriggerSqsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerSqsOutput)
}

func (i FunctionTriggerSqsArgs) ToFunctionTriggerSqsPtrOutput() FunctionTriggerSqsPtrOutput {
	return i.ToFunctionTriggerSqsPtrOutputWithContext(context.Background())
}

func (i FunctionTriggerSqsArgs) ToFunctionTriggerSqsPtrOutputWithContext(ctx context.Context) FunctionTriggerSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerSqsOutput).ToFunctionTriggerSqsPtrOutputWithContext(ctx)
}

// FunctionTriggerSqsPtrInput is an input type that accepts FunctionTriggerSqsArgs, FunctionTriggerSqsPtr and FunctionTriggerSqsPtrOutput values.
// You can construct a concrete instance of `FunctionTriggerSqsPtrInput` via:
//
//	        FunctionTriggerSqsArgs{...}
//
//	or:
//
//	        nil
type FunctionTriggerSqsPtrInput interface {
	pulumi.Input

	ToFunctionTriggerSqsPtrOutput() FunctionTriggerSqsPtrOutput
	ToFunctionTriggerSqsPtrOutputWithContext(context.Context) FunctionTriggerSqsPtrOutput
}

type functionTriggerSqsPtrType FunctionTriggerSqsArgs

func FunctionTriggerSqsPtr(v *FunctionTriggerSqsArgs) FunctionTriggerSqsPtrInput {
	return (*functionTriggerSqsPtrType)(v)
}

func (*functionTriggerSqsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerSqs)(nil)).Elem()
}

func (i *functionTriggerSqsPtrType) ToFunctionTriggerSqsPtrOutput() FunctionTriggerSqsPtrOutput {
	return i.ToFunctionTriggerSqsPtrOutputWithContext(context.Background())
}

func (i *functionTriggerSqsPtrType) ToFunctionTriggerSqsPtrOutputWithContext(ctx context.Context) FunctionTriggerSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTriggerSqsPtrOutput)
}

type FunctionTriggerSqsOutput struct{ *pulumi.OutputState }

func (FunctionTriggerSqsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTriggerSqs)(nil)).Elem()
}

func (o FunctionTriggerSqsOutput) ToFunctionTriggerSqsOutput() FunctionTriggerSqsOutput {
	return o
}

func (o FunctionTriggerSqsOutput) ToFunctionTriggerSqsOutputWithContext(ctx context.Context) FunctionTriggerSqsOutput {
	return o
}

func (o FunctionTriggerSqsOutput) ToFunctionTriggerSqsPtrOutput() FunctionTriggerSqsPtrOutput {
	return o.ToFunctionTriggerSqsPtrOutputWithContext(context.Background())
}

func (o FunctionTriggerSqsOutput) ToFunctionTriggerSqsPtrOutputWithContext(ctx context.Context) FunctionTriggerSqsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTriggerSqs) *FunctionTriggerSqs {
		return &v
	}).(FunctionTriggerSqsPtrOutput)
}

// ID of the mnq namespace. Deprecated.
func (o FunctionTriggerSqsOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerSqs) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq namespace, defaults to provider's project
func (o FunctionTriggerSqsOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerSqs) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Name of the queue
func (o FunctionTriggerSqsOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTriggerSqs) string { return v.Queue }).(pulumi.StringOutput)
}

// Region where the mnq namespace is, defaults to provider's region
func (o FunctionTriggerSqsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTriggerSqs) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type FunctionTriggerSqsPtrOutput struct{ *pulumi.OutputState }

func (FunctionTriggerSqsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTriggerSqs)(nil)).Elem()
}

func (o FunctionTriggerSqsPtrOutput) ToFunctionTriggerSqsPtrOutput() FunctionTriggerSqsPtrOutput {
	return o
}

func (o FunctionTriggerSqsPtrOutput) ToFunctionTriggerSqsPtrOutputWithContext(ctx context.Context) FunctionTriggerSqsPtrOutput {
	return o
}

func (o FunctionTriggerSqsPtrOutput) Elem() FunctionTriggerSqsOutput {
	return o.ApplyT(func(v *FunctionTriggerSqs) FunctionTriggerSqs {
		if v != nil {
			return *v
		}
		var ret FunctionTriggerSqs
		return ret
	}).(FunctionTriggerSqsOutput)
}

// ID of the mnq namespace. Deprecated.
func (o FunctionTriggerSqsPtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

// ID of the project that contain the mnq namespace, defaults to provider's project
func (o FunctionTriggerSqsPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the queue
func (o FunctionTriggerSqsPtrOutput) Queue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return &v.Queue
	}).(pulumi.StringPtrOutput)
}

// Region where the mnq namespace is, defaults to provider's region
func (o FunctionTriggerSqsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTriggerSqs) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type IamPolicyRule struct {
	// ID of organization scoped to the rule, this can be used to create a rule for all projects in an organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Names of permission sets bound to the rule.
	//
	// **_TIP:_**  You can use the Scaleway CLI to list the permissions details. e.g:
	PermissionSetNames []string `pulumi:"permissionSetNames"`
	// List of project IDs scoped to the rule.
	//
	// > **Important** One of `organizationId` or `projectIds`  must be set per rule.
	ProjectIds []string `pulumi:"projectIds"`
}

// IamPolicyRuleInput is an input type that accepts IamPolicyRuleArgs and IamPolicyRuleOutput values.
// You can construct a concrete instance of `IamPolicyRuleInput` via:
//
//	IamPolicyRuleArgs{...}
type IamPolicyRuleInput interface {
	pulumi.Input

	ToIamPolicyRuleOutput() IamPolicyRuleOutput
	ToIamPolicyRuleOutputWithContext(context.Context) IamPolicyRuleOutput
}

type IamPolicyRuleArgs struct {
	// ID of organization scoped to the rule, this can be used to create a rule for all projects in an organization.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// Names of permission sets bound to the rule.
	//
	// **_TIP:_**  You can use the Scaleway CLI to list the permissions details. e.g:
	PermissionSetNames pulumi.StringArrayInput `pulumi:"permissionSetNames"`
	// List of project IDs scoped to the rule.
	//
	// > **Important** One of `organizationId` or `projectIds`  must be set per rule.
	ProjectIds pulumi.StringArrayInput `pulumi:"projectIds"`
}

func (IamPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamPolicyRule)(nil)).Elem()
}

func (i IamPolicyRuleArgs) ToIamPolicyRuleOutput() IamPolicyRuleOutput {
	return i.ToIamPolicyRuleOutputWithContext(context.Background())
}

func (i IamPolicyRuleArgs) ToIamPolicyRuleOutputWithContext(ctx context.Context) IamPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamPolicyRuleOutput)
}

// IamPolicyRuleArrayInput is an input type that accepts IamPolicyRuleArray and IamPolicyRuleArrayOutput values.
// You can construct a concrete instance of `IamPolicyRuleArrayInput` via:
//
//	IamPolicyRuleArray{ IamPolicyRuleArgs{...} }
type IamPolicyRuleArrayInput interface {
	pulumi.Input

	ToIamPolicyRuleArrayOutput() IamPolicyRuleArrayOutput
	ToIamPolicyRuleArrayOutputWithContext(context.Context) IamPolicyRuleArrayOutput
}

type IamPolicyRuleArray []IamPolicyRuleInput

func (IamPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamPolicyRule)(nil)).Elem()
}

func (i IamPolicyRuleArray) ToIamPolicyRuleArrayOutput() IamPolicyRuleArrayOutput {
	return i.ToIamPolicyRuleArrayOutputWithContext(context.Background())
}

func (i IamPolicyRuleArray) ToIamPolicyRuleArrayOutputWithContext(ctx context.Context) IamPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamPolicyRuleArrayOutput)
}

type IamPolicyRuleOutput struct{ *pulumi.OutputState }

func (IamPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamPolicyRule)(nil)).Elem()
}

func (o IamPolicyRuleOutput) ToIamPolicyRuleOutput() IamPolicyRuleOutput {
	return o
}

func (o IamPolicyRuleOutput) ToIamPolicyRuleOutputWithContext(ctx context.Context) IamPolicyRuleOutput {
	return o
}

// ID of organization scoped to the rule, this can be used to create a rule for all projects in an organization.
func (o IamPolicyRuleOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IamPolicyRule) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// Names of permission sets bound to the rule.
//
// **_TIP:_**  You can use the Scaleway CLI to list the permissions details. e.g:
func (o IamPolicyRuleOutput) PermissionSetNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamPolicyRule) []string { return v.PermissionSetNames }).(pulumi.StringArrayOutput)
}

// List of project IDs scoped to the rule.
//
// > **Important** One of `organizationId` or `projectIds`  must be set per rule.
func (o IamPolicyRuleOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamPolicyRule) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

type IamPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (IamPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamPolicyRule)(nil)).Elem()
}

func (o IamPolicyRuleArrayOutput) ToIamPolicyRuleArrayOutput() IamPolicyRuleArrayOutput {
	return o
}

func (o IamPolicyRuleArrayOutput) ToIamPolicyRuleArrayOutputWithContext(ctx context.Context) IamPolicyRuleArrayOutput {
	return o
}

func (o IamPolicyRuleArrayOutput) Index(i pulumi.IntInput) IamPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamPolicyRule {
		return vs[0].([]IamPolicyRule)[vs[1].(int)]
	}).(IamPolicyRuleOutput)
}

type InstanceImageAdditionalVolume struct {
	// Date of the volume creation.
	CreationDate *string `pulumi:"creationDate"`
	// The export URI of the volume.
	ExportUri *string `pulumi:"exportUri"`
	// ID of the server containing the volume.
	Id *string `pulumi:"id"`
	// Date of volume latest update.
	ModificationDate *string `pulumi:"modificationDate"`
	// The name of the image. If not provided it will be randomly generated.
	Name *string `pulumi:"name"`
	// The organization ID the volume is associated with.
	Organization *string `pulumi:"organization"`
	// ID of the project the volume is associated with
	Project *string `pulumi:"project"`
	// Description of the server containing the volume (in case the image is a backup from a server).
	Server map[string]string `pulumi:"server"`
	// The size of the volume.
	Size *int `pulumi:"size"`
	// State of the volume.
	State *string `pulumi:"state"`
	// A list of tags to apply to the image.
	Tags []string `pulumi:"tags"`
	// The type of volume, possible values are `lSsd` and `bSsd`.
	VolumeType *string `pulumi:"volumeType"`
	// The zone in which the image should be created.
	Zone *string `pulumi:"zone"`
}

// InstanceImageAdditionalVolumeInput is an input type that accepts InstanceImageAdditionalVolumeArgs and InstanceImageAdditionalVolumeOutput values.
// You can construct a concrete instance of `InstanceImageAdditionalVolumeInput` via:
//
//	InstanceImageAdditionalVolumeArgs{...}
type InstanceImageAdditionalVolumeInput interface {
	pulumi.Input

	ToInstanceImageAdditionalVolumeOutput() InstanceImageAdditionalVolumeOutput
	ToInstanceImageAdditionalVolumeOutputWithContext(context.Context) InstanceImageAdditionalVolumeOutput
}

type InstanceImageAdditionalVolumeArgs struct {
	// Date of the volume creation.
	CreationDate pulumi.StringPtrInput `pulumi:"creationDate"`
	// The export URI of the volume.
	ExportUri pulumi.StringPtrInput `pulumi:"exportUri"`
	// ID of the server containing the volume.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Date of volume latest update.
	ModificationDate pulumi.StringPtrInput `pulumi:"modificationDate"`
	// The name of the image. If not provided it will be randomly generated.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The organization ID the volume is associated with.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// ID of the project the volume is associated with
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Description of the server containing the volume (in case the image is a backup from a server).
	Server pulumi.StringMapInput `pulumi:"server"`
	// The size of the volume.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// State of the volume.
	State pulumi.StringPtrInput `pulumi:"state"`
	// A list of tags to apply to the image.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of volume, possible values are `lSsd` and `bSsd`.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
	// The zone in which the image should be created.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceImageAdditionalVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceImageAdditionalVolume)(nil)).Elem()
}

func (i InstanceImageAdditionalVolumeArgs) ToInstanceImageAdditionalVolumeOutput() InstanceImageAdditionalVolumeOutput {
	return i.ToInstanceImageAdditionalVolumeOutputWithContext(context.Background())
}

func (i InstanceImageAdditionalVolumeArgs) ToInstanceImageAdditionalVolumeOutputWithContext(ctx context.Context) InstanceImageAdditionalVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceImageAdditionalVolumeOutput)
}

// InstanceImageAdditionalVolumeArrayInput is an input type that accepts InstanceImageAdditionalVolumeArray and InstanceImageAdditionalVolumeArrayOutput values.
// You can construct a concrete instance of `InstanceImageAdditionalVolumeArrayInput` via:
//
//	InstanceImageAdditionalVolumeArray{ InstanceImageAdditionalVolumeArgs{...} }
type InstanceImageAdditionalVolumeArrayInput interface {
	pulumi.Input

	ToInstanceImageAdditionalVolumeArrayOutput() InstanceImageAdditionalVolumeArrayOutput
	ToInstanceImageAdditionalVolumeArrayOutputWithContext(context.Context) InstanceImageAdditionalVolumeArrayOutput
}

type InstanceImageAdditionalVolumeArray []InstanceImageAdditionalVolumeInput

func (InstanceImageAdditionalVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceImageAdditionalVolume)(nil)).Elem()
}

func (i InstanceImageAdditionalVolumeArray) ToInstanceImageAdditionalVolumeArrayOutput() InstanceImageAdditionalVolumeArrayOutput {
	return i.ToInstanceImageAdditionalVolumeArrayOutputWithContext(context.Background())
}

func (i InstanceImageAdditionalVolumeArray) ToInstanceImageAdditionalVolumeArrayOutputWithContext(ctx context.Context) InstanceImageAdditionalVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceImageAdditionalVolumeArrayOutput)
}

type InstanceImageAdditionalVolumeOutput struct{ *pulumi.OutputState }

func (InstanceImageAdditionalVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceImageAdditionalVolume)(nil)).Elem()
}

func (o InstanceImageAdditionalVolumeOutput) ToInstanceImageAdditionalVolumeOutput() InstanceImageAdditionalVolumeOutput {
	return o
}

func (o InstanceImageAdditionalVolumeOutput) ToInstanceImageAdditionalVolumeOutputWithContext(ctx context.Context) InstanceImageAdditionalVolumeOutput {
	return o
}

// Date of the volume creation.
func (o InstanceImageAdditionalVolumeOutput) CreationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.CreationDate }).(pulumi.StringPtrOutput)
}

// The export URI of the volume.
func (o InstanceImageAdditionalVolumeOutput) ExportUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.ExportUri }).(pulumi.StringPtrOutput)
}

// ID of the server containing the volume.
func (o InstanceImageAdditionalVolumeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Date of volume latest update.
func (o InstanceImageAdditionalVolumeOutput) ModificationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.ModificationDate }).(pulumi.StringPtrOutput)
}

// The name of the image. If not provided it will be randomly generated.
func (o InstanceImageAdditionalVolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The organization ID the volume is associated with.
func (o InstanceImageAdditionalVolumeOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

// ID of the project the volume is associated with
func (o InstanceImageAdditionalVolumeOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Description of the server containing the volume (in case the image is a backup from a server).
func (o InstanceImageAdditionalVolumeOutput) Server() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) map[string]string { return v.Server }).(pulumi.StringMapOutput)
}

// The size of the volume.
func (o InstanceImageAdditionalVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// State of the volume.
func (o InstanceImageAdditionalVolumeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.State }).(pulumi.StringPtrOutput)
}

// A list of tags to apply to the image.
func (o InstanceImageAdditionalVolumeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of volume, possible values are `lSsd` and `bSsd`.
func (o InstanceImageAdditionalVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

// The zone in which the image should be created.
func (o InstanceImageAdditionalVolumeOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceImageAdditionalVolume) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceImageAdditionalVolumeArrayOutput struct{ *pulumi.OutputState }

func (InstanceImageAdditionalVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceImageAdditionalVolume)(nil)).Elem()
}

func (o InstanceImageAdditionalVolumeArrayOutput) ToInstanceImageAdditionalVolumeArrayOutput() InstanceImageAdditionalVolumeArrayOutput {
	return o
}

func (o InstanceImageAdditionalVolumeArrayOutput) ToInstanceImageAdditionalVolumeArrayOutputWithContext(ctx context.Context) InstanceImageAdditionalVolumeArrayOutput {
	return o
}

func (o InstanceImageAdditionalVolumeArrayOutput) Index(i pulumi.IntInput) InstanceImageAdditionalVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceImageAdditionalVolume {
		return vs[0].([]InstanceImageAdditionalVolume)[vs[1].(int)]
	}).(InstanceImageAdditionalVolumeOutput)
}

type InstanceSecurityGroupInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port *int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupInboundRuleInput is an input type that accepts InstanceSecurityGroupInboundRuleArgs and InstanceSecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupInboundRuleInput` via:
//
//	InstanceSecurityGroupInboundRuleArgs{...}
type InstanceSecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput
	ToInstanceSecurityGroupInboundRuleOutputWithContext(context.Context) InstanceSecurityGroupInboundRuleOutput
}

type InstanceSecurityGroupInboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupInboundRuleArgs) ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput {
	return i.ToInstanceSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupInboundRuleArgs) ToInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupInboundRuleOutput)
}

// InstanceSecurityGroupInboundRuleArrayInput is an input type that accepts InstanceSecurityGroupInboundRuleArray and InstanceSecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupInboundRuleArrayInput` via:
//
//	InstanceSecurityGroupInboundRuleArray{ InstanceSecurityGroupInboundRuleArgs{...} }
type InstanceSecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput
	ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupInboundRuleArrayOutput
}

type InstanceSecurityGroupInboundRuleArray []InstanceSecurityGroupInboundRuleInput

func (InstanceSecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupInboundRuleArray) ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupInboundRuleArray) ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupInboundRuleArrayOutput)
}

type InstanceSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupInboundRuleOutput) ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleOutput) ToInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
//
// Deprecated: Ip address is deprecated. Please use ipRange instead
func (o InstanceSecurityGroupInboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupInboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
func (o InstanceSecurityGroupInboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o InstanceSecurityGroupInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupInboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupInboundRule {
		return vs[0].([]InstanceSecurityGroupInboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupInboundRuleOutput)
}

type InstanceSecurityGroupOutboundRule struct {
	// Action when rule match request (drop or accept)
	Action string `pulumi:"action"`
	// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip *string `pulumi:"ip"`
	// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
	IpRange *string `pulumi:"ipRange"`
	// Network port for this rule
	Port *int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange *string `pulumi:"portRange"`
	// Protocol for this rule (TCP, UDP, ICMP or ANY)
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupOutboundRuleInput is an input type that accepts InstanceSecurityGroupOutboundRuleArgs and InstanceSecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupOutboundRuleInput` via:
//
//	InstanceSecurityGroupOutboundRuleArgs{...}
type InstanceSecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput
	ToInstanceSecurityGroupOutboundRuleOutputWithContext(context.Context) InstanceSecurityGroupOutboundRuleOutput
}

type InstanceSecurityGroupOutboundRuleArgs struct {
	// Action when rule match request (drop or accept)
	Action pulumi.StringInput `pulumi:"action"`
	// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// Network port for this rule
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// Protocol for this rule (TCP, UDP, ICMP or ANY)
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupOutboundRuleArgs) ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput {
	return i.ToInstanceSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupOutboundRuleArgs) ToInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupOutboundRuleOutput)
}

// InstanceSecurityGroupOutboundRuleArrayInput is an input type that accepts InstanceSecurityGroupOutboundRuleArray and InstanceSecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupOutboundRuleArrayInput` via:
//
//	InstanceSecurityGroupOutboundRuleArray{ InstanceSecurityGroupOutboundRuleArgs{...} }
type InstanceSecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput
	ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupOutboundRuleArrayOutput
}

type InstanceSecurityGroupOutboundRuleArray []InstanceSecurityGroupOutboundRuleInput

func (InstanceSecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupOutboundRuleArray) ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupOutboundRuleArray) ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupOutboundRuleArrayOutput)
}

type InstanceSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupOutboundRuleOutput) ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleOutput) ToInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleOutput {
	return o
}

// Action when rule match request (drop or accept)
func (o InstanceSecurityGroupOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
//
// Deprecated: Ip address is deprecated. Please use ipRange instead
func (o InstanceSecurityGroupOutboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
func (o InstanceSecurityGroupOutboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// Network port for this rule
func (o InstanceSecurityGroupOutboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o InstanceSecurityGroupOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// Protocol for this rule (TCP, UDP, ICMP or ANY)
func (o InstanceSecurityGroupOutboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupOutboundRule {
		return vs[0].([]InstanceSecurityGroupOutboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupOutboundRuleOutput)
}

type InstanceSecurityGroupRulesInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port *int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupRulesInboundRuleInput is an input type that accepts InstanceSecurityGroupRulesInboundRuleArgs and InstanceSecurityGroupRulesInboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesInboundRuleInput` via:
//
//	InstanceSecurityGroupRulesInboundRuleArgs{...}
type InstanceSecurityGroupRulesInboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput
	ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(context.Context) InstanceSecurityGroupRulesInboundRuleOutput
}

type InstanceSecurityGroupRulesInboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupRulesInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesInboundRuleArgs) ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput {
	return i.ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesInboundRuleArgs) ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesInboundRuleOutput)
}

// InstanceSecurityGroupRulesInboundRuleArrayInput is an input type that accepts InstanceSecurityGroupRulesInboundRuleArray and InstanceSecurityGroupRulesInboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesInboundRuleArrayInput` via:
//
//	InstanceSecurityGroupRulesInboundRuleArray{ InstanceSecurityGroupRulesInboundRuleArgs{...} }
type InstanceSecurityGroupRulesInboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput
	ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput
}

type InstanceSecurityGroupRulesInboundRuleArray []InstanceSecurityGroupRulesInboundRuleInput

func (InstanceSecurityGroupRulesInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesInboundRuleArray) ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesInboundRuleArray) ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesInboundRuleArrayOutput)
}

type InstanceSecurityGroupRulesInboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesInboundRuleOutput) ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleOutput) ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
//
// Deprecated: Ip address is deprecated. Please use ipRange instead
func (o InstanceSecurityGroupRulesInboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupRulesInboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule apply to. If no port is specified, rule will apply to all port.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o InstanceSecurityGroupRulesInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupRulesInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupRulesInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupRulesInboundRule {
		return vs[0].([]InstanceSecurityGroupRulesInboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupRulesInboundRuleOutput)
}

type InstanceSecurityGroupRulesOutboundRule struct {
	// Action when rule match request (drop or accept)
	Action string `pulumi:"action"`
	// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip *string `pulumi:"ip"`
	// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
	IpRange *string `pulumi:"ipRange"`
	// Network port for this rule
	Port *int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange *string `pulumi:"portRange"`
	// Protocol for this rule (TCP, UDP, ICMP or ANY)
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupRulesOutboundRuleInput is an input type that accepts InstanceSecurityGroupRulesOutboundRuleArgs and InstanceSecurityGroupRulesOutboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesOutboundRuleInput` via:
//
//	InstanceSecurityGroupRulesOutboundRuleArgs{...}
type InstanceSecurityGroupRulesOutboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput
	ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(context.Context) InstanceSecurityGroupRulesOutboundRuleOutput
}

type InstanceSecurityGroupRulesOutboundRuleArgs struct {
	// Action when rule match request (drop or accept)
	Action pulumi.StringInput `pulumi:"action"`
	// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
	//
	// Deprecated: Ip address is deprecated. Please use ipRange instead
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// Network port for this rule
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// Protocol for this rule (TCP, UDP, ICMP or ANY)
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupRulesOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesOutboundRuleArgs) ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput {
	return i.ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesOutboundRuleArgs) ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesOutboundRuleOutput)
}

// InstanceSecurityGroupRulesOutboundRuleArrayInput is an input type that accepts InstanceSecurityGroupRulesOutboundRuleArray and InstanceSecurityGroupRulesOutboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesOutboundRuleArrayInput` via:
//
//	InstanceSecurityGroupRulesOutboundRuleArray{ InstanceSecurityGroupRulesOutboundRuleArgs{...} }
type InstanceSecurityGroupRulesOutboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput
	ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput
}

type InstanceSecurityGroupRulesOutboundRuleArray []InstanceSecurityGroupRulesOutboundRuleInput

func (InstanceSecurityGroupRulesOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesOutboundRuleArray) ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesOutboundRuleArray) ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesOutboundRuleArrayOutput)
}

type InstanceSecurityGroupRulesOutboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesOutboundRuleOutput) ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleOutput) ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleOutput {
	return o
}

// Action when rule match request (drop or accept)
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ipRange should be provided
//
// Deprecated: Ip address is deprecated. Please use ipRange instead
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ipRange should be provided
func (o InstanceSecurityGroupRulesOutboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// Network port for this rule
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o InstanceSecurityGroupRulesOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// Protocol for this rule (TCP, UDP, ICMP or ANY)
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupRulesOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupRulesOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupRulesOutboundRule {
		return vs[0].([]InstanceSecurityGroupRulesOutboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupRulesOutboundRuleOutput)
}

type InstanceServerPrivateNetwork struct {
	// MAC address of the NIC
	MacAddress *string `pulumi:"macAddress"`
	// The Private Network ID
	PnId string `pulumi:"pnId"`
	// The private NIC state
	Status *string `pulumi:"status"`
	// `zone`) The zone in which the server should be created.
	Zone *string `pulumi:"zone"`
}

// InstanceServerPrivateNetworkInput is an input type that accepts InstanceServerPrivateNetworkArgs and InstanceServerPrivateNetworkOutput values.
// You can construct a concrete instance of `InstanceServerPrivateNetworkInput` via:
//
//	InstanceServerPrivateNetworkArgs{...}
type InstanceServerPrivateNetworkInput interface {
	pulumi.Input

	ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput
	ToInstanceServerPrivateNetworkOutputWithContext(context.Context) InstanceServerPrivateNetworkOutput
}

type InstanceServerPrivateNetworkArgs struct {
	// MAC address of the NIC
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The Private Network ID
	PnId pulumi.StringInput `pulumi:"pnId"`
	// The private NIC state
	Status pulumi.StringPtrInput `pulumi:"status"`
	// `zone`) The zone in which the server should be created.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPrivateNetwork)(nil)).Elem()
}

func (i InstanceServerPrivateNetworkArgs) ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput {
	return i.ToInstanceServerPrivateNetworkOutputWithContext(context.Background())
}

func (i InstanceServerPrivateNetworkArgs) ToInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPrivateNetworkOutput)
}

// InstanceServerPrivateNetworkArrayInput is an input type that accepts InstanceServerPrivateNetworkArray and InstanceServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `InstanceServerPrivateNetworkArrayInput` via:
//
//	InstanceServerPrivateNetworkArray{ InstanceServerPrivateNetworkArgs{...} }
type InstanceServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput
	ToInstanceServerPrivateNetworkArrayOutputWithContext(context.Context) InstanceServerPrivateNetworkArrayOutput
}

type InstanceServerPrivateNetworkArray []InstanceServerPrivateNetworkInput

func (InstanceServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPrivateNetwork)(nil)).Elem()
}

func (i InstanceServerPrivateNetworkArray) ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput {
	return i.ToInstanceServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i InstanceServerPrivateNetworkArray) ToInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPrivateNetworkArrayOutput)
}

type InstanceServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (InstanceServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPrivateNetwork)(nil)).Elem()
}

func (o InstanceServerPrivateNetworkOutput) ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput {
	return o
}

func (o InstanceServerPrivateNetworkOutput) ToInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkOutput {
	return o
}

// MAC address of the NIC
func (o InstanceServerPrivateNetworkOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The Private Network ID
func (o InstanceServerPrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// The private NIC state
func (o InstanceServerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// `zone`) The zone in which the server should be created.
func (o InstanceServerPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPrivateNetwork)(nil)).Elem()
}

func (o InstanceServerPrivateNetworkArrayOutput) ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o InstanceServerPrivateNetworkArrayOutput) ToInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o InstanceServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) InstanceServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerPrivateNetwork {
		return vs[0].([]InstanceServerPrivateNetwork)[vs[1].(int)]
	}).(InstanceServerPrivateNetworkOutput)
}

type InstanceServerPublicIp struct {
	// The address of the IP
	Address *string `pulumi:"address"`
	// The ID of the IP
	Id *string `pulumi:"id"`
}

// InstanceServerPublicIpInput is an input type that accepts InstanceServerPublicIpArgs and InstanceServerPublicIpOutput values.
// You can construct a concrete instance of `InstanceServerPublicIpInput` via:
//
//	InstanceServerPublicIpArgs{...}
type InstanceServerPublicIpInput interface {
	pulumi.Input

	ToInstanceServerPublicIpOutput() InstanceServerPublicIpOutput
	ToInstanceServerPublicIpOutputWithContext(context.Context) InstanceServerPublicIpOutput
}

type InstanceServerPublicIpArgs struct {
	// The address of the IP
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The ID of the IP
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (InstanceServerPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPublicIp)(nil)).Elem()
}

func (i InstanceServerPublicIpArgs) ToInstanceServerPublicIpOutput() InstanceServerPublicIpOutput {
	return i.ToInstanceServerPublicIpOutputWithContext(context.Background())
}

func (i InstanceServerPublicIpArgs) ToInstanceServerPublicIpOutputWithContext(ctx context.Context) InstanceServerPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPublicIpOutput)
}

// InstanceServerPublicIpArrayInput is an input type that accepts InstanceServerPublicIpArray and InstanceServerPublicIpArrayOutput values.
// You can construct a concrete instance of `InstanceServerPublicIpArrayInput` via:
//
//	InstanceServerPublicIpArray{ InstanceServerPublicIpArgs{...} }
type InstanceServerPublicIpArrayInput interface {
	pulumi.Input

	ToInstanceServerPublicIpArrayOutput() InstanceServerPublicIpArrayOutput
	ToInstanceServerPublicIpArrayOutputWithContext(context.Context) InstanceServerPublicIpArrayOutput
}

type InstanceServerPublicIpArray []InstanceServerPublicIpInput

func (InstanceServerPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPublicIp)(nil)).Elem()
}

func (i InstanceServerPublicIpArray) ToInstanceServerPublicIpArrayOutput() InstanceServerPublicIpArrayOutput {
	return i.ToInstanceServerPublicIpArrayOutputWithContext(context.Background())
}

func (i InstanceServerPublicIpArray) ToInstanceServerPublicIpArrayOutputWithContext(ctx context.Context) InstanceServerPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPublicIpArrayOutput)
}

type InstanceServerPublicIpOutput struct{ *pulumi.OutputState }

func (InstanceServerPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPublicIp)(nil)).Elem()
}

func (o InstanceServerPublicIpOutput) ToInstanceServerPublicIpOutput() InstanceServerPublicIpOutput {
	return o
}

func (o InstanceServerPublicIpOutput) ToInstanceServerPublicIpOutputWithContext(ctx context.Context) InstanceServerPublicIpOutput {
	return o
}

// The address of the IP
func (o InstanceServerPublicIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPublicIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IP
func (o InstanceServerPublicIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPublicIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type InstanceServerPublicIpArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPublicIp)(nil)).Elem()
}

func (o InstanceServerPublicIpArrayOutput) ToInstanceServerPublicIpArrayOutput() InstanceServerPublicIpArrayOutput {
	return o
}

func (o InstanceServerPublicIpArrayOutput) ToInstanceServerPublicIpArrayOutputWithContext(ctx context.Context) InstanceServerPublicIpArrayOutput {
	return o
}

func (o InstanceServerPublicIpArrayOutput) Index(i pulumi.IntInput) InstanceServerPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerPublicIp {
		return vs[0].([]InstanceServerPublicIp)[vs[1].(int)]
	}).(InstanceServerPublicIpOutput)
}

type InstanceServerRootVolume struct {
	// Set the volume where the boot the server
	Boot *bool `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	//
	// > **Important:** Updates to `root_volume.size_in_gb` will be ignored after the creation of the server.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the server.
	Name *string `pulumi:"name"`
	// Size of the root volume in gigabytes.
	// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
	// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
	// Updates to this field will recreate a new resource.
	SizeInGb *int `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server, allows you to create server with an existing volume. If empty, will be computed to a created volume ID.
	VolumeId *string `pulumi:"volumeId"`
	// Volume type of root volume, can be `bSsd` or `lSsd`, default value depends on server type
	VolumeType *string `pulumi:"volumeType"`
}

// InstanceServerRootVolumeInput is an input type that accepts InstanceServerRootVolumeArgs and InstanceServerRootVolumeOutput values.
// You can construct a concrete instance of `InstanceServerRootVolumeInput` via:
//
//	InstanceServerRootVolumeArgs{...}
type InstanceServerRootVolumeInput interface {
	pulumi.Input

	ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput
	ToInstanceServerRootVolumeOutputWithContext(context.Context) InstanceServerRootVolumeOutput
}

type InstanceServerRootVolumeArgs struct {
	// Set the volume where the boot the server
	Boot pulumi.BoolPtrInput `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	//
	// > **Important:** Updates to `root_volume.size_in_gb` will be ignored after the creation of the server.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the server.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size of the root volume in gigabytes.
	// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
	// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
	// Updates to this field will recreate a new resource.
	SizeInGb pulumi.IntPtrInput `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server, allows you to create server with an existing volume. If empty, will be computed to a created volume ID.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// Volume type of root volume, can be `bSsd` or `lSsd`, default value depends on server type
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceServerRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerRootVolume)(nil)).Elem()
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput {
	return i.ToInstanceServerRootVolumeOutputWithContext(context.Background())
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumeOutputWithContext(ctx context.Context) InstanceServerRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumeOutput)
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return i.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumeOutput).ToInstanceServerRootVolumePtrOutputWithContext(ctx)
}

// InstanceServerRootVolumePtrInput is an input type that accepts InstanceServerRootVolumeArgs, InstanceServerRootVolumePtr and InstanceServerRootVolumePtrOutput values.
// You can construct a concrete instance of `InstanceServerRootVolumePtrInput` via:
//
//	        InstanceServerRootVolumeArgs{...}
//
//	or:
//
//	        nil
type InstanceServerRootVolumePtrInput interface {
	pulumi.Input

	ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput
	ToInstanceServerRootVolumePtrOutputWithContext(context.Context) InstanceServerRootVolumePtrOutput
}

type instanceServerRootVolumePtrType InstanceServerRootVolumeArgs

func InstanceServerRootVolumePtr(v *InstanceServerRootVolumeArgs) InstanceServerRootVolumePtrInput {
	return (*instanceServerRootVolumePtrType)(v)
}

func (*instanceServerRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceServerRootVolume)(nil)).Elem()
}

func (i *instanceServerRootVolumePtrType) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return i.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (i *instanceServerRootVolumePtrType) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumePtrOutput)
}

type InstanceServerRootVolumeOutput struct{ *pulumi.OutputState }

func (InstanceServerRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerRootVolume)(nil)).Elem()
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput {
	return o
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumeOutputWithContext(ctx context.Context) InstanceServerRootVolumeOutput {
	return o
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return o.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceServerRootVolume) *InstanceServerRootVolume {
		return &v
	}).(InstanceServerRootVolumePtrOutput)
}

// Set the volume where the boot the server
func (o InstanceServerRootVolumeOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *bool { return v.Boot }).(pulumi.BoolPtrOutput)
}

// Forces deletion of the root volume on instance termination.
//
// > **Important:** Updates to `root_volume.size_in_gb` will be ignored after the creation of the server.
func (o InstanceServerRootVolumeOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the server.
func (o InstanceServerRootVolumeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size of the root volume in gigabytes.
// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
// Updates to this field will recreate a new resource.
func (o InstanceServerRootVolumeOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *int { return v.SizeInGb }).(pulumi.IntPtrOutput)
}

// The volume ID of the root volume of the server, allows you to create server with an existing volume. If empty, will be computed to a created volume ID.
func (o InstanceServerRootVolumeOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// Volume type of root volume, can be `bSsd` or `lSsd`, default value depends on server type
func (o InstanceServerRootVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceServerRootVolumePtrOutput struct{ *pulumi.OutputState }

func (InstanceServerRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceServerRootVolume)(nil)).Elem()
}

func (o InstanceServerRootVolumePtrOutput) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return o
}

func (o InstanceServerRootVolumePtrOutput) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return o
}

func (o InstanceServerRootVolumePtrOutput) Elem() InstanceServerRootVolumeOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) InstanceServerRootVolume {
		if v != nil {
			return *v
		}
		var ret InstanceServerRootVolume
		return ret
	}).(InstanceServerRootVolumeOutput)
}

// Set the volume where the boot the server
func (o InstanceServerRootVolumePtrOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.Boot
	}).(pulumi.BoolPtrOutput)
}

// Forces deletion of the root volume on instance termination.
//
// > **Important:** Updates to `root_volume.size_in_gb` will be ignored after the creation of the server.
func (o InstanceServerRootVolumePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.BoolPtrOutput)
}

// The name of the server.
func (o InstanceServerRootVolumePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size of the root volume in gigabytes.
// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
// Updates to this field will recreate a new resource.
func (o InstanceServerRootVolumePtrOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGb
	}).(pulumi.IntPtrOutput)
}

// The volume ID of the root volume of the server, allows you to create server with an existing volume. If empty, will be computed to a created volume ID.
func (o InstanceServerRootVolumePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.StringPtrOutput)
}

// Volume type of root volume, can be `bSsd` or `lSsd`, default value depends on server type
func (o InstanceServerRootVolumePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type InstanceSnapshotImport struct {
	// Bucket name containing [qcow2](https://en.wikipedia.org/wiki/Qcow) to import
	Bucket string `pulumi:"bucket"`
	// Key of the object to import
	//
	// > **Note:** The type `unified` could be instantiated on both `lSsd` and `bSsd` volumes.
	Key string `pulumi:"key"`
}

// InstanceSnapshotImportInput is an input type that accepts InstanceSnapshotImportArgs and InstanceSnapshotImportOutput values.
// You can construct a concrete instance of `InstanceSnapshotImportInput` via:
//
//	InstanceSnapshotImportArgs{...}
type InstanceSnapshotImportInput interface {
	pulumi.Input

	ToInstanceSnapshotImportOutput() InstanceSnapshotImportOutput
	ToInstanceSnapshotImportOutputWithContext(context.Context) InstanceSnapshotImportOutput
}

type InstanceSnapshotImportArgs struct {
	// Bucket name containing [qcow2](https://en.wikipedia.org/wiki/Qcow) to import
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Key of the object to import
	//
	// > **Note:** The type `unified` could be instantiated on both `lSsd` and `bSsd` volumes.
	Key pulumi.StringInput `pulumi:"key"`
}

func (InstanceSnapshotImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSnapshotImport)(nil)).Elem()
}

func (i InstanceSnapshotImportArgs) ToInstanceSnapshotImportOutput() InstanceSnapshotImportOutput {
	return i.ToInstanceSnapshotImportOutputWithContext(context.Background())
}

func (i InstanceSnapshotImportArgs) ToInstanceSnapshotImportOutputWithContext(ctx context.Context) InstanceSnapshotImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSnapshotImportOutput)
}

func (i InstanceSnapshotImportArgs) ToInstanceSnapshotImportPtrOutput() InstanceSnapshotImportPtrOutput {
	return i.ToInstanceSnapshotImportPtrOutputWithContext(context.Background())
}

func (i InstanceSnapshotImportArgs) ToInstanceSnapshotImportPtrOutputWithContext(ctx context.Context) InstanceSnapshotImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSnapshotImportOutput).ToInstanceSnapshotImportPtrOutputWithContext(ctx)
}

// InstanceSnapshotImportPtrInput is an input type that accepts InstanceSnapshotImportArgs, InstanceSnapshotImportPtr and InstanceSnapshotImportPtrOutput values.
// You can construct a concrete instance of `InstanceSnapshotImportPtrInput` via:
//
//	        InstanceSnapshotImportArgs{...}
//
//	or:
//
//	        nil
type InstanceSnapshotImportPtrInput interface {
	pulumi.Input

	ToInstanceSnapshotImportPtrOutput() InstanceSnapshotImportPtrOutput
	ToInstanceSnapshotImportPtrOutputWithContext(context.Context) InstanceSnapshotImportPtrOutput
}

type instanceSnapshotImportPtrType InstanceSnapshotImportArgs

func InstanceSnapshotImportPtr(v *InstanceSnapshotImportArgs) InstanceSnapshotImportPtrInput {
	return (*instanceSnapshotImportPtrType)(v)
}

func (*instanceSnapshotImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSnapshotImport)(nil)).Elem()
}

func (i *instanceSnapshotImportPtrType) ToInstanceSnapshotImportPtrOutput() InstanceSnapshotImportPtrOutput {
	return i.ToInstanceSnapshotImportPtrOutputWithContext(context.Background())
}

func (i *instanceSnapshotImportPtrType) ToInstanceSnapshotImportPtrOutputWithContext(ctx context.Context) InstanceSnapshotImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSnapshotImportPtrOutput)
}

type InstanceSnapshotImportOutput struct{ *pulumi.OutputState }

func (InstanceSnapshotImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSnapshotImport)(nil)).Elem()
}

func (o InstanceSnapshotImportOutput) ToInstanceSnapshotImportOutput() InstanceSnapshotImportOutput {
	return o
}

func (o InstanceSnapshotImportOutput) ToInstanceSnapshotImportOutputWithContext(ctx context.Context) InstanceSnapshotImportOutput {
	return o
}

func (o InstanceSnapshotImportOutput) ToInstanceSnapshotImportPtrOutput() InstanceSnapshotImportPtrOutput {
	return o.ToInstanceSnapshotImportPtrOutputWithContext(context.Background())
}

func (o InstanceSnapshotImportOutput) ToInstanceSnapshotImportPtrOutputWithContext(ctx context.Context) InstanceSnapshotImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceSnapshotImport) *InstanceSnapshotImport {
		return &v
	}).(InstanceSnapshotImportPtrOutput)
}

// Bucket name containing [qcow2](https://en.wikipedia.org/wiki/Qcow) to import
func (o InstanceSnapshotImportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSnapshotImport) string { return v.Bucket }).(pulumi.StringOutput)
}

// Key of the object to import
//
// > **Note:** The type `unified` could be instantiated on both `lSsd` and `bSsd` volumes.
func (o InstanceSnapshotImportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSnapshotImport) string { return v.Key }).(pulumi.StringOutput)
}

type InstanceSnapshotImportPtrOutput struct{ *pulumi.OutputState }

func (InstanceSnapshotImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceSnapshotImport)(nil)).Elem()
}

func (o InstanceSnapshotImportPtrOutput) ToInstanceSnapshotImportPtrOutput() InstanceSnapshotImportPtrOutput {
	return o
}

func (o InstanceSnapshotImportPtrOutput) ToInstanceSnapshotImportPtrOutputWithContext(ctx context.Context) InstanceSnapshotImportPtrOutput {
	return o
}

func (o InstanceSnapshotImportPtrOutput) Elem() InstanceSnapshotImportOutput {
	return o.ApplyT(func(v *InstanceSnapshotImport) InstanceSnapshotImport {
		if v != nil {
			return *v
		}
		var ret InstanceSnapshotImport
		return ret
	}).(InstanceSnapshotImportOutput)
}

// Bucket name containing [qcow2](https://en.wikipedia.org/wiki/Qcow) to import
func (o InstanceSnapshotImportPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceSnapshotImport) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Key of the object to import
//
// > **Note:** The type `unified` could be instantiated on both `lSsd` and `bSsd` volumes.
func (o InstanceSnapshotImportPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceSnapshotImport) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type IotDeviceCertificate struct {
	// X509 PEM encoded certificate of the device
	Crt *string `pulumi:"crt"`
	// The private key of the device, in case it is generated by Scaleway.
	Key *string `pulumi:"key"`
}

// IotDeviceCertificateInput is an input type that accepts IotDeviceCertificateArgs and IotDeviceCertificateOutput values.
// You can construct a concrete instance of `IotDeviceCertificateInput` via:
//
//	IotDeviceCertificateArgs{...}
type IotDeviceCertificateInput interface {
	pulumi.Input

	ToIotDeviceCertificateOutput() IotDeviceCertificateOutput
	ToIotDeviceCertificateOutputWithContext(context.Context) IotDeviceCertificateOutput
}

type IotDeviceCertificateArgs struct {
	// X509 PEM encoded certificate of the device
	Crt pulumi.StringPtrInput `pulumi:"crt"`
	// The private key of the device, in case it is generated by Scaleway.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (IotDeviceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceCertificate)(nil)).Elem()
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificateOutput() IotDeviceCertificateOutput {
	return i.ToIotDeviceCertificateOutputWithContext(context.Background())
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificateOutputWithContext(ctx context.Context) IotDeviceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificateOutput)
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return i.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificateOutput).ToIotDeviceCertificatePtrOutputWithContext(ctx)
}

// IotDeviceCertificatePtrInput is an input type that accepts IotDeviceCertificateArgs, IotDeviceCertificatePtr and IotDeviceCertificatePtrOutput values.
// You can construct a concrete instance of `IotDeviceCertificatePtrInput` via:
//
//	        IotDeviceCertificateArgs{...}
//
//	or:
//
//	        nil
type IotDeviceCertificatePtrInput interface {
	pulumi.Input

	ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput
	ToIotDeviceCertificatePtrOutputWithContext(context.Context) IotDeviceCertificatePtrOutput
}

type iotDeviceCertificatePtrType IotDeviceCertificateArgs

func IotDeviceCertificatePtr(v *IotDeviceCertificateArgs) IotDeviceCertificatePtrInput {
	return (*iotDeviceCertificatePtrType)(v)
}

func (*iotDeviceCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceCertificate)(nil)).Elem()
}

func (i *iotDeviceCertificatePtrType) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return i.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (i *iotDeviceCertificatePtrType) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificatePtrOutput)
}

type IotDeviceCertificateOutput struct{ *pulumi.OutputState }

func (IotDeviceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceCertificate)(nil)).Elem()
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificateOutput() IotDeviceCertificateOutput {
	return o
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificateOutputWithContext(ctx context.Context) IotDeviceCertificateOutput {
	return o
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return o.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceCertificate) *IotDeviceCertificate {
		return &v
	}).(IotDeviceCertificatePtrOutput)
}

// X509 PEM encoded certificate of the device
func (o IotDeviceCertificateOutput) Crt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceCertificate) *string { return v.Crt }).(pulumi.StringPtrOutput)
}

// The private key of the device, in case it is generated by Scaleway.
func (o IotDeviceCertificateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceCertificate) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type IotDeviceCertificatePtrOutput struct{ *pulumi.OutputState }

func (IotDeviceCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceCertificate)(nil)).Elem()
}

func (o IotDeviceCertificatePtrOutput) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return o
}

func (o IotDeviceCertificatePtrOutput) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return o
}

func (o IotDeviceCertificatePtrOutput) Elem() IotDeviceCertificateOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) IotDeviceCertificate {
		if v != nil {
			return *v
		}
		var ret IotDeviceCertificate
		return ret
	}).(IotDeviceCertificateOutput)
}

// X509 PEM encoded certificate of the device
func (o IotDeviceCertificatePtrOutput) Crt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Crt
	}).(pulumi.StringPtrOutput)
}

// The private key of the device, in case it is generated by Scaleway.
func (o IotDeviceCertificatePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type IotDeviceMessageFilters struct {
	// Rules used to restrict topics the device can publish to.
	Publish *IotDeviceMessageFiltersPublish `pulumi:"publish"`
	// Rules used to restrict topics the device can subscribe to.
	Subscribe *IotDeviceMessageFiltersSubscribe `pulumi:"subscribe"`
}

// IotDeviceMessageFiltersInput is an input type that accepts IotDeviceMessageFiltersArgs and IotDeviceMessageFiltersOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersInput` via:
//
//	IotDeviceMessageFiltersArgs{...}
type IotDeviceMessageFiltersInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput
	ToIotDeviceMessageFiltersOutputWithContext(context.Context) IotDeviceMessageFiltersOutput
}

type IotDeviceMessageFiltersArgs struct {
	// Rules used to restrict topics the device can publish to.
	Publish IotDeviceMessageFiltersPublishPtrInput `pulumi:"publish"`
	// Rules used to restrict topics the device can subscribe to.
	Subscribe IotDeviceMessageFiltersSubscribePtrInput `pulumi:"subscribe"`
}

func (IotDeviceMessageFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFilters)(nil)).Elem()
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput {
	return i.ToIotDeviceMessageFiltersOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersOutputWithContext(ctx context.Context) IotDeviceMessageFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersOutput)
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return i.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersOutput).ToIotDeviceMessageFiltersPtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersPtrInput is an input type that accepts IotDeviceMessageFiltersArgs, IotDeviceMessageFiltersPtr and IotDeviceMessageFiltersPtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPtrInput` via:
//
//	        IotDeviceMessageFiltersArgs{...}
//
//	or:
//
//	        nil
type IotDeviceMessageFiltersPtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput
	ToIotDeviceMessageFiltersPtrOutputWithContext(context.Context) IotDeviceMessageFiltersPtrOutput
}

type iotDeviceMessageFiltersPtrType IotDeviceMessageFiltersArgs

func IotDeviceMessageFiltersPtr(v *IotDeviceMessageFiltersArgs) IotDeviceMessageFiltersPtrInput {
	return (*iotDeviceMessageFiltersPtrType)(v)
}

func (*iotDeviceMessageFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFilters)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersPtrType) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return i.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersPtrType) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPtrOutput)
}

type IotDeviceMessageFiltersOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFilters)(nil)).Elem()
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput {
	return o
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersOutputWithContext(ctx context.Context) IotDeviceMessageFiltersOutput {
	return o
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return o.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFilters) *IotDeviceMessageFilters {
		return &v
	}).(IotDeviceMessageFiltersPtrOutput)
}

// Rules used to restrict topics the device can publish to.
func (o IotDeviceMessageFiltersOutput) Publish() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFilters) *IotDeviceMessageFiltersPublish { return v.Publish }).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Rules used to restrict topics the device can subscribe to.
func (o IotDeviceMessageFiltersOutput) Subscribe() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFilters) *IotDeviceMessageFiltersSubscribe { return v.Subscribe }).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersPtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFilters)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPtrOutput) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPtrOutput) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPtrOutput) Elem() IotDeviceMessageFiltersOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) IotDeviceMessageFilters {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFilters
		return ret
	}).(IotDeviceMessageFiltersOutput)
}

// Rules used to restrict topics the device can publish to.
func (o IotDeviceMessageFiltersPtrOutput) Publish() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) *IotDeviceMessageFiltersPublish {
		if v == nil {
			return nil
		}
		return v.Publish
	}).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Rules used to restrict topics the device can subscribe to.
func (o IotDeviceMessageFiltersPtrOutput) Subscribe() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) *IotDeviceMessageFiltersSubscribe {
		if v == nil {
			return nil
		}
		return v.Subscribe
	}).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersPublish struct {
	// Publish message filter policy
	Policy *string `pulumi:"policy"`
	// List of topics in the set
	Topics []string `pulumi:"topics"`
}

// IotDeviceMessageFiltersPublishInput is an input type that accepts IotDeviceMessageFiltersPublishArgs and IotDeviceMessageFiltersPublishOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPublishInput` via:
//
//	IotDeviceMessageFiltersPublishArgs{...}
type IotDeviceMessageFiltersPublishInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput
	ToIotDeviceMessageFiltersPublishOutputWithContext(context.Context) IotDeviceMessageFiltersPublishOutput
}

type IotDeviceMessageFiltersPublishArgs struct {
	// Publish message filter policy
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// List of topics in the set
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (IotDeviceMessageFiltersPublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput {
	return i.ToIotDeviceMessageFiltersPublishOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishOutput)
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return i.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishOutput).ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersPublishPtrInput is an input type that accepts IotDeviceMessageFiltersPublishArgs, IotDeviceMessageFiltersPublishPtr and IotDeviceMessageFiltersPublishPtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPublishPtrInput` via:
//
//	        IotDeviceMessageFiltersPublishArgs{...}
//
//	or:
//
//	        nil
type IotDeviceMessageFiltersPublishPtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput
	ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Context) IotDeviceMessageFiltersPublishPtrOutput
}

type iotDeviceMessageFiltersPublishPtrType IotDeviceMessageFiltersPublishArgs

func IotDeviceMessageFiltersPublishPtr(v *IotDeviceMessageFiltersPublishArgs) IotDeviceMessageFiltersPublishPtrInput {
	return (*iotDeviceMessageFiltersPublishPtrType)(v)
}

func (*iotDeviceMessageFiltersPublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersPublishPtrType) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return i.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersPublishPtrType) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishPtrOutput)
}

type IotDeviceMessageFiltersPublishOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFiltersPublish) *IotDeviceMessageFiltersPublish {
		return &v
	}).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Publish message filter policy
func (o IotDeviceMessageFiltersPublishOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersPublish) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// List of topics in the set
func (o IotDeviceMessageFiltersPublishOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersPublish) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersPublishPtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPublishPtrOutput) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishPtrOutput) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishPtrOutput) Elem() IotDeviceMessageFiltersPublishOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) IotDeviceMessageFiltersPublish {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFiltersPublish
		return ret
	}).(IotDeviceMessageFiltersPublishOutput)
}

// Publish message filter policy
func (o IotDeviceMessageFiltersPublishPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// List of topics in the set
func (o IotDeviceMessageFiltersPublishPtrOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) []string {
		if v == nil {
			return nil
		}
		return v.Topics
	}).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersSubscribe struct {
	// Subscribe message filter policy
	Policy *string `pulumi:"policy"`
	// List of topics in the set
	Topics []string `pulumi:"topics"`
}

// IotDeviceMessageFiltersSubscribeInput is an input type that accepts IotDeviceMessageFiltersSubscribeArgs and IotDeviceMessageFiltersSubscribeOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersSubscribeInput` via:
//
//	IotDeviceMessageFiltersSubscribeArgs{...}
type IotDeviceMessageFiltersSubscribeInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput
	ToIotDeviceMessageFiltersSubscribeOutputWithContext(context.Context) IotDeviceMessageFiltersSubscribeOutput
}

type IotDeviceMessageFiltersSubscribeArgs struct {
	// Subscribe message filter policy
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// List of topics in the set
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (IotDeviceMessageFiltersSubscribeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput {
	return i.ToIotDeviceMessageFiltersSubscribeOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribeOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribeOutput)
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return i.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribeOutput).ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersSubscribePtrInput is an input type that accepts IotDeviceMessageFiltersSubscribeArgs, IotDeviceMessageFiltersSubscribePtr and IotDeviceMessageFiltersSubscribePtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersSubscribePtrInput` via:
//
//	        IotDeviceMessageFiltersSubscribeArgs{...}
//
//	or:
//
//	        nil
type IotDeviceMessageFiltersSubscribePtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput
	ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Context) IotDeviceMessageFiltersSubscribePtrOutput
}

type iotDeviceMessageFiltersSubscribePtrType IotDeviceMessageFiltersSubscribeArgs

func IotDeviceMessageFiltersSubscribePtr(v *IotDeviceMessageFiltersSubscribeArgs) IotDeviceMessageFiltersSubscribePtrInput {
	return (*iotDeviceMessageFiltersSubscribePtrType)(v)
}

func (*iotDeviceMessageFiltersSubscribePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersSubscribePtrType) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return i.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersSubscribePtrType) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersSubscribeOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersSubscribeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribeOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribeOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFiltersSubscribe) *IotDeviceMessageFiltersSubscribe {
		return &v
	}).(IotDeviceMessageFiltersSubscribePtrOutput)
}

// Subscribe message filter policy
func (o IotDeviceMessageFiltersSubscribeOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersSubscribe) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// List of topics in the set
func (o IotDeviceMessageFiltersSubscribeOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersSubscribe) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersSubscribePtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersSubscribePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) Elem() IotDeviceMessageFiltersSubscribeOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) IotDeviceMessageFiltersSubscribe {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFiltersSubscribe
		return ret
	}).(IotDeviceMessageFiltersSubscribeOutput)
}

// Subscribe message filter policy
func (o IotDeviceMessageFiltersSubscribePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// List of topics in the set
func (o IotDeviceMessageFiltersSubscribePtrOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) []string {
		if v == nil {
			return nil
		}
		return v.Topics
	}).(pulumi.StringArrayOutput)
}

type IotRouteDatabase struct {
	// The database name (e.g. `measurements`).
	Dbname string `pulumi:"dbname"`
	// The database hostname. Can be an IP or a FQDN.
	Host string `pulumi:"host"`
	// The database password.
	Password string `pulumi:"password"`
	// The database port (e.g. `5432`)
	Port int `pulumi:"port"`
	// The SQL query that will be executed when receiving a message ($TOPIC and $PAYLOAD variables are available, see documentation, e.g. `INSERT INTO mytable(date, topic, value) VALUES (NOW(), $TOPIC, $PAYLOAD)`).
	Query string `pulumi:"query"`
	// The database username.
	Username string `pulumi:"username"`
}

// IotRouteDatabaseInput is an input type that accepts IotRouteDatabaseArgs and IotRouteDatabaseOutput values.
// You can construct a concrete instance of `IotRouteDatabaseInput` via:
//
//	IotRouteDatabaseArgs{...}
type IotRouteDatabaseInput interface {
	pulumi.Input

	ToIotRouteDatabaseOutput() IotRouteDatabaseOutput
	ToIotRouteDatabaseOutputWithContext(context.Context) IotRouteDatabaseOutput
}

type IotRouteDatabaseArgs struct {
	// The database name (e.g. `measurements`).
	Dbname pulumi.StringInput `pulumi:"dbname"`
	// The database hostname. Can be an IP or a FQDN.
	Host pulumi.StringInput `pulumi:"host"`
	// The database password.
	Password pulumi.StringInput `pulumi:"password"`
	// The database port (e.g. `5432`)
	Port pulumi.IntInput `pulumi:"port"`
	// The SQL query that will be executed when receiving a message ($TOPIC and $PAYLOAD variables are available, see documentation, e.g. `INSERT INTO mytable(date, topic, value) VALUES (NOW(), $TOPIC, $PAYLOAD)`).
	Query pulumi.StringInput `pulumi:"query"`
	// The database username.
	Username pulumi.StringInput `pulumi:"username"`
}

func (IotRouteDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteDatabase)(nil)).Elem()
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabaseOutput() IotRouteDatabaseOutput {
	return i.ToIotRouteDatabaseOutputWithContext(context.Background())
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabaseOutputWithContext(ctx context.Context) IotRouteDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabaseOutput)
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return i.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabaseOutput).ToIotRouteDatabasePtrOutputWithContext(ctx)
}

// IotRouteDatabasePtrInput is an input type that accepts IotRouteDatabaseArgs, IotRouteDatabasePtr and IotRouteDatabasePtrOutput values.
// You can construct a concrete instance of `IotRouteDatabasePtrInput` via:
//
//	        IotRouteDatabaseArgs{...}
//
//	or:
//
//	        nil
type IotRouteDatabasePtrInput interface {
	pulumi.Input

	ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput
	ToIotRouteDatabasePtrOutputWithContext(context.Context) IotRouteDatabasePtrOutput
}

type iotRouteDatabasePtrType IotRouteDatabaseArgs

func IotRouteDatabasePtr(v *IotRouteDatabaseArgs) IotRouteDatabasePtrInput {
	return (*iotRouteDatabasePtrType)(v)
}

func (*iotRouteDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteDatabase)(nil)).Elem()
}

func (i *iotRouteDatabasePtrType) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return i.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (i *iotRouteDatabasePtrType) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabasePtrOutput)
}

type IotRouteDatabaseOutput struct{ *pulumi.OutputState }

func (IotRouteDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteDatabase)(nil)).Elem()
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabaseOutput() IotRouteDatabaseOutput {
	return o
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabaseOutputWithContext(ctx context.Context) IotRouteDatabaseOutput {
	return o
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return o.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteDatabase) *IotRouteDatabase {
		return &v
	}).(IotRouteDatabasePtrOutput)
}

// The database name (e.g. `measurements`).
func (o IotRouteDatabaseOutput) Dbname() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Dbname }).(pulumi.StringOutput)
}

// The database hostname. Can be an IP or a FQDN.
func (o IotRouteDatabaseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Host }).(pulumi.StringOutput)
}

// The database password.
func (o IotRouteDatabaseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Password }).(pulumi.StringOutput)
}

// The database port (e.g. `5432`)
func (o IotRouteDatabaseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v IotRouteDatabase) int { return v.Port }).(pulumi.IntOutput)
}

// The SQL query that will be executed when receiving a message ($TOPIC and $PAYLOAD variables are available, see documentation, e.g. `INSERT INTO mytable(date, topic, value) VALUES (NOW(), $TOPIC, $PAYLOAD)`).
func (o IotRouteDatabaseOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Query }).(pulumi.StringOutput)
}

// The database username.
func (o IotRouteDatabaseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Username }).(pulumi.StringOutput)
}

type IotRouteDatabasePtrOutput struct{ *pulumi.OutputState }

func (IotRouteDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteDatabase)(nil)).Elem()
}

func (o IotRouteDatabasePtrOutput) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return o
}

func (o IotRouteDatabasePtrOutput) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return o
}

func (o IotRouteDatabasePtrOutput) Elem() IotRouteDatabaseOutput {
	return o.ApplyT(func(v *IotRouteDatabase) IotRouteDatabase {
		if v != nil {
			return *v
		}
		var ret IotRouteDatabase
		return ret
	}).(IotRouteDatabaseOutput)
}

// The database name (e.g. `measurements`).
func (o IotRouteDatabasePtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Dbname
	}).(pulumi.StringPtrOutput)
}

// The database hostname. Can be an IP or a FQDN.
func (o IotRouteDatabasePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The database password.
func (o IotRouteDatabasePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The database port (e.g. `5432`)
func (o IotRouteDatabasePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The SQL query that will be executed when receiving a message ($TOPIC and $PAYLOAD variables are available, see documentation, e.g. `INSERT INTO mytable(date, topic, value) VALUES (NOW(), $TOPIC, $PAYLOAD)`).
func (o IotRouteDatabasePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

// The database username.
func (o IotRouteDatabasePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type IotRouteRest struct {
	// a map of the extra headers to send with the HTTP call (e.g. `X-Header = Value`).
	Headers map[string]string `pulumi:"headers"`
	// The URI of the Rest endpoint (e.g. `https://internal.mycompany.com/ingest/mqttdata`).
	Uri string `pulumi:"uri"`
	// The HTTP Verb used to call Rest URI (e.g. `post`).
	Verb string `pulumi:"verb"`
}

// IotRouteRestInput is an input type that accepts IotRouteRestArgs and IotRouteRestOutput values.
// You can construct a concrete instance of `IotRouteRestInput` via:
//
//	IotRouteRestArgs{...}
type IotRouteRestInput interface {
	pulumi.Input

	ToIotRouteRestOutput() IotRouteRestOutput
	ToIotRouteRestOutputWithContext(context.Context) IotRouteRestOutput
}

type IotRouteRestArgs struct {
	// a map of the extra headers to send with the HTTP call (e.g. `X-Header = Value`).
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// The URI of the Rest endpoint (e.g. `https://internal.mycompany.com/ingest/mqttdata`).
	Uri pulumi.StringInput `pulumi:"uri"`
	// The HTTP Verb used to call Rest URI (e.g. `post`).
	Verb pulumi.StringInput `pulumi:"verb"`
}

func (IotRouteRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteRest)(nil)).Elem()
}

func (i IotRouteRestArgs) ToIotRouteRestOutput() IotRouteRestOutput {
	return i.ToIotRouteRestOutputWithContext(context.Background())
}

func (i IotRouteRestArgs) ToIotRouteRestOutputWithContext(ctx context.Context) IotRouteRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestOutput)
}

func (i IotRouteRestArgs) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return i.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (i IotRouteRestArgs) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestOutput).ToIotRouteRestPtrOutputWithContext(ctx)
}

// IotRouteRestPtrInput is an input type that accepts IotRouteRestArgs, IotRouteRestPtr and IotRouteRestPtrOutput values.
// You can construct a concrete instance of `IotRouteRestPtrInput` via:
//
//	        IotRouteRestArgs{...}
//
//	or:
//
//	        nil
type IotRouteRestPtrInput interface {
	pulumi.Input

	ToIotRouteRestPtrOutput() IotRouteRestPtrOutput
	ToIotRouteRestPtrOutputWithContext(context.Context) IotRouteRestPtrOutput
}

type iotRouteRestPtrType IotRouteRestArgs

func IotRouteRestPtr(v *IotRouteRestArgs) IotRouteRestPtrInput {
	return (*iotRouteRestPtrType)(v)
}

func (*iotRouteRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteRest)(nil)).Elem()
}

func (i *iotRouteRestPtrType) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return i.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (i *iotRouteRestPtrType) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestPtrOutput)
}

type IotRouteRestOutput struct{ *pulumi.OutputState }

func (IotRouteRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteRest)(nil)).Elem()
}

func (o IotRouteRestOutput) ToIotRouteRestOutput() IotRouteRestOutput {
	return o
}

func (o IotRouteRestOutput) ToIotRouteRestOutputWithContext(ctx context.Context) IotRouteRestOutput {
	return o
}

func (o IotRouteRestOutput) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return o.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (o IotRouteRestOutput) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteRest) *IotRouteRest {
		return &v
	}).(IotRouteRestPtrOutput)
}

// a map of the extra headers to send with the HTTP call (e.g. `X-Header = Value`).
func (o IotRouteRestOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v IotRouteRest) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// The URI of the Rest endpoint (e.g. `https://internal.mycompany.com/ingest/mqttdata`).
func (o IotRouteRestOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteRest) string { return v.Uri }).(pulumi.StringOutput)
}

// The HTTP Verb used to call Rest URI (e.g. `post`).
func (o IotRouteRestOutput) Verb() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteRest) string { return v.Verb }).(pulumi.StringOutput)
}

type IotRouteRestPtrOutput struct{ *pulumi.OutputState }

func (IotRouteRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteRest)(nil)).Elem()
}

func (o IotRouteRestPtrOutput) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return o
}

func (o IotRouteRestPtrOutput) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return o
}

func (o IotRouteRestPtrOutput) Elem() IotRouteRestOutput {
	return o.ApplyT(func(v *IotRouteRest) IotRouteRest {
		if v != nil {
			return *v
		}
		var ret IotRouteRest
		return ret
	}).(IotRouteRestOutput)
}

// a map of the extra headers to send with the HTTP call (e.g. `X-Header = Value`).
func (o IotRouteRestPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IotRouteRest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// The URI of the Rest endpoint (e.g. `https://internal.mycompany.com/ingest/mqttdata`).
func (o IotRouteRestPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteRest) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// The HTTP Verb used to call Rest URI (e.g. `post`).
func (o IotRouteRestPtrOutput) Verb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteRest) *string {
		if v == nil {
			return nil
		}
		return &v.Verb
	}).(pulumi.StringPtrOutput)
}

type IotRouteS3 struct {
	// The name of the S3 route's destination bucket (e.g. `my-object-storage`).
	BucketName string `pulumi:"bucketName"`
	// The region of the S3 route's destination bucket (e.g. `fr-par`).
	BucketRegion string `pulumi:"bucketRegion"`
	// The string to prefix object names with (e.g. `mykeyprefix-`).
	ObjectPrefix *string `pulumi:"objectPrefix"`
	// How the S3 route's objects will be created (e.g. `perTopic`). See [documentation](https://www.scaleway.com/en/docs/scaleway-iothub-route/#-Messages-Store-Strategies) for behaviour details.
	Strategy string `pulumi:"strategy"`
}

// IotRouteS3Input is an input type that accepts IotRouteS3Args and IotRouteS3Output values.
// You can construct a concrete instance of `IotRouteS3Input` via:
//
//	IotRouteS3Args{...}
type IotRouteS3Input interface {
	pulumi.Input

	ToIotRouteS3Output() IotRouteS3Output
	ToIotRouteS3OutputWithContext(context.Context) IotRouteS3Output
}

type IotRouteS3Args struct {
	// The name of the S3 route's destination bucket (e.g. `my-object-storage`).
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The region of the S3 route's destination bucket (e.g. `fr-par`).
	BucketRegion pulumi.StringInput `pulumi:"bucketRegion"`
	// The string to prefix object names with (e.g. `mykeyprefix-`).
	ObjectPrefix pulumi.StringPtrInput `pulumi:"objectPrefix"`
	// How the S3 route's objects will be created (e.g. `perTopic`). See [documentation](https://www.scaleway.com/en/docs/scaleway-iothub-route/#-Messages-Store-Strategies) for behaviour details.
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (IotRouteS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteS3)(nil)).Elem()
}

func (i IotRouteS3Args) ToIotRouteS3Output() IotRouteS3Output {
	return i.ToIotRouteS3OutputWithContext(context.Background())
}

func (i IotRouteS3Args) ToIotRouteS3OutputWithContext(ctx context.Context) IotRouteS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3Output)
}

func (i IotRouteS3Args) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return i.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (i IotRouteS3Args) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3Output).ToIotRouteS3PtrOutputWithContext(ctx)
}

// IotRouteS3PtrInput is an input type that accepts IotRouteS3Args, IotRouteS3Ptr and IotRouteS3PtrOutput values.
// You can construct a concrete instance of `IotRouteS3PtrInput` via:
//
//	        IotRouteS3Args{...}
//
//	or:
//
//	        nil
type IotRouteS3PtrInput interface {
	pulumi.Input

	ToIotRouteS3PtrOutput() IotRouteS3PtrOutput
	ToIotRouteS3PtrOutputWithContext(context.Context) IotRouteS3PtrOutput
}

type iotRouteS3PtrType IotRouteS3Args

func IotRouteS3Ptr(v *IotRouteS3Args) IotRouteS3PtrInput {
	return (*iotRouteS3PtrType)(v)
}

func (*iotRouteS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteS3)(nil)).Elem()
}

func (i *iotRouteS3PtrType) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return i.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (i *iotRouteS3PtrType) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3PtrOutput)
}

type IotRouteS3Output struct{ *pulumi.OutputState }

func (IotRouteS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteS3)(nil)).Elem()
}

func (o IotRouteS3Output) ToIotRouteS3Output() IotRouteS3Output {
	return o
}

func (o IotRouteS3Output) ToIotRouteS3OutputWithContext(ctx context.Context) IotRouteS3Output {
	return o
}

func (o IotRouteS3Output) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return o.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (o IotRouteS3Output) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteS3) *IotRouteS3 {
		return &v
	}).(IotRouteS3PtrOutput)
}

// The name of the S3 route's destination bucket (e.g. `my-object-storage`).
func (o IotRouteS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// The region of the S3 route's destination bucket (e.g. `fr-par`).
func (o IotRouteS3Output) BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.BucketRegion }).(pulumi.StringOutput)
}

// The string to prefix object names with (e.g. `mykeyprefix-`).
func (o IotRouteS3Output) ObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotRouteS3) *string { return v.ObjectPrefix }).(pulumi.StringPtrOutput)
}

// How the S3 route's objects will be created (e.g. `perTopic`). See [documentation](https://www.scaleway.com/en/docs/scaleway-iothub-route/#-Messages-Store-Strategies) for behaviour details.
func (o IotRouteS3Output) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.Strategy }).(pulumi.StringOutput)
}

type IotRouteS3PtrOutput struct{ *pulumi.OutputState }

func (IotRouteS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteS3)(nil)).Elem()
}

func (o IotRouteS3PtrOutput) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return o
}

func (o IotRouteS3PtrOutput) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return o
}

func (o IotRouteS3PtrOutput) Elem() IotRouteS3Output {
	return o.ApplyT(func(v *IotRouteS3) IotRouteS3 {
		if v != nil {
			return *v
		}
		var ret IotRouteS3
		return ret
	}).(IotRouteS3Output)
}

// The name of the S3 route's destination bucket (e.g. `my-object-storage`).
func (o IotRouteS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The region of the S3 route's destination bucket (e.g. `fr-par`).
func (o IotRouteS3PtrOutput) BucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketRegion
	}).(pulumi.StringPtrOutput)
}

// The string to prefix object names with (e.g. `mykeyprefix-`).
func (o IotRouteS3PtrOutput) ObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return v.ObjectPrefix
	}).(pulumi.StringPtrOutput)
}

// How the S3 route's objects will be created (e.g. `perTopic`). See [documentation](https://www.scaleway.com/en/docs/scaleway-iothub-route/#-Messages-Store-Strategies) for behaviour details.
func (o IotRouteS3PtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

type IpamIpResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The MAC Address of the resource the IP is attached to.
	MacAddress *string `pulumi:"macAddress"`
	// The name of the resource the IP is attached to.
	Name *string `pulumi:"name"`
	// The type of resource the IP is attached to.
	Type *string `pulumi:"type"`
}

// IpamIpResourceInput is an input type that accepts IpamIpResourceArgs and IpamIpResourceOutput values.
// You can construct a concrete instance of `IpamIpResourceInput` via:
//
//	IpamIpResourceArgs{...}
type IpamIpResourceInput interface {
	pulumi.Input

	ToIpamIpResourceOutput() IpamIpResourceOutput
	ToIpamIpResourceOutputWithContext(context.Context) IpamIpResourceOutput
}

type IpamIpResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The MAC Address of the resource the IP is attached to.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The name of the resource the IP is attached to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of resource the IP is attached to.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (IpamIpResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpResource)(nil)).Elem()
}

func (i IpamIpResourceArgs) ToIpamIpResourceOutput() IpamIpResourceOutput {
	return i.ToIpamIpResourceOutputWithContext(context.Background())
}

func (i IpamIpResourceArgs) ToIpamIpResourceOutputWithContext(ctx context.Context) IpamIpResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpResourceOutput)
}

// IpamIpResourceArrayInput is an input type that accepts IpamIpResourceArray and IpamIpResourceArrayOutput values.
// You can construct a concrete instance of `IpamIpResourceArrayInput` via:
//
//	IpamIpResourceArray{ IpamIpResourceArgs{...} }
type IpamIpResourceArrayInput interface {
	pulumi.Input

	ToIpamIpResourceArrayOutput() IpamIpResourceArrayOutput
	ToIpamIpResourceArrayOutputWithContext(context.Context) IpamIpResourceArrayOutput
}

type IpamIpResourceArray []IpamIpResourceInput

func (IpamIpResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpResource)(nil)).Elem()
}

func (i IpamIpResourceArray) ToIpamIpResourceArrayOutput() IpamIpResourceArrayOutput {
	return i.ToIpamIpResourceArrayOutputWithContext(context.Background())
}

func (i IpamIpResourceArray) ToIpamIpResourceArrayOutputWithContext(ctx context.Context) IpamIpResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpResourceArrayOutput)
}

type IpamIpResourceOutput struct{ *pulumi.OutputState }

func (IpamIpResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpResource)(nil)).Elem()
}

func (o IpamIpResourceOutput) ToIpamIpResourceOutput() IpamIpResourceOutput {
	return o
}

func (o IpamIpResourceOutput) ToIpamIpResourceOutputWithContext(ctx context.Context) IpamIpResourceOutput {
	return o
}

// The ID of the resource that the IP is bound to.
func (o IpamIpResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The MAC Address of the resource the IP is attached to.
func (o IpamIpResourceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpResource) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The name of the resource the IP is attached to.
func (o IpamIpResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of resource the IP is attached to.
func (o IpamIpResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IpamIpResourceArrayOutput struct{ *pulumi.OutputState }

func (IpamIpResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpResource)(nil)).Elem()
}

func (o IpamIpResourceArrayOutput) ToIpamIpResourceArrayOutput() IpamIpResourceArrayOutput {
	return o
}

func (o IpamIpResourceArrayOutput) ToIpamIpResourceArrayOutputWithContext(ctx context.Context) IpamIpResourceArrayOutput {
	return o
}

func (o IpamIpResourceArrayOutput) Index(i pulumi.IntInput) IpamIpResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamIpResource {
		return vs[0].([]IpamIpResource)[vs[1].(int)]
	}).(IpamIpResourceOutput)
}

type IpamIpReverse struct {
	// Request a specific IP in the requested source pool.
	Address *string `pulumi:"address"`
	// The reverse domain name.
	Hostname *string `pulumi:"hostname"`
}

// IpamIpReverseInput is an input type that accepts IpamIpReverseArgs and IpamIpReverseOutput values.
// You can construct a concrete instance of `IpamIpReverseInput` via:
//
//	IpamIpReverseArgs{...}
type IpamIpReverseInput interface {
	pulumi.Input

	ToIpamIpReverseOutput() IpamIpReverseOutput
	ToIpamIpReverseOutputWithContext(context.Context) IpamIpReverseOutput
}

type IpamIpReverseArgs struct {
	// Request a specific IP in the requested source pool.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The reverse domain name.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
}

func (IpamIpReverseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpReverse)(nil)).Elem()
}

func (i IpamIpReverseArgs) ToIpamIpReverseOutput() IpamIpReverseOutput {
	return i.ToIpamIpReverseOutputWithContext(context.Background())
}

func (i IpamIpReverseArgs) ToIpamIpReverseOutputWithContext(ctx context.Context) IpamIpReverseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpReverseOutput)
}

// IpamIpReverseArrayInput is an input type that accepts IpamIpReverseArray and IpamIpReverseArrayOutput values.
// You can construct a concrete instance of `IpamIpReverseArrayInput` via:
//
//	IpamIpReverseArray{ IpamIpReverseArgs{...} }
type IpamIpReverseArrayInput interface {
	pulumi.Input

	ToIpamIpReverseArrayOutput() IpamIpReverseArrayOutput
	ToIpamIpReverseArrayOutputWithContext(context.Context) IpamIpReverseArrayOutput
}

type IpamIpReverseArray []IpamIpReverseInput

func (IpamIpReverseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpReverse)(nil)).Elem()
}

func (i IpamIpReverseArray) ToIpamIpReverseArrayOutput() IpamIpReverseArrayOutput {
	return i.ToIpamIpReverseArrayOutputWithContext(context.Background())
}

func (i IpamIpReverseArray) ToIpamIpReverseArrayOutputWithContext(ctx context.Context) IpamIpReverseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpReverseArrayOutput)
}

type IpamIpReverseOutput struct{ *pulumi.OutputState }

func (IpamIpReverseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpReverse)(nil)).Elem()
}

func (o IpamIpReverseOutput) ToIpamIpReverseOutput() IpamIpReverseOutput {
	return o
}

func (o IpamIpReverseOutput) ToIpamIpReverseOutputWithContext(ctx context.Context) IpamIpReverseOutput {
	return o
}

// Request a specific IP in the requested source pool.
func (o IpamIpReverseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpReverse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The reverse domain name.
func (o IpamIpReverseOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpReverse) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

type IpamIpReverseArrayOutput struct{ *pulumi.OutputState }

func (IpamIpReverseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpReverse)(nil)).Elem()
}

func (o IpamIpReverseArrayOutput) ToIpamIpReverseArrayOutput() IpamIpReverseArrayOutput {
	return o
}

func (o IpamIpReverseArrayOutput) ToIpamIpReverseArrayOutputWithContext(ctx context.Context) IpamIpReverseArrayOutput {
	return o
}

func (o IpamIpReverseArrayOutput) Index(i pulumi.IntInput) IpamIpReverseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamIpReverse {
		return vs[0].([]IpamIpReverse)[vs[1].(int)]
	}).(IpamIpReverseOutput)
}

type IpamIpSource struct {
	// The private network the IP lives in if the IP is a private IP.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// The private network subnet the IP lives in if the IP is a private IP in a private network.
	SubnetId *string `pulumi:"subnetId"`
	// The zone the IP lives in if the IP is a public zoned one
	Zonal *string `pulumi:"zonal"`
}

// IpamIpSourceInput is an input type that accepts IpamIpSourceArgs and IpamIpSourceOutput values.
// You can construct a concrete instance of `IpamIpSourceInput` via:
//
//	IpamIpSourceArgs{...}
type IpamIpSourceInput interface {
	pulumi.Input

	ToIpamIpSourceOutput() IpamIpSourceOutput
	ToIpamIpSourceOutputWithContext(context.Context) IpamIpSourceOutput
}

type IpamIpSourceArgs struct {
	// The private network the IP lives in if the IP is a private IP.
	PrivateNetworkId pulumi.StringPtrInput `pulumi:"privateNetworkId"`
	// The private network subnet the IP lives in if the IP is a private IP in a private network.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The zone the IP lives in if the IP is a public zoned one
	Zonal pulumi.StringPtrInput `pulumi:"zonal"`
}

func (IpamIpSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpSource)(nil)).Elem()
}

func (i IpamIpSourceArgs) ToIpamIpSourceOutput() IpamIpSourceOutput {
	return i.ToIpamIpSourceOutputWithContext(context.Background())
}

func (i IpamIpSourceArgs) ToIpamIpSourceOutputWithContext(ctx context.Context) IpamIpSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpSourceOutput)
}

// IpamIpSourceArrayInput is an input type that accepts IpamIpSourceArray and IpamIpSourceArrayOutput values.
// You can construct a concrete instance of `IpamIpSourceArrayInput` via:
//
//	IpamIpSourceArray{ IpamIpSourceArgs{...} }
type IpamIpSourceArrayInput interface {
	pulumi.Input

	ToIpamIpSourceArrayOutput() IpamIpSourceArrayOutput
	ToIpamIpSourceArrayOutputWithContext(context.Context) IpamIpSourceArrayOutput
}

type IpamIpSourceArray []IpamIpSourceInput

func (IpamIpSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpSource)(nil)).Elem()
}

func (i IpamIpSourceArray) ToIpamIpSourceArrayOutput() IpamIpSourceArrayOutput {
	return i.ToIpamIpSourceArrayOutputWithContext(context.Background())
}

func (i IpamIpSourceArray) ToIpamIpSourceArrayOutputWithContext(ctx context.Context) IpamIpSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamIpSourceArrayOutput)
}

type IpamIpSourceOutput struct{ *pulumi.OutputState }

func (IpamIpSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpamIpSource)(nil)).Elem()
}

func (o IpamIpSourceOutput) ToIpamIpSourceOutput() IpamIpSourceOutput {
	return o
}

func (o IpamIpSourceOutput) ToIpamIpSourceOutputWithContext(ctx context.Context) IpamIpSourceOutput {
	return o
}

// The private network the IP lives in if the IP is a private IP.
func (o IpamIpSourceOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpSource) *string { return v.PrivateNetworkId }).(pulumi.StringPtrOutput)
}

// The private network subnet the IP lives in if the IP is a private IP in a private network.
func (o IpamIpSourceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpSource) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The zone the IP lives in if the IP is a public zoned one
func (o IpamIpSourceOutput) Zonal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpamIpSource) *string { return v.Zonal }).(pulumi.StringPtrOutput)
}

type IpamIpSourceArrayOutput struct{ *pulumi.OutputState }

func (IpamIpSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpamIpSource)(nil)).Elem()
}

func (o IpamIpSourceArrayOutput) ToIpamIpSourceArrayOutput() IpamIpSourceArrayOutput {
	return o
}

func (o IpamIpSourceArrayOutput) ToIpamIpSourceArrayOutputWithContext(ctx context.Context) IpamIpSourceArrayOutput {
	return o
}

func (o IpamIpSourceArrayOutput) Index(i pulumi.IntInput) IpamIpSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpamIpSource {
		return vs[0].([]IpamIpSource)[vs[1].(int)]
	}).(IpamIpSourceOutput)
}

type JobDefinitionCron struct {
	Schedule string `pulumi:"schedule"`
	Timezone string `pulumi:"timezone"`
}

// JobDefinitionCronInput is an input type that accepts JobDefinitionCronArgs and JobDefinitionCronOutput values.
// You can construct a concrete instance of `JobDefinitionCronInput` via:
//
//	JobDefinitionCronArgs{...}
type JobDefinitionCronInput interface {
	pulumi.Input

	ToJobDefinitionCronOutput() JobDefinitionCronOutput
	ToJobDefinitionCronOutputWithContext(context.Context) JobDefinitionCronOutput
}

type JobDefinitionCronArgs struct {
	Schedule pulumi.StringInput `pulumi:"schedule"`
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (JobDefinitionCronArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionCron)(nil)).Elem()
}

func (i JobDefinitionCronArgs) ToJobDefinitionCronOutput() JobDefinitionCronOutput {
	return i.ToJobDefinitionCronOutputWithContext(context.Background())
}

func (i JobDefinitionCronArgs) ToJobDefinitionCronOutputWithContext(ctx context.Context) JobDefinitionCronOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionCronOutput)
}

func (i JobDefinitionCronArgs) ToJobDefinitionCronPtrOutput() JobDefinitionCronPtrOutput {
	return i.ToJobDefinitionCronPtrOutputWithContext(context.Background())
}

func (i JobDefinitionCronArgs) ToJobDefinitionCronPtrOutputWithContext(ctx context.Context) JobDefinitionCronPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionCronOutput).ToJobDefinitionCronPtrOutputWithContext(ctx)
}

// JobDefinitionCronPtrInput is an input type that accepts JobDefinitionCronArgs, JobDefinitionCronPtr and JobDefinitionCronPtrOutput values.
// You can construct a concrete instance of `JobDefinitionCronPtrInput` via:
//
//	        JobDefinitionCronArgs{...}
//
//	or:
//
//	        nil
type JobDefinitionCronPtrInput interface {
	pulumi.Input

	ToJobDefinitionCronPtrOutput() JobDefinitionCronPtrOutput
	ToJobDefinitionCronPtrOutputWithContext(context.Context) JobDefinitionCronPtrOutput
}

type jobDefinitionCronPtrType JobDefinitionCronArgs

func JobDefinitionCronPtr(v *JobDefinitionCronArgs) JobDefinitionCronPtrInput {
	return (*jobDefinitionCronPtrType)(v)
}

func (*jobDefinitionCronPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionCron)(nil)).Elem()
}

func (i *jobDefinitionCronPtrType) ToJobDefinitionCronPtrOutput() JobDefinitionCronPtrOutput {
	return i.ToJobDefinitionCronPtrOutputWithContext(context.Background())
}

func (i *jobDefinitionCronPtrType) ToJobDefinitionCronPtrOutputWithContext(ctx context.Context) JobDefinitionCronPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDefinitionCronPtrOutput)
}

type JobDefinitionCronOutput struct{ *pulumi.OutputState }

func (JobDefinitionCronOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDefinitionCron)(nil)).Elem()
}

func (o JobDefinitionCronOutput) ToJobDefinitionCronOutput() JobDefinitionCronOutput {
	return o
}

func (o JobDefinitionCronOutput) ToJobDefinitionCronOutputWithContext(ctx context.Context) JobDefinitionCronOutput {
	return o
}

func (o JobDefinitionCronOutput) ToJobDefinitionCronPtrOutput() JobDefinitionCronPtrOutput {
	return o.ToJobDefinitionCronPtrOutputWithContext(context.Background())
}

func (o JobDefinitionCronOutput) ToJobDefinitionCronPtrOutputWithContext(ctx context.Context) JobDefinitionCronPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDefinitionCron) *JobDefinitionCron {
		return &v
	}).(JobDefinitionCronPtrOutput)
}

func (o JobDefinitionCronOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionCron) string { return v.Schedule }).(pulumi.StringOutput)
}

func (o JobDefinitionCronOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v JobDefinitionCron) string { return v.Timezone }).(pulumi.StringOutput)
}

type JobDefinitionCronPtrOutput struct{ *pulumi.OutputState }

func (JobDefinitionCronPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDefinitionCron)(nil)).Elem()
}

func (o JobDefinitionCronPtrOutput) ToJobDefinitionCronPtrOutput() JobDefinitionCronPtrOutput {
	return o
}

func (o JobDefinitionCronPtrOutput) ToJobDefinitionCronPtrOutputWithContext(ctx context.Context) JobDefinitionCronPtrOutput {
	return o
}

func (o JobDefinitionCronPtrOutput) Elem() JobDefinitionCronOutput {
	return o.ApplyT(func(v *JobDefinitionCron) JobDefinitionCron {
		if v != nil {
			return *v
		}
		var ret JobDefinitionCron
		return ret
	}).(JobDefinitionCronOutput)
}

func (o JobDefinitionCronPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionCron) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

func (o JobDefinitionCronPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDefinitionCron) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAutoUpgrade struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

// KubernetesClusterAutoUpgradeInput is an input type that accepts KubernetesClusterAutoUpgradeArgs and KubernetesClusterAutoUpgradeOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoUpgradeInput` via:
//
//	KubernetesClusterAutoUpgradeArgs{...}
type KubernetesClusterAutoUpgradeInput interface {
	pulumi.Input

	ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput
	ToKubernetesClusterAutoUpgradeOutputWithContext(context.Context) KubernetesClusterAutoUpgradeOutput
}

type KubernetesClusterAutoUpgradeArgs struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay pulumi.StringInput `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour pulumi.IntInput `pulumi:"maintenanceWindowStartHour"`
}

func (KubernetesClusterAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput {
	return i.ToKubernetesClusterAutoUpgradeOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradeOutput)
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return i.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradeOutput).ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx)
}

// KubernetesClusterAutoUpgradePtrInput is an input type that accepts KubernetesClusterAutoUpgradeArgs, KubernetesClusterAutoUpgradePtr and KubernetesClusterAutoUpgradePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoUpgradePtrInput` via:
//
//	        KubernetesClusterAutoUpgradeArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterAutoUpgradePtrInput interface {
	pulumi.Input

	ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput
	ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Context) KubernetesClusterAutoUpgradePtrOutput
}

type kubernetesClusterAutoUpgradePtrType KubernetesClusterAutoUpgradeArgs

func KubernetesClusterAutoUpgradePtr(v *KubernetesClusterAutoUpgradeArgs) KubernetesClusterAutoUpgradePtrInput {
	return (*kubernetesClusterAutoUpgradePtrType)(v)
}

func (*kubernetesClusterAutoUpgradePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i *kubernetesClusterAutoUpgradePtrType) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return i.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAutoUpgradePtrType) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradePtrOutput)
}

type KubernetesClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return o.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAutoUpgrade) *KubernetesClusterAutoUpgrade {
		return &v
	}).(KubernetesClusterAutoUpgradePtrOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o KubernetesClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o KubernetesClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o KubernetesClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type KubernetesClusterAutoUpgradePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoUpgradePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterAutoUpgradePtrOutput) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterAutoUpgradePtrOutput) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterAutoUpgradePtrOutput) Elem() KubernetesClusterAutoUpgradeOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) KubernetesClusterAutoUpgrade {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAutoUpgrade
		return ret
	}).(KubernetesClusterAutoUpgradeOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o KubernetesClusterAutoUpgradePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o KubernetesClusterAutoUpgradePtrOutput) MaintenanceWindowDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowDay
	}).(pulumi.StringPtrOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o KubernetesClusterAutoUpgradePtrOutput) MaintenanceWindowStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowStartHour
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterAutoscalerConfig struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups *bool `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown *bool `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator *string `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander *string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff *int `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization *bool `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec *int `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime *string `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold *float64 `pulumi:"scaleDownUtilizationThreshold"`
}

// KubernetesClusterAutoscalerConfigInput is an input type that accepts KubernetesClusterAutoscalerConfigArgs and KubernetesClusterAutoscalerConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoscalerConfigInput` via:
//
//	KubernetesClusterAutoscalerConfigArgs{...}
type KubernetesClusterAutoscalerConfigInput interface {
	pulumi.Input

	ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput
	ToKubernetesClusterAutoscalerConfigOutputWithContext(context.Context) KubernetesClusterAutoscalerConfigOutput
}

type KubernetesClusterAutoscalerConfigArgs struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups pulumi.BoolPtrInput `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown pulumi.BoolPtrInput `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator pulumi.StringPtrInput `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff pulumi.IntPtrInput `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization pulumi.BoolPtrInput `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec pulumi.IntPtrInput `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime pulumi.StringPtrInput `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold pulumi.Float64PtrInput `pulumi:"scaleDownUtilizationThreshold"`
}

func (KubernetesClusterAutoscalerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput {
	return i.ToKubernetesClusterAutoscalerConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigOutput)
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return i.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigOutput).ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterAutoscalerConfigPtrInput is an input type that accepts KubernetesClusterAutoscalerConfigArgs, KubernetesClusterAutoscalerConfigPtr and KubernetesClusterAutoscalerConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoscalerConfigPtrInput` via:
//
//	        KubernetesClusterAutoscalerConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterAutoscalerConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput
	ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Context) KubernetesClusterAutoscalerConfigPtrOutput
}

type kubernetesClusterAutoscalerConfigPtrType KubernetesClusterAutoscalerConfigArgs

func KubernetesClusterAutoscalerConfigPtr(v *KubernetesClusterAutoscalerConfigArgs) KubernetesClusterAutoscalerConfigPtrInput {
	return (*kubernetesClusterAutoscalerConfigPtrType)(v)
}

func (*kubernetesClusterAutoscalerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i *kubernetesClusterAutoscalerConfigPtrType) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return i.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAutoscalerConfigPtrType) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigPtrOutput)
}

type KubernetesClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return o.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAutoscalerConfig) *KubernetesClusterAutoscalerConfig {
		return &v
	}).(KubernetesClusterAutoscalerConfigPtrOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o KubernetesClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o KubernetesClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.DisableScaleDown }).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o KubernetesClusterAutoscalerConfigOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.Estimator }).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o KubernetesClusterAutoscalerConfigOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o KubernetesClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o KubernetesClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o KubernetesClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *int { return v.MaxGracefulTerminationSec }).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.ScaleDownUnneededTime }).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type KubernetesClusterAutoscalerConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoscalerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) Elem() KubernetesClusterAutoscalerConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) KubernetesClusterAutoscalerConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAutoscalerConfig
		return ret
	}).(KubernetesClusterAutoscalerConfigOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o KubernetesClusterAutoscalerConfigPtrOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o KubernetesClusterAutoscalerConfigPtrOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleDown
	}).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o KubernetesClusterAutoscalerConfigPtrOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Estimator
	}).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o KubernetesClusterAutoscalerConfigPtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.ExpendablePodsPriorityCutoff
	}).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o KubernetesClusterAutoscalerConfigPtrOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreDaemonsetsUtilization
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o KubernetesClusterAutoscalerConfigPtrOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneededTime
	}).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type KubernetesClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile *string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host *string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token *string `pulumi:"token"`
}

// KubernetesClusterKubeconfigInput is an input type that accepts KubernetesClusterKubeconfigArgs and KubernetesClusterKubeconfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeconfigInput` via:
//
//	KubernetesClusterKubeconfigArgs{...}
type KubernetesClusterKubeconfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeconfigOutput() KubernetesClusterKubeconfigOutput
	ToKubernetesClusterKubeconfigOutputWithContext(context.Context) KubernetesClusterKubeconfigOutput
}

type KubernetesClusterKubeconfigArgs struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile pulumi.StringPtrInput `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (KubernetesClusterKubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeconfig)(nil)).Elem()
}

func (i KubernetesClusterKubeconfigArgs) ToKubernetesClusterKubeconfigOutput() KubernetesClusterKubeconfigOutput {
	return i.ToKubernetesClusterKubeconfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeconfigArgs) ToKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeconfigOutput)
}

// KubernetesClusterKubeconfigArrayInput is an input type that accepts KubernetesClusterKubeconfigArray and KubernetesClusterKubeconfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeconfigArrayInput` via:
//
//	KubernetesClusterKubeconfigArray{ KubernetesClusterKubeconfigArgs{...} }
type KubernetesClusterKubeconfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeconfigArrayOutput() KubernetesClusterKubeconfigArrayOutput
	ToKubernetesClusterKubeconfigArrayOutputWithContext(context.Context) KubernetesClusterKubeconfigArrayOutput
}

type KubernetesClusterKubeconfigArray []KubernetesClusterKubeconfigInput

func (KubernetesClusterKubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeconfig)(nil)).Elem()
}

func (i KubernetesClusterKubeconfigArray) ToKubernetesClusterKubeconfigArrayOutput() KubernetesClusterKubeconfigArrayOutput {
	return i.ToKubernetesClusterKubeconfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeconfigArray) ToKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeconfigArrayOutput)
}

type KubernetesClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeconfig)(nil)).Elem()
}

func (o KubernetesClusterKubeconfigOutput) ToKubernetesClusterKubeconfigOutput() KubernetesClusterKubeconfigOutput {
	return o
}

func (o KubernetesClusterKubeconfigOutput) ToKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The raw kubeconfig file.
func (o KubernetesClusterKubeconfigOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.ConfigFile }).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The token to connect to the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeconfig)(nil)).Elem()
}

func (o KubernetesClusterKubeconfigArrayOutput) ToKubernetesClusterKubeconfigArrayOutput() KubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeconfigArrayOutput) ToKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeconfig {
		return vs[0].([]KubernetesClusterKubeconfig)[vs[1].(int)]
	}).(KubernetesClusterKubeconfigOutput)
}

type KubernetesClusterOpenIdConnectConfig struct {
	// A client id that all tokens must be issued for
	ClientId string `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims []string `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl string `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims []string `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim *string `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// KubernetesClusterOpenIdConnectConfigInput is an input type that accepts KubernetesClusterOpenIdConnectConfigArgs and KubernetesClusterOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterOpenIdConnectConfigInput` via:
//
//	KubernetesClusterOpenIdConnectConfigArgs{...}
type KubernetesClusterOpenIdConnectConfigInput interface {
	pulumi.Input

	ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput
	ToKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Context) KubernetesClusterOpenIdConnectConfigOutput
}

type KubernetesClusterOpenIdConnectConfigArgs struct {
	// A client id that all tokens must be issued for
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims pulumi.StringArrayInput `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims pulumi.StringArrayInput `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (KubernetesClusterOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigOutput)
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigOutput).ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterOpenIdConnectConfigPtrInput is an input type that accepts KubernetesClusterOpenIdConnectConfigArgs, KubernetesClusterOpenIdConnectConfigPtr and KubernetesClusterOpenIdConnectConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterOpenIdConnectConfigPtrInput` via:
//
//	        KubernetesClusterOpenIdConnectConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterOpenIdConnectConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput
	ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput
}

type kubernetesClusterOpenIdConnectConfigPtrType KubernetesClusterOpenIdConnectConfigArgs

func KubernetesClusterOpenIdConnectConfigPtr(v *KubernetesClusterOpenIdConnectConfigArgs) KubernetesClusterOpenIdConnectConfigPtrInput {
	return (*kubernetesClusterOpenIdConnectConfigPtrType)(v)
}

func (*kubernetesClusterOpenIdConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i *kubernetesClusterOpenIdConnectConfigPtrType) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterOpenIdConnectConfigPtrType) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigPtrOutput)
}

type KubernetesClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterOpenIdConnectConfig) *KubernetesClusterOpenIdConnectConfig {
		return &v
	}).(KubernetesClusterOpenIdConnectConfigPtrOutput)
}

// A client id that all tokens must be issued for
func (o KubernetesClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// JWT claim to use as the user's group
func (o KubernetesClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o KubernetesClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o KubernetesClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o KubernetesClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o KubernetesClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o KubernetesClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type KubernetesClusterOpenIdConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOpenIdConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) Elem() KubernetesClusterOpenIdConnectConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) KubernetesClusterOpenIdConnectConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterOpenIdConnectConfig
		return ret
	}).(KubernetesClusterOpenIdConnectConfigOutput)
}

// A client id that all tokens must be issued for
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// JWT claim to use as the user's group
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.GroupsClaims
	}).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.RequiredClaims
	}).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNode struct {
	// The name for the pool.
	// > **Important:** Updates to this field will recreate a new resource.
	Name *string `pulumi:"name"`
	// The public IPv4.
	PublicIp *string `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 *string `pulumi:"publicIpV6"`
	// The status of the node.
	Status *string `pulumi:"status"`
}

// KubernetesNodePoolNodeInput is an input type that accepts KubernetesNodePoolNodeArgs and KubernetesNodePoolNodeOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeInput` via:
//
//	KubernetesNodePoolNodeArgs{...}
type KubernetesNodePoolNodeInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput
	ToKubernetesNodePoolNodeOutputWithContext(context.Context) KubernetesNodePoolNodeOutput
}

type KubernetesNodePoolNodeArgs struct {
	// The name for the pool.
	// > **Important:** Updates to this field will recreate a new resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The public IPv4.
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 pulumi.StringPtrInput `pulumi:"publicIpV6"`
	// The status of the node.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (KubernetesNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return i.ToKubernetesNodePoolNodeOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeOutput)
}

// KubernetesNodePoolNodeArrayInput is an input type that accepts KubernetesNodePoolNodeArray and KubernetesNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeArrayInput` via:
//
//	KubernetesNodePoolNodeArray{ KubernetesNodePoolNodeArgs{...} }
type KubernetesNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput
	ToKubernetesNodePoolNodeArrayOutputWithContext(context.Context) KubernetesNodePoolNodeArrayOutput
}

type KubernetesNodePoolNodeArray []KubernetesNodePoolNodeInput

func (KubernetesNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return i.ToKubernetesNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeArrayOutput)
}

type KubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return o
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return o
}

// The name for the pool.
// > **Important:** Updates to this field will recreate a new resource.
func (o KubernetesNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The public IPv4.
func (o KubernetesNodePoolNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The public IPv6.
func (o KubernetesNodePoolNodeOutput) PublicIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.PublicIpV6 }).(pulumi.StringPtrOutput)
}

// The status of the node.
func (o KubernetesNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolNode {
		return vs[0].([]KubernetesNodePoolNode)[vs[1].(int)]
	}).(KubernetesNodePoolNodeOutput)
}

type KubernetesNodePoolUpgradePolicy struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge *int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable *int `pulumi:"maxUnavailable"`
}

// KubernetesNodePoolUpgradePolicyInput is an input type that accepts KubernetesNodePoolUpgradePolicyArgs and KubernetesNodePoolUpgradePolicyOutput values.
// You can construct a concrete instance of `KubernetesNodePoolUpgradePolicyInput` via:
//
//	KubernetesNodePoolUpgradePolicyArgs{...}
type KubernetesNodePoolUpgradePolicyInput interface {
	pulumi.Input

	ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput
	ToKubernetesNodePoolUpgradePolicyOutputWithContext(context.Context) KubernetesNodePoolUpgradePolicyOutput
}

type KubernetesNodePoolUpgradePolicyArgs struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
}

func (KubernetesNodePoolUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput {
	return i.ToKubernetesNodePoolUpgradePolicyOutputWithContext(context.Background())
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyOutput)
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return i.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyOutput).ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx)
}

// KubernetesNodePoolUpgradePolicyPtrInput is an input type that accepts KubernetesNodePoolUpgradePolicyArgs, KubernetesNodePoolUpgradePolicyPtr and KubernetesNodePoolUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodePoolUpgradePolicyPtrInput` via:
//
//	        KubernetesNodePoolUpgradePolicyArgs{...}
//
//	or:
//
//	        nil
type KubernetesNodePoolUpgradePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput
	ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Context) KubernetesNodePoolUpgradePolicyPtrOutput
}

type kubernetesNodePoolUpgradePolicyPtrType KubernetesNodePoolUpgradePolicyArgs

func KubernetesNodePoolUpgradePolicyPtr(v *KubernetesNodePoolUpgradePolicyArgs) KubernetesNodePoolUpgradePolicyPtrInput {
	return (*kubernetesNodePoolUpgradePolicyPtrType)(v)
}

func (*kubernetesNodePoolUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i *kubernetesNodePoolUpgradePolicyPtrType) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return i.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodePoolUpgradePolicyPtrType) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyPtrOutput)
}

type KubernetesNodePoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return o.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesNodePoolUpgradePolicy) *KubernetesNodePoolUpgradePolicy {
		return &v
	}).(KubernetesNodePoolUpgradePolicyPtrOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o KubernetesNodePoolUpgradePolicyOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolUpgradePolicy) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o KubernetesNodePoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolUpgradePolicy) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

type KubernetesNodePoolUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) Elem() KubernetesNodePoolUpgradePolicyOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) KubernetesNodePoolUpgradePolicy {
		if v != nil {
			return *v
		}
		var ret KubernetesNodePoolUpgradePolicy
		return ret
	}).(KubernetesNodePoolUpgradePolicyOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o KubernetesNodePoolUpgradePolicyPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o KubernetesNodePoolUpgradePolicyPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type LoadbalancerAclAction struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects []LoadbalancerAclActionRedirect `pulumi:"redirects"`
	// The redirect type. Possible values are: `location` or `scheme`.
	Type string `pulumi:"type"`
}

// LoadbalancerAclActionInput is an input type that accepts LoadbalancerAclActionArgs and LoadbalancerAclActionOutput values.
// You can construct a concrete instance of `LoadbalancerAclActionInput` via:
//
//	LoadbalancerAclActionArgs{...}
type LoadbalancerAclActionInput interface {
	pulumi.Input

	ToLoadbalancerAclActionOutput() LoadbalancerAclActionOutput
	ToLoadbalancerAclActionOutputWithContext(context.Context) LoadbalancerAclActionOutput
}

type LoadbalancerAclActionArgs struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects LoadbalancerAclActionRedirectArrayInput `pulumi:"redirects"`
	// The redirect type. Possible values are: `location` or `scheme`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadbalancerAclActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclAction)(nil)).Elem()
}

func (i LoadbalancerAclActionArgs) ToLoadbalancerAclActionOutput() LoadbalancerAclActionOutput {
	return i.ToLoadbalancerAclActionOutputWithContext(context.Background())
}

func (i LoadbalancerAclActionArgs) ToLoadbalancerAclActionOutputWithContext(ctx context.Context) LoadbalancerAclActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclActionOutput)
}

func (i LoadbalancerAclActionArgs) ToLoadbalancerAclActionPtrOutput() LoadbalancerAclActionPtrOutput {
	return i.ToLoadbalancerAclActionPtrOutputWithContext(context.Background())
}

func (i LoadbalancerAclActionArgs) ToLoadbalancerAclActionPtrOutputWithContext(ctx context.Context) LoadbalancerAclActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclActionOutput).ToLoadbalancerAclActionPtrOutputWithContext(ctx)
}

// LoadbalancerAclActionPtrInput is an input type that accepts LoadbalancerAclActionArgs, LoadbalancerAclActionPtr and LoadbalancerAclActionPtrOutput values.
// You can construct a concrete instance of `LoadbalancerAclActionPtrInput` via:
//
//	        LoadbalancerAclActionArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerAclActionPtrInput interface {
	pulumi.Input

	ToLoadbalancerAclActionPtrOutput() LoadbalancerAclActionPtrOutput
	ToLoadbalancerAclActionPtrOutputWithContext(context.Context) LoadbalancerAclActionPtrOutput
}

type loadbalancerAclActionPtrType LoadbalancerAclActionArgs

func LoadbalancerAclActionPtr(v *LoadbalancerAclActionArgs) LoadbalancerAclActionPtrInput {
	return (*loadbalancerAclActionPtrType)(v)
}

func (*loadbalancerAclActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerAclAction)(nil)).Elem()
}

func (i *loadbalancerAclActionPtrType) ToLoadbalancerAclActionPtrOutput() LoadbalancerAclActionPtrOutput {
	return i.ToLoadbalancerAclActionPtrOutputWithContext(context.Background())
}

func (i *loadbalancerAclActionPtrType) ToLoadbalancerAclActionPtrOutputWithContext(ctx context.Context) LoadbalancerAclActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclActionPtrOutput)
}

type LoadbalancerAclActionOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclAction)(nil)).Elem()
}

func (o LoadbalancerAclActionOutput) ToLoadbalancerAclActionOutput() LoadbalancerAclActionOutput {
	return o
}

func (o LoadbalancerAclActionOutput) ToLoadbalancerAclActionOutputWithContext(ctx context.Context) LoadbalancerAclActionOutput {
	return o
}

func (o LoadbalancerAclActionOutput) ToLoadbalancerAclActionPtrOutput() LoadbalancerAclActionPtrOutput {
	return o.ToLoadbalancerAclActionPtrOutputWithContext(context.Background())
}

func (o LoadbalancerAclActionOutput) ToLoadbalancerAclActionPtrOutputWithContext(ctx context.Context) LoadbalancerAclActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerAclAction) *LoadbalancerAclAction {
		return &v
	}).(LoadbalancerAclActionPtrOutput)
}

// Redirect parameters when using an ACL with `redirect` action.
func (o LoadbalancerAclActionOutput) Redirects() LoadbalancerAclActionRedirectArrayOutput {
	return o.ApplyT(func(v LoadbalancerAclAction) []LoadbalancerAclActionRedirect { return v.Redirects }).(LoadbalancerAclActionRedirectArrayOutput)
}

// The redirect type. Possible values are: `location` or `scheme`.
func (o LoadbalancerAclActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerAclAction) string { return v.Type }).(pulumi.StringOutput)
}

type LoadbalancerAclActionPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerAclAction)(nil)).Elem()
}

func (o LoadbalancerAclActionPtrOutput) ToLoadbalancerAclActionPtrOutput() LoadbalancerAclActionPtrOutput {
	return o
}

func (o LoadbalancerAclActionPtrOutput) ToLoadbalancerAclActionPtrOutputWithContext(ctx context.Context) LoadbalancerAclActionPtrOutput {
	return o
}

func (o LoadbalancerAclActionPtrOutput) Elem() LoadbalancerAclActionOutput {
	return o.ApplyT(func(v *LoadbalancerAclAction) LoadbalancerAclAction {
		if v != nil {
			return *v
		}
		var ret LoadbalancerAclAction
		return ret
	}).(LoadbalancerAclActionOutput)
}

// Redirect parameters when using an ACL with `redirect` action.
func (o LoadbalancerAclActionPtrOutput) Redirects() LoadbalancerAclActionRedirectArrayOutput {
	return o.ApplyT(func(v *LoadbalancerAclAction) []LoadbalancerAclActionRedirect {
		if v == nil {
			return nil
		}
		return v.Redirects
	}).(LoadbalancerAclActionRedirectArrayOutput)
}

// The redirect type. Possible values are: `location` or `scheme`.
func (o LoadbalancerAclActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerAclAction) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerAclActionRedirect struct {
	// The HTTP redirect code to use
	Code *int `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target *string `pulumi:"target"`
	// The redirect type
	Type *string `pulumi:"type"`
}

// LoadbalancerAclActionRedirectInput is an input type that accepts LoadbalancerAclActionRedirectArgs and LoadbalancerAclActionRedirectOutput values.
// You can construct a concrete instance of `LoadbalancerAclActionRedirectInput` via:
//
//	LoadbalancerAclActionRedirectArgs{...}
type LoadbalancerAclActionRedirectInput interface {
	pulumi.Input

	ToLoadbalancerAclActionRedirectOutput() LoadbalancerAclActionRedirectOutput
	ToLoadbalancerAclActionRedirectOutputWithContext(context.Context) LoadbalancerAclActionRedirectOutput
}

type LoadbalancerAclActionRedirectArgs struct {
	// The HTTP redirect code to use
	Code pulumi.IntPtrInput `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The redirect type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoadbalancerAclActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclActionRedirect)(nil)).Elem()
}

func (i LoadbalancerAclActionRedirectArgs) ToLoadbalancerAclActionRedirectOutput() LoadbalancerAclActionRedirectOutput {
	return i.ToLoadbalancerAclActionRedirectOutputWithContext(context.Background())
}

func (i LoadbalancerAclActionRedirectArgs) ToLoadbalancerAclActionRedirectOutputWithContext(ctx context.Context) LoadbalancerAclActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclActionRedirectOutput)
}

// LoadbalancerAclActionRedirectArrayInput is an input type that accepts LoadbalancerAclActionRedirectArray and LoadbalancerAclActionRedirectArrayOutput values.
// You can construct a concrete instance of `LoadbalancerAclActionRedirectArrayInput` via:
//
//	LoadbalancerAclActionRedirectArray{ LoadbalancerAclActionRedirectArgs{...} }
type LoadbalancerAclActionRedirectArrayInput interface {
	pulumi.Input

	ToLoadbalancerAclActionRedirectArrayOutput() LoadbalancerAclActionRedirectArrayOutput
	ToLoadbalancerAclActionRedirectArrayOutputWithContext(context.Context) LoadbalancerAclActionRedirectArrayOutput
}

type LoadbalancerAclActionRedirectArray []LoadbalancerAclActionRedirectInput

func (LoadbalancerAclActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerAclActionRedirect)(nil)).Elem()
}

func (i LoadbalancerAclActionRedirectArray) ToLoadbalancerAclActionRedirectArrayOutput() LoadbalancerAclActionRedirectArrayOutput {
	return i.ToLoadbalancerAclActionRedirectArrayOutputWithContext(context.Background())
}

func (i LoadbalancerAclActionRedirectArray) ToLoadbalancerAclActionRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerAclActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclActionRedirectArrayOutput)
}

type LoadbalancerAclActionRedirectOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclActionRedirect)(nil)).Elem()
}

func (o LoadbalancerAclActionRedirectOutput) ToLoadbalancerAclActionRedirectOutput() LoadbalancerAclActionRedirectOutput {
	return o
}

func (o LoadbalancerAclActionRedirectOutput) ToLoadbalancerAclActionRedirectOutputWithContext(ctx context.Context) LoadbalancerAclActionRedirectOutput {
	return o
}

// The HTTP redirect code to use
func (o LoadbalancerAclActionRedirectOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclActionRedirect) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// An URL can be used in case of a location redirect
func (o LoadbalancerAclActionRedirectOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclActionRedirect) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The redirect type
func (o LoadbalancerAclActionRedirectOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclActionRedirect) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoadbalancerAclActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerAclActionRedirect)(nil)).Elem()
}

func (o LoadbalancerAclActionRedirectArrayOutput) ToLoadbalancerAclActionRedirectArrayOutput() LoadbalancerAclActionRedirectArrayOutput {
	return o
}

func (o LoadbalancerAclActionRedirectArrayOutput) ToLoadbalancerAclActionRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerAclActionRedirectArrayOutput {
	return o
}

func (o LoadbalancerAclActionRedirectArrayOutput) Index(i pulumi.IntInput) LoadbalancerAclActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerAclActionRedirect {
		return vs[0].([]LoadbalancerAclActionRedirect)[vs[1].(int)]
	}).(LoadbalancerAclActionRedirectOutput)
}

type LoadbalancerAclMatch struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
	HttpFilter *string `pulumi:"httpFilter"`
	// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
	HttpFilterOption *string `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter.
	// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
	HttpFilterValues []string `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert *bool `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets []string `pulumi:"ipSubnets"`
}

// LoadbalancerAclMatchInput is an input type that accepts LoadbalancerAclMatchArgs and LoadbalancerAclMatchOutput values.
// You can construct a concrete instance of `LoadbalancerAclMatchInput` via:
//
//	LoadbalancerAclMatchArgs{...}
type LoadbalancerAclMatchInput interface {
	pulumi.Input

	ToLoadbalancerAclMatchOutput() LoadbalancerAclMatchOutput
	ToLoadbalancerAclMatchOutputWithContext(context.Context) LoadbalancerAclMatchOutput
}

type LoadbalancerAclMatchArgs struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
	HttpFilter pulumi.StringPtrInput `pulumi:"httpFilter"`
	// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
	HttpFilterOption pulumi.StringPtrInput `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter.
	// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
	HttpFilterValues pulumi.StringArrayInput `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
}

func (LoadbalancerAclMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclMatch)(nil)).Elem()
}

func (i LoadbalancerAclMatchArgs) ToLoadbalancerAclMatchOutput() LoadbalancerAclMatchOutput {
	return i.ToLoadbalancerAclMatchOutputWithContext(context.Background())
}

func (i LoadbalancerAclMatchArgs) ToLoadbalancerAclMatchOutputWithContext(ctx context.Context) LoadbalancerAclMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclMatchOutput)
}

func (i LoadbalancerAclMatchArgs) ToLoadbalancerAclMatchPtrOutput() LoadbalancerAclMatchPtrOutput {
	return i.ToLoadbalancerAclMatchPtrOutputWithContext(context.Background())
}

func (i LoadbalancerAclMatchArgs) ToLoadbalancerAclMatchPtrOutputWithContext(ctx context.Context) LoadbalancerAclMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclMatchOutput).ToLoadbalancerAclMatchPtrOutputWithContext(ctx)
}

// LoadbalancerAclMatchPtrInput is an input type that accepts LoadbalancerAclMatchArgs, LoadbalancerAclMatchPtr and LoadbalancerAclMatchPtrOutput values.
// You can construct a concrete instance of `LoadbalancerAclMatchPtrInput` via:
//
//	        LoadbalancerAclMatchArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerAclMatchPtrInput interface {
	pulumi.Input

	ToLoadbalancerAclMatchPtrOutput() LoadbalancerAclMatchPtrOutput
	ToLoadbalancerAclMatchPtrOutputWithContext(context.Context) LoadbalancerAclMatchPtrOutput
}

type loadbalancerAclMatchPtrType LoadbalancerAclMatchArgs

func LoadbalancerAclMatchPtr(v *LoadbalancerAclMatchArgs) LoadbalancerAclMatchPtrInput {
	return (*loadbalancerAclMatchPtrType)(v)
}

func (*loadbalancerAclMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerAclMatch)(nil)).Elem()
}

func (i *loadbalancerAclMatchPtrType) ToLoadbalancerAclMatchPtrOutput() LoadbalancerAclMatchPtrOutput {
	return i.ToLoadbalancerAclMatchPtrOutputWithContext(context.Background())
}

func (i *loadbalancerAclMatchPtrType) ToLoadbalancerAclMatchPtrOutputWithContext(ctx context.Context) LoadbalancerAclMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerAclMatchPtrOutput)
}

type LoadbalancerAclMatchOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerAclMatch)(nil)).Elem()
}

func (o LoadbalancerAclMatchOutput) ToLoadbalancerAclMatchOutput() LoadbalancerAclMatchOutput {
	return o
}

func (o LoadbalancerAclMatchOutput) ToLoadbalancerAclMatchOutputWithContext(ctx context.Context) LoadbalancerAclMatchOutput {
	return o
}

func (o LoadbalancerAclMatchOutput) ToLoadbalancerAclMatchPtrOutput() LoadbalancerAclMatchPtrOutput {
	return o.ToLoadbalancerAclMatchPtrOutputWithContext(context.Background())
}

func (o LoadbalancerAclMatchOutput) ToLoadbalancerAclMatchPtrOutputWithContext(ctx context.Context) LoadbalancerAclMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerAclMatch) *LoadbalancerAclMatch {
		return &v
	}).(LoadbalancerAclMatchPtrOutput)
}

// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
func (o LoadbalancerAclMatchOutput) HttpFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclMatch) *string { return v.HttpFilter }).(pulumi.StringPtrOutput)
}

// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
func (o LoadbalancerAclMatchOutput) HttpFilterOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclMatch) *string { return v.HttpFilterOption }).(pulumi.StringPtrOutput)
}

// A list of possible values to match for the given HTTP filter.
// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
func (o LoadbalancerAclMatchOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerAclMatch) []string { return v.HttpFilterValues }).(pulumi.StringArrayOutput)
}

// If set to `true`, the condition will be of type "unless".
func (o LoadbalancerAclMatchOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerAclMatch) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
func (o LoadbalancerAclMatchOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerAclMatch) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

type LoadbalancerAclMatchPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerAclMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerAclMatch)(nil)).Elem()
}

func (o LoadbalancerAclMatchPtrOutput) ToLoadbalancerAclMatchPtrOutput() LoadbalancerAclMatchPtrOutput {
	return o
}

func (o LoadbalancerAclMatchPtrOutput) ToLoadbalancerAclMatchPtrOutputWithContext(ctx context.Context) LoadbalancerAclMatchPtrOutput {
	return o
}

func (o LoadbalancerAclMatchPtrOutput) Elem() LoadbalancerAclMatchOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) LoadbalancerAclMatch {
		if v != nil {
			return *v
		}
		var ret LoadbalancerAclMatch
		return ret
	}).(LoadbalancerAclMatchOutput)
}

// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
func (o LoadbalancerAclMatchPtrOutput) HttpFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpFilter
	}).(pulumi.StringPtrOutput)
}

// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
func (o LoadbalancerAclMatchPtrOutput) HttpFilterOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) *string {
		if v == nil {
			return nil
		}
		return v.HttpFilterOption
	}).(pulumi.StringPtrOutput)
}

// A list of possible values to match for the given HTTP filter.
// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
func (o LoadbalancerAclMatchPtrOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) []string {
		if v == nil {
			return nil
		}
		return v.HttpFilterValues
	}).(pulumi.StringArrayOutput)
}

// If set to `true`, the condition will be of type "unless".
func (o LoadbalancerAclMatchPtrOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) *bool {
		if v == nil {
			return nil
		}
		return v.Invert
	}).(pulumi.BoolPtrOutput)
}

// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
func (o LoadbalancerAclMatchPtrOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadbalancerAclMatch) []string {
		if v == nil {
			return nil
		}
		return v.IpSubnets
	}).(pulumi.StringArrayOutput)
}

type LoadbalancerBackendHealthCheckHttp struct {
	// The expected HTTP status code
	Code *int `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader *string `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method *string `pulumi:"method"`
	// The HTTP endpoint URL to call for HC requests
	Uri string `pulumi:"uri"`
}

// LoadbalancerBackendHealthCheckHttpInput is an input type that accepts LoadbalancerBackendHealthCheckHttpArgs and LoadbalancerBackendHealthCheckHttpOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpInput` via:
//
//	LoadbalancerBackendHealthCheckHttpArgs{...}
type LoadbalancerBackendHealthCheckHttpInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput
	ToLoadbalancerBackendHealthCheckHttpOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpOutput
}

type LoadbalancerBackendHealthCheckHttpArgs struct {
	// The expected HTTP status code
	Code pulumi.IntPtrInput `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The HTTP endpoint URL to call for HC requests
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (LoadbalancerBackendHealthCheckHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpOutput)
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpOutput).ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckHttpPtrInput is an input type that accepts LoadbalancerBackendHealthCheckHttpArgs, LoadbalancerBackendHealthCheckHttpPtr and LoadbalancerBackendHealthCheckHttpPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpPtrInput` via:
//
//	        LoadbalancerBackendHealthCheckHttpArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerBackendHealthCheckHttpPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput
	ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput
}

type loadbalancerBackendHealthCheckHttpPtrType LoadbalancerBackendHealthCheckHttpArgs

func LoadbalancerBackendHealthCheckHttpPtr(v *LoadbalancerBackendHealthCheckHttpArgs) LoadbalancerBackendHealthCheckHttpPtrInput {
	return (*loadbalancerBackendHealthCheckHttpPtrType)(v)
}

func (*loadbalancerBackendHealthCheckHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckHttpPtrType) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckHttpPtrType) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpPtrOutput)
}

type LoadbalancerBackendHealthCheckHttpOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckHttp) *LoadbalancerBackendHealthCheckHttp {
		return &v
	}).(LoadbalancerBackendHealthCheckHttpPtrOutput)
}

// The expected HTTP status code
func (o LoadbalancerBackendHealthCheckHttpOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// The HTTP host header to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The HTTP method to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The HTTP endpoint URL to call for HC requests
func (o LoadbalancerBackendHealthCheckHttpOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) string { return v.Uri }).(pulumi.StringOutput)
}

type LoadbalancerBackendHealthCheckHttpPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Elem() LoadbalancerBackendHealthCheckHttpOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) LoadbalancerBackendHealthCheckHttp {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckHttp
		return ret
	}).(LoadbalancerBackendHealthCheckHttpOutput)
}

// The expected HTTP status code
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// The HTTP host header to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// The HTTP method to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The HTTP endpoint URL to call for HC requests
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerBackendHealthCheckHttps struct {
	// The expected HTTP status code
	Code *int `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader *string `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method *string `pulumi:"method"`
	// The SNI to use for HC requests over SSL
	Sni *string `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests
	Uri string `pulumi:"uri"`
}

// LoadbalancerBackendHealthCheckHttpsInput is an input type that accepts LoadbalancerBackendHealthCheckHttpsArgs and LoadbalancerBackendHealthCheckHttpsOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpsInput` via:
//
//	LoadbalancerBackendHealthCheckHttpsArgs{...}
type LoadbalancerBackendHealthCheckHttpsInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput
	ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpsOutput
}

type LoadbalancerBackendHealthCheckHttpsArgs struct {
	// The expected HTTP status code
	Code pulumi.IntPtrInput `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The SNI to use for HC requests over SSL
	Sni pulumi.StringPtrInput `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (LoadbalancerBackendHealthCheckHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsOutput)
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsOutput).ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckHttpsPtrInput is an input type that accepts LoadbalancerBackendHealthCheckHttpsArgs, LoadbalancerBackendHealthCheckHttpsPtr and LoadbalancerBackendHealthCheckHttpsPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpsPtrInput` via:
//
//	        LoadbalancerBackendHealthCheckHttpsArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerBackendHealthCheckHttpsPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput
	ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput
}

type loadbalancerBackendHealthCheckHttpsPtrType LoadbalancerBackendHealthCheckHttpsArgs

func LoadbalancerBackendHealthCheckHttpsPtr(v *LoadbalancerBackendHealthCheckHttpsArgs) LoadbalancerBackendHealthCheckHttpsPtrInput {
	return (*loadbalancerBackendHealthCheckHttpsPtrType)(v)
}

func (*loadbalancerBackendHealthCheckHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckHttpsPtrType) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckHttpsPtrType) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsPtrOutput)
}

type LoadbalancerBackendHealthCheckHttpsOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckHttps) *LoadbalancerBackendHealthCheckHttps {
		return &v
	}).(LoadbalancerBackendHealthCheckHttpsPtrOutput)
}

// The expected HTTP status code
func (o LoadbalancerBackendHealthCheckHttpsOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// The HTTP host header to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpsOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// The HTTP method to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpsOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The SNI to use for HC requests over SSL
func (o LoadbalancerBackendHealthCheckHttpsOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests
func (o LoadbalancerBackendHealthCheckHttpsOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) string { return v.Uri }).(pulumi.StringOutput)
}

type LoadbalancerBackendHealthCheckHttpsPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Elem() LoadbalancerBackendHealthCheckHttpsOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) LoadbalancerBackendHealthCheckHttps {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckHttps
		return ret
	}).(LoadbalancerBackendHealthCheckHttpsOutput)
}

// The expected HTTP status code
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// The HTTP host header to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return v.HostHeader
	}).(pulumi.StringPtrOutput)
}

// The HTTP method to use for HC requests
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The SNI to use for HC requests over SSL
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerBackendHealthCheckTcp struct {
}

// LoadbalancerBackendHealthCheckTcpInput is an input type that accepts LoadbalancerBackendHealthCheckTcpArgs and LoadbalancerBackendHealthCheckTcpOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckTcpInput` via:
//
//	LoadbalancerBackendHealthCheckTcpArgs{...}
type LoadbalancerBackendHealthCheckTcpInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput
	ToLoadbalancerBackendHealthCheckTcpOutputWithContext(context.Context) LoadbalancerBackendHealthCheckTcpOutput
}

type LoadbalancerBackendHealthCheckTcpArgs struct {
}

func (LoadbalancerBackendHealthCheckTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpOutput)
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpOutput).ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckTcpPtrInput is an input type that accepts LoadbalancerBackendHealthCheckTcpArgs, LoadbalancerBackendHealthCheckTcpPtr and LoadbalancerBackendHealthCheckTcpPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckTcpPtrInput` via:
//
//	        LoadbalancerBackendHealthCheckTcpArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerBackendHealthCheckTcpPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput
	ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput
}

type loadbalancerBackendHealthCheckTcpPtrType LoadbalancerBackendHealthCheckTcpArgs

func LoadbalancerBackendHealthCheckTcpPtr(v *LoadbalancerBackendHealthCheckTcpArgs) LoadbalancerBackendHealthCheckTcpPtrInput {
	return (*loadbalancerBackendHealthCheckTcpPtrType)(v)
}

func (*loadbalancerBackendHealthCheckTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckTcpPtrType) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckTcpPtrType) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpPtrOutput)
}

type LoadbalancerBackendHealthCheckTcpOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckTcp) *LoadbalancerBackendHealthCheckTcp {
		return &v
	}).(LoadbalancerBackendHealthCheckTcpPtrOutput)
}

type LoadbalancerBackendHealthCheckTcpPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) Elem() LoadbalancerBackendHealthCheckTcpOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckTcp) LoadbalancerBackendHealthCheckTcp {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckTcp
		return ret
	}).(LoadbalancerBackendHealthCheckTcpOutput)
}

type LoadbalancerCertificateCustomCertificate struct {
	// The full PEM-formatted certificate chain
	CertificateChain string `pulumi:"certificateChain"`
}

// LoadbalancerCertificateCustomCertificateInput is an input type that accepts LoadbalancerCertificateCustomCertificateArgs and LoadbalancerCertificateCustomCertificateOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateCustomCertificateInput` via:
//
//	LoadbalancerCertificateCustomCertificateArgs{...}
type LoadbalancerCertificateCustomCertificateInput interface {
	pulumi.Input

	ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput
	ToLoadbalancerCertificateCustomCertificateOutputWithContext(context.Context) LoadbalancerCertificateCustomCertificateOutput
}

type LoadbalancerCertificateCustomCertificateArgs struct {
	// The full PEM-formatted certificate chain
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (LoadbalancerCertificateCustomCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput {
	return i.ToLoadbalancerCertificateCustomCertificateOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificateOutput)
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return i.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificateOutput).ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx)
}

// LoadbalancerCertificateCustomCertificatePtrInput is an input type that accepts LoadbalancerCertificateCustomCertificateArgs, LoadbalancerCertificateCustomCertificatePtr and LoadbalancerCertificateCustomCertificatePtrOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateCustomCertificatePtrInput` via:
//
//	        LoadbalancerCertificateCustomCertificateArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerCertificateCustomCertificatePtrInput interface {
	pulumi.Input

	ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput
	ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Context) LoadbalancerCertificateCustomCertificatePtrOutput
}

type loadbalancerCertificateCustomCertificatePtrType LoadbalancerCertificateCustomCertificateArgs

func LoadbalancerCertificateCustomCertificatePtr(v *LoadbalancerCertificateCustomCertificateArgs) LoadbalancerCertificateCustomCertificatePtrInput {
	return (*loadbalancerCertificateCustomCertificatePtrType)(v)
}

func (*loadbalancerCertificateCustomCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i *loadbalancerCertificateCustomCertificatePtrType) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return i.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (i *loadbalancerCertificateCustomCertificatePtrType) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificatePtrOutput)
}

type LoadbalancerCertificateCustomCertificateOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateCustomCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificateOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return o.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerCertificateCustomCertificate) *LoadbalancerCertificateCustomCertificate {
		return &v
	}).(LoadbalancerCertificateCustomCertificatePtrOutput)
}

// The full PEM-formatted certificate chain
func (o LoadbalancerCertificateCustomCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerCertificateCustomCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type LoadbalancerCertificateCustomCertificatePtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateCustomCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) Elem() LoadbalancerCertificateCustomCertificateOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateCustomCertificate) LoadbalancerCertificateCustomCertificate {
		if v != nil {
			return *v
		}
		var ret LoadbalancerCertificateCustomCertificate
		return ret
	}).(LoadbalancerCertificateCustomCertificateOutput)
}

// The full PEM-formatted certificate chain
func (o LoadbalancerCertificateCustomCertificatePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateCustomCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerCertificateLetsencrypt struct {
	// Main domain of the certificate
	CommonName string `pulumi:"commonName"`
	// The alternative domain names of the certificate
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
}

// LoadbalancerCertificateLetsencryptInput is an input type that accepts LoadbalancerCertificateLetsencryptArgs and LoadbalancerCertificateLetsencryptOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateLetsencryptInput` via:
//
//	LoadbalancerCertificateLetsencryptArgs{...}
type LoadbalancerCertificateLetsencryptInput interface {
	pulumi.Input

	ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput
	ToLoadbalancerCertificateLetsencryptOutputWithContext(context.Context) LoadbalancerCertificateLetsencryptOutput
}

type LoadbalancerCertificateLetsencryptArgs struct {
	// Main domain of the certificate
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// The alternative domain names of the certificate
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
}

func (LoadbalancerCertificateLetsencryptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput {
	return i.ToLoadbalancerCertificateLetsencryptOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptOutput)
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return i.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptOutput).ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx)
}

// LoadbalancerCertificateLetsencryptPtrInput is an input type that accepts LoadbalancerCertificateLetsencryptArgs, LoadbalancerCertificateLetsencryptPtr and LoadbalancerCertificateLetsencryptPtrOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateLetsencryptPtrInput` via:
//
//	        LoadbalancerCertificateLetsencryptArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerCertificateLetsencryptPtrInput interface {
	pulumi.Input

	ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput
	ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Context) LoadbalancerCertificateLetsencryptPtrOutput
}

type loadbalancerCertificateLetsencryptPtrType LoadbalancerCertificateLetsencryptArgs

func LoadbalancerCertificateLetsencryptPtr(v *LoadbalancerCertificateLetsencryptArgs) LoadbalancerCertificateLetsencryptPtrInput {
	return (*loadbalancerCertificateLetsencryptPtrType)(v)
}

func (*loadbalancerCertificateLetsencryptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i *loadbalancerCertificateLetsencryptPtrType) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return i.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (i *loadbalancerCertificateLetsencryptPtrType) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptPtrOutput)
}

type LoadbalancerCertificateLetsencryptOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateLetsencryptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return o.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerCertificateLetsencrypt) *LoadbalancerCertificateLetsencrypt {
		return &v
	}).(LoadbalancerCertificateLetsencryptPtrOutput)
}

// Main domain of the certificate
func (o LoadbalancerCertificateLetsencryptOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerCertificateLetsencrypt) string { return v.CommonName }).(pulumi.StringOutput)
}

// The alternative domain names of the certificate
func (o LoadbalancerCertificateLetsencryptOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerCertificateLetsencrypt) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

type LoadbalancerCertificateLetsencryptPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateLetsencryptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) Elem() LoadbalancerCertificateLetsencryptOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) LoadbalancerCertificateLetsencrypt {
		if v != nil {
			return *v
		}
		var ret LoadbalancerCertificateLetsencrypt
		return ret
	}).(LoadbalancerCertificateLetsencryptOutput)
}

// Main domain of the certificate
func (o LoadbalancerCertificateLetsencryptPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// The alternative domain names of the certificate
func (o LoadbalancerCertificateLetsencryptPtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

type LoadbalancerFrontendAcl struct {
	// Action to undertake when an ACL filter matches.
	Action LoadbalancerFrontendAclAction `pulumi:"action"`
	// Date and time of ACL's creation (RFC 3339 format)
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the ACL
	Description *string `pulumi:"description"`
	// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
	Match LoadbalancerFrontendAclMatch `pulumi:"match"`
	// The ACL name. If not provided it will be randomly generated.
	Name *string `pulumi:"name"`
	// Date and time of ACL's update (RFC 3339 format)
	UpdatedAt *string `pulumi:"updatedAt"`
}

// LoadbalancerFrontendAclInput is an input type that accepts LoadbalancerFrontendAclArgs and LoadbalancerFrontendAclOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclInput` via:
//
//	LoadbalancerFrontendAclArgs{...}
type LoadbalancerFrontendAclInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput
	ToLoadbalancerFrontendAclOutputWithContext(context.Context) LoadbalancerFrontendAclOutput
}

type LoadbalancerFrontendAclArgs struct {
	// Action to undertake when an ACL filter matches.
	Action LoadbalancerFrontendAclActionInput `pulumi:"action"`
	// Date and time of ACL's creation (RFC 3339 format)
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// Description of the ACL
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
	Match LoadbalancerFrontendAclMatchInput `pulumi:"match"`
	// The ACL name. If not provided it will be randomly generated.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Date and time of ACL's update (RFC 3339 format)
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (LoadbalancerFrontendAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAcl)(nil)).Elem()
}

func (i LoadbalancerFrontendAclArgs) ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput {
	return i.ToLoadbalancerFrontendAclOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclArgs) ToLoadbalancerFrontendAclOutputWithContext(ctx context.Context) LoadbalancerFrontendAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclOutput)
}

// LoadbalancerFrontendAclArrayInput is an input type that accepts LoadbalancerFrontendAclArray and LoadbalancerFrontendAclArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclArrayInput` via:
//
//	LoadbalancerFrontendAclArray{ LoadbalancerFrontendAclArgs{...} }
type LoadbalancerFrontendAclArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput
	ToLoadbalancerFrontendAclArrayOutputWithContext(context.Context) LoadbalancerFrontendAclArrayOutput
}

type LoadbalancerFrontendAclArray []LoadbalancerFrontendAclInput

func (LoadbalancerFrontendAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAcl)(nil)).Elem()
}

func (i LoadbalancerFrontendAclArray) ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput {
	return i.ToLoadbalancerFrontendAclArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclArray) ToLoadbalancerFrontendAclArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclArrayOutput)
}

type LoadbalancerFrontendAclOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAcl)(nil)).Elem()
}

func (o LoadbalancerFrontendAclOutput) ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput {
	return o
}

func (o LoadbalancerFrontendAclOutput) ToLoadbalancerFrontendAclOutputWithContext(ctx context.Context) LoadbalancerFrontendAclOutput {
	return o
}

// Action to undertake when an ACL filter matches.
func (o LoadbalancerFrontendAclOutput) Action() LoadbalancerFrontendAclActionOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) LoadbalancerFrontendAclAction { return v.Action }).(LoadbalancerFrontendAclActionOutput)
}

// Date and time of ACL's creation (RFC 3339 format)
func (o LoadbalancerFrontendAclOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Description of the ACL
func (o LoadbalancerFrontendAclOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
func (o LoadbalancerFrontendAclOutput) Match() LoadbalancerFrontendAclMatchOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) LoadbalancerFrontendAclMatch { return v.Match }).(LoadbalancerFrontendAclMatchOutput)
}

// The ACL name. If not provided it will be randomly generated.
func (o LoadbalancerFrontendAclOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Date and time of ACL's update (RFC 3339 format)
func (o LoadbalancerFrontendAclOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendAclArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAcl)(nil)).Elem()
}

func (o LoadbalancerFrontendAclArrayOutput) ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclArrayOutput) ToLoadbalancerFrontendAclArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendAcl {
		return vs[0].([]LoadbalancerFrontendAcl)[vs[1].(int)]
	}).(LoadbalancerFrontendAclOutput)
}

type LoadbalancerFrontendAclAction struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects []LoadbalancerFrontendAclActionRedirect `pulumi:"redirects"`
	// The redirect type. Possible values are: `location` or `scheme`.
	Type string `pulumi:"type"`
}

// LoadbalancerFrontendAclActionInput is an input type that accepts LoadbalancerFrontendAclActionArgs and LoadbalancerFrontendAclActionOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclActionInput` via:
//
//	LoadbalancerFrontendAclActionArgs{...}
type LoadbalancerFrontendAclActionInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput
	ToLoadbalancerFrontendAclActionOutputWithContext(context.Context) LoadbalancerFrontendAclActionOutput
}

type LoadbalancerFrontendAclActionArgs struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects LoadbalancerFrontendAclActionRedirectArrayInput `pulumi:"redirects"`
	// The redirect type. Possible values are: `location` or `scheme`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadbalancerFrontendAclActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclAction)(nil)).Elem()
}

func (i LoadbalancerFrontendAclActionArgs) ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput {
	return i.ToLoadbalancerFrontendAclActionOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclActionArgs) ToLoadbalancerFrontendAclActionOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclActionOutput)
}

type LoadbalancerFrontendAclActionOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclAction)(nil)).Elem()
}

func (o LoadbalancerFrontendAclActionOutput) ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput {
	return o
}

func (o LoadbalancerFrontendAclActionOutput) ToLoadbalancerFrontendAclActionOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionOutput {
	return o
}

// Redirect parameters when using an ACL with `redirect` action.
func (o LoadbalancerFrontendAclActionOutput) Redirects() LoadbalancerFrontendAclActionRedirectArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclAction) []LoadbalancerFrontendAclActionRedirect { return v.Redirects }).(LoadbalancerFrontendAclActionRedirectArrayOutput)
}

// The redirect type. Possible values are: `location` or `scheme`.
func (o LoadbalancerFrontendAclActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclAction) string { return v.Type }).(pulumi.StringOutput)
}

type LoadbalancerFrontendAclActionRedirect struct {
	// The HTTP redirect code to use
	Code *int `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target *string `pulumi:"target"`
	// The redirect type
	Type *string `pulumi:"type"`
}

// LoadbalancerFrontendAclActionRedirectInput is an input type that accepts LoadbalancerFrontendAclActionRedirectArgs and LoadbalancerFrontendAclActionRedirectOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclActionRedirectInput` via:
//
//	LoadbalancerFrontendAclActionRedirectArgs{...}
type LoadbalancerFrontendAclActionRedirectInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclActionRedirectOutput() LoadbalancerFrontendAclActionRedirectOutput
	ToLoadbalancerFrontendAclActionRedirectOutputWithContext(context.Context) LoadbalancerFrontendAclActionRedirectOutput
}

type LoadbalancerFrontendAclActionRedirectArgs struct {
	// The HTTP redirect code to use
	Code pulumi.IntPtrInput `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The redirect type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoadbalancerFrontendAclActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclActionRedirect)(nil)).Elem()
}

func (i LoadbalancerFrontendAclActionRedirectArgs) ToLoadbalancerFrontendAclActionRedirectOutput() LoadbalancerFrontendAclActionRedirectOutput {
	return i.ToLoadbalancerFrontendAclActionRedirectOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclActionRedirectArgs) ToLoadbalancerFrontendAclActionRedirectOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclActionRedirectOutput)
}

// LoadbalancerFrontendAclActionRedirectArrayInput is an input type that accepts LoadbalancerFrontendAclActionRedirectArray and LoadbalancerFrontendAclActionRedirectArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclActionRedirectArrayInput` via:
//
//	LoadbalancerFrontendAclActionRedirectArray{ LoadbalancerFrontendAclActionRedirectArgs{...} }
type LoadbalancerFrontendAclActionRedirectArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclActionRedirectArrayOutput() LoadbalancerFrontendAclActionRedirectArrayOutput
	ToLoadbalancerFrontendAclActionRedirectArrayOutputWithContext(context.Context) LoadbalancerFrontendAclActionRedirectArrayOutput
}

type LoadbalancerFrontendAclActionRedirectArray []LoadbalancerFrontendAclActionRedirectInput

func (LoadbalancerFrontendAclActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAclActionRedirect)(nil)).Elem()
}

func (i LoadbalancerFrontendAclActionRedirectArray) ToLoadbalancerFrontendAclActionRedirectArrayOutput() LoadbalancerFrontendAclActionRedirectArrayOutput {
	return i.ToLoadbalancerFrontendAclActionRedirectArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclActionRedirectArray) ToLoadbalancerFrontendAclActionRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclActionRedirectArrayOutput)
}

type LoadbalancerFrontendAclActionRedirectOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclActionRedirect)(nil)).Elem()
}

func (o LoadbalancerFrontendAclActionRedirectOutput) ToLoadbalancerFrontendAclActionRedirectOutput() LoadbalancerFrontendAclActionRedirectOutput {
	return o
}

func (o LoadbalancerFrontendAclActionRedirectOutput) ToLoadbalancerFrontendAclActionRedirectOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionRedirectOutput {
	return o
}

// The HTTP redirect code to use
func (o LoadbalancerFrontendAclActionRedirectOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclActionRedirect) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// An URL can be used in case of a location redirect
func (o LoadbalancerFrontendAclActionRedirectOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclActionRedirect) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The redirect type
func (o LoadbalancerFrontendAclActionRedirectOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclActionRedirect) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendAclActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAclActionRedirect)(nil)).Elem()
}

func (o LoadbalancerFrontendAclActionRedirectArrayOutput) ToLoadbalancerFrontendAclActionRedirectArrayOutput() LoadbalancerFrontendAclActionRedirectArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclActionRedirectArrayOutput) ToLoadbalancerFrontendAclActionRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionRedirectArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclActionRedirectArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendAclActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendAclActionRedirect {
		return vs[0].([]LoadbalancerFrontendAclActionRedirect)[vs[1].(int)]
	}).(LoadbalancerFrontendAclActionRedirectOutput)
}

type LoadbalancerFrontendAclMatch struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
	HttpFilter *string `pulumi:"httpFilter"`
	// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
	HttpFilterOption *string `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter.
	// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
	HttpFilterValues []string `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert *bool `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets []string `pulumi:"ipSubnets"`
}

// LoadbalancerFrontendAclMatchInput is an input type that accepts LoadbalancerFrontendAclMatchArgs and LoadbalancerFrontendAclMatchOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclMatchInput` via:
//
//	LoadbalancerFrontendAclMatchArgs{...}
type LoadbalancerFrontendAclMatchInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput
	ToLoadbalancerFrontendAclMatchOutputWithContext(context.Context) LoadbalancerFrontendAclMatchOutput
}

type LoadbalancerFrontendAclMatchArgs struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
	HttpFilter pulumi.StringPtrInput `pulumi:"httpFilter"`
	// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
	HttpFilterOption pulumi.StringPtrInput `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter.
	// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
	HttpFilterValues pulumi.StringArrayInput `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
}

func (LoadbalancerFrontendAclMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclMatch)(nil)).Elem()
}

func (i LoadbalancerFrontendAclMatchArgs) ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput {
	return i.ToLoadbalancerFrontendAclMatchOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclMatchArgs) ToLoadbalancerFrontendAclMatchOutputWithContext(ctx context.Context) LoadbalancerFrontendAclMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclMatchOutput)
}

type LoadbalancerFrontendAclMatchOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclMatch)(nil)).Elem()
}

func (o LoadbalancerFrontendAclMatchOutput) ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput {
	return o
}

func (o LoadbalancerFrontendAclMatchOutput) ToLoadbalancerFrontendAclMatchOutputWithContext(ctx context.Context) LoadbalancerFrontendAclMatchOutput {
	return o
}

// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd`, `httpHeaderMatch` or `regex`.
func (o LoadbalancerFrontendAclMatchOutput) HttpFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) *string { return v.HttpFilter }).(pulumi.StringPtrOutput)
}

// If you have `httpFilter` at `httpHeaderMatch`, you can use this field to filter on the HTTP header's value.
func (o LoadbalancerFrontendAclMatchOutput) HttpFilterOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) *string { return v.HttpFilterOption }).(pulumi.StringPtrOutput)
}

// A list of possible values to match for the given HTTP filter.
// Keep in mind that in the case of `httpHeaderMatch` the HTTP header field name is case-insensitive.
func (o LoadbalancerFrontendAclMatchOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) []string { return v.HttpFilterValues }).(pulumi.StringArrayOutput)
}

// If set to `true`, the condition will be of type "unless".
func (o LoadbalancerFrontendAclMatchOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
func (o LoadbalancerFrontendAclMatchOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

type LoadbalancerPrivateNetwork struct {
	// (Optional) Set to true if you want to let DHCP assign IP addresses. See below.
	DhcpConfig *bool `pulumi:"dhcpConfig"`
	// (Required) The ID of the Private Network to associate.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// (Optional) Define a local ip address of your choice for the load balancer instance. See below.
	StaticConfig *string `pulumi:"staticConfig"`
	// The status of private network connection
	Status *string `pulumi:"status"`
	// `zone`) The zone of the load-balancer.
	Zone *string `pulumi:"zone"`
}

// LoadbalancerPrivateNetworkInput is an input type that accepts LoadbalancerPrivateNetworkArgs and LoadbalancerPrivateNetworkOutput values.
// You can construct a concrete instance of `LoadbalancerPrivateNetworkInput` via:
//
//	LoadbalancerPrivateNetworkArgs{...}
type LoadbalancerPrivateNetworkInput interface {
	pulumi.Input

	ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput
	ToLoadbalancerPrivateNetworkOutputWithContext(context.Context) LoadbalancerPrivateNetworkOutput
}

type LoadbalancerPrivateNetworkArgs struct {
	// (Optional) Set to true if you want to let DHCP assign IP addresses. See below.
	DhcpConfig pulumi.BoolPtrInput `pulumi:"dhcpConfig"`
	// (Required) The ID of the Private Network to associate.
	PrivateNetworkId pulumi.StringInput `pulumi:"privateNetworkId"`
	// (Optional) Define a local ip address of your choice for the load balancer instance. See below.
	StaticConfig pulumi.StringPtrInput `pulumi:"staticConfig"`
	// The status of private network connection
	Status pulumi.StringPtrInput `pulumi:"status"`
	// `zone`) The zone of the load-balancer.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LoadbalancerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i LoadbalancerPrivateNetworkArgs) ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput {
	return i.ToLoadbalancerPrivateNetworkOutputWithContext(context.Background())
}

func (i LoadbalancerPrivateNetworkArgs) ToLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerPrivateNetworkOutput)
}

// LoadbalancerPrivateNetworkArrayInput is an input type that accepts LoadbalancerPrivateNetworkArray and LoadbalancerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `LoadbalancerPrivateNetworkArrayInput` via:
//
//	LoadbalancerPrivateNetworkArray{ LoadbalancerPrivateNetworkArgs{...} }
type LoadbalancerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput
	ToLoadbalancerPrivateNetworkArrayOutputWithContext(context.Context) LoadbalancerPrivateNetworkArrayOutput
}

type LoadbalancerPrivateNetworkArray []LoadbalancerPrivateNetworkInput

func (LoadbalancerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i LoadbalancerPrivateNetworkArray) ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput {
	return i.ToLoadbalancerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i LoadbalancerPrivateNetworkArray) ToLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerPrivateNetworkArrayOutput)
}

type LoadbalancerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (LoadbalancerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o LoadbalancerPrivateNetworkOutput) ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput {
	return o
}

func (o LoadbalancerPrivateNetworkOutput) ToLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkOutput {
	return o
}

// (Optional) Set to true if you want to let DHCP assign IP addresses. See below.
func (o LoadbalancerPrivateNetworkOutput) DhcpConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *bool { return v.DhcpConfig }).(pulumi.BoolPtrOutput)
}

// (Required) The ID of the Private Network to associate.
func (o LoadbalancerPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

// (Optional) Define a local ip address of your choice for the load balancer instance. See below.
func (o LoadbalancerPrivateNetworkOutput) StaticConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *string { return v.StaticConfig }).(pulumi.StringPtrOutput)
}

// The status of private network connection
func (o LoadbalancerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// `zone`) The zone of the load-balancer.
func (o LoadbalancerPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type LoadbalancerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o LoadbalancerPrivateNetworkArrayOutput) ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o LoadbalancerPrivateNetworkArrayOutput) ToLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o LoadbalancerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) LoadbalancerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerPrivateNetwork {
		return vs[0].([]LoadbalancerPrivateNetwork)[vs[1].(int)]
	}).(LoadbalancerPrivateNetworkOutput)
}

type MnqSnsCredentialsPermissions struct {
	// . Defines if user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// MnqSnsCredentialsPermissionsInput is an input type that accepts MnqSnsCredentialsPermissionsArgs and MnqSnsCredentialsPermissionsOutput values.
// You can construct a concrete instance of `MnqSnsCredentialsPermissionsInput` via:
//
//	MnqSnsCredentialsPermissionsArgs{...}
type MnqSnsCredentialsPermissionsInput interface {
	pulumi.Input

	ToMnqSnsCredentialsPermissionsOutput() MnqSnsCredentialsPermissionsOutput
	ToMnqSnsCredentialsPermissionsOutputWithContext(context.Context) MnqSnsCredentialsPermissionsOutput
}

type MnqSnsCredentialsPermissionsArgs struct {
	// . Defines if user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (MnqSnsCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MnqSnsCredentialsPermissions)(nil)).Elem()
}

func (i MnqSnsCredentialsPermissionsArgs) ToMnqSnsCredentialsPermissionsOutput() MnqSnsCredentialsPermissionsOutput {
	return i.ToMnqSnsCredentialsPermissionsOutputWithContext(context.Background())
}

func (i MnqSnsCredentialsPermissionsArgs) ToMnqSnsCredentialsPermissionsOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSnsCredentialsPermissionsOutput)
}

func (i MnqSnsCredentialsPermissionsArgs) ToMnqSnsCredentialsPermissionsPtrOutput() MnqSnsCredentialsPermissionsPtrOutput {
	return i.ToMnqSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i MnqSnsCredentialsPermissionsArgs) ToMnqSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSnsCredentialsPermissionsOutput).ToMnqSnsCredentialsPermissionsPtrOutputWithContext(ctx)
}

// MnqSnsCredentialsPermissionsPtrInput is an input type that accepts MnqSnsCredentialsPermissionsArgs, MnqSnsCredentialsPermissionsPtr and MnqSnsCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `MnqSnsCredentialsPermissionsPtrInput` via:
//
//	        MnqSnsCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type MnqSnsCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToMnqSnsCredentialsPermissionsPtrOutput() MnqSnsCredentialsPermissionsPtrOutput
	ToMnqSnsCredentialsPermissionsPtrOutputWithContext(context.Context) MnqSnsCredentialsPermissionsPtrOutput
}

type mnqSnsCredentialsPermissionsPtrType MnqSnsCredentialsPermissionsArgs

func MnqSnsCredentialsPermissionsPtr(v *MnqSnsCredentialsPermissionsArgs) MnqSnsCredentialsPermissionsPtrInput {
	return (*mnqSnsCredentialsPermissionsPtrType)(v)
}

func (*mnqSnsCredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqSnsCredentialsPermissions)(nil)).Elem()
}

func (i *mnqSnsCredentialsPermissionsPtrType) ToMnqSnsCredentialsPermissionsPtrOutput() MnqSnsCredentialsPermissionsPtrOutput {
	return i.ToMnqSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *mnqSnsCredentialsPermissionsPtrType) ToMnqSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSnsCredentialsPermissionsPtrOutput)
}

type MnqSnsCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (MnqSnsCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MnqSnsCredentialsPermissions)(nil)).Elem()
}

func (o MnqSnsCredentialsPermissionsOutput) ToMnqSnsCredentialsPermissionsOutput() MnqSnsCredentialsPermissionsOutput {
	return o
}

func (o MnqSnsCredentialsPermissionsOutput) ToMnqSnsCredentialsPermissionsOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsOutput {
	return o
}

func (o MnqSnsCredentialsPermissionsOutput) ToMnqSnsCredentialsPermissionsPtrOutput() MnqSnsCredentialsPermissionsPtrOutput {
	return o.ToMnqSnsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o MnqSnsCredentialsPermissionsOutput) ToMnqSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MnqSnsCredentialsPermissions) *MnqSnsCredentialsPermissions {
		return &v
	}).(MnqSnsCredentialsPermissionsPtrOutput)
}

// . Defines if user can manage the associated resource(s).
func (o MnqSnsCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSnsCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o MnqSnsCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSnsCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o MnqSnsCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSnsCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type MnqSnsCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (MnqSnsCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqSnsCredentialsPermissions)(nil)).Elem()
}

func (o MnqSnsCredentialsPermissionsPtrOutput) ToMnqSnsCredentialsPermissionsPtrOutput() MnqSnsCredentialsPermissionsPtrOutput {
	return o
}

func (o MnqSnsCredentialsPermissionsPtrOutput) ToMnqSnsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSnsCredentialsPermissionsPtrOutput {
	return o
}

func (o MnqSnsCredentialsPermissionsPtrOutput) Elem() MnqSnsCredentialsPermissionsOutput {
	return o.ApplyT(func(v *MnqSnsCredentialsPermissions) MnqSnsCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret MnqSnsCredentialsPermissions
		return ret
	}).(MnqSnsCredentialsPermissionsOutput)
}

// . Defines if user can manage the associated resource(s).
func (o MnqSnsCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o MnqSnsCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o MnqSnsCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSnsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

type MnqSqsCredentialsPermissions struct {
	// . Defines if user can manage the associated resource(s).
	CanManage *bool `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish *bool `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive *bool `pulumi:"canReceive"`
}

// MnqSqsCredentialsPermissionsInput is an input type that accepts MnqSqsCredentialsPermissionsArgs and MnqSqsCredentialsPermissionsOutput values.
// You can construct a concrete instance of `MnqSqsCredentialsPermissionsInput` via:
//
//	MnqSqsCredentialsPermissionsArgs{...}
type MnqSqsCredentialsPermissionsInput interface {
	pulumi.Input

	ToMnqSqsCredentialsPermissionsOutput() MnqSqsCredentialsPermissionsOutput
	ToMnqSqsCredentialsPermissionsOutputWithContext(context.Context) MnqSqsCredentialsPermissionsOutput
}

type MnqSqsCredentialsPermissionsArgs struct {
	// . Defines if user can manage the associated resource(s).
	CanManage pulumi.BoolPtrInput `pulumi:"canManage"`
	// . Defines if user can publish messages to the service.
	CanPublish pulumi.BoolPtrInput `pulumi:"canPublish"`
	// . Defines if user can receive messages from the service.
	CanReceive pulumi.BoolPtrInput `pulumi:"canReceive"`
}

func (MnqSqsCredentialsPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MnqSqsCredentialsPermissions)(nil)).Elem()
}

func (i MnqSqsCredentialsPermissionsArgs) ToMnqSqsCredentialsPermissionsOutput() MnqSqsCredentialsPermissionsOutput {
	return i.ToMnqSqsCredentialsPermissionsOutputWithContext(context.Background())
}

func (i MnqSqsCredentialsPermissionsArgs) ToMnqSqsCredentialsPermissionsOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSqsCredentialsPermissionsOutput)
}

func (i MnqSqsCredentialsPermissionsArgs) ToMnqSqsCredentialsPermissionsPtrOutput() MnqSqsCredentialsPermissionsPtrOutput {
	return i.ToMnqSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i MnqSqsCredentialsPermissionsArgs) ToMnqSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSqsCredentialsPermissionsOutput).ToMnqSqsCredentialsPermissionsPtrOutputWithContext(ctx)
}

// MnqSqsCredentialsPermissionsPtrInput is an input type that accepts MnqSqsCredentialsPermissionsArgs, MnqSqsCredentialsPermissionsPtr and MnqSqsCredentialsPermissionsPtrOutput values.
// You can construct a concrete instance of `MnqSqsCredentialsPermissionsPtrInput` via:
//
//	        MnqSqsCredentialsPermissionsArgs{...}
//
//	or:
//
//	        nil
type MnqSqsCredentialsPermissionsPtrInput interface {
	pulumi.Input

	ToMnqSqsCredentialsPermissionsPtrOutput() MnqSqsCredentialsPermissionsPtrOutput
	ToMnqSqsCredentialsPermissionsPtrOutputWithContext(context.Context) MnqSqsCredentialsPermissionsPtrOutput
}

type mnqSqsCredentialsPermissionsPtrType MnqSqsCredentialsPermissionsArgs

func MnqSqsCredentialsPermissionsPtr(v *MnqSqsCredentialsPermissionsArgs) MnqSqsCredentialsPermissionsPtrInput {
	return (*mnqSqsCredentialsPermissionsPtrType)(v)
}

func (*mnqSqsCredentialsPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqSqsCredentialsPermissions)(nil)).Elem()
}

func (i *mnqSqsCredentialsPermissionsPtrType) ToMnqSqsCredentialsPermissionsPtrOutput() MnqSqsCredentialsPermissionsPtrOutput {
	return i.ToMnqSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (i *mnqSqsCredentialsPermissionsPtrType) ToMnqSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MnqSqsCredentialsPermissionsPtrOutput)
}

type MnqSqsCredentialsPermissionsOutput struct{ *pulumi.OutputState }

func (MnqSqsCredentialsPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MnqSqsCredentialsPermissions)(nil)).Elem()
}

func (o MnqSqsCredentialsPermissionsOutput) ToMnqSqsCredentialsPermissionsOutput() MnqSqsCredentialsPermissionsOutput {
	return o
}

func (o MnqSqsCredentialsPermissionsOutput) ToMnqSqsCredentialsPermissionsOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsOutput {
	return o
}

func (o MnqSqsCredentialsPermissionsOutput) ToMnqSqsCredentialsPermissionsPtrOutput() MnqSqsCredentialsPermissionsPtrOutput {
	return o.ToMnqSqsCredentialsPermissionsPtrOutputWithContext(context.Background())
}

func (o MnqSqsCredentialsPermissionsOutput) ToMnqSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MnqSqsCredentialsPermissions) *MnqSqsCredentialsPermissions {
		return &v
	}).(MnqSqsCredentialsPermissionsPtrOutput)
}

// . Defines if user can manage the associated resource(s).
func (o MnqSqsCredentialsPermissionsOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSqsCredentialsPermissions) *bool { return v.CanManage }).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o MnqSqsCredentialsPermissionsOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSqsCredentialsPermissions) *bool { return v.CanPublish }).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o MnqSqsCredentialsPermissionsOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MnqSqsCredentialsPermissions) *bool { return v.CanReceive }).(pulumi.BoolPtrOutput)
}

type MnqSqsCredentialsPermissionsPtrOutput struct{ *pulumi.OutputState }

func (MnqSqsCredentialsPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MnqSqsCredentialsPermissions)(nil)).Elem()
}

func (o MnqSqsCredentialsPermissionsPtrOutput) ToMnqSqsCredentialsPermissionsPtrOutput() MnqSqsCredentialsPermissionsPtrOutput {
	return o
}

func (o MnqSqsCredentialsPermissionsPtrOutput) ToMnqSqsCredentialsPermissionsPtrOutputWithContext(ctx context.Context) MnqSqsCredentialsPermissionsPtrOutput {
	return o
}

func (o MnqSqsCredentialsPermissionsPtrOutput) Elem() MnqSqsCredentialsPermissionsOutput {
	return o.ApplyT(func(v *MnqSqsCredentialsPermissions) MnqSqsCredentialsPermissions {
		if v != nil {
			return *v
		}
		var ret MnqSqsCredentialsPermissions
		return ret
	}).(MnqSqsCredentialsPermissionsOutput)
}

// . Defines if user can manage the associated resource(s).
func (o MnqSqsCredentialsPermissionsPtrOutput) CanManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanManage
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can publish messages to the service.
func (o MnqSqsCredentialsPermissionsPtrOutput) CanPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanPublish
	}).(pulumi.BoolPtrOutput)
}

// . Defines if user can receive messages from the service.
func (o MnqSqsCredentialsPermissionsPtrOutput) CanReceive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MnqSqsCredentialsPermissions) *bool {
		if v == nil {
			return nil
		}
		return v.CanReceive
	}).(pulumi.BoolPtrOutput)
}

type ObjectBucketAclAccessControlPolicy struct {
	Grants []ObjectBucketAclAccessControlPolicyGrant `pulumi:"grants"`
	// Configuration block of the bucket project owner's display organization ID.
	Owner ObjectBucketAclAccessControlPolicyOwner `pulumi:"owner"`
}

// ObjectBucketAclAccessControlPolicyInput is an input type that accepts ObjectBucketAclAccessControlPolicyArgs and ObjectBucketAclAccessControlPolicyOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyInput` via:
//
//	ObjectBucketAclAccessControlPolicyArgs{...}
type ObjectBucketAclAccessControlPolicyInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyOutput() ObjectBucketAclAccessControlPolicyOutput
	ToObjectBucketAclAccessControlPolicyOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyOutput
}

type ObjectBucketAclAccessControlPolicyArgs struct {
	Grants ObjectBucketAclAccessControlPolicyGrantArrayInput `pulumi:"grants"`
	// Configuration block of the bucket project owner's display organization ID.
	Owner ObjectBucketAclAccessControlPolicyOwnerInput `pulumi:"owner"`
}

func (ObjectBucketAclAccessControlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicy)(nil)).Elem()
}

func (i ObjectBucketAclAccessControlPolicyArgs) ToObjectBucketAclAccessControlPolicyOutput() ObjectBucketAclAccessControlPolicyOutput {
	return i.ToObjectBucketAclAccessControlPolicyOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyArgs) ToObjectBucketAclAccessControlPolicyOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyOutput)
}

func (i ObjectBucketAclAccessControlPolicyArgs) ToObjectBucketAclAccessControlPolicyPtrOutput() ObjectBucketAclAccessControlPolicyPtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyArgs) ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyOutput).ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(ctx)
}

// ObjectBucketAclAccessControlPolicyPtrInput is an input type that accepts ObjectBucketAclAccessControlPolicyArgs, ObjectBucketAclAccessControlPolicyPtr and ObjectBucketAclAccessControlPolicyPtrOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyPtrInput` via:
//
//	        ObjectBucketAclAccessControlPolicyArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketAclAccessControlPolicyPtrInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyPtrOutput() ObjectBucketAclAccessControlPolicyPtrOutput
	ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyPtrOutput
}

type objectBucketAclAccessControlPolicyPtrType ObjectBucketAclAccessControlPolicyArgs

func ObjectBucketAclAccessControlPolicyPtr(v *ObjectBucketAclAccessControlPolicyArgs) ObjectBucketAclAccessControlPolicyPtrInput {
	return (*objectBucketAclAccessControlPolicyPtrType)(v)
}

func (*objectBucketAclAccessControlPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicy)(nil)).Elem()
}

func (i *objectBucketAclAccessControlPolicyPtrType) ToObjectBucketAclAccessControlPolicyPtrOutput() ObjectBucketAclAccessControlPolicyPtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(context.Background())
}

func (i *objectBucketAclAccessControlPolicyPtrType) ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyPtrOutput)
}

type ObjectBucketAclAccessControlPolicyOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicy)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyOutput) ToObjectBucketAclAccessControlPolicyOutput() ObjectBucketAclAccessControlPolicyOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOutput) ToObjectBucketAclAccessControlPolicyOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOutput) ToObjectBucketAclAccessControlPolicyPtrOutput() ObjectBucketAclAccessControlPolicyPtrOutput {
	return o.ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(context.Background())
}

func (o ObjectBucketAclAccessControlPolicyOutput) ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketAclAccessControlPolicy) *ObjectBucketAclAccessControlPolicy {
		return &v
	}).(ObjectBucketAclAccessControlPolicyPtrOutput)
}

func (o ObjectBucketAclAccessControlPolicyOutput) Grants() ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicy) []ObjectBucketAclAccessControlPolicyGrant { return v.Grants }).(ObjectBucketAclAccessControlPolicyGrantArrayOutput)
}

// Configuration block of the bucket project owner's display organization ID.
func (o ObjectBucketAclAccessControlPolicyOutput) Owner() ObjectBucketAclAccessControlPolicyOwnerOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicy) ObjectBucketAclAccessControlPolicyOwner { return v.Owner }).(ObjectBucketAclAccessControlPolicyOwnerOutput)
}

type ObjectBucketAclAccessControlPolicyPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicy)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyPtrOutput) ToObjectBucketAclAccessControlPolicyPtrOutput() ObjectBucketAclAccessControlPolicyPtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyPtrOutput) ToObjectBucketAclAccessControlPolicyPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyPtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyPtrOutput) Elem() ObjectBucketAclAccessControlPolicyOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicy) ObjectBucketAclAccessControlPolicy {
		if v != nil {
			return *v
		}
		var ret ObjectBucketAclAccessControlPolicy
		return ret
	}).(ObjectBucketAclAccessControlPolicyOutput)
}

func (o ObjectBucketAclAccessControlPolicyPtrOutput) Grants() ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicy) []ObjectBucketAclAccessControlPolicyGrant {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(ObjectBucketAclAccessControlPolicyGrantArrayOutput)
}

// Configuration block of the bucket project owner's display organization ID.
func (o ObjectBucketAclAccessControlPolicyPtrOutput) Owner() ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicy) *ObjectBucketAclAccessControlPolicyOwner {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(ObjectBucketAclAccessControlPolicyOwnerPtrOutput)
}

type ObjectBucketAclAccessControlPolicyGrant struct {
	// Configuration block for the project being granted permissions.
	Grantee *ObjectBucketAclAccessControlPolicyGrantGrantee `pulumi:"grantee"`
	// Logging permissions assigned to the grantee for the bucket.
	Permission string `pulumi:"permission"`
}

// ObjectBucketAclAccessControlPolicyGrantInput is an input type that accepts ObjectBucketAclAccessControlPolicyGrantArgs and ObjectBucketAclAccessControlPolicyGrantOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyGrantInput` via:
//
//	ObjectBucketAclAccessControlPolicyGrantArgs{...}
type ObjectBucketAclAccessControlPolicyGrantInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyGrantOutput() ObjectBucketAclAccessControlPolicyGrantOutput
	ToObjectBucketAclAccessControlPolicyGrantOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyGrantOutput
}

type ObjectBucketAclAccessControlPolicyGrantArgs struct {
	// Configuration block for the project being granted permissions.
	Grantee ObjectBucketAclAccessControlPolicyGrantGranteePtrInput `pulumi:"grantee"`
	// Logging permissions assigned to the grantee for the bucket.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (ObjectBucketAclAccessControlPolicyGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrant)(nil)).Elem()
}

func (i ObjectBucketAclAccessControlPolicyGrantArgs) ToObjectBucketAclAccessControlPolicyGrantOutput() ObjectBucketAclAccessControlPolicyGrantOutput {
	return i.ToObjectBucketAclAccessControlPolicyGrantOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyGrantArgs) ToObjectBucketAclAccessControlPolicyGrantOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyGrantOutput)
}

// ObjectBucketAclAccessControlPolicyGrantArrayInput is an input type that accepts ObjectBucketAclAccessControlPolicyGrantArray and ObjectBucketAclAccessControlPolicyGrantArrayOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyGrantArrayInput` via:
//
//	ObjectBucketAclAccessControlPolicyGrantArray{ ObjectBucketAclAccessControlPolicyGrantArgs{...} }
type ObjectBucketAclAccessControlPolicyGrantArrayInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyGrantArrayOutput() ObjectBucketAclAccessControlPolicyGrantArrayOutput
	ToObjectBucketAclAccessControlPolicyGrantArrayOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyGrantArrayOutput
}

type ObjectBucketAclAccessControlPolicyGrantArray []ObjectBucketAclAccessControlPolicyGrantInput

func (ObjectBucketAclAccessControlPolicyGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketAclAccessControlPolicyGrant)(nil)).Elem()
}

func (i ObjectBucketAclAccessControlPolicyGrantArray) ToObjectBucketAclAccessControlPolicyGrantArrayOutput() ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return i.ToObjectBucketAclAccessControlPolicyGrantArrayOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyGrantArray) ToObjectBucketAclAccessControlPolicyGrantArrayOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyGrantArrayOutput)
}

type ObjectBucketAclAccessControlPolicyGrantOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrant)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyGrantOutput) ToObjectBucketAclAccessControlPolicyGrantOutput() ObjectBucketAclAccessControlPolicyGrantOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantOutput) ToObjectBucketAclAccessControlPolicyGrantOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantOutput {
	return o
}

// Configuration block for the project being granted permissions.
func (o ObjectBucketAclAccessControlPolicyGrantOutput) Grantee() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyGrant) *ObjectBucketAclAccessControlPolicyGrantGrantee {
		return v.Grantee
	}).(ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput)
}

// Logging permissions assigned to the grantee for the bucket.
func (o ObjectBucketAclAccessControlPolicyGrantOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyGrant) string { return v.Permission }).(pulumi.StringOutput)
}

type ObjectBucketAclAccessControlPolicyGrantArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketAclAccessControlPolicyGrant)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyGrantArrayOutput) ToObjectBucketAclAccessControlPolicyGrantArrayOutput() ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantArrayOutput) ToObjectBucketAclAccessControlPolicyGrantArrayOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantArrayOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantArrayOutput) Index(i pulumi.IntInput) ObjectBucketAclAccessControlPolicyGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectBucketAclAccessControlPolicyGrant {
		return vs[0].([]ObjectBucketAclAccessControlPolicyGrant)[vs[1].(int)]
	}).(ObjectBucketAclAccessControlPolicyGrantOutput)
}

type ObjectBucketAclAccessControlPolicyGrantGrantee struct {
	DisplayName *string `pulumi:"displayName"`
	// The `region`,`bucket` and `acl` separated by (`/`).
	Id string `pulumi:"id"`
	// Type of grantee. Valid values: `CanonicalUser`
	Type string `pulumi:"type"`
}

// ObjectBucketAclAccessControlPolicyGrantGranteeInput is an input type that accepts ObjectBucketAclAccessControlPolicyGrantGranteeArgs and ObjectBucketAclAccessControlPolicyGrantGranteeOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyGrantGranteeInput` via:
//
//	ObjectBucketAclAccessControlPolicyGrantGranteeArgs{...}
type ObjectBucketAclAccessControlPolicyGrantGranteeInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyGrantGranteeOutput() ObjectBucketAclAccessControlPolicyGrantGranteeOutput
	ToObjectBucketAclAccessControlPolicyGrantGranteeOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyGrantGranteeOutput
}

type ObjectBucketAclAccessControlPolicyGrantGranteeArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The `region`,`bucket` and `acl` separated by (`/`).
	Id pulumi.StringInput `pulumi:"id"`
	// Type of grantee. Valid values: `CanonicalUser`
	Type pulumi.StringInput `pulumi:"type"`
}

func (ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantGrantee)(nil)).Elem()
}

func (i ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ToObjectBucketAclAccessControlPolicyGrantGranteeOutput() ObjectBucketAclAccessControlPolicyGrantGranteeOutput {
	return i.ToObjectBucketAclAccessControlPolicyGrantGranteeOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ToObjectBucketAclAccessControlPolicyGrantGranteeOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyGrantGranteeOutput)
}

func (i ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutput() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyGrantGranteeOutput).ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(ctx)
}

// ObjectBucketAclAccessControlPolicyGrantGranteePtrInput is an input type that accepts ObjectBucketAclAccessControlPolicyGrantGranteeArgs, ObjectBucketAclAccessControlPolicyGrantGranteePtr and ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyGrantGranteePtrInput` via:
//
//	        ObjectBucketAclAccessControlPolicyGrantGranteeArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketAclAccessControlPolicyGrantGranteePtrInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutput() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput
	ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput
}

type objectBucketAclAccessControlPolicyGrantGranteePtrType ObjectBucketAclAccessControlPolicyGrantGranteeArgs

func ObjectBucketAclAccessControlPolicyGrantGranteePtr(v *ObjectBucketAclAccessControlPolicyGrantGranteeArgs) ObjectBucketAclAccessControlPolicyGrantGranteePtrInput {
	return (*objectBucketAclAccessControlPolicyGrantGranteePtrType)(v)
}

func (*objectBucketAclAccessControlPolicyGrantGranteePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicyGrantGrantee)(nil)).Elem()
}

func (i *objectBucketAclAccessControlPolicyGrantGranteePtrType) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutput() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(context.Background())
}

func (i *objectBucketAclAccessControlPolicyGrantGranteePtrType) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput)
}

type ObjectBucketAclAccessControlPolicyGrantGranteeOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyGrantGranteeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantGrantee)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) ToObjectBucketAclAccessControlPolicyGrantGranteeOutput() ObjectBucketAclAccessControlPolicyGrantGranteeOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) ToObjectBucketAclAccessControlPolicyGrantGranteeOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteeOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutput() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return o.ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(context.Background())
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketAclAccessControlPolicyGrantGrantee) *ObjectBucketAclAccessControlPolicyGrantGrantee {
		return &v
	}).(ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput)
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyGrantGrantee) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The `region`,`bucket` and `acl` separated by (`/`).
func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyGrantGrantee) string { return v.Id }).(pulumi.StringOutput)
}

// Type of grantee. Valid values: `CanonicalUser`
func (o ObjectBucketAclAccessControlPolicyGrantGranteeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyGrantGrantee) string { return v.Type }).(pulumi.StringOutput)
}

type ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicyGrantGrantee)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutput() ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) ToObjectBucketAclAccessControlPolicyGrantGranteePtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) Elem() ObjectBucketAclAccessControlPolicyGrantGranteeOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyGrantGrantee) ObjectBucketAclAccessControlPolicyGrantGrantee {
		if v != nil {
			return *v
		}
		var ret ObjectBucketAclAccessControlPolicyGrantGrantee
		return ret
	}).(ObjectBucketAclAccessControlPolicyGrantGranteeOutput)
}

func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyGrantGrantee) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The `region`,`bucket` and `acl` separated by (`/`).
func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyGrantGrantee) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Type of grantee. Valid values: `CanonicalUser`
func (o ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyGrantGrantee) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ObjectBucketAclAccessControlPolicyOwner struct {
	// The project ID of the grantee.
	DisplayName *string `pulumi:"displayName"`
	// The `region`,`bucket` and `acl` separated by (`/`).
	Id string `pulumi:"id"`
}

// ObjectBucketAclAccessControlPolicyOwnerInput is an input type that accepts ObjectBucketAclAccessControlPolicyOwnerArgs and ObjectBucketAclAccessControlPolicyOwnerOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyOwnerInput` via:
//
//	ObjectBucketAclAccessControlPolicyOwnerArgs{...}
type ObjectBucketAclAccessControlPolicyOwnerInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyOwnerOutput() ObjectBucketAclAccessControlPolicyOwnerOutput
	ToObjectBucketAclAccessControlPolicyOwnerOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyOwnerOutput
}

type ObjectBucketAclAccessControlPolicyOwnerArgs struct {
	// The project ID of the grantee.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The `region`,`bucket` and `acl` separated by (`/`).
	Id pulumi.StringInput `pulumi:"id"`
}

func (ObjectBucketAclAccessControlPolicyOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyOwner)(nil)).Elem()
}

func (i ObjectBucketAclAccessControlPolicyOwnerArgs) ToObjectBucketAclAccessControlPolicyOwnerOutput() ObjectBucketAclAccessControlPolicyOwnerOutput {
	return i.ToObjectBucketAclAccessControlPolicyOwnerOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyOwnerArgs) ToObjectBucketAclAccessControlPolicyOwnerOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyOwnerOutput)
}

func (i ObjectBucketAclAccessControlPolicyOwnerArgs) ToObjectBucketAclAccessControlPolicyOwnerPtrOutput() ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(context.Background())
}

func (i ObjectBucketAclAccessControlPolicyOwnerArgs) ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyOwnerOutput).ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(ctx)
}

// ObjectBucketAclAccessControlPolicyOwnerPtrInput is an input type that accepts ObjectBucketAclAccessControlPolicyOwnerArgs, ObjectBucketAclAccessControlPolicyOwnerPtr and ObjectBucketAclAccessControlPolicyOwnerPtrOutput values.
// You can construct a concrete instance of `ObjectBucketAclAccessControlPolicyOwnerPtrInput` via:
//
//	        ObjectBucketAclAccessControlPolicyOwnerArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketAclAccessControlPolicyOwnerPtrInput interface {
	pulumi.Input

	ToObjectBucketAclAccessControlPolicyOwnerPtrOutput() ObjectBucketAclAccessControlPolicyOwnerPtrOutput
	ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(context.Context) ObjectBucketAclAccessControlPolicyOwnerPtrOutput
}

type objectBucketAclAccessControlPolicyOwnerPtrType ObjectBucketAclAccessControlPolicyOwnerArgs

func ObjectBucketAclAccessControlPolicyOwnerPtr(v *ObjectBucketAclAccessControlPolicyOwnerArgs) ObjectBucketAclAccessControlPolicyOwnerPtrInput {
	return (*objectBucketAclAccessControlPolicyOwnerPtrType)(v)
}

func (*objectBucketAclAccessControlPolicyOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicyOwner)(nil)).Elem()
}

func (i *objectBucketAclAccessControlPolicyOwnerPtrType) ToObjectBucketAclAccessControlPolicyOwnerPtrOutput() ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return i.ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(context.Background())
}

func (i *objectBucketAclAccessControlPolicyOwnerPtrType) ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketAclAccessControlPolicyOwnerPtrOutput)
}

type ObjectBucketAclAccessControlPolicyOwnerOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketAclAccessControlPolicyOwner)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyOwnerOutput) ToObjectBucketAclAccessControlPolicyOwnerOutput() ObjectBucketAclAccessControlPolicyOwnerOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOwnerOutput) ToObjectBucketAclAccessControlPolicyOwnerOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOwnerOutput) ToObjectBucketAclAccessControlPolicyOwnerPtrOutput() ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return o.ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(context.Background())
}

func (o ObjectBucketAclAccessControlPolicyOwnerOutput) ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketAclAccessControlPolicyOwner) *ObjectBucketAclAccessControlPolicyOwner {
		return &v
	}).(ObjectBucketAclAccessControlPolicyOwnerPtrOutput)
}

// The project ID of the grantee.
func (o ObjectBucketAclAccessControlPolicyOwnerOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyOwner) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The `region`,`bucket` and `acl` separated by (`/`).
func (o ObjectBucketAclAccessControlPolicyOwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketAclAccessControlPolicyOwner) string { return v.Id }).(pulumi.StringOutput)
}

type ObjectBucketAclAccessControlPolicyOwnerPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketAclAccessControlPolicyOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketAclAccessControlPolicyOwner)(nil)).Elem()
}

func (o ObjectBucketAclAccessControlPolicyOwnerPtrOutput) ToObjectBucketAclAccessControlPolicyOwnerPtrOutput() ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOwnerPtrOutput) ToObjectBucketAclAccessControlPolicyOwnerPtrOutputWithContext(ctx context.Context) ObjectBucketAclAccessControlPolicyOwnerPtrOutput {
	return o
}

func (o ObjectBucketAclAccessControlPolicyOwnerPtrOutput) Elem() ObjectBucketAclAccessControlPolicyOwnerOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyOwner) ObjectBucketAclAccessControlPolicyOwner {
		if v != nil {
			return *v
		}
		var ret ObjectBucketAclAccessControlPolicyOwner
		return ret
	}).(ObjectBucketAclAccessControlPolicyOwnerOutput)
}

// The project ID of the grantee.
func (o ObjectBucketAclAccessControlPolicyOwnerPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyOwner) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The `region`,`bucket` and `acl` separated by (`/`).
func (o ObjectBucketAclAccessControlPolicyOwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketAclAccessControlPolicyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ObjectBucketCorsRule struct {
	// Specifies which headers are allowed.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// ObjectBucketCorsRuleInput is an input type that accepts ObjectBucketCorsRuleArgs and ObjectBucketCorsRuleOutput values.
// You can construct a concrete instance of `ObjectBucketCorsRuleInput` via:
//
//	ObjectBucketCorsRuleArgs{...}
type ObjectBucketCorsRuleInput interface {
	pulumi.Input

	ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput
	ToObjectBucketCorsRuleOutputWithContext(context.Context) ObjectBucketCorsRuleOutput
}

type ObjectBucketCorsRuleArgs struct {
	// Specifies which headers are allowed.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (ObjectBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketCorsRule)(nil)).Elem()
}

func (i ObjectBucketCorsRuleArgs) ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput {
	return i.ToObjectBucketCorsRuleOutputWithContext(context.Background())
}

func (i ObjectBucketCorsRuleArgs) ToObjectBucketCorsRuleOutputWithContext(ctx context.Context) ObjectBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketCorsRuleOutput)
}

// ObjectBucketCorsRuleArrayInput is an input type that accepts ObjectBucketCorsRuleArray and ObjectBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `ObjectBucketCorsRuleArrayInput` via:
//
//	ObjectBucketCorsRuleArray{ ObjectBucketCorsRuleArgs{...} }
type ObjectBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput
	ToObjectBucketCorsRuleArrayOutputWithContext(context.Context) ObjectBucketCorsRuleArrayOutput
}

type ObjectBucketCorsRuleArray []ObjectBucketCorsRuleInput

func (ObjectBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketCorsRule)(nil)).Elem()
}

func (i ObjectBucketCorsRuleArray) ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput {
	return i.ToObjectBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i ObjectBucketCorsRuleArray) ToObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObjectBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketCorsRuleArrayOutput)
}

type ObjectBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (ObjectBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketCorsRule)(nil)).Elem()
}

func (o ObjectBucketCorsRuleOutput) ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput {
	return o
}

func (o ObjectBucketCorsRuleOutput) ToObjectBucketCorsRuleOutputWithContext(ctx context.Context) ObjectBucketCorsRuleOutput {
	return o
}

// Specifies which headers are allowed.
func (o ObjectBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
func (o ObjectBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Specifies which origins are allowed.
func (o ObjectBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Specifies expose header in the response.
func (o ObjectBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies time in seconds that browser can cache the response for a preflight request.
func (o ObjectBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type ObjectBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketCorsRule)(nil)).Elem()
}

func (o ObjectBucketCorsRuleArrayOutput) ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput {
	return o
}

func (o ObjectBucketCorsRuleArrayOutput) ToObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObjectBucketCorsRuleArrayOutput {
	return o
}

func (o ObjectBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) ObjectBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectBucketCorsRule {
		return vs[0].([]ObjectBucketCorsRule)[vs[1].(int)]
	}).(ObjectBucketCorsRuleOutput)
}

type ObjectBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	//
	// * > **Important:** It's not recommended using `prefix` for `AbortIncompleteMultipartUpload` as any incomplete multipart upload will be billed
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// The element value can be either Enabled or Disabled. If a rule is disabled, Scaleway S3 doesn't perform any of the actions defined in the rule.
	Enabled bool `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration *ObjectBucketLifecycleRuleExpiration `pulumi:"expiration"`
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id *string `pulumi:"id"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// Specifies object tags key and value.
	Tags map[string]string `pulumi:"tags"`
	// Specifies a period in the object's transitions (documented below).
	//
	// At least one of `abortIncompleteMultipartUploadDays`, `expiration`, `transition` must be specified.
	Transitions []ObjectBucketLifecycleRuleTransition `pulumi:"transitions"`
}

// ObjectBucketLifecycleRuleInput is an input type that accepts ObjectBucketLifecycleRuleArgs and ObjectBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleInput` via:
//
//	ObjectBucketLifecycleRuleArgs{...}
type ObjectBucketLifecycleRuleInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleOutput() ObjectBucketLifecycleRuleOutput
	ToObjectBucketLifecycleRuleOutputWithContext(context.Context) ObjectBucketLifecycleRuleOutput
}

type ObjectBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	//
	// * > **Important:** It's not recommended using `prefix` for `AbortIncompleteMultipartUpload` as any incomplete multipart upload will be billed
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// The element value can be either Enabled or Disabled. If a rule is disabled, Scaleway S3 doesn't perform any of the actions defined in the rule.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration ObjectBucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies object tags key and value.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies a period in the object's transitions (documented below).
	//
	// At least one of `abortIncompleteMultipartUploadDays`, `expiration`, `transition` must be specified.
	Transitions ObjectBucketLifecycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (ObjectBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectBucketLifecycleRuleArgs) ToObjectBucketLifecycleRuleOutput() ObjectBucketLifecycleRuleOutput {
	return i.ToObjectBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleArgs) ToObjectBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleOutput)
}

// ObjectBucketLifecycleRuleArrayInput is an input type that accepts ObjectBucketLifecycleRuleArray and ObjectBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleArrayInput` via:
//
//	ObjectBucketLifecycleRuleArray{ ObjectBucketLifecycleRuleArgs{...} }
type ObjectBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleArrayOutput() ObjectBucketLifecycleRuleArrayOutput
	ToObjectBucketLifecycleRuleArrayOutputWithContext(context.Context) ObjectBucketLifecycleRuleArrayOutput
}

type ObjectBucketLifecycleRuleArray []ObjectBucketLifecycleRuleInput

func (ObjectBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketLifecycleRule)(nil)).Elem()
}

func (i ObjectBucketLifecycleRuleArray) ToObjectBucketLifecycleRuleArrayOutput() ObjectBucketLifecycleRuleArrayOutput {
	return i.ToObjectBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleArray) ToObjectBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleArrayOutput)
}

type ObjectBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleOutput) ToObjectBucketLifecycleRuleOutput() ObjectBucketLifecycleRuleOutput {
	return o
}

func (o ObjectBucketLifecycleRuleOutput) ToObjectBucketLifecycleRuleOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
//
// * > **Important:** It's not recommended using `prefix` for `AbortIncompleteMultipartUpload` as any incomplete multipart upload will be billed
func (o ObjectBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// The element value can be either Enabled or Disabled. If a rule is disabled, Scaleway S3 doesn't perform any of the actions defined in the rule.
func (o ObjectBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a period in the object's expire (documented below).
func (o ObjectBucketLifecycleRuleOutput) Expiration() ObjectBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) *ObjectBucketLifecycleRuleExpiration { return v.Expiration }).(ObjectBucketLifecycleRuleExpirationPtrOutput)
}

// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
func (o ObjectBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Object key prefix identifying one or more objects to which the rule applies.
func (o ObjectBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies object tags key and value.
func (o ObjectBucketLifecycleRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies a period in the object's transitions (documented below).
//
// At least one of `abortIncompleteMultipartUploadDays`, `expiration`, `transition` must be specified.
func (o ObjectBucketLifecycleRuleOutput) Transitions() ObjectBucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRule) []ObjectBucketLifecycleRuleTransition { return v.Transitions }).(ObjectBucketLifecycleRuleTransitionArrayOutput)
}

type ObjectBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketLifecycleRule)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleArrayOutput) ToObjectBucketLifecycleRuleArrayOutput() ObjectBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectBucketLifecycleRuleArrayOutput) ToObjectBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleArrayOutput {
	return o
}

func (o ObjectBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) ObjectBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectBucketLifecycleRule {
		return vs[0].([]ObjectBucketLifecycleRule)[vs[1].(int)]
	}).(ObjectBucketLifecycleRuleOutput)
}

type ObjectBucketLifecycleRuleExpiration struct {
	// Specifies the number of days after object creation when the specific rule action takes effect.
	//
	// > **Important:**  If versioning is enabled, this rule only deletes the current version of an object.
	Days int `pulumi:"days"`
}

// ObjectBucketLifecycleRuleExpirationInput is an input type that accepts ObjectBucketLifecycleRuleExpirationArgs and ObjectBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleExpirationInput` via:
//
//	ObjectBucketLifecycleRuleExpirationArgs{...}
type ObjectBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleExpirationOutput() ObjectBucketLifecycleRuleExpirationOutput
	ToObjectBucketLifecycleRuleExpirationOutputWithContext(context.Context) ObjectBucketLifecycleRuleExpirationOutput
}

type ObjectBucketLifecycleRuleExpirationArgs struct {
	// Specifies the number of days after object creation when the specific rule action takes effect.
	//
	// > **Important:**  If versioning is enabled, this rule only deletes the current version of an object.
	Days pulumi.IntInput `pulumi:"days"`
}

func (ObjectBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i ObjectBucketLifecycleRuleExpirationArgs) ToObjectBucketLifecycleRuleExpirationOutput() ObjectBucketLifecycleRuleExpirationOutput {
	return i.ToObjectBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleExpirationArgs) ToObjectBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleExpirationOutput)
}

func (i ObjectBucketLifecycleRuleExpirationArgs) ToObjectBucketLifecycleRuleExpirationPtrOutput() ObjectBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleExpirationArgs) ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleExpirationOutput).ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// ObjectBucketLifecycleRuleExpirationPtrInput is an input type that accepts ObjectBucketLifecycleRuleExpirationArgs, ObjectBucketLifecycleRuleExpirationPtr and ObjectBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleExpirationPtrInput` via:
//
//	        ObjectBucketLifecycleRuleExpirationArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleExpirationPtrOutput() ObjectBucketLifecycleRuleExpirationPtrOutput
	ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) ObjectBucketLifecycleRuleExpirationPtrOutput
}

type objectBucketLifecycleRuleExpirationPtrType ObjectBucketLifecycleRuleExpirationArgs

func ObjectBucketLifecycleRuleExpirationPtr(v *ObjectBucketLifecycleRuleExpirationArgs) ObjectBucketLifecycleRuleExpirationPtrInput {
	return (*objectBucketLifecycleRuleExpirationPtrType)(v)
}

func (*objectBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *objectBucketLifecycleRuleExpirationPtrType) ToObjectBucketLifecycleRuleExpirationPtrOutput() ObjectBucketLifecycleRuleExpirationPtrOutput {
	return i.ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *objectBucketLifecycleRuleExpirationPtrType) ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleExpirationPtrOutput)
}

type ObjectBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleExpirationOutput) ToObjectBucketLifecycleRuleExpirationOutput() ObjectBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectBucketLifecycleRuleExpirationOutput) ToObjectBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationOutput {
	return o
}

func (o ObjectBucketLifecycleRuleExpirationOutput) ToObjectBucketLifecycleRuleExpirationPtrOutput() ObjectBucketLifecycleRuleExpirationPtrOutput {
	return o.ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o ObjectBucketLifecycleRuleExpirationOutput) ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketLifecycleRuleExpiration) *ObjectBucketLifecycleRuleExpiration {
		return &v
	}).(ObjectBucketLifecycleRuleExpirationPtrOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
//
// > **Important:**  If versioning is enabled, this rule only deletes the current version of an object.
func (o ObjectBucketLifecycleRuleExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRuleExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type ObjectBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleExpirationPtrOutput) ToObjectBucketLifecycleRuleExpirationPtrOutput() ObjectBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectBucketLifecycleRuleExpirationPtrOutput) ToObjectBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o ObjectBucketLifecycleRuleExpirationPtrOutput) Elem() ObjectBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *ObjectBucketLifecycleRuleExpiration) ObjectBucketLifecycleRuleExpiration {
		if v != nil {
			return *v
		}
		var ret ObjectBucketLifecycleRuleExpiration
		return ret
	}).(ObjectBucketLifecycleRuleExpirationOutput)
}

// Specifies the number of days after object creation when the specific rule action takes effect.
//
// > **Important:**  If versioning is enabled, this rule only deletes the current version of an object.
func (o ObjectBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return &v.Days
	}).(pulumi.IntPtrOutput)
}

type ObjectBucketLifecycleRuleTransition struct {
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days *int `pulumi:"days"`
	// Specifies the Scaleway [storage class](https://www.scaleway.com/en/docs/storage/object/concepts/#storage-class) `STANDARD`, `GLACIER`, `ONEZONE_IA`  to which you want the object to transition.
	//
	// > **Important:**  `ONEZONE_IA` is only available in `fr-par` region. The storage class `GLACIER` is not available in `pl-waw` region.
	StorageClass string `pulumi:"storageClass"`
}

// ObjectBucketLifecycleRuleTransitionInput is an input type that accepts ObjectBucketLifecycleRuleTransitionArgs and ObjectBucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleTransitionInput` via:
//
//	ObjectBucketLifecycleRuleTransitionArgs{...}
type ObjectBucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleTransitionOutput() ObjectBucketLifecycleRuleTransitionOutput
	ToObjectBucketLifecycleRuleTransitionOutputWithContext(context.Context) ObjectBucketLifecycleRuleTransitionOutput
}

type ObjectBucketLifecycleRuleTransitionArgs struct {
	// Specifies the number of days after object creation when the specific rule action takes effect.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Specifies the Scaleway [storage class](https://www.scaleway.com/en/docs/storage/object/concepts/#storage-class) `STANDARD`, `GLACIER`, `ONEZONE_IA`  to which you want the object to transition.
	//
	// > **Important:**  `ONEZONE_IA` is only available in `fr-par` region. The storage class `GLACIER` is not available in `pl-waw` region.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (ObjectBucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i ObjectBucketLifecycleRuleTransitionArgs) ToObjectBucketLifecycleRuleTransitionOutput() ObjectBucketLifecycleRuleTransitionOutput {
	return i.ToObjectBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleTransitionArgs) ToObjectBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleTransitionOutput)
}

// ObjectBucketLifecycleRuleTransitionArrayInput is an input type that accepts ObjectBucketLifecycleRuleTransitionArray and ObjectBucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `ObjectBucketLifecycleRuleTransitionArrayInput` via:
//
//	ObjectBucketLifecycleRuleTransitionArray{ ObjectBucketLifecycleRuleTransitionArgs{...} }
type ObjectBucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToObjectBucketLifecycleRuleTransitionArrayOutput() ObjectBucketLifecycleRuleTransitionArrayOutput
	ToObjectBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) ObjectBucketLifecycleRuleTransitionArrayOutput
}

type ObjectBucketLifecycleRuleTransitionArray []ObjectBucketLifecycleRuleTransitionInput

func (ObjectBucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i ObjectBucketLifecycleRuleTransitionArray) ToObjectBucketLifecycleRuleTransitionArrayOutput() ObjectBucketLifecycleRuleTransitionArrayOutput {
	return i.ToObjectBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i ObjectBucketLifecycleRuleTransitionArray) ToObjectBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLifecycleRuleTransitionArrayOutput)
}

type ObjectBucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleTransitionOutput) ToObjectBucketLifecycleRuleTransitionOutput() ObjectBucketLifecycleRuleTransitionOutput {
	return o
}

func (o ObjectBucketLifecycleRuleTransitionOutput) ToObjectBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleTransitionOutput {
	return o
}

// Specifies the number of days after object creation when the specific rule action takes effect.
func (o ObjectBucketLifecycleRuleTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRuleTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Specifies the Scaleway [storage class](https://www.scaleway.com/en/docs/storage/object/concepts/#storage-class) `STANDARD`, `GLACIER`, `ONEZONE_IA`  to which you want the object to transition.
//
// > **Important:**  `ONEZONE_IA` is only available in `fr-par` region. The storage class `GLACIER` is not available in `pl-waw` region.
func (o ObjectBucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type ObjectBucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o ObjectBucketLifecycleRuleTransitionArrayOutput) ToObjectBucketLifecycleRuleTransitionArrayOutput() ObjectBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o ObjectBucketLifecycleRuleTransitionArrayOutput) ToObjectBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) ObjectBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o ObjectBucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) ObjectBucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectBucketLifecycleRuleTransition {
		return vs[0].([]ObjectBucketLifecycleRuleTransition)[vs[1].(int)]
	}).(ObjectBucketLifecycleRuleTransitionOutput)
}

type ObjectBucketLockConfigurationRule struct {
	// The default retention for the lock.
	DefaultRetention ObjectBucketLockConfigurationRuleDefaultRetention `pulumi:"defaultRetention"`
}

// ObjectBucketLockConfigurationRuleInput is an input type that accepts ObjectBucketLockConfigurationRuleArgs and ObjectBucketLockConfigurationRuleOutput values.
// You can construct a concrete instance of `ObjectBucketLockConfigurationRuleInput` via:
//
//	ObjectBucketLockConfigurationRuleArgs{...}
type ObjectBucketLockConfigurationRuleInput interface {
	pulumi.Input

	ToObjectBucketLockConfigurationRuleOutput() ObjectBucketLockConfigurationRuleOutput
	ToObjectBucketLockConfigurationRuleOutputWithContext(context.Context) ObjectBucketLockConfigurationRuleOutput
}

type ObjectBucketLockConfigurationRuleArgs struct {
	// The default retention for the lock.
	DefaultRetention ObjectBucketLockConfigurationRuleDefaultRetentionInput `pulumi:"defaultRetention"`
}

func (ObjectBucketLockConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLockConfigurationRule)(nil)).Elem()
}

func (i ObjectBucketLockConfigurationRuleArgs) ToObjectBucketLockConfigurationRuleOutput() ObjectBucketLockConfigurationRuleOutput {
	return i.ToObjectBucketLockConfigurationRuleOutputWithContext(context.Background())
}

func (i ObjectBucketLockConfigurationRuleArgs) ToObjectBucketLockConfigurationRuleOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRuleOutput)
}

func (i ObjectBucketLockConfigurationRuleArgs) ToObjectBucketLockConfigurationRulePtrOutput() ObjectBucketLockConfigurationRulePtrOutput {
	return i.ToObjectBucketLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (i ObjectBucketLockConfigurationRuleArgs) ToObjectBucketLockConfigurationRulePtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRuleOutput).ToObjectBucketLockConfigurationRulePtrOutputWithContext(ctx)
}

// ObjectBucketLockConfigurationRulePtrInput is an input type that accepts ObjectBucketLockConfigurationRuleArgs, ObjectBucketLockConfigurationRulePtr and ObjectBucketLockConfigurationRulePtrOutput values.
// You can construct a concrete instance of `ObjectBucketLockConfigurationRulePtrInput` via:
//
//	        ObjectBucketLockConfigurationRuleArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketLockConfigurationRulePtrInput interface {
	pulumi.Input

	ToObjectBucketLockConfigurationRulePtrOutput() ObjectBucketLockConfigurationRulePtrOutput
	ToObjectBucketLockConfigurationRulePtrOutputWithContext(context.Context) ObjectBucketLockConfigurationRulePtrOutput
}

type objectBucketLockConfigurationRulePtrType ObjectBucketLockConfigurationRuleArgs

func ObjectBucketLockConfigurationRulePtr(v *ObjectBucketLockConfigurationRuleArgs) ObjectBucketLockConfigurationRulePtrInput {
	return (*objectBucketLockConfigurationRulePtrType)(v)
}

func (*objectBucketLockConfigurationRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLockConfigurationRule)(nil)).Elem()
}

func (i *objectBucketLockConfigurationRulePtrType) ToObjectBucketLockConfigurationRulePtrOutput() ObjectBucketLockConfigurationRulePtrOutput {
	return i.ToObjectBucketLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (i *objectBucketLockConfigurationRulePtrType) ToObjectBucketLockConfigurationRulePtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRulePtrOutput)
}

type ObjectBucketLockConfigurationRuleOutput struct{ *pulumi.OutputState }

func (ObjectBucketLockConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLockConfigurationRule)(nil)).Elem()
}

func (o ObjectBucketLockConfigurationRuleOutput) ToObjectBucketLockConfigurationRuleOutput() ObjectBucketLockConfigurationRuleOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleOutput) ToObjectBucketLockConfigurationRuleOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleOutput) ToObjectBucketLockConfigurationRulePtrOutput() ObjectBucketLockConfigurationRulePtrOutput {
	return o.ToObjectBucketLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (o ObjectBucketLockConfigurationRuleOutput) ToObjectBucketLockConfigurationRulePtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketLockConfigurationRule) *ObjectBucketLockConfigurationRule {
		return &v
	}).(ObjectBucketLockConfigurationRulePtrOutput)
}

// The default retention for the lock.
func (o ObjectBucketLockConfigurationRuleOutput) DefaultRetention() ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return o.ApplyT(func(v ObjectBucketLockConfigurationRule) ObjectBucketLockConfigurationRuleDefaultRetention {
		return v.DefaultRetention
	}).(ObjectBucketLockConfigurationRuleDefaultRetentionOutput)
}

type ObjectBucketLockConfigurationRulePtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketLockConfigurationRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLockConfigurationRule)(nil)).Elem()
}

func (o ObjectBucketLockConfigurationRulePtrOutput) ToObjectBucketLockConfigurationRulePtrOutput() ObjectBucketLockConfigurationRulePtrOutput {
	return o
}

func (o ObjectBucketLockConfigurationRulePtrOutput) ToObjectBucketLockConfigurationRulePtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRulePtrOutput {
	return o
}

func (o ObjectBucketLockConfigurationRulePtrOutput) Elem() ObjectBucketLockConfigurationRuleOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRule) ObjectBucketLockConfigurationRule {
		if v != nil {
			return *v
		}
		var ret ObjectBucketLockConfigurationRule
		return ret
	}).(ObjectBucketLockConfigurationRuleOutput)
}

// The default retention for the lock.
func (o ObjectBucketLockConfigurationRulePtrOutput) DefaultRetention() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRule) *ObjectBucketLockConfigurationRuleDefaultRetention {
		if v == nil {
			return nil
		}
		return &v.DefaultRetention
	}).(ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput)
}

type ObjectBucketLockConfigurationRuleDefaultRetention struct {
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket.
	Mode string `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period.
	Years *int `pulumi:"years"`
}

// ObjectBucketLockConfigurationRuleDefaultRetentionInput is an input type that accepts ObjectBucketLockConfigurationRuleDefaultRetentionArgs and ObjectBucketLockConfigurationRuleDefaultRetentionOutput values.
// You can construct a concrete instance of `ObjectBucketLockConfigurationRuleDefaultRetentionInput` via:
//
//	ObjectBucketLockConfigurationRuleDefaultRetentionArgs{...}
type ObjectBucketLockConfigurationRuleDefaultRetentionInput interface {
	pulumi.Input

	ToObjectBucketLockConfigurationRuleDefaultRetentionOutput() ObjectBucketLockConfigurationRuleDefaultRetentionOutput
	ToObjectBucketLockConfigurationRuleDefaultRetentionOutputWithContext(context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionOutput
}

type ObjectBucketLockConfigurationRuleDefaultRetentionArgs struct {
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period.
	Years pulumi.IntPtrInput `pulumi:"years"`
}

func (ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (i ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ToObjectBucketLockConfigurationRuleDefaultRetentionOutput() ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return i.ToObjectBucketLockConfigurationRuleDefaultRetentionOutputWithContext(context.Background())
}

func (i ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ToObjectBucketLockConfigurationRuleDefaultRetentionOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRuleDefaultRetentionOutput)
}

func (i ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return i.ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(context.Background())
}

func (i ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRuleDefaultRetentionOutput).ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(ctx)
}

// ObjectBucketLockConfigurationRuleDefaultRetentionPtrInput is an input type that accepts ObjectBucketLockConfigurationRuleDefaultRetentionArgs, ObjectBucketLockConfigurationRuleDefaultRetentionPtr and ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput values.
// You can construct a concrete instance of `ObjectBucketLockConfigurationRuleDefaultRetentionPtrInput` via:
//
//	        ObjectBucketLockConfigurationRuleDefaultRetentionArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketLockConfigurationRuleDefaultRetentionPtrInput interface {
	pulumi.Input

	ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput
	ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput
}

type objectBucketLockConfigurationRuleDefaultRetentionPtrType ObjectBucketLockConfigurationRuleDefaultRetentionArgs

func ObjectBucketLockConfigurationRuleDefaultRetentionPtr(v *ObjectBucketLockConfigurationRuleDefaultRetentionArgs) ObjectBucketLockConfigurationRuleDefaultRetentionPtrInput {
	return (*objectBucketLockConfigurationRuleDefaultRetentionPtrType)(v)
}

func (*objectBucketLockConfigurationRuleDefaultRetentionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (i *objectBucketLockConfigurationRuleDefaultRetentionPtrType) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return i.ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(context.Background())
}

func (i *objectBucketLockConfigurationRuleDefaultRetentionPtrType) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput)
}

type ObjectBucketLockConfigurationRuleDefaultRetentionOutput struct{ *pulumi.OutputState }

func (ObjectBucketLockConfigurationRuleDefaultRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionOutput() ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return o.ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(context.Background())
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketLockConfigurationRuleDefaultRetention) *ObjectBucketLockConfigurationRuleDefaultRetention {
		return &v
	}).(ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput)
}

// The number of days that you want to specify for the default retention period.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketLockConfigurationRuleDefaultRetention) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketLockConfigurationRuleDefaultRetention) string { return v.Mode }).(pulumi.StringOutput)
}

// The number of years that you want to specify for the default retention period.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionOutput) Years() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketLockConfigurationRuleDefaultRetention) *int { return v.Years }).(pulumi.IntPtrOutput)
}

type ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput() ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) ToObjectBucketLockConfigurationRuleDefaultRetentionPtrOutputWithContext(ctx context.Context) ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput {
	return o
}

func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) Elem() ObjectBucketLockConfigurationRuleDefaultRetentionOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRuleDefaultRetention) ObjectBucketLockConfigurationRuleDefaultRetention {
		if v != nil {
			return *v
		}
		var ret ObjectBucketLockConfigurationRuleDefaultRetention
		return ret
	}).(ObjectBucketLockConfigurationRuleDefaultRetentionOutput)
}

// The number of days that you want to specify for the default retention period.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRuleDefaultRetention) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// The default Object Lock retention mode you want to apply to new objects placed in the specified bucket.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRuleDefaultRetention) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The number of years that you want to specify for the default retention period.
func (o ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput) Years() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ObjectBucketLockConfigurationRuleDefaultRetention) *int {
		if v == nil {
			return nil
		}
		return v.Years
	}).(pulumi.IntPtrOutput)
}

type ObjectBucketVersioning struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled *bool `pulumi:"enabled"`
}

// ObjectBucketVersioningInput is an input type that accepts ObjectBucketVersioningArgs and ObjectBucketVersioningOutput values.
// You can construct a concrete instance of `ObjectBucketVersioningInput` via:
//
//	ObjectBucketVersioningArgs{...}
type ObjectBucketVersioningInput interface {
	pulumi.Input

	ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput
	ToObjectBucketVersioningOutputWithContext(context.Context) ObjectBucketVersioningOutput
}

type ObjectBucketVersioningArgs struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ObjectBucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketVersioning)(nil)).Elem()
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput {
	return i.ToObjectBucketVersioningOutputWithContext(context.Background())
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningOutputWithContext(ctx context.Context) ObjectBucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningOutput)
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return i.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningOutput).ToObjectBucketVersioningPtrOutputWithContext(ctx)
}

// ObjectBucketVersioningPtrInput is an input type that accepts ObjectBucketVersioningArgs, ObjectBucketVersioningPtr and ObjectBucketVersioningPtrOutput values.
// You can construct a concrete instance of `ObjectBucketVersioningPtrInput` via:
//
//	        ObjectBucketVersioningArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketVersioningPtrInput interface {
	pulumi.Input

	ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput
	ToObjectBucketVersioningPtrOutputWithContext(context.Context) ObjectBucketVersioningPtrOutput
}

type objectBucketVersioningPtrType ObjectBucketVersioningArgs

func ObjectBucketVersioningPtr(v *ObjectBucketVersioningArgs) ObjectBucketVersioningPtrInput {
	return (*objectBucketVersioningPtrType)(v)
}

func (*objectBucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketVersioning)(nil)).Elem()
}

func (i *objectBucketVersioningPtrType) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return i.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *objectBucketVersioningPtrType) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningPtrOutput)
}

type ObjectBucketVersioningOutput struct{ *pulumi.OutputState }

func (ObjectBucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketVersioning)(nil)).Elem()
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput {
	return o
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningOutputWithContext(ctx context.Context) ObjectBucketVersioningOutput {
	return o
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return o.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketVersioning) *ObjectBucketVersioning {
		return &v
	}).(ObjectBucketVersioningPtrOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o ObjectBucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObjectBucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ObjectBucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketVersioning)(nil)).Elem()
}

func (o ObjectBucketVersioningPtrOutput) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return o
}

func (o ObjectBucketVersioningPtrOutput) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return o
}

func (o ObjectBucketVersioningPtrOutput) Elem() ObjectBucketVersioningOutput {
	return o.ApplyT(func(v *ObjectBucketVersioning) ObjectBucketVersioning {
		if v != nil {
			return *v
		}
		var ret ObjectBucketVersioning
		return ret
	}).(ObjectBucketVersioningOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o ObjectBucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectBucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ObjectBucketWebsiteConfigurationErrorDocument struct {
	// The object key name to use when a 4XX class error occurs.
	Key string `pulumi:"key"`
}

// ObjectBucketWebsiteConfigurationErrorDocumentInput is an input type that accepts ObjectBucketWebsiteConfigurationErrorDocumentArgs and ObjectBucketWebsiteConfigurationErrorDocumentOutput values.
// You can construct a concrete instance of `ObjectBucketWebsiteConfigurationErrorDocumentInput` via:
//
//	ObjectBucketWebsiteConfigurationErrorDocumentArgs{...}
type ObjectBucketWebsiteConfigurationErrorDocumentInput interface {
	pulumi.Input

	ToObjectBucketWebsiteConfigurationErrorDocumentOutput() ObjectBucketWebsiteConfigurationErrorDocumentOutput
	ToObjectBucketWebsiteConfigurationErrorDocumentOutputWithContext(context.Context) ObjectBucketWebsiteConfigurationErrorDocumentOutput
}

type ObjectBucketWebsiteConfigurationErrorDocumentArgs struct {
	// The object key name to use when a 4XX class error occurs.
	Key pulumi.StringInput `pulumi:"key"`
}

func (ObjectBucketWebsiteConfigurationErrorDocumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketWebsiteConfigurationErrorDocument)(nil)).Elem()
}

func (i ObjectBucketWebsiteConfigurationErrorDocumentArgs) ToObjectBucketWebsiteConfigurationErrorDocumentOutput() ObjectBucketWebsiteConfigurationErrorDocumentOutput {
	return i.ToObjectBucketWebsiteConfigurationErrorDocumentOutputWithContext(context.Background())
}

func (i ObjectBucketWebsiteConfigurationErrorDocumentArgs) ToObjectBucketWebsiteConfigurationErrorDocumentOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationErrorDocumentOutput)
}

func (i ObjectBucketWebsiteConfigurationErrorDocumentArgs) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutput() ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return i.ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(context.Background())
}

func (i ObjectBucketWebsiteConfigurationErrorDocumentArgs) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationErrorDocumentOutput).ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(ctx)
}

// ObjectBucketWebsiteConfigurationErrorDocumentPtrInput is an input type that accepts ObjectBucketWebsiteConfigurationErrorDocumentArgs, ObjectBucketWebsiteConfigurationErrorDocumentPtr and ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput values.
// You can construct a concrete instance of `ObjectBucketWebsiteConfigurationErrorDocumentPtrInput` via:
//
//	        ObjectBucketWebsiteConfigurationErrorDocumentArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketWebsiteConfigurationErrorDocumentPtrInput interface {
	pulumi.Input

	ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutput() ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput
	ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(context.Context) ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput
}

type objectBucketWebsiteConfigurationErrorDocumentPtrType ObjectBucketWebsiteConfigurationErrorDocumentArgs

func ObjectBucketWebsiteConfigurationErrorDocumentPtr(v *ObjectBucketWebsiteConfigurationErrorDocumentArgs) ObjectBucketWebsiteConfigurationErrorDocumentPtrInput {
	return (*objectBucketWebsiteConfigurationErrorDocumentPtrType)(v)
}

func (*objectBucketWebsiteConfigurationErrorDocumentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketWebsiteConfigurationErrorDocument)(nil)).Elem()
}

func (i *objectBucketWebsiteConfigurationErrorDocumentPtrType) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutput() ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return i.ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(context.Background())
}

func (i *objectBucketWebsiteConfigurationErrorDocumentPtrType) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput)
}

type ObjectBucketWebsiteConfigurationErrorDocumentOutput struct{ *pulumi.OutputState }

func (ObjectBucketWebsiteConfigurationErrorDocumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketWebsiteConfigurationErrorDocument)(nil)).Elem()
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentOutput) ToObjectBucketWebsiteConfigurationErrorDocumentOutput() ObjectBucketWebsiteConfigurationErrorDocumentOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentOutput) ToObjectBucketWebsiteConfigurationErrorDocumentOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentOutput) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutput() ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return o.ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(context.Background())
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentOutput) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketWebsiteConfigurationErrorDocument) *ObjectBucketWebsiteConfigurationErrorDocument {
		return &v
	}).(ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput)
}

// The object key name to use when a 4XX class error occurs.
func (o ObjectBucketWebsiteConfigurationErrorDocumentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketWebsiteConfigurationErrorDocument) string { return v.Key }).(pulumi.StringOutput)
}

type ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketWebsiteConfigurationErrorDocument)(nil)).Elem()
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutput() ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput) ToObjectBucketWebsiteConfigurationErrorDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput) Elem() ObjectBucketWebsiteConfigurationErrorDocumentOutput {
	return o.ApplyT(func(v *ObjectBucketWebsiteConfigurationErrorDocument) ObjectBucketWebsiteConfigurationErrorDocument {
		if v != nil {
			return *v
		}
		var ret ObjectBucketWebsiteConfigurationErrorDocument
		return ret
	}).(ObjectBucketWebsiteConfigurationErrorDocumentOutput)
}

// The object key name to use when a 4XX class error occurs.
func (o ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketWebsiteConfigurationErrorDocument) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ObjectBucketWebsiteConfigurationIndexDocument struct {
	// A suffix that is appended to a request that is for a directory on the website endpoint.
	//
	// > **Important:** The suffix must not be empty and must not include a slash character. The routing is not supported.
	Suffix string `pulumi:"suffix"`
}

// ObjectBucketWebsiteConfigurationIndexDocumentInput is an input type that accepts ObjectBucketWebsiteConfigurationIndexDocumentArgs and ObjectBucketWebsiteConfigurationIndexDocumentOutput values.
// You can construct a concrete instance of `ObjectBucketWebsiteConfigurationIndexDocumentInput` via:
//
//	ObjectBucketWebsiteConfigurationIndexDocumentArgs{...}
type ObjectBucketWebsiteConfigurationIndexDocumentInput interface {
	pulumi.Input

	ToObjectBucketWebsiteConfigurationIndexDocumentOutput() ObjectBucketWebsiteConfigurationIndexDocumentOutput
	ToObjectBucketWebsiteConfigurationIndexDocumentOutputWithContext(context.Context) ObjectBucketWebsiteConfigurationIndexDocumentOutput
}

type ObjectBucketWebsiteConfigurationIndexDocumentArgs struct {
	// A suffix that is appended to a request that is for a directory on the website endpoint.
	//
	// > **Important:** The suffix must not be empty and must not include a slash character. The routing is not supported.
	Suffix pulumi.StringInput `pulumi:"suffix"`
}

func (ObjectBucketWebsiteConfigurationIndexDocumentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketWebsiteConfigurationIndexDocument)(nil)).Elem()
}

func (i ObjectBucketWebsiteConfigurationIndexDocumentArgs) ToObjectBucketWebsiteConfigurationIndexDocumentOutput() ObjectBucketWebsiteConfigurationIndexDocumentOutput {
	return i.ToObjectBucketWebsiteConfigurationIndexDocumentOutputWithContext(context.Background())
}

func (i ObjectBucketWebsiteConfigurationIndexDocumentArgs) ToObjectBucketWebsiteConfigurationIndexDocumentOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationIndexDocumentOutput)
}

func (i ObjectBucketWebsiteConfigurationIndexDocumentArgs) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutput() ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return i.ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(context.Background())
}

func (i ObjectBucketWebsiteConfigurationIndexDocumentArgs) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationIndexDocumentOutput).ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(ctx)
}

// ObjectBucketWebsiteConfigurationIndexDocumentPtrInput is an input type that accepts ObjectBucketWebsiteConfigurationIndexDocumentArgs, ObjectBucketWebsiteConfigurationIndexDocumentPtr and ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput values.
// You can construct a concrete instance of `ObjectBucketWebsiteConfigurationIndexDocumentPtrInput` via:
//
//	        ObjectBucketWebsiteConfigurationIndexDocumentArgs{...}
//
//	or:
//
//	        nil
type ObjectBucketWebsiteConfigurationIndexDocumentPtrInput interface {
	pulumi.Input

	ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutput() ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput
	ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(context.Context) ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput
}

type objectBucketWebsiteConfigurationIndexDocumentPtrType ObjectBucketWebsiteConfigurationIndexDocumentArgs

func ObjectBucketWebsiteConfigurationIndexDocumentPtr(v *ObjectBucketWebsiteConfigurationIndexDocumentArgs) ObjectBucketWebsiteConfigurationIndexDocumentPtrInput {
	return (*objectBucketWebsiteConfigurationIndexDocumentPtrType)(v)
}

func (*objectBucketWebsiteConfigurationIndexDocumentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketWebsiteConfigurationIndexDocument)(nil)).Elem()
}

func (i *objectBucketWebsiteConfigurationIndexDocumentPtrType) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutput() ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return i.ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(context.Background())
}

func (i *objectBucketWebsiteConfigurationIndexDocumentPtrType) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput)
}

type ObjectBucketWebsiteConfigurationIndexDocumentOutput struct{ *pulumi.OutputState }

func (ObjectBucketWebsiteConfigurationIndexDocumentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketWebsiteConfigurationIndexDocument)(nil)).Elem()
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentOutput) ToObjectBucketWebsiteConfigurationIndexDocumentOutput() ObjectBucketWebsiteConfigurationIndexDocumentOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentOutput) ToObjectBucketWebsiteConfigurationIndexDocumentOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentOutput) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutput() ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return o.ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(context.Background())
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentOutput) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketWebsiteConfigurationIndexDocument) *ObjectBucketWebsiteConfigurationIndexDocument {
		return &v
	}).(ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput)
}

// A suffix that is appended to a request that is for a directory on the website endpoint.
//
// > **Important:** The suffix must not be empty and must not include a slash character. The routing is not supported.
func (o ObjectBucketWebsiteConfigurationIndexDocumentOutput) Suffix() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectBucketWebsiteConfigurationIndexDocument) string { return v.Suffix }).(pulumi.StringOutput)
}

type ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketWebsiteConfigurationIndexDocument)(nil)).Elem()
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutput() ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput) ToObjectBucketWebsiteConfigurationIndexDocumentPtrOutputWithContext(ctx context.Context) ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput {
	return o
}

func (o ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput) Elem() ObjectBucketWebsiteConfigurationIndexDocumentOutput {
	return o.ApplyT(func(v *ObjectBucketWebsiteConfigurationIndexDocument) ObjectBucketWebsiteConfigurationIndexDocument {
		if v != nil {
			return *v
		}
		var ret ObjectBucketWebsiteConfigurationIndexDocument
		return ret
	}).(ObjectBucketWebsiteConfigurationIndexDocumentOutput)
}

// A suffix that is appended to a request that is for a directory on the website endpoint.
//
// > **Important:** The suffix must not be empty and must not include a slash character. The routing is not supported.
func (o ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucketWebsiteConfigurationIndexDocument) *string {
		if v == nil {
			return nil
		}
		return &v.Suffix
	}).(pulumi.StringPtrOutput)
}

type RedisClusterAcl struct {
	// A text describing this rule. Default description: `Allow IP`
	//
	// > The `acl` conflict with `privateNetwork`. Only one should be specified.
	Description *string `pulumi:"description"`
	// (Required) The UUID of the endpoint.
	Id *string `pulumi:"id"`
	// The ip range to whitelist
	// in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip string `pulumi:"ip"`
}

// RedisClusterAclInput is an input type that accepts RedisClusterAclArgs and RedisClusterAclOutput values.
// You can construct a concrete instance of `RedisClusterAclInput` via:
//
//	RedisClusterAclArgs{...}
type RedisClusterAclInput interface {
	pulumi.Input

	ToRedisClusterAclOutput() RedisClusterAclOutput
	ToRedisClusterAclOutputWithContext(context.Context) RedisClusterAclOutput
}

type RedisClusterAclArgs struct {
	// A text describing this rule. Default description: `Allow IP`
	//
	// > The `acl` conflict with `privateNetwork`. Only one should be specified.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// (Required) The UUID of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ip range to whitelist
	// in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (RedisClusterAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterAcl)(nil)).Elem()
}

func (i RedisClusterAclArgs) ToRedisClusterAclOutput() RedisClusterAclOutput {
	return i.ToRedisClusterAclOutputWithContext(context.Background())
}

func (i RedisClusterAclArgs) ToRedisClusterAclOutputWithContext(ctx context.Context) RedisClusterAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterAclOutput)
}

// RedisClusterAclArrayInput is an input type that accepts RedisClusterAclArray and RedisClusterAclArrayOutput values.
// You can construct a concrete instance of `RedisClusterAclArrayInput` via:
//
//	RedisClusterAclArray{ RedisClusterAclArgs{...} }
type RedisClusterAclArrayInput interface {
	pulumi.Input

	ToRedisClusterAclArrayOutput() RedisClusterAclArrayOutput
	ToRedisClusterAclArrayOutputWithContext(context.Context) RedisClusterAclArrayOutput
}

type RedisClusterAclArray []RedisClusterAclInput

func (RedisClusterAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterAcl)(nil)).Elem()
}

func (i RedisClusterAclArray) ToRedisClusterAclArrayOutput() RedisClusterAclArrayOutput {
	return i.ToRedisClusterAclArrayOutputWithContext(context.Background())
}

func (i RedisClusterAclArray) ToRedisClusterAclArrayOutputWithContext(ctx context.Context) RedisClusterAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterAclArrayOutput)
}

type RedisClusterAclOutput struct{ *pulumi.OutputState }

func (RedisClusterAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterAcl)(nil)).Elem()
}

func (o RedisClusterAclOutput) ToRedisClusterAclOutput() RedisClusterAclOutput {
	return o
}

func (o RedisClusterAclOutput) ToRedisClusterAclOutputWithContext(ctx context.Context) RedisClusterAclOutput {
	return o
}

// A text describing this rule. Default description: `Allow IP`
//
// > The `acl` conflict with `privateNetwork`. Only one should be specified.
func (o RedisClusterAclOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterAcl) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// (Required) The UUID of the endpoint.
func (o RedisClusterAclOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterAcl) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip range to whitelist
// in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
func (o RedisClusterAclOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v RedisClusterAcl) string { return v.Ip }).(pulumi.StringOutput)
}

type RedisClusterAclArrayOutput struct{ *pulumi.OutputState }

func (RedisClusterAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterAcl)(nil)).Elem()
}

func (o RedisClusterAclArrayOutput) ToRedisClusterAclArrayOutput() RedisClusterAclArrayOutput {
	return o
}

func (o RedisClusterAclArrayOutput) ToRedisClusterAclArrayOutputWithContext(ctx context.Context) RedisClusterAclArrayOutput {
	return o
}

func (o RedisClusterAclArrayOutput) Index(i pulumi.IntInput) RedisClusterAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisClusterAcl {
		return vs[0].([]RedisClusterAcl)[vs[1].(int)]
	}).(RedisClusterAclOutput)
}

type RedisClusterPrivateNetwork struct {
	// The ID of the endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The UUID of the Private Network resource.
	Id string `pulumi:"id"`
	// Endpoint IPv4 addresses in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation). You must provide at least one IP per node.
	// Keep in mind that in Cluster mode you cannot edit your Private Network after its creation so if you want to be able to
	// scale your Cluster horizontally (adding nodes) later, you should provide more IPs than nodes.
	// If not set, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	//
	// > The `privateNetwork` conflicts with `acl`. Only one should be specified.
	//
	// > **Important:** The way to use private networks differs whether you are using Redis in Standalone or Cluster mode.
	//
	// - Standalone mode (`clusterSize` = 1) : you can attach as many Private Networks as you want (each must be a separate
	// block). If you detach your only private network, your cluster won't be reachable until you define a new Private or
	// Public Network. You can modify your `privateNetwork` and its specs, you can have both a Private and Public Network side
	// by side.
	//
	// - Cluster mode (`clusterSize` > 2) : you can define a single Private Network as you create your Cluster, you won't be
	// able to edit or detach it afterward, unless you create another Cluster. This also means that, if you are using a static
	// configuration (`serviceIps`), you won't be able to scale your Cluster horizontally (add more nodes) since it would
	// require updating the private network to add IPs.
	// Your `serviceIps` must be listed as follows:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	ServiceIps []string `pulumi:"serviceIps"`
	// `zone`) The zone in which the
	// Redis Cluster should be created.
	Zone *string `pulumi:"zone"`
}

// RedisClusterPrivateNetworkInput is an input type that accepts RedisClusterPrivateNetworkArgs and RedisClusterPrivateNetworkOutput values.
// You can construct a concrete instance of `RedisClusterPrivateNetworkInput` via:
//
//	RedisClusterPrivateNetworkArgs{...}
type RedisClusterPrivateNetworkInput interface {
	pulumi.Input

	ToRedisClusterPrivateNetworkOutput() RedisClusterPrivateNetworkOutput
	ToRedisClusterPrivateNetworkOutputWithContext(context.Context) RedisClusterPrivateNetworkOutput
}

type RedisClusterPrivateNetworkArgs struct {
	// The ID of the endpoint.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// The UUID of the Private Network resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Endpoint IPv4 addresses in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation). You must provide at least one IP per node.
	// Keep in mind that in Cluster mode you cannot edit your Private Network after its creation so if you want to be able to
	// scale your Cluster horizontally (adding nodes) later, you should provide more IPs than nodes.
	// If not set, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
	//
	// > The `privateNetwork` conflicts with `acl`. Only one should be specified.
	//
	// > **Important:** The way to use private networks differs whether you are using Redis in Standalone or Cluster mode.
	//
	// - Standalone mode (`clusterSize` = 1) : you can attach as many Private Networks as you want (each must be a separate
	// block). If you detach your only private network, your cluster won't be reachable until you define a new Private or
	// Public Network. You can modify your `privateNetwork` and its specs, you can have both a Private and Public Network side
	// by side.
	//
	// - Cluster mode (`clusterSize` > 2) : you can define a single Private Network as you create your Cluster, you won't be
	// able to edit or detach it afterward, unless you create another Cluster. This also means that, if you are using a static
	// configuration (`serviceIps`), you won't be able to scale your Cluster horizontally (add more nodes) since it would
	// require updating the private network to add IPs.
	// Your `serviceIps` must be listed as follows:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	ServiceIps pulumi.StringArrayInput `pulumi:"serviceIps"`
	// `zone`) The zone in which the
	// Redis Cluster should be created.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (RedisClusterPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterPrivateNetwork)(nil)).Elem()
}

func (i RedisClusterPrivateNetworkArgs) ToRedisClusterPrivateNetworkOutput() RedisClusterPrivateNetworkOutput {
	return i.ToRedisClusterPrivateNetworkOutputWithContext(context.Background())
}

func (i RedisClusterPrivateNetworkArgs) ToRedisClusterPrivateNetworkOutputWithContext(ctx context.Context) RedisClusterPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterPrivateNetworkOutput)
}

// RedisClusterPrivateNetworkArrayInput is an input type that accepts RedisClusterPrivateNetworkArray and RedisClusterPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `RedisClusterPrivateNetworkArrayInput` via:
//
//	RedisClusterPrivateNetworkArray{ RedisClusterPrivateNetworkArgs{...} }
type RedisClusterPrivateNetworkArrayInput interface {
	pulumi.Input

	ToRedisClusterPrivateNetworkArrayOutput() RedisClusterPrivateNetworkArrayOutput
	ToRedisClusterPrivateNetworkArrayOutputWithContext(context.Context) RedisClusterPrivateNetworkArrayOutput
}

type RedisClusterPrivateNetworkArray []RedisClusterPrivateNetworkInput

func (RedisClusterPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterPrivateNetwork)(nil)).Elem()
}

func (i RedisClusterPrivateNetworkArray) ToRedisClusterPrivateNetworkArrayOutput() RedisClusterPrivateNetworkArrayOutput {
	return i.ToRedisClusterPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i RedisClusterPrivateNetworkArray) ToRedisClusterPrivateNetworkArrayOutputWithContext(ctx context.Context) RedisClusterPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterPrivateNetworkArrayOutput)
}

type RedisClusterPrivateNetworkOutput struct{ *pulumi.OutputState }

func (RedisClusterPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterPrivateNetwork)(nil)).Elem()
}

func (o RedisClusterPrivateNetworkOutput) ToRedisClusterPrivateNetworkOutput() RedisClusterPrivateNetworkOutput {
	return o
}

func (o RedisClusterPrivateNetworkOutput) ToRedisClusterPrivateNetworkOutputWithContext(ctx context.Context) RedisClusterPrivateNetworkOutput {
	return o
}

// The ID of the endpoint.
func (o RedisClusterPrivateNetworkOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterPrivateNetwork) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// The UUID of the Private Network resource.
func (o RedisClusterPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RedisClusterPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// Endpoint IPv4 addresses in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation). You must provide at least one IP per node.
// Keep in mind that in Cluster mode you cannot edit your Private Network after its creation so if you want to be able to
// scale your Cluster horizontally (adding nodes) later, you should provide more IPs than nodes.
// If not set, the IP network address within the private subnet is determined by the IP Address Management (IPAM) service.
//
// > The `privateNetwork` conflicts with `acl`. Only one should be specified.
//
// > **Important:** The way to use private networks differs whether you are using Redis in Standalone or Cluster mode.
//
// - Standalone mode (`clusterSize` = 1) : you can attach as many Private Networks as you want (each must be a separate
// block). If you detach your only private network, your cluster won't be reachable until you define a new Private or
// Public Network. You can modify your `privateNetwork` and its specs, you can have both a Private and Public Network side
// by side.
//
// - Cluster mode (`clusterSize` > 2) : you can define a single Private Network as you create your Cluster, you won't be
// able to edit or detach it afterward, unless you create another Cluster. This also means that, if you are using a static
// configuration (`serviceIps`), you won't be able to scale your Cluster horizontally (add more nodes) since it would
// require updating the private network to add IPs.
// Your `serviceIps` must be listed as follows:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o RedisClusterPrivateNetworkOutput) ServiceIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RedisClusterPrivateNetwork) []string { return v.ServiceIps }).(pulumi.StringArrayOutput)
}

// `zone`) The zone in which the
// Redis Cluster should be created.
func (o RedisClusterPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type RedisClusterPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (RedisClusterPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisClusterPrivateNetwork)(nil)).Elem()
}

func (o RedisClusterPrivateNetworkArrayOutput) ToRedisClusterPrivateNetworkArrayOutput() RedisClusterPrivateNetworkArrayOutput {
	return o
}

func (o RedisClusterPrivateNetworkArrayOutput) ToRedisClusterPrivateNetworkArrayOutputWithContext(ctx context.Context) RedisClusterPrivateNetworkArrayOutput {
	return o
}

func (o RedisClusterPrivateNetworkArrayOutput) Index(i pulumi.IntInput) RedisClusterPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisClusterPrivateNetwork {
		return vs[0].([]RedisClusterPrivateNetwork)[vs[1].(int)]
	}).(RedisClusterPrivateNetworkOutput)
}

type RedisClusterPublicNetwork struct {
	// (Required) The UUID of the endpoint.
	Id *string `pulumi:"id"`
	// Lis of IPv4 address of the endpoint (IP address).
	Ips []string `pulumi:"ips"`
	// TCP port of the endpoint.
	Port *int `pulumi:"port"`
}

// RedisClusterPublicNetworkInput is an input type that accepts RedisClusterPublicNetworkArgs and RedisClusterPublicNetworkOutput values.
// You can construct a concrete instance of `RedisClusterPublicNetworkInput` via:
//
//	RedisClusterPublicNetworkArgs{...}
type RedisClusterPublicNetworkInput interface {
	pulumi.Input

	ToRedisClusterPublicNetworkOutput() RedisClusterPublicNetworkOutput
	ToRedisClusterPublicNetworkOutputWithContext(context.Context) RedisClusterPublicNetworkOutput
}

type RedisClusterPublicNetworkArgs struct {
	// (Required) The UUID of the endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Lis of IPv4 address of the endpoint (IP address).
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// TCP port of the endpoint.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (RedisClusterPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterPublicNetwork)(nil)).Elem()
}

func (i RedisClusterPublicNetworkArgs) ToRedisClusterPublicNetworkOutput() RedisClusterPublicNetworkOutput {
	return i.ToRedisClusterPublicNetworkOutputWithContext(context.Background())
}

func (i RedisClusterPublicNetworkArgs) ToRedisClusterPublicNetworkOutputWithContext(ctx context.Context) RedisClusterPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterPublicNetworkOutput)
}

func (i RedisClusterPublicNetworkArgs) ToRedisClusterPublicNetworkPtrOutput() RedisClusterPublicNetworkPtrOutput {
	return i.ToRedisClusterPublicNetworkPtrOutputWithContext(context.Background())
}

func (i RedisClusterPublicNetworkArgs) ToRedisClusterPublicNetworkPtrOutputWithContext(ctx context.Context) RedisClusterPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterPublicNetworkOutput).ToRedisClusterPublicNetworkPtrOutputWithContext(ctx)
}

// RedisClusterPublicNetworkPtrInput is an input type that accepts RedisClusterPublicNetworkArgs, RedisClusterPublicNetworkPtr and RedisClusterPublicNetworkPtrOutput values.
// You can construct a concrete instance of `RedisClusterPublicNetworkPtrInput` via:
//
//	        RedisClusterPublicNetworkArgs{...}
//
//	or:
//
//	        nil
type RedisClusterPublicNetworkPtrInput interface {
	pulumi.Input

	ToRedisClusterPublicNetworkPtrOutput() RedisClusterPublicNetworkPtrOutput
	ToRedisClusterPublicNetworkPtrOutputWithContext(context.Context) RedisClusterPublicNetworkPtrOutput
}

type redisClusterPublicNetworkPtrType RedisClusterPublicNetworkArgs

func RedisClusterPublicNetworkPtr(v *RedisClusterPublicNetworkArgs) RedisClusterPublicNetworkPtrInput {
	return (*redisClusterPublicNetworkPtrType)(v)
}

func (*redisClusterPublicNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisClusterPublicNetwork)(nil)).Elem()
}

func (i *redisClusterPublicNetworkPtrType) ToRedisClusterPublicNetworkPtrOutput() RedisClusterPublicNetworkPtrOutput {
	return i.ToRedisClusterPublicNetworkPtrOutputWithContext(context.Background())
}

func (i *redisClusterPublicNetworkPtrType) ToRedisClusterPublicNetworkPtrOutputWithContext(ctx context.Context) RedisClusterPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterPublicNetworkPtrOutput)
}

type RedisClusterPublicNetworkOutput struct{ *pulumi.OutputState }

func (RedisClusterPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisClusterPublicNetwork)(nil)).Elem()
}

func (o RedisClusterPublicNetworkOutput) ToRedisClusterPublicNetworkOutput() RedisClusterPublicNetworkOutput {
	return o
}

func (o RedisClusterPublicNetworkOutput) ToRedisClusterPublicNetworkOutputWithContext(ctx context.Context) RedisClusterPublicNetworkOutput {
	return o
}

func (o RedisClusterPublicNetworkOutput) ToRedisClusterPublicNetworkPtrOutput() RedisClusterPublicNetworkPtrOutput {
	return o.ToRedisClusterPublicNetworkPtrOutputWithContext(context.Background())
}

func (o RedisClusterPublicNetworkOutput) ToRedisClusterPublicNetworkPtrOutputWithContext(ctx context.Context) RedisClusterPublicNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisClusterPublicNetwork) *RedisClusterPublicNetwork {
		return &v
	}).(RedisClusterPublicNetworkPtrOutput)
}

// (Required) The UUID of the endpoint.
func (o RedisClusterPublicNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisClusterPublicNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Lis of IPv4 address of the endpoint (IP address).
func (o RedisClusterPublicNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RedisClusterPublicNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// TCP port of the endpoint.
func (o RedisClusterPublicNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RedisClusterPublicNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type RedisClusterPublicNetworkPtrOutput struct{ *pulumi.OutputState }

func (RedisClusterPublicNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisClusterPublicNetwork)(nil)).Elem()
}

func (o RedisClusterPublicNetworkPtrOutput) ToRedisClusterPublicNetworkPtrOutput() RedisClusterPublicNetworkPtrOutput {
	return o
}

func (o RedisClusterPublicNetworkPtrOutput) ToRedisClusterPublicNetworkPtrOutputWithContext(ctx context.Context) RedisClusterPublicNetworkPtrOutput {
	return o
}

func (o RedisClusterPublicNetworkPtrOutput) Elem() RedisClusterPublicNetworkOutput {
	return o.ApplyT(func(v *RedisClusterPublicNetwork) RedisClusterPublicNetwork {
		if v != nil {
			return *v
		}
		var ret RedisClusterPublicNetwork
		return ret
	}).(RedisClusterPublicNetworkOutput)
}

// (Required) The UUID of the endpoint.
func (o RedisClusterPublicNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisClusterPublicNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Lis of IPv4 address of the endpoint (IP address).
func (o RedisClusterPublicNetworkPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RedisClusterPublicNetwork) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// TCP port of the endpoint.
func (o RedisClusterPublicNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RedisClusterPublicNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

type TemDomainReputation struct {
	// The previously-calculated domain's reputation score.
	PreviousScore *int `pulumi:"previousScore"`
	// The time and date the previous reputation score was calculated.
	PreviousScoredAt *string `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score.
	Score *int `pulumi:"score"`
	// The time and date the score was calculated.
	ScoredAt *string `pulumi:"scoredAt"`
	// The status of the domain's reputation.
	Status *string `pulumi:"status"`
}

// TemDomainReputationInput is an input type that accepts TemDomainReputationArgs and TemDomainReputationOutput values.
// You can construct a concrete instance of `TemDomainReputationInput` via:
//
//	TemDomainReputationArgs{...}
type TemDomainReputationInput interface {
	pulumi.Input

	ToTemDomainReputationOutput() TemDomainReputationOutput
	ToTemDomainReputationOutputWithContext(context.Context) TemDomainReputationOutput
}

type TemDomainReputationArgs struct {
	// The previously-calculated domain's reputation score.
	PreviousScore pulumi.IntPtrInput `pulumi:"previousScore"`
	// The time and date the previous reputation score was calculated.
	PreviousScoredAt pulumi.StringPtrInput `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score.
	Score pulumi.IntPtrInput `pulumi:"score"`
	// The time and date the score was calculated.
	ScoredAt pulumi.StringPtrInput `pulumi:"scoredAt"`
	// The status of the domain's reputation.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (TemDomainReputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemDomainReputation)(nil)).Elem()
}

func (i TemDomainReputationArgs) ToTemDomainReputationOutput() TemDomainReputationOutput {
	return i.ToTemDomainReputationOutputWithContext(context.Background())
}

func (i TemDomainReputationArgs) ToTemDomainReputationOutputWithContext(ctx context.Context) TemDomainReputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemDomainReputationOutput)
}

// TemDomainReputationArrayInput is an input type that accepts TemDomainReputationArray and TemDomainReputationArrayOutput values.
// You can construct a concrete instance of `TemDomainReputationArrayInput` via:
//
//	TemDomainReputationArray{ TemDomainReputationArgs{...} }
type TemDomainReputationArrayInput interface {
	pulumi.Input

	ToTemDomainReputationArrayOutput() TemDomainReputationArrayOutput
	ToTemDomainReputationArrayOutputWithContext(context.Context) TemDomainReputationArrayOutput
}

type TemDomainReputationArray []TemDomainReputationInput

func (TemDomainReputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemDomainReputation)(nil)).Elem()
}

func (i TemDomainReputationArray) ToTemDomainReputationArrayOutput() TemDomainReputationArrayOutput {
	return i.ToTemDomainReputationArrayOutputWithContext(context.Background())
}

func (i TemDomainReputationArray) ToTemDomainReputationArrayOutputWithContext(ctx context.Context) TemDomainReputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemDomainReputationArrayOutput)
}

type TemDomainReputationOutput struct{ *pulumi.OutputState }

func (TemDomainReputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemDomainReputation)(nil)).Elem()
}

func (o TemDomainReputationOutput) ToTemDomainReputationOutput() TemDomainReputationOutput {
	return o
}

func (o TemDomainReputationOutput) ToTemDomainReputationOutputWithContext(ctx context.Context) TemDomainReputationOutput {
	return o
}

// The previously-calculated domain's reputation score.
func (o TemDomainReputationOutput) PreviousScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TemDomainReputation) *int { return v.PreviousScore }).(pulumi.IntPtrOutput)
}

// The time and date the previous reputation score was calculated.
func (o TemDomainReputationOutput) PreviousScoredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemDomainReputation) *string { return v.PreviousScoredAt }).(pulumi.StringPtrOutput)
}

// A range from 0 to 100 that determines your domain's reputation score.
func (o TemDomainReputationOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TemDomainReputation) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// The time and date the score was calculated.
func (o TemDomainReputationOutput) ScoredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemDomainReputation) *string { return v.ScoredAt }).(pulumi.StringPtrOutput)
}

// The status of the domain's reputation.
func (o TemDomainReputationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemDomainReputation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type TemDomainReputationArrayOutput struct{ *pulumi.OutputState }

func (TemDomainReputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TemDomainReputation)(nil)).Elem()
}

func (o TemDomainReputationArrayOutput) ToTemDomainReputationArrayOutput() TemDomainReputationArrayOutput {
	return o
}

func (o TemDomainReputationArrayOutput) ToTemDomainReputationArrayOutputWithContext(ctx context.Context) TemDomainReputationArrayOutput {
	return o
}

func (o TemDomainReputationArrayOutput) Index(i pulumi.IntInput) TemDomainReputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TemDomainReputation {
		return vs[0].([]TemDomainReputation)[vs[1].(int)]
	}).(TemDomainReputationOutput)
}

type VpcGatewayNetworkIpamConfig struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	IpamIpId *string `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network.
	PushDefaultRoute *bool `pulumi:"pushDefaultRoute"`
}

// VpcGatewayNetworkIpamConfigInput is an input type that accepts VpcGatewayNetworkIpamConfigArgs and VpcGatewayNetworkIpamConfigOutput values.
// You can construct a concrete instance of `VpcGatewayNetworkIpamConfigInput` via:
//
//	VpcGatewayNetworkIpamConfigArgs{...}
type VpcGatewayNetworkIpamConfigInput interface {
	pulumi.Input

	ToVpcGatewayNetworkIpamConfigOutput() VpcGatewayNetworkIpamConfigOutput
	ToVpcGatewayNetworkIpamConfigOutputWithContext(context.Context) VpcGatewayNetworkIpamConfigOutput
}

type VpcGatewayNetworkIpamConfigArgs struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
	IpamIpId pulumi.StringPtrInput `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network.
	PushDefaultRoute pulumi.BoolPtrInput `pulumi:"pushDefaultRoute"`
}

func (VpcGatewayNetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i VpcGatewayNetworkIpamConfigArgs) ToVpcGatewayNetworkIpamConfigOutput() VpcGatewayNetworkIpamConfigOutput {
	return i.ToVpcGatewayNetworkIpamConfigOutputWithContext(context.Background())
}

func (i VpcGatewayNetworkIpamConfigArgs) ToVpcGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) VpcGatewayNetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcGatewayNetworkIpamConfigOutput)
}

// VpcGatewayNetworkIpamConfigArrayInput is an input type that accepts VpcGatewayNetworkIpamConfigArray and VpcGatewayNetworkIpamConfigArrayOutput values.
// You can construct a concrete instance of `VpcGatewayNetworkIpamConfigArrayInput` via:
//
//	VpcGatewayNetworkIpamConfigArray{ VpcGatewayNetworkIpamConfigArgs{...} }
type VpcGatewayNetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToVpcGatewayNetworkIpamConfigArrayOutput() VpcGatewayNetworkIpamConfigArrayOutput
	ToVpcGatewayNetworkIpamConfigArrayOutputWithContext(context.Context) VpcGatewayNetworkIpamConfigArrayOutput
}

type VpcGatewayNetworkIpamConfigArray []VpcGatewayNetworkIpamConfigInput

func (VpcGatewayNetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i VpcGatewayNetworkIpamConfigArray) ToVpcGatewayNetworkIpamConfigArrayOutput() VpcGatewayNetworkIpamConfigArrayOutput {
	return i.ToVpcGatewayNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i VpcGatewayNetworkIpamConfigArray) ToVpcGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) VpcGatewayNetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcGatewayNetworkIpamConfigArrayOutput)
}

type VpcGatewayNetworkIpamConfigOutput struct{ *pulumi.OutputState }

func (VpcGatewayNetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o VpcGatewayNetworkIpamConfigOutput) ToVpcGatewayNetworkIpamConfigOutput() VpcGatewayNetworkIpamConfigOutput {
	return o
}

func (o VpcGatewayNetworkIpamConfigOutput) ToVpcGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) VpcGatewayNetworkIpamConfigOutput {
	return o
}

// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network.
func (o VpcGatewayNetworkIpamConfigOutput) IpamIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcGatewayNetworkIpamConfig) *string { return v.IpamIpId }).(pulumi.StringPtrOutput)
}

// Defines whether the default route is enabled on that Gateway Network.
func (o VpcGatewayNetworkIpamConfigOutput) PushDefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcGatewayNetworkIpamConfig) *bool { return v.PushDefaultRoute }).(pulumi.BoolPtrOutput)
}

type VpcGatewayNetworkIpamConfigArrayOutput struct{ *pulumi.OutputState }

func (VpcGatewayNetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o VpcGatewayNetworkIpamConfigArrayOutput) ToVpcGatewayNetworkIpamConfigArrayOutput() VpcGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o VpcGatewayNetworkIpamConfigArrayOutput) ToVpcGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) VpcGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o VpcGatewayNetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) VpcGatewayNetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcGatewayNetworkIpamConfig {
		return vs[0].([]VpcGatewayNetworkIpamConfig)[vs[1].(int)]
	}).(VpcGatewayNetworkIpamConfigOutput)
}

type VpcPrivateNetworkIpv4Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt *string `pulumi:"createdAt"`
	// The subnet ID.
	Id *string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
	PrefixLength *int `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet *string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask *string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// VpcPrivateNetworkIpv4SubnetInput is an input type that accepts VpcPrivateNetworkIpv4SubnetArgs and VpcPrivateNetworkIpv4SubnetOutput values.
// You can construct a concrete instance of `VpcPrivateNetworkIpv4SubnetInput` via:
//
//	VpcPrivateNetworkIpv4SubnetArgs{...}
type VpcPrivateNetworkIpv4SubnetInput interface {
	pulumi.Input

	ToVpcPrivateNetworkIpv4SubnetOutput() VpcPrivateNetworkIpv4SubnetOutput
	ToVpcPrivateNetworkIpv4SubnetOutputWithContext(context.Context) VpcPrivateNetworkIpv4SubnetOutput
}

type VpcPrivateNetworkIpv4SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The subnet ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (VpcPrivateNetworkIpv4SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i VpcPrivateNetworkIpv4SubnetArgs) ToVpcPrivateNetworkIpv4SubnetOutput() VpcPrivateNetworkIpv4SubnetOutput {
	return i.ToVpcPrivateNetworkIpv4SubnetOutputWithContext(context.Background())
}

func (i VpcPrivateNetworkIpv4SubnetArgs) ToVpcPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPrivateNetworkIpv4SubnetOutput)
}

func (i VpcPrivateNetworkIpv4SubnetArgs) ToVpcPrivateNetworkIpv4SubnetPtrOutput() VpcPrivateNetworkIpv4SubnetPtrOutput {
	return i.ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (i VpcPrivateNetworkIpv4SubnetArgs) ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPrivateNetworkIpv4SubnetOutput).ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx)
}

// VpcPrivateNetworkIpv4SubnetPtrInput is an input type that accepts VpcPrivateNetworkIpv4SubnetArgs, VpcPrivateNetworkIpv4SubnetPtr and VpcPrivateNetworkIpv4SubnetPtrOutput values.
// You can construct a concrete instance of `VpcPrivateNetworkIpv4SubnetPtrInput` via:
//
//	        VpcPrivateNetworkIpv4SubnetArgs{...}
//
//	or:
//
//	        nil
type VpcPrivateNetworkIpv4SubnetPtrInput interface {
	pulumi.Input

	ToVpcPrivateNetworkIpv4SubnetPtrOutput() VpcPrivateNetworkIpv4SubnetPtrOutput
	ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Context) VpcPrivateNetworkIpv4SubnetPtrOutput
}

type vpcPrivateNetworkIpv4SubnetPtrType VpcPrivateNetworkIpv4SubnetArgs

func VpcPrivateNetworkIpv4SubnetPtr(v *VpcPrivateNetworkIpv4SubnetArgs) VpcPrivateNetworkIpv4SubnetPtrInput {
	return (*vpcPrivateNetworkIpv4SubnetPtrType)(v)
}

func (*vpcPrivateNetworkIpv4SubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i *vpcPrivateNetworkIpv4SubnetPtrType) ToVpcPrivateNetworkIpv4SubnetPtrOutput() VpcPrivateNetworkIpv4SubnetPtrOutput {
	return i.ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (i *vpcPrivateNetworkIpv4SubnetPtrType) ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPrivateNetworkIpv4SubnetPtrOutput)
}

type VpcPrivateNetworkIpv4SubnetOutput struct{ *pulumi.OutputState }

func (VpcPrivateNetworkIpv4SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o VpcPrivateNetworkIpv4SubnetOutput) ToVpcPrivateNetworkIpv4SubnetOutput() VpcPrivateNetworkIpv4SubnetOutput {
	return o
}

func (o VpcPrivateNetworkIpv4SubnetOutput) ToVpcPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetOutput {
	return o
}

func (o VpcPrivateNetworkIpv4SubnetOutput) ToVpcPrivateNetworkIpv4SubnetPtrOutput() VpcPrivateNetworkIpv4SubnetPtrOutput {
	return o.ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(context.Background())
}

func (o VpcPrivateNetworkIpv4SubnetOutput) ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcPrivateNetworkIpv4Subnet) *VpcPrivateNetworkIpv4Subnet {
		return &v
	}).(VpcPrivateNetworkIpv4SubnetPtrOutput)
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
func (o VpcPrivateNetworkIpv4SubnetOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o VpcPrivateNetworkIpv4SubnetOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o VpcPrivateNetworkIpv4SubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
func (o VpcPrivateNetworkIpv4SubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o VpcPrivateNetworkIpv4SubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o VpcPrivateNetworkIpv4SubnetOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o VpcPrivateNetworkIpv4SubnetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv4Subnet) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type VpcPrivateNetworkIpv4SubnetPtrOutput struct{ *pulumi.OutputState }

func (VpcPrivateNetworkIpv4SubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o VpcPrivateNetworkIpv4SubnetPtrOutput) ToVpcPrivateNetworkIpv4SubnetPtrOutput() VpcPrivateNetworkIpv4SubnetPtrOutput {
	return o
}

func (o VpcPrivateNetworkIpv4SubnetPtrOutput) ToVpcPrivateNetworkIpv4SubnetPtrOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv4SubnetPtrOutput {
	return o
}

func (o VpcPrivateNetworkIpv4SubnetPtrOutput) Elem() VpcPrivateNetworkIpv4SubnetOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) VpcPrivateNetworkIpv4Subnet {
		if v != nil {
			return *v
		}
		var ret VpcPrivateNetworkIpv4Subnet
		return ret
	}).(VpcPrivateNetworkIpv4SubnetOutput)
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *int {
		if v == nil {
			return nil
		}
		return v.PrefixLength
	}).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.SubnetMask
	}).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o VpcPrivateNetworkIpv4SubnetPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcPrivateNetworkIpv4Subnet) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type VpcPrivateNetworkIpv6Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt *string `pulumi:"createdAt"`
	// The subnet ID.
	Id *string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
	PrefixLength *int `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet *string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask *string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// VpcPrivateNetworkIpv6SubnetInput is an input type that accepts VpcPrivateNetworkIpv6SubnetArgs and VpcPrivateNetworkIpv6SubnetOutput values.
// You can construct a concrete instance of `VpcPrivateNetworkIpv6SubnetInput` via:
//
//	VpcPrivateNetworkIpv6SubnetArgs{...}
type VpcPrivateNetworkIpv6SubnetInput interface {
	pulumi.Input

	ToVpcPrivateNetworkIpv6SubnetOutput() VpcPrivateNetworkIpv6SubnetOutput
	ToVpcPrivateNetworkIpv6SubnetOutputWithContext(context.Context) VpcPrivateNetworkIpv6SubnetOutput
}

type VpcPrivateNetworkIpv6SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The date and time of the creation of the subnet.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The subnet ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
	PrefixLength pulumi.IntPtrInput `pulumi:"prefixLength"`
	// The subnet CIDR.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (VpcPrivateNetworkIpv6SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i VpcPrivateNetworkIpv6SubnetArgs) ToVpcPrivateNetworkIpv6SubnetOutput() VpcPrivateNetworkIpv6SubnetOutput {
	return i.ToVpcPrivateNetworkIpv6SubnetOutputWithContext(context.Background())
}

func (i VpcPrivateNetworkIpv6SubnetArgs) ToVpcPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv6SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPrivateNetworkIpv6SubnetOutput)
}

// VpcPrivateNetworkIpv6SubnetArrayInput is an input type that accepts VpcPrivateNetworkIpv6SubnetArray and VpcPrivateNetworkIpv6SubnetArrayOutput values.
// You can construct a concrete instance of `VpcPrivateNetworkIpv6SubnetArrayInput` via:
//
//	VpcPrivateNetworkIpv6SubnetArray{ VpcPrivateNetworkIpv6SubnetArgs{...} }
type VpcPrivateNetworkIpv6SubnetArrayInput interface {
	pulumi.Input

	ToVpcPrivateNetworkIpv6SubnetArrayOutput() VpcPrivateNetworkIpv6SubnetArrayOutput
	ToVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Context) VpcPrivateNetworkIpv6SubnetArrayOutput
}

type VpcPrivateNetworkIpv6SubnetArray []VpcPrivateNetworkIpv6SubnetInput

func (VpcPrivateNetworkIpv6SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i VpcPrivateNetworkIpv6SubnetArray) ToVpcPrivateNetworkIpv6SubnetArrayOutput() VpcPrivateNetworkIpv6SubnetArrayOutput {
	return i.ToVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Background())
}

func (i VpcPrivateNetworkIpv6SubnetArray) ToVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv6SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPrivateNetworkIpv6SubnetArrayOutput)
}

type VpcPrivateNetworkIpv6SubnetOutput struct{ *pulumi.OutputState }

func (VpcPrivateNetworkIpv6SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o VpcPrivateNetworkIpv6SubnetOutput) ToVpcPrivateNetworkIpv6SubnetOutput() VpcPrivateNetworkIpv6SubnetOutput {
	return o
}

func (o VpcPrivateNetworkIpv6SubnetOutput) ToVpcPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv6SubnetOutput {
	return o
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet.
func (o VpcPrivateNetworkIpv6SubnetOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The date and time of the creation of the subnet.
func (o VpcPrivateNetworkIpv6SubnetOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The subnet ID.
func (o VpcPrivateNetworkIpv6SubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask.
func (o VpcPrivateNetworkIpv6SubnetOutput) PrefixLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *int { return v.PrefixLength }).(pulumi.IntPtrOutput)
}

// The subnet CIDR.
func (o VpcPrivateNetworkIpv6SubnetOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o VpcPrivateNetworkIpv6SubnetOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// The date and time of the last update of the subnet.
func (o VpcPrivateNetworkIpv6SubnetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcPrivateNetworkIpv6Subnet) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type VpcPrivateNetworkIpv6SubnetArrayOutput struct{ *pulumi.OutputState }

func (VpcPrivateNetworkIpv6SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o VpcPrivateNetworkIpv6SubnetArrayOutput) ToVpcPrivateNetworkIpv6SubnetArrayOutput() VpcPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o VpcPrivateNetworkIpv6SubnetArrayOutput) ToVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) VpcPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o VpcPrivateNetworkIpv6SubnetArrayOutput) Index(i pulumi.IntInput) VpcPrivateNetworkIpv6SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcPrivateNetworkIpv6Subnet {
		return vs[0].([]VpcPrivateNetworkIpv6Subnet)[vs[1].(int)]
	}).(VpcPrivateNetworkIpv6SubnetOutput)
}

type WebhostingCpanelUrl struct {
	// The URL of the Dashboard.
	Dashboard *string `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail *string `pulumi:"webmail"`
}

// WebhostingCpanelUrlInput is an input type that accepts WebhostingCpanelUrlArgs and WebhostingCpanelUrlOutput values.
// You can construct a concrete instance of `WebhostingCpanelUrlInput` via:
//
//	WebhostingCpanelUrlArgs{...}
type WebhostingCpanelUrlInput interface {
	pulumi.Input

	ToWebhostingCpanelUrlOutput() WebhostingCpanelUrlOutput
	ToWebhostingCpanelUrlOutputWithContext(context.Context) WebhostingCpanelUrlOutput
}

type WebhostingCpanelUrlArgs struct {
	// The URL of the Dashboard.
	Dashboard pulumi.StringPtrInput `pulumi:"dashboard"`
	// The URL of the Webmail interface.
	Webmail pulumi.StringPtrInput `pulumi:"webmail"`
}

func (WebhostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhostingCpanelUrl)(nil)).Elem()
}

func (i WebhostingCpanelUrlArgs) ToWebhostingCpanelUrlOutput() WebhostingCpanelUrlOutput {
	return i.ToWebhostingCpanelUrlOutputWithContext(context.Background())
}

func (i WebhostingCpanelUrlArgs) ToWebhostingCpanelUrlOutputWithContext(ctx context.Context) WebhostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhostingCpanelUrlOutput)
}

// WebhostingCpanelUrlArrayInput is an input type that accepts WebhostingCpanelUrlArray and WebhostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `WebhostingCpanelUrlArrayInput` via:
//
//	WebhostingCpanelUrlArray{ WebhostingCpanelUrlArgs{...} }
type WebhostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToWebhostingCpanelUrlArrayOutput() WebhostingCpanelUrlArrayOutput
	ToWebhostingCpanelUrlArrayOutputWithContext(context.Context) WebhostingCpanelUrlArrayOutput
}

type WebhostingCpanelUrlArray []WebhostingCpanelUrlInput

func (WebhostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhostingCpanelUrl)(nil)).Elem()
}

func (i WebhostingCpanelUrlArray) ToWebhostingCpanelUrlArrayOutput() WebhostingCpanelUrlArrayOutput {
	return i.ToWebhostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i WebhostingCpanelUrlArray) ToWebhostingCpanelUrlArrayOutputWithContext(ctx context.Context) WebhostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhostingCpanelUrlArrayOutput)
}

type WebhostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (WebhostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhostingCpanelUrl)(nil)).Elem()
}

func (o WebhostingCpanelUrlOutput) ToWebhostingCpanelUrlOutput() WebhostingCpanelUrlOutput {
	return o
}

func (o WebhostingCpanelUrlOutput) ToWebhostingCpanelUrlOutputWithContext(ctx context.Context) WebhostingCpanelUrlOutput {
	return o
}

// The URL of the Dashboard.
func (o WebhostingCpanelUrlOutput) Dashboard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhostingCpanelUrl) *string { return v.Dashboard }).(pulumi.StringPtrOutput)
}

// The URL of the Webmail interface.
func (o WebhostingCpanelUrlOutput) Webmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhostingCpanelUrl) *string { return v.Webmail }).(pulumi.StringPtrOutput)
}

type WebhostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (WebhostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhostingCpanelUrl)(nil)).Elem()
}

func (o WebhostingCpanelUrlArrayOutput) ToWebhostingCpanelUrlArrayOutput() WebhostingCpanelUrlArrayOutput {
	return o
}

func (o WebhostingCpanelUrlArrayOutput) ToWebhostingCpanelUrlArrayOutputWithContext(ctx context.Context) WebhostingCpanelUrlArrayOutput {
	return o
}

func (o WebhostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) WebhostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhostingCpanelUrl {
		return vs[0].([]WebhostingCpanelUrl)[vs[1].(int)]
	}).(WebhostingCpanelUrlOutput)
}

type WebhostingOption struct {
	// The option ID.
	Id *string `pulumi:"id"`
	// The option name.
	Name *string `pulumi:"name"`
}

// WebhostingOptionInput is an input type that accepts WebhostingOptionArgs and WebhostingOptionOutput values.
// You can construct a concrete instance of `WebhostingOptionInput` via:
//
//	WebhostingOptionArgs{...}
type WebhostingOptionInput interface {
	pulumi.Input

	ToWebhostingOptionOutput() WebhostingOptionOutput
	ToWebhostingOptionOutputWithContext(context.Context) WebhostingOptionOutput
}

type WebhostingOptionArgs struct {
	// The option ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The option name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WebhostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhostingOption)(nil)).Elem()
}

func (i WebhostingOptionArgs) ToWebhostingOptionOutput() WebhostingOptionOutput {
	return i.ToWebhostingOptionOutputWithContext(context.Background())
}

func (i WebhostingOptionArgs) ToWebhostingOptionOutputWithContext(ctx context.Context) WebhostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhostingOptionOutput)
}

// WebhostingOptionArrayInput is an input type that accepts WebhostingOptionArray and WebhostingOptionArrayOutput values.
// You can construct a concrete instance of `WebhostingOptionArrayInput` via:
//
//	WebhostingOptionArray{ WebhostingOptionArgs{...} }
type WebhostingOptionArrayInput interface {
	pulumi.Input

	ToWebhostingOptionArrayOutput() WebhostingOptionArrayOutput
	ToWebhostingOptionArrayOutputWithContext(context.Context) WebhostingOptionArrayOutput
}

type WebhostingOptionArray []WebhostingOptionInput

func (WebhostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhostingOption)(nil)).Elem()
}

func (i WebhostingOptionArray) ToWebhostingOptionArrayOutput() WebhostingOptionArrayOutput {
	return i.ToWebhostingOptionArrayOutputWithContext(context.Background())
}

func (i WebhostingOptionArray) ToWebhostingOptionArrayOutputWithContext(ctx context.Context) WebhostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhostingOptionArrayOutput)
}

type WebhostingOptionOutput struct{ *pulumi.OutputState }

func (WebhostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhostingOption)(nil)).Elem()
}

func (o WebhostingOptionOutput) ToWebhostingOptionOutput() WebhostingOptionOutput {
	return o
}

func (o WebhostingOptionOutput) ToWebhostingOptionOutputWithContext(ctx context.Context) WebhostingOptionOutput {
	return o
}

// The option ID.
func (o WebhostingOptionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhostingOption) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The option name.
func (o WebhostingOptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhostingOption) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WebhostingOptionArrayOutput struct{ *pulumi.OutputState }

func (WebhostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhostingOption)(nil)).Elem()
}

func (o WebhostingOptionArrayOutput) ToWebhostingOptionArrayOutput() WebhostingOptionArrayOutput {
	return o
}

func (o WebhostingOptionArrayOutput) ToWebhostingOptionArrayOutputWithContext(ctx context.Context) WebhostingOptionArrayOutput {
	return o
}

func (o WebhostingOptionArrayOutput) Index(i pulumi.IntInput) WebhostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhostingOption {
		return vs[0].([]WebhostingOption)[vs[1].(int)]
	}).(WebhostingOptionOutput)
}

type GetBaremetalOfferCpu struct {
	// Number of core on this CPU.
	CoreCount int `pulumi:"coreCount"`
	// Frequency of the memory in MHz.
	Frequency int `pulumi:"frequency"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// Number of thread on this CPU.
	ThreadCount int `pulumi:"threadCount"`
}

// GetBaremetalOfferCpuInput is an input type that accepts GetBaremetalOfferCpuArgs and GetBaremetalOfferCpuOutput values.
// You can construct a concrete instance of `GetBaremetalOfferCpuInput` via:
//
//	GetBaremetalOfferCpuArgs{...}
type GetBaremetalOfferCpuInput interface {
	pulumi.Input

	ToGetBaremetalOfferCpuOutput() GetBaremetalOfferCpuOutput
	ToGetBaremetalOfferCpuOutputWithContext(context.Context) GetBaremetalOfferCpuOutput
}

type GetBaremetalOfferCpuArgs struct {
	// Number of core on this CPU.
	CoreCount pulumi.IntInput `pulumi:"coreCount"`
	// Frequency of the memory in MHz.
	Frequency pulumi.IntInput `pulumi:"frequency"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of thread on this CPU.
	ThreadCount pulumi.IntInput `pulumi:"threadCount"`
}

func (GetBaremetalOfferCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferCpu)(nil)).Elem()
}

func (i GetBaremetalOfferCpuArgs) ToGetBaremetalOfferCpuOutput() GetBaremetalOfferCpuOutput {
	return i.ToGetBaremetalOfferCpuOutputWithContext(context.Background())
}

func (i GetBaremetalOfferCpuArgs) ToGetBaremetalOfferCpuOutputWithContext(ctx context.Context) GetBaremetalOfferCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalOfferCpuOutput)
}

type GetBaremetalOfferCpuOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferCpu)(nil)).Elem()
}

func (o GetBaremetalOfferCpuOutput) ToGetBaremetalOfferCpuOutput() GetBaremetalOfferCpuOutput {
	return o
}

func (o GetBaremetalOfferCpuOutput) ToGetBaremetalOfferCpuOutputWithContext(ctx context.Context) GetBaremetalOfferCpuOutput {
	return o
}

// Number of core on this CPU.
func (o GetBaremetalOfferCpuOutput) CoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.CoreCount }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBaremetalOfferCpuOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.Frequency }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetBaremetalOfferCpuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) string { return v.Name }).(pulumi.StringOutput)
}

// Number of thread on this CPU.
func (o GetBaremetalOfferCpuOutput) ThreadCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.ThreadCount }).(pulumi.IntOutput)
}

type GetBaremetalOfferDisk struct {
	// Capacity of the memory in GB.
	Capacity int `pulumi:"capacity"`
	// Type of memory.
	Type string `pulumi:"type"`
}

// GetBaremetalOfferDiskInput is an input type that accepts GetBaremetalOfferDiskArgs and GetBaremetalOfferDiskOutput values.
// You can construct a concrete instance of `GetBaremetalOfferDiskInput` via:
//
//	GetBaremetalOfferDiskArgs{...}
type GetBaremetalOfferDiskInput interface {
	pulumi.Input

	ToGetBaremetalOfferDiskOutput() GetBaremetalOfferDiskOutput
	ToGetBaremetalOfferDiskOutputWithContext(context.Context) GetBaremetalOfferDiskOutput
}

type GetBaremetalOfferDiskArgs struct {
	// Capacity of the memory in GB.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Type of memory.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBaremetalOfferDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferDisk)(nil)).Elem()
}

func (i GetBaremetalOfferDiskArgs) ToGetBaremetalOfferDiskOutput() GetBaremetalOfferDiskOutput {
	return i.ToGetBaremetalOfferDiskOutputWithContext(context.Background())
}

func (i GetBaremetalOfferDiskArgs) ToGetBaremetalOfferDiskOutputWithContext(ctx context.Context) GetBaremetalOfferDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalOfferDiskOutput)
}

// GetBaremetalOfferDiskArrayInput is an input type that accepts GetBaremetalOfferDiskArray and GetBaremetalOfferDiskArrayOutput values.
// You can construct a concrete instance of `GetBaremetalOfferDiskArrayInput` via:
//
//	GetBaremetalOfferDiskArray{ GetBaremetalOfferDiskArgs{...} }
type GetBaremetalOfferDiskArrayInput interface {
	pulumi.Input

	ToGetBaremetalOfferDiskArrayOutput() GetBaremetalOfferDiskArrayOutput
	ToGetBaremetalOfferDiskArrayOutputWithContext(context.Context) GetBaremetalOfferDiskArrayOutput
}

type GetBaremetalOfferDiskArray []GetBaremetalOfferDiskInput

func (GetBaremetalOfferDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferDisk)(nil)).Elem()
}

func (i GetBaremetalOfferDiskArray) ToGetBaremetalOfferDiskArrayOutput() GetBaremetalOfferDiskArrayOutput {
	return i.ToGetBaremetalOfferDiskArrayOutputWithContext(context.Background())
}

func (i GetBaremetalOfferDiskArray) ToGetBaremetalOfferDiskArrayOutputWithContext(ctx context.Context) GetBaremetalOfferDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalOfferDiskArrayOutput)
}

type GetBaremetalOfferDiskOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferDisk)(nil)).Elem()
}

func (o GetBaremetalOfferDiskOutput) ToGetBaremetalOfferDiskOutput() GetBaremetalOfferDiskOutput {
	return o
}

func (o GetBaremetalOfferDiskOutput) ToGetBaremetalOfferDiskOutputWithContext(ctx context.Context) GetBaremetalOfferDiskOutput {
	return o
}

// Capacity of the memory in GB.
func (o GetBaremetalOfferDiskOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferDisk) int { return v.Capacity }).(pulumi.IntOutput)
}

// Type of memory.
func (o GetBaremetalOfferDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferDisk) string { return v.Type }).(pulumi.StringOutput)
}

type GetBaremetalOfferDiskArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferDisk)(nil)).Elem()
}

func (o GetBaremetalOfferDiskArrayOutput) ToGetBaremetalOfferDiskArrayOutput() GetBaremetalOfferDiskArrayOutput {
	return o
}

func (o GetBaremetalOfferDiskArrayOutput) ToGetBaremetalOfferDiskArrayOutputWithContext(ctx context.Context) GetBaremetalOfferDiskArrayOutput {
	return o
}

func (o GetBaremetalOfferDiskArrayOutput) Index(i pulumi.IntInput) GetBaremetalOfferDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalOfferDisk {
		return vs[0].([]GetBaremetalOfferDisk)[vs[1].(int)]
	}).(GetBaremetalOfferDiskOutput)
}

type GetBaremetalOfferMemory struct {
	// Capacity of the memory in GB.
	Capacity int `pulumi:"capacity"`
	// Frequency of the memory in MHz.
	Frequency int `pulumi:"frequency"`
	// True if error-correcting code is available on this memory.
	IsEcc bool `pulumi:"isEcc"`
	// Type of memory.
	Type string `pulumi:"type"`
}

// GetBaremetalOfferMemoryInput is an input type that accepts GetBaremetalOfferMemoryArgs and GetBaremetalOfferMemoryOutput values.
// You can construct a concrete instance of `GetBaremetalOfferMemoryInput` via:
//
//	GetBaremetalOfferMemoryArgs{...}
type GetBaremetalOfferMemoryInput interface {
	pulumi.Input

	ToGetBaremetalOfferMemoryOutput() GetBaremetalOfferMemoryOutput
	ToGetBaremetalOfferMemoryOutputWithContext(context.Context) GetBaremetalOfferMemoryOutput
}

type GetBaremetalOfferMemoryArgs struct {
	// Capacity of the memory in GB.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Frequency of the memory in MHz.
	Frequency pulumi.IntInput `pulumi:"frequency"`
	// True if error-correcting code is available on this memory.
	IsEcc pulumi.BoolInput `pulumi:"isEcc"`
	// Type of memory.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBaremetalOfferMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferMemory)(nil)).Elem()
}

func (i GetBaremetalOfferMemoryArgs) ToGetBaremetalOfferMemoryOutput() GetBaremetalOfferMemoryOutput {
	return i.ToGetBaremetalOfferMemoryOutputWithContext(context.Background())
}

func (i GetBaremetalOfferMemoryArgs) ToGetBaremetalOfferMemoryOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalOfferMemoryOutput)
}

// GetBaremetalOfferMemoryArrayInput is an input type that accepts GetBaremetalOfferMemoryArray and GetBaremetalOfferMemoryArrayOutput values.
// You can construct a concrete instance of `GetBaremetalOfferMemoryArrayInput` via:
//
//	GetBaremetalOfferMemoryArray{ GetBaremetalOfferMemoryArgs{...} }
type GetBaremetalOfferMemoryArrayInput interface {
	pulumi.Input

	ToGetBaremetalOfferMemoryArrayOutput() GetBaremetalOfferMemoryArrayOutput
	ToGetBaremetalOfferMemoryArrayOutputWithContext(context.Context) GetBaremetalOfferMemoryArrayOutput
}

type GetBaremetalOfferMemoryArray []GetBaremetalOfferMemoryInput

func (GetBaremetalOfferMemoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferMemory)(nil)).Elem()
}

func (i GetBaremetalOfferMemoryArray) ToGetBaremetalOfferMemoryArrayOutput() GetBaremetalOfferMemoryArrayOutput {
	return i.ToGetBaremetalOfferMemoryArrayOutputWithContext(context.Background())
}

func (i GetBaremetalOfferMemoryArray) ToGetBaremetalOfferMemoryArrayOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalOfferMemoryArrayOutput)
}

type GetBaremetalOfferMemoryOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferMemory)(nil)).Elem()
}

func (o GetBaremetalOfferMemoryOutput) ToGetBaremetalOfferMemoryOutput() GetBaremetalOfferMemoryOutput {
	return o
}

func (o GetBaremetalOfferMemoryOutput) ToGetBaremetalOfferMemoryOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryOutput {
	return o
}

// Capacity of the memory in GB.
func (o GetBaremetalOfferMemoryOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) int { return v.Capacity }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBaremetalOfferMemoryOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) int { return v.Frequency }).(pulumi.IntOutput)
}

// True if error-correcting code is available on this memory.
func (o GetBaremetalOfferMemoryOutput) IsEcc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) bool { return v.IsEcc }).(pulumi.BoolOutput)
}

// Type of memory.
func (o GetBaremetalOfferMemoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) string { return v.Type }).(pulumi.StringOutput)
}

type GetBaremetalOfferMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferMemory)(nil)).Elem()
}

func (o GetBaremetalOfferMemoryArrayOutput) ToGetBaremetalOfferMemoryArrayOutput() GetBaremetalOfferMemoryArrayOutput {
	return o
}

func (o GetBaremetalOfferMemoryArrayOutput) ToGetBaremetalOfferMemoryArrayOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryArrayOutput {
	return o
}

func (o GetBaremetalOfferMemoryArrayOutput) Index(i pulumi.IntInput) GetBaremetalOfferMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalOfferMemory {
		return vs[0].([]GetBaremetalOfferMemory)[vs[1].(int)]
	}).(GetBaremetalOfferMemoryOutput)
}

type GetBaremetalServerIp struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBaremetalServerIpInput is an input type that accepts GetBaremetalServerIpArgs and GetBaremetalServerIpOutput values.
// You can construct a concrete instance of `GetBaremetalServerIpInput` via:
//
//	GetBaremetalServerIpArgs{...}
type GetBaremetalServerIpInput interface {
	pulumi.Input

	ToGetBaremetalServerIpOutput() GetBaremetalServerIpOutput
	ToGetBaremetalServerIpOutputWithContext(context.Context) GetBaremetalServerIpOutput
}

type GetBaremetalServerIpArgs struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBaremetalServerIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIp)(nil)).Elem()
}

func (i GetBaremetalServerIpArgs) ToGetBaremetalServerIpOutput() GetBaremetalServerIpOutput {
	return i.ToGetBaremetalServerIpOutputWithContext(context.Background())
}

func (i GetBaremetalServerIpArgs) ToGetBaremetalServerIpOutputWithContext(ctx context.Context) GetBaremetalServerIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpOutput)
}

// GetBaremetalServerIpArrayInput is an input type that accepts GetBaremetalServerIpArray and GetBaremetalServerIpArrayOutput values.
// You can construct a concrete instance of `GetBaremetalServerIpArrayInput` via:
//
//	GetBaremetalServerIpArray{ GetBaremetalServerIpArgs{...} }
type GetBaremetalServerIpArrayInput interface {
	pulumi.Input

	ToGetBaremetalServerIpArrayOutput() GetBaremetalServerIpArrayOutput
	ToGetBaremetalServerIpArrayOutputWithContext(context.Context) GetBaremetalServerIpArrayOutput
}

type GetBaremetalServerIpArray []GetBaremetalServerIpInput

func (GetBaremetalServerIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIp)(nil)).Elem()
}

func (i GetBaremetalServerIpArray) ToGetBaremetalServerIpArrayOutput() GetBaremetalServerIpArrayOutput {
	return i.ToGetBaremetalServerIpArrayOutputWithContext(context.Background())
}

func (i GetBaremetalServerIpArray) ToGetBaremetalServerIpArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpArrayOutput)
}

type GetBaremetalServerIpOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIp)(nil)).Elem()
}

func (o GetBaremetalServerIpOutput) ToGetBaremetalServerIpOutput() GetBaremetalServerIpOutput {
	return o
}

func (o GetBaremetalServerIpOutput) ToGetBaremetalServerIpOutputWithContext(ctx context.Context) GetBaremetalServerIpOutput {
	return o
}

// The IPv6 address
func (o GetBaremetalServerIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBaremetalServerIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIp) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBaremetalServerIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBaremetalServerIpOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIp) string { return v.Version }).(pulumi.StringOutput)
}

type GetBaremetalServerIpArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIp)(nil)).Elem()
}

func (o GetBaremetalServerIpArrayOutput) ToGetBaremetalServerIpArrayOutput() GetBaremetalServerIpArrayOutput {
	return o
}

func (o GetBaremetalServerIpArrayOutput) ToGetBaremetalServerIpArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpArrayOutput {
	return o
}

func (o GetBaremetalServerIpArrayOutput) Index(i pulumi.IntInput) GetBaremetalServerIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalServerIp {
		return vs[0].([]GetBaremetalServerIp)[vs[1].(int)]
	}).(GetBaremetalServerIpOutput)
}

type GetBaremetalServerIpv4 struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBaremetalServerIpv4Input is an input type that accepts GetBaremetalServerIpv4Args and GetBaremetalServerIpv4Output values.
// You can construct a concrete instance of `GetBaremetalServerIpv4Input` via:
//
//	GetBaremetalServerIpv4Args{...}
type GetBaremetalServerIpv4Input interface {
	pulumi.Input

	ToGetBaremetalServerIpv4Output() GetBaremetalServerIpv4Output
	ToGetBaremetalServerIpv4OutputWithContext(context.Context) GetBaremetalServerIpv4Output
}

type GetBaremetalServerIpv4Args struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBaremetalServerIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIpv4)(nil)).Elem()
}

func (i GetBaremetalServerIpv4Args) ToGetBaremetalServerIpv4Output() GetBaremetalServerIpv4Output {
	return i.ToGetBaremetalServerIpv4OutputWithContext(context.Background())
}

func (i GetBaremetalServerIpv4Args) ToGetBaremetalServerIpv4OutputWithContext(ctx context.Context) GetBaremetalServerIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpv4Output)
}

// GetBaremetalServerIpv4ArrayInput is an input type that accepts GetBaremetalServerIpv4Array and GetBaremetalServerIpv4ArrayOutput values.
// You can construct a concrete instance of `GetBaremetalServerIpv4ArrayInput` via:
//
//	GetBaremetalServerIpv4Array{ GetBaremetalServerIpv4Args{...} }
type GetBaremetalServerIpv4ArrayInput interface {
	pulumi.Input

	ToGetBaremetalServerIpv4ArrayOutput() GetBaremetalServerIpv4ArrayOutput
	ToGetBaremetalServerIpv4ArrayOutputWithContext(context.Context) GetBaremetalServerIpv4ArrayOutput
}

type GetBaremetalServerIpv4Array []GetBaremetalServerIpv4Input

func (GetBaremetalServerIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIpv4)(nil)).Elem()
}

func (i GetBaremetalServerIpv4Array) ToGetBaremetalServerIpv4ArrayOutput() GetBaremetalServerIpv4ArrayOutput {
	return i.ToGetBaremetalServerIpv4ArrayOutputWithContext(context.Background())
}

func (i GetBaremetalServerIpv4Array) ToGetBaremetalServerIpv4ArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpv4ArrayOutput)
}

type GetBaremetalServerIpv4Output struct{ *pulumi.OutputState }

func (GetBaremetalServerIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIpv4)(nil)).Elem()
}

func (o GetBaremetalServerIpv4Output) ToGetBaremetalServerIpv4Output() GetBaremetalServerIpv4Output {
	return o
}

func (o GetBaremetalServerIpv4Output) ToGetBaremetalServerIpv4OutputWithContext(ctx context.Context) GetBaremetalServerIpv4Output {
	return o
}

// The IPv6 address
func (o GetBaremetalServerIpv4Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv4) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBaremetalServerIpv4Output) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv4) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBaremetalServerIpv4Output) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv4) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBaremetalServerIpv4Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv4) string { return v.Version }).(pulumi.StringOutput)
}

type GetBaremetalServerIpv4ArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIpv4)(nil)).Elem()
}

func (o GetBaremetalServerIpv4ArrayOutput) ToGetBaremetalServerIpv4ArrayOutput() GetBaremetalServerIpv4ArrayOutput {
	return o
}

func (o GetBaremetalServerIpv4ArrayOutput) ToGetBaremetalServerIpv4ArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpv4ArrayOutput {
	return o
}

func (o GetBaremetalServerIpv4ArrayOutput) Index(i pulumi.IntInput) GetBaremetalServerIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalServerIpv4 {
		return vs[0].([]GetBaremetalServerIpv4)[vs[1].(int)]
	}).(GetBaremetalServerIpv4Output)
}

type GetBaremetalServerIpv6 struct {
	// The IPv6 address
	Address string `pulumi:"address"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse string `pulumi:"reverse"`
	// The version of the IPv6
	Version string `pulumi:"version"`
}

// GetBaremetalServerIpv6Input is an input type that accepts GetBaremetalServerIpv6Args and GetBaremetalServerIpv6Output values.
// You can construct a concrete instance of `GetBaremetalServerIpv6Input` via:
//
//	GetBaremetalServerIpv6Args{...}
type GetBaremetalServerIpv6Input interface {
	pulumi.Input

	ToGetBaremetalServerIpv6Output() GetBaremetalServerIpv6Output
	ToGetBaremetalServerIpv6OutputWithContext(context.Context) GetBaremetalServerIpv6Output
}

type GetBaremetalServerIpv6Args struct {
	// The IPv6 address
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The Reverse of the IPv6
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The version of the IPv6
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBaremetalServerIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIpv6)(nil)).Elem()
}

func (i GetBaremetalServerIpv6Args) ToGetBaremetalServerIpv6Output() GetBaremetalServerIpv6Output {
	return i.ToGetBaremetalServerIpv6OutputWithContext(context.Background())
}

func (i GetBaremetalServerIpv6Args) ToGetBaremetalServerIpv6OutputWithContext(ctx context.Context) GetBaremetalServerIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpv6Output)
}

// GetBaremetalServerIpv6ArrayInput is an input type that accepts GetBaremetalServerIpv6Array and GetBaremetalServerIpv6ArrayOutput values.
// You can construct a concrete instance of `GetBaremetalServerIpv6ArrayInput` via:
//
//	GetBaremetalServerIpv6Array{ GetBaremetalServerIpv6Args{...} }
type GetBaremetalServerIpv6ArrayInput interface {
	pulumi.Input

	ToGetBaremetalServerIpv6ArrayOutput() GetBaremetalServerIpv6ArrayOutput
	ToGetBaremetalServerIpv6ArrayOutputWithContext(context.Context) GetBaremetalServerIpv6ArrayOutput
}

type GetBaremetalServerIpv6Array []GetBaremetalServerIpv6Input

func (GetBaremetalServerIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIpv6)(nil)).Elem()
}

func (i GetBaremetalServerIpv6Array) ToGetBaremetalServerIpv6ArrayOutput() GetBaremetalServerIpv6ArrayOutput {
	return i.ToGetBaremetalServerIpv6ArrayOutputWithContext(context.Background())
}

func (i GetBaremetalServerIpv6Array) ToGetBaremetalServerIpv6ArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerIpv6ArrayOutput)
}

type GetBaremetalServerIpv6Output struct{ *pulumi.OutputState }

func (GetBaremetalServerIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerIpv6)(nil)).Elem()
}

func (o GetBaremetalServerIpv6Output) ToGetBaremetalServerIpv6Output() GetBaremetalServerIpv6Output {
	return o
}

func (o GetBaremetalServerIpv6Output) ToGetBaremetalServerIpv6OutputWithContext(ctx context.Context) GetBaremetalServerIpv6Output {
	return o
}

// The IPv6 address
func (o GetBaremetalServerIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv6) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBaremetalServerIpv6Output) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv6) string { return v.Id }).(pulumi.StringOutput)
}

// The Reverse of the IPv6
func (o GetBaremetalServerIpv6Output) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv6) string { return v.Reverse }).(pulumi.StringOutput)
}

// The version of the IPv6
func (o GetBaremetalServerIpv6Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerIpv6) string { return v.Version }).(pulumi.StringOutput)
}

type GetBaremetalServerIpv6ArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerIpv6)(nil)).Elem()
}

func (o GetBaremetalServerIpv6ArrayOutput) ToGetBaremetalServerIpv6ArrayOutput() GetBaremetalServerIpv6ArrayOutput {
	return o
}

func (o GetBaremetalServerIpv6ArrayOutput) ToGetBaremetalServerIpv6ArrayOutputWithContext(ctx context.Context) GetBaremetalServerIpv6ArrayOutput {
	return o
}

func (o GetBaremetalServerIpv6ArrayOutput) Index(i pulumi.IntInput) GetBaremetalServerIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalServerIpv6 {
		return vs[0].([]GetBaremetalServerIpv6)[vs[1].(int)]
	}).(GetBaremetalServerIpv6Output)
}

type GetBaremetalServerOption struct {
	// Auto expire the option after this date
	ExpiresAt string `pulumi:"expiresAt"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name string `pulumi:"name"`
}

// GetBaremetalServerOptionInput is an input type that accepts GetBaremetalServerOptionArgs and GetBaremetalServerOptionOutput values.
// You can construct a concrete instance of `GetBaremetalServerOptionInput` via:
//
//	GetBaremetalServerOptionArgs{...}
type GetBaremetalServerOptionInput interface {
	pulumi.Input

	ToGetBaremetalServerOptionOutput() GetBaremetalServerOptionOutput
	ToGetBaremetalServerOptionOutputWithContext(context.Context) GetBaremetalServerOptionOutput
}

type GetBaremetalServerOptionArgs struct {
	// Auto expire the option after this date
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBaremetalServerOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerOption)(nil)).Elem()
}

func (i GetBaremetalServerOptionArgs) ToGetBaremetalServerOptionOutput() GetBaremetalServerOptionOutput {
	return i.ToGetBaremetalServerOptionOutputWithContext(context.Background())
}

func (i GetBaremetalServerOptionArgs) ToGetBaremetalServerOptionOutputWithContext(ctx context.Context) GetBaremetalServerOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerOptionOutput)
}

// GetBaremetalServerOptionArrayInput is an input type that accepts GetBaremetalServerOptionArray and GetBaremetalServerOptionArrayOutput values.
// You can construct a concrete instance of `GetBaremetalServerOptionArrayInput` via:
//
//	GetBaremetalServerOptionArray{ GetBaremetalServerOptionArgs{...} }
type GetBaremetalServerOptionArrayInput interface {
	pulumi.Input

	ToGetBaremetalServerOptionArrayOutput() GetBaremetalServerOptionArrayOutput
	ToGetBaremetalServerOptionArrayOutputWithContext(context.Context) GetBaremetalServerOptionArrayOutput
}

type GetBaremetalServerOptionArray []GetBaremetalServerOptionInput

func (GetBaremetalServerOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerOption)(nil)).Elem()
}

func (i GetBaremetalServerOptionArray) ToGetBaremetalServerOptionArrayOutput() GetBaremetalServerOptionArrayOutput {
	return i.ToGetBaremetalServerOptionArrayOutputWithContext(context.Background())
}

func (i GetBaremetalServerOptionArray) ToGetBaremetalServerOptionArrayOutputWithContext(ctx context.Context) GetBaremetalServerOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerOptionArrayOutput)
}

type GetBaremetalServerOptionOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerOption)(nil)).Elem()
}

func (o GetBaremetalServerOptionOutput) ToGetBaremetalServerOptionOutput() GetBaremetalServerOptionOutput {
	return o
}

func (o GetBaremetalServerOptionOutput) ToGetBaremetalServerOptionOutputWithContext(ctx context.Context) GetBaremetalServerOptionOutput {
	return o
}

// Auto expire the option after this date
func (o GetBaremetalServerOptionOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerOption) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBaremetalServerOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerOption) string { return v.Id }).(pulumi.StringOutput)
}

// The server name. Only one of `name` and `serverId` should be specified.
func (o GetBaremetalServerOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerOption) string { return v.Name }).(pulumi.StringOutput)
}

type GetBaremetalServerOptionArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerOption)(nil)).Elem()
}

func (o GetBaremetalServerOptionArrayOutput) ToGetBaremetalServerOptionArrayOutput() GetBaremetalServerOptionArrayOutput {
	return o
}

func (o GetBaremetalServerOptionArrayOutput) ToGetBaremetalServerOptionArrayOutputWithContext(ctx context.Context) GetBaremetalServerOptionArrayOutput {
	return o
}

func (o GetBaremetalServerOptionArrayOutput) Index(i pulumi.IntInput) GetBaremetalServerOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalServerOption {
		return vs[0].([]GetBaremetalServerOption)[vs[1].(int)]
	}).(GetBaremetalServerOptionOutput)
}

type GetBaremetalServerPrivateNetwork struct {
	// The date and time of the creation of the private network
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the server.
	Id string `pulumi:"id"`
	// The private network status
	Status string `pulumi:"status"`
	// The date and time of the last update of the private network
	UpdatedAt string `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network
	Vlan int `pulumi:"vlan"`
}

// GetBaremetalServerPrivateNetworkInput is an input type that accepts GetBaremetalServerPrivateNetworkArgs and GetBaremetalServerPrivateNetworkOutput values.
// You can construct a concrete instance of `GetBaremetalServerPrivateNetworkInput` via:
//
//	GetBaremetalServerPrivateNetworkArgs{...}
type GetBaremetalServerPrivateNetworkInput interface {
	pulumi.Input

	ToGetBaremetalServerPrivateNetworkOutput() GetBaremetalServerPrivateNetworkOutput
	ToGetBaremetalServerPrivateNetworkOutputWithContext(context.Context) GetBaremetalServerPrivateNetworkOutput
}

type GetBaremetalServerPrivateNetworkArgs struct {
	// The date and time of the creation of the private network
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// The private network status
	Status pulumi.StringInput `pulumi:"status"`
	// The date and time of the last update of the private network
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The VLAN ID associated to the private network
	Vlan pulumi.IntInput `pulumi:"vlan"`
}

func (GetBaremetalServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerPrivateNetwork)(nil)).Elem()
}

func (i GetBaremetalServerPrivateNetworkArgs) ToGetBaremetalServerPrivateNetworkOutput() GetBaremetalServerPrivateNetworkOutput {
	return i.ToGetBaremetalServerPrivateNetworkOutputWithContext(context.Background())
}

func (i GetBaremetalServerPrivateNetworkArgs) ToGetBaremetalServerPrivateNetworkOutputWithContext(ctx context.Context) GetBaremetalServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerPrivateNetworkOutput)
}

// GetBaremetalServerPrivateNetworkArrayInput is an input type that accepts GetBaremetalServerPrivateNetworkArray and GetBaremetalServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetBaremetalServerPrivateNetworkArrayInput` via:
//
//	GetBaremetalServerPrivateNetworkArray{ GetBaremetalServerPrivateNetworkArgs{...} }
type GetBaremetalServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetBaremetalServerPrivateNetworkArrayOutput() GetBaremetalServerPrivateNetworkArrayOutput
	ToGetBaremetalServerPrivateNetworkArrayOutputWithContext(context.Context) GetBaremetalServerPrivateNetworkArrayOutput
}

type GetBaremetalServerPrivateNetworkArray []GetBaremetalServerPrivateNetworkInput

func (GetBaremetalServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerPrivateNetwork)(nil)).Elem()
}

func (i GetBaremetalServerPrivateNetworkArray) ToGetBaremetalServerPrivateNetworkArrayOutput() GetBaremetalServerPrivateNetworkArrayOutput {
	return i.ToGetBaremetalServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetBaremetalServerPrivateNetworkArray) ToGetBaremetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetBaremetalServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBaremetalServerPrivateNetworkArrayOutput)
}

type GetBaremetalServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalServerPrivateNetwork)(nil)).Elem()
}

func (o GetBaremetalServerPrivateNetworkOutput) ToGetBaremetalServerPrivateNetworkOutput() GetBaremetalServerPrivateNetworkOutput {
	return o
}

func (o GetBaremetalServerPrivateNetworkOutput) ToGetBaremetalServerPrivateNetworkOutputWithContext(ctx context.Context) GetBaremetalServerPrivateNetworkOutput {
	return o
}

// The date and time of the creation of the private network
func (o GetBaremetalServerPrivateNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerPrivateNetwork) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the server.
func (o GetBaremetalServerPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The private network status
func (o GetBaremetalServerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time of the last update of the private network
func (o GetBaremetalServerPrivateNetworkOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalServerPrivateNetwork) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The VLAN ID associated to the private network
func (o GetBaremetalServerPrivateNetworkOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalServerPrivateNetwork) int { return v.Vlan }).(pulumi.IntOutput)
}

type GetBaremetalServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalServerPrivateNetwork)(nil)).Elem()
}

func (o GetBaremetalServerPrivateNetworkArrayOutput) ToGetBaremetalServerPrivateNetworkArrayOutput() GetBaremetalServerPrivateNetworkArrayOutput {
	return o
}

func (o GetBaremetalServerPrivateNetworkArrayOutput) ToGetBaremetalServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetBaremetalServerPrivateNetworkArrayOutput {
	return o
}

func (o GetBaremetalServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetBaremetalServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalServerPrivateNetwork {
		return vs[0].([]GetBaremetalServerPrivateNetwork)[vs[1].(int)]
	}).(GetBaremetalServerPrivateNetworkOutput)
}

type GetBillingConsumptionsConsumption struct {
	// Consumed quantity
	BilledQuantity string `pulumi:"billedQuantity"`
	// Name of consumption category
	CategoryName string `pulumi:"categoryName"`
	// The product name
	ProductName string `pulumi:"productName"`
	// Project ID of the consumption
	ProjectId string `pulumi:"projectId"`
	// Unique identifier of the product
	Sku string `pulumi:"sku"`
	// Unit of consumed quantity
	Unit string `pulumi:"unit"`
	// Monetary value of the consumption
	Value string `pulumi:"value"`
}

// GetBillingConsumptionsConsumptionInput is an input type that accepts GetBillingConsumptionsConsumptionArgs and GetBillingConsumptionsConsumptionOutput values.
// You can construct a concrete instance of `GetBillingConsumptionsConsumptionInput` via:
//
//	GetBillingConsumptionsConsumptionArgs{...}
type GetBillingConsumptionsConsumptionInput interface {
	pulumi.Input

	ToGetBillingConsumptionsConsumptionOutput() GetBillingConsumptionsConsumptionOutput
	ToGetBillingConsumptionsConsumptionOutputWithContext(context.Context) GetBillingConsumptionsConsumptionOutput
}

type GetBillingConsumptionsConsumptionArgs struct {
	// Consumed quantity
	BilledQuantity pulumi.StringInput `pulumi:"billedQuantity"`
	// Name of consumption category
	CategoryName pulumi.StringInput `pulumi:"categoryName"`
	// The product name
	ProductName pulumi.StringInput `pulumi:"productName"`
	// Project ID of the consumption
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Unique identifier of the product
	Sku pulumi.StringInput `pulumi:"sku"`
	// Unit of consumed quantity
	Unit pulumi.StringInput `pulumi:"unit"`
	// Monetary value of the consumption
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetBillingConsumptionsConsumptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBillingConsumptionsConsumption)(nil)).Elem()
}

func (i GetBillingConsumptionsConsumptionArgs) ToGetBillingConsumptionsConsumptionOutput() GetBillingConsumptionsConsumptionOutput {
	return i.ToGetBillingConsumptionsConsumptionOutputWithContext(context.Background())
}

func (i GetBillingConsumptionsConsumptionArgs) ToGetBillingConsumptionsConsumptionOutputWithContext(ctx context.Context) GetBillingConsumptionsConsumptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBillingConsumptionsConsumptionOutput)
}

// GetBillingConsumptionsConsumptionArrayInput is an input type that accepts GetBillingConsumptionsConsumptionArray and GetBillingConsumptionsConsumptionArrayOutput values.
// You can construct a concrete instance of `GetBillingConsumptionsConsumptionArrayInput` via:
//
//	GetBillingConsumptionsConsumptionArray{ GetBillingConsumptionsConsumptionArgs{...} }
type GetBillingConsumptionsConsumptionArrayInput interface {
	pulumi.Input

	ToGetBillingConsumptionsConsumptionArrayOutput() GetBillingConsumptionsConsumptionArrayOutput
	ToGetBillingConsumptionsConsumptionArrayOutputWithContext(context.Context) GetBillingConsumptionsConsumptionArrayOutput
}

type GetBillingConsumptionsConsumptionArray []GetBillingConsumptionsConsumptionInput

func (GetBillingConsumptionsConsumptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBillingConsumptionsConsumption)(nil)).Elem()
}

func (i GetBillingConsumptionsConsumptionArray) ToGetBillingConsumptionsConsumptionArrayOutput() GetBillingConsumptionsConsumptionArrayOutput {
	return i.ToGetBillingConsumptionsConsumptionArrayOutputWithContext(context.Background())
}

func (i GetBillingConsumptionsConsumptionArray) ToGetBillingConsumptionsConsumptionArrayOutputWithContext(ctx context.Context) GetBillingConsumptionsConsumptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBillingConsumptionsConsumptionArrayOutput)
}

type GetBillingConsumptionsConsumptionOutput struct{ *pulumi.OutputState }

func (GetBillingConsumptionsConsumptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBillingConsumptionsConsumption)(nil)).Elem()
}

func (o GetBillingConsumptionsConsumptionOutput) ToGetBillingConsumptionsConsumptionOutput() GetBillingConsumptionsConsumptionOutput {
	return o
}

func (o GetBillingConsumptionsConsumptionOutput) ToGetBillingConsumptionsConsumptionOutputWithContext(ctx context.Context) GetBillingConsumptionsConsumptionOutput {
	return o
}

// Consumed quantity
func (o GetBillingConsumptionsConsumptionOutput) BilledQuantity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.BilledQuantity }).(pulumi.StringOutput)
}

// Name of consumption category
func (o GetBillingConsumptionsConsumptionOutput) CategoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.CategoryName }).(pulumi.StringOutput)
}

// The product name
func (o GetBillingConsumptionsConsumptionOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.ProductName }).(pulumi.StringOutput)
}

// Project ID of the consumption
func (o GetBillingConsumptionsConsumptionOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Unique identifier of the product
func (o GetBillingConsumptionsConsumptionOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.Sku }).(pulumi.StringOutput)
}

// Unit of consumed quantity
func (o GetBillingConsumptionsConsumptionOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.Unit }).(pulumi.StringOutput)
}

// Monetary value of the consumption
func (o GetBillingConsumptionsConsumptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingConsumptionsConsumption) string { return v.Value }).(pulumi.StringOutput)
}

type GetBillingConsumptionsConsumptionArrayOutput struct{ *pulumi.OutputState }

func (GetBillingConsumptionsConsumptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBillingConsumptionsConsumption)(nil)).Elem()
}

func (o GetBillingConsumptionsConsumptionArrayOutput) ToGetBillingConsumptionsConsumptionArrayOutput() GetBillingConsumptionsConsumptionArrayOutput {
	return o
}

func (o GetBillingConsumptionsConsumptionArrayOutput) ToGetBillingConsumptionsConsumptionArrayOutputWithContext(ctx context.Context) GetBillingConsumptionsConsumptionArrayOutput {
	return o
}

func (o GetBillingConsumptionsConsumptionArrayOutput) Index(i pulumi.IntInput) GetBillingConsumptionsConsumptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBillingConsumptionsConsumption {
		return vs[0].([]GetBillingConsumptionsConsumption)[vs[1].(int)]
	}).(GetBillingConsumptionsConsumptionOutput)
}

type GetBillingInvoicesInvoice struct {
	// The billing period of the invoice in the YYYY-MM format.
	BillingPeriod string `pulumi:"billingPeriod"`
	// The payment time limit, set according to the Organization's payment conditions (RFC 3339 format).
	DueDate string `pulumi:"dueDate"`
	// The associated invoice ID.
	Id string `pulumi:"id"`
	// Invoices with the given type are listed. Valid values are `periodic` and `purchase`.
	InvoiceType string `pulumi:"invoiceType"`
	// The date when the invoice was sent to the customer (RFC 3339 format).
	IssuedDate string `pulumi:"issuedDate"`
	// The invoice number.
	Number int `pulumi:"number"`
	// The organization name.
	OrganizationName string `pulumi:"organizationName"`
	// The name of the seller (Scaleway).
	SellerName string `pulumi:"sellerName"`
	// The start date of the billing period (RFC 3339 format).
	StartDate string `pulumi:"startDate"`
	// The state of the invoice.
	State string `pulumi:"state"`
	// The end date of the billing period (RFC 3339 format).
	StopDate string `pulumi:"stopDate"`
	// The total discount amount of the invoice.
	TotalDiscount string `pulumi:"totalDiscount"`
	// The total tax amount of the invoice.
	TotalTax string `pulumi:"totalTax"`
	// The total amount, taxed.
	TotalTaxed string `pulumi:"totalTaxed"`
	// The total amount of the invoice before applying the discount.
	TotalUndiscount string `pulumi:"totalUndiscount"`
	// The total amount, untaxed.
	TotalUntaxed string `pulumi:"totalUntaxed"`
}

// GetBillingInvoicesInvoiceInput is an input type that accepts GetBillingInvoicesInvoiceArgs and GetBillingInvoicesInvoiceOutput values.
// You can construct a concrete instance of `GetBillingInvoicesInvoiceInput` via:
//
//	GetBillingInvoicesInvoiceArgs{...}
type GetBillingInvoicesInvoiceInput interface {
	pulumi.Input

	ToGetBillingInvoicesInvoiceOutput() GetBillingInvoicesInvoiceOutput
	ToGetBillingInvoicesInvoiceOutputWithContext(context.Context) GetBillingInvoicesInvoiceOutput
}

type GetBillingInvoicesInvoiceArgs struct {
	// The billing period of the invoice in the YYYY-MM format.
	BillingPeriod pulumi.StringInput `pulumi:"billingPeriod"`
	// The payment time limit, set according to the Organization's payment conditions (RFC 3339 format).
	DueDate pulumi.StringInput `pulumi:"dueDate"`
	// The associated invoice ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Invoices with the given type are listed. Valid values are `periodic` and `purchase`.
	InvoiceType pulumi.StringInput `pulumi:"invoiceType"`
	// The date when the invoice was sent to the customer (RFC 3339 format).
	IssuedDate pulumi.StringInput `pulumi:"issuedDate"`
	// The invoice number.
	Number pulumi.IntInput `pulumi:"number"`
	// The organization name.
	OrganizationName pulumi.StringInput `pulumi:"organizationName"`
	// The name of the seller (Scaleway).
	SellerName pulumi.StringInput `pulumi:"sellerName"`
	// The start date of the billing period (RFC 3339 format).
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// The state of the invoice.
	State pulumi.StringInput `pulumi:"state"`
	// The end date of the billing period (RFC 3339 format).
	StopDate pulumi.StringInput `pulumi:"stopDate"`
	// The total discount amount of the invoice.
	TotalDiscount pulumi.StringInput `pulumi:"totalDiscount"`
	// The total tax amount of the invoice.
	TotalTax pulumi.StringInput `pulumi:"totalTax"`
	// The total amount, taxed.
	TotalTaxed pulumi.StringInput `pulumi:"totalTaxed"`
	// The total amount of the invoice before applying the discount.
	TotalUndiscount pulumi.StringInput `pulumi:"totalUndiscount"`
	// The total amount, untaxed.
	TotalUntaxed pulumi.StringInput `pulumi:"totalUntaxed"`
}

func (GetBillingInvoicesInvoiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBillingInvoicesInvoice)(nil)).Elem()
}

func (i GetBillingInvoicesInvoiceArgs) ToGetBillingInvoicesInvoiceOutput() GetBillingInvoicesInvoiceOutput {
	return i.ToGetBillingInvoicesInvoiceOutputWithContext(context.Background())
}

func (i GetBillingInvoicesInvoiceArgs) ToGetBillingInvoicesInvoiceOutputWithContext(ctx context.Context) GetBillingInvoicesInvoiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBillingInvoicesInvoiceOutput)
}

// GetBillingInvoicesInvoiceArrayInput is an input type that accepts GetBillingInvoicesInvoiceArray and GetBillingInvoicesInvoiceArrayOutput values.
// You can construct a concrete instance of `GetBillingInvoicesInvoiceArrayInput` via:
//
//	GetBillingInvoicesInvoiceArray{ GetBillingInvoicesInvoiceArgs{...} }
type GetBillingInvoicesInvoiceArrayInput interface {
	pulumi.Input

	ToGetBillingInvoicesInvoiceArrayOutput() GetBillingInvoicesInvoiceArrayOutput
	ToGetBillingInvoicesInvoiceArrayOutputWithContext(context.Context) GetBillingInvoicesInvoiceArrayOutput
}

type GetBillingInvoicesInvoiceArray []GetBillingInvoicesInvoiceInput

func (GetBillingInvoicesInvoiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBillingInvoicesInvoice)(nil)).Elem()
}

func (i GetBillingInvoicesInvoiceArray) ToGetBillingInvoicesInvoiceArrayOutput() GetBillingInvoicesInvoiceArrayOutput {
	return i.ToGetBillingInvoicesInvoiceArrayOutputWithContext(context.Background())
}

func (i GetBillingInvoicesInvoiceArray) ToGetBillingInvoicesInvoiceArrayOutputWithContext(ctx context.Context) GetBillingInvoicesInvoiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBillingInvoicesInvoiceArrayOutput)
}

type GetBillingInvoicesInvoiceOutput struct{ *pulumi.OutputState }

func (GetBillingInvoicesInvoiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBillingInvoicesInvoice)(nil)).Elem()
}

func (o GetBillingInvoicesInvoiceOutput) ToGetBillingInvoicesInvoiceOutput() GetBillingInvoicesInvoiceOutput {
	return o
}

func (o GetBillingInvoicesInvoiceOutput) ToGetBillingInvoicesInvoiceOutputWithContext(ctx context.Context) GetBillingInvoicesInvoiceOutput {
	return o
}

// The billing period of the invoice in the YYYY-MM format.
func (o GetBillingInvoicesInvoiceOutput) BillingPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.BillingPeriod }).(pulumi.StringOutput)
}

// The payment time limit, set according to the Organization's payment conditions (RFC 3339 format).
func (o GetBillingInvoicesInvoiceOutput) DueDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.DueDate }).(pulumi.StringOutput)
}

// The associated invoice ID.
func (o GetBillingInvoicesInvoiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.Id }).(pulumi.StringOutput)
}

// Invoices with the given type are listed. Valid values are `periodic` and `purchase`.
func (o GetBillingInvoicesInvoiceOutput) InvoiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.InvoiceType }).(pulumi.StringOutput)
}

// The date when the invoice was sent to the customer (RFC 3339 format).
func (o GetBillingInvoicesInvoiceOutput) IssuedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.IssuedDate }).(pulumi.StringOutput)
}

// The invoice number.
func (o GetBillingInvoicesInvoiceOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) int { return v.Number }).(pulumi.IntOutput)
}

// The organization name.
func (o GetBillingInvoicesInvoiceOutput) OrganizationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.OrganizationName }).(pulumi.StringOutput)
}

// The name of the seller (Scaleway).
func (o GetBillingInvoicesInvoiceOutput) SellerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.SellerName }).(pulumi.StringOutput)
}

// The start date of the billing period (RFC 3339 format).
func (o GetBillingInvoicesInvoiceOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.StartDate }).(pulumi.StringOutput)
}

// The state of the invoice.
func (o GetBillingInvoicesInvoiceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.State }).(pulumi.StringOutput)
}

// The end date of the billing period (RFC 3339 format).
func (o GetBillingInvoicesInvoiceOutput) StopDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.StopDate }).(pulumi.StringOutput)
}

// The total discount amount of the invoice.
func (o GetBillingInvoicesInvoiceOutput) TotalDiscount() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.TotalDiscount }).(pulumi.StringOutput)
}

// The total tax amount of the invoice.
func (o GetBillingInvoicesInvoiceOutput) TotalTax() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.TotalTax }).(pulumi.StringOutput)
}

// The total amount, taxed.
func (o GetBillingInvoicesInvoiceOutput) TotalTaxed() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.TotalTaxed }).(pulumi.StringOutput)
}

// The total amount of the invoice before applying the discount.
func (o GetBillingInvoicesInvoiceOutput) TotalUndiscount() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.TotalUndiscount }).(pulumi.StringOutput)
}

// The total amount, untaxed.
func (o GetBillingInvoicesInvoiceOutput) TotalUntaxed() pulumi.StringOutput {
	return o.ApplyT(func(v GetBillingInvoicesInvoice) string { return v.TotalUntaxed }).(pulumi.StringOutput)
}

type GetBillingInvoicesInvoiceArrayOutput struct{ *pulumi.OutputState }

func (GetBillingInvoicesInvoiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBillingInvoicesInvoice)(nil)).Elem()
}

func (o GetBillingInvoicesInvoiceArrayOutput) ToGetBillingInvoicesInvoiceArrayOutput() GetBillingInvoicesInvoiceArrayOutput {
	return o
}

func (o GetBillingInvoicesInvoiceArrayOutput) ToGetBillingInvoicesInvoiceArrayOutputWithContext(ctx context.Context) GetBillingInvoicesInvoiceArrayOutput {
	return o
}

func (o GetBillingInvoicesInvoiceArrayOutput) Index(i pulumi.IntInput) GetBillingInvoicesInvoiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBillingInvoicesInvoice {
		return vs[0].([]GetBillingInvoicesInvoice)[vs[1].(int)]
	}).(GetBillingInvoicesInvoiceOutput)
}

type GetCockpitEndpoint struct {
	// The alertmanager URL
	AlertmanagerUrl string `pulumi:"alertmanagerUrl"`
	// The grafana URL
	GrafanaUrl string `pulumi:"grafanaUrl"`
	// The logs URL
	LogsUrl string `pulumi:"logsUrl"`
	// The metrics URL
	MetricsUrl string `pulumi:"metricsUrl"`
	// The traces URL
	TracesUrl string `pulumi:"tracesUrl"`
}

// GetCockpitEndpointInput is an input type that accepts GetCockpitEndpointArgs and GetCockpitEndpointOutput values.
// You can construct a concrete instance of `GetCockpitEndpointInput` via:
//
//	GetCockpitEndpointArgs{...}
type GetCockpitEndpointInput interface {
	pulumi.Input

	ToGetCockpitEndpointOutput() GetCockpitEndpointOutput
	ToGetCockpitEndpointOutputWithContext(context.Context) GetCockpitEndpointOutput
}

type GetCockpitEndpointArgs struct {
	// The alertmanager URL
	AlertmanagerUrl pulumi.StringInput `pulumi:"alertmanagerUrl"`
	// The grafana URL
	GrafanaUrl pulumi.StringInput `pulumi:"grafanaUrl"`
	// The logs URL
	LogsUrl pulumi.StringInput `pulumi:"logsUrl"`
	// The metrics URL
	MetricsUrl pulumi.StringInput `pulumi:"metricsUrl"`
	// The traces URL
	TracesUrl pulumi.StringInput `pulumi:"tracesUrl"`
}

func (GetCockpitEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockpitEndpoint)(nil)).Elem()
}

func (i GetCockpitEndpointArgs) ToGetCockpitEndpointOutput() GetCockpitEndpointOutput {
	return i.ToGetCockpitEndpointOutputWithContext(context.Background())
}

func (i GetCockpitEndpointArgs) ToGetCockpitEndpointOutputWithContext(ctx context.Context) GetCockpitEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCockpitEndpointOutput)
}

// GetCockpitEndpointArrayInput is an input type that accepts GetCockpitEndpointArray and GetCockpitEndpointArrayOutput values.
// You can construct a concrete instance of `GetCockpitEndpointArrayInput` via:
//
//	GetCockpitEndpointArray{ GetCockpitEndpointArgs{...} }
type GetCockpitEndpointArrayInput interface {
	pulumi.Input

	ToGetCockpitEndpointArrayOutput() GetCockpitEndpointArrayOutput
	ToGetCockpitEndpointArrayOutputWithContext(context.Context) GetCockpitEndpointArrayOutput
}

type GetCockpitEndpointArray []GetCockpitEndpointInput

func (GetCockpitEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCockpitEndpoint)(nil)).Elem()
}

func (i GetCockpitEndpointArray) ToGetCockpitEndpointArrayOutput() GetCockpitEndpointArrayOutput {
	return i.ToGetCockpitEndpointArrayOutputWithContext(context.Background())
}

func (i GetCockpitEndpointArray) ToGetCockpitEndpointArrayOutputWithContext(ctx context.Context) GetCockpitEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCockpitEndpointArrayOutput)
}

type GetCockpitEndpointOutput struct{ *pulumi.OutputState }

func (GetCockpitEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockpitEndpoint)(nil)).Elem()
}

func (o GetCockpitEndpointOutput) ToGetCockpitEndpointOutput() GetCockpitEndpointOutput {
	return o
}

func (o GetCockpitEndpointOutput) ToGetCockpitEndpointOutputWithContext(ctx context.Context) GetCockpitEndpointOutput {
	return o
}

// The alertmanager URL
func (o GetCockpitEndpointOutput) AlertmanagerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitEndpoint) string { return v.AlertmanagerUrl }).(pulumi.StringOutput)
}

// The grafana URL
func (o GetCockpitEndpointOutput) GrafanaUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitEndpoint) string { return v.GrafanaUrl }).(pulumi.StringOutput)
}

// The logs URL
func (o GetCockpitEndpointOutput) LogsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitEndpoint) string { return v.LogsUrl }).(pulumi.StringOutput)
}

// The metrics URL
func (o GetCockpitEndpointOutput) MetricsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitEndpoint) string { return v.MetricsUrl }).(pulumi.StringOutput)
}

// The traces URL
func (o GetCockpitEndpointOutput) TracesUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitEndpoint) string { return v.TracesUrl }).(pulumi.StringOutput)
}

type GetCockpitEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetCockpitEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCockpitEndpoint)(nil)).Elem()
}

func (o GetCockpitEndpointArrayOutput) ToGetCockpitEndpointArrayOutput() GetCockpitEndpointArrayOutput {
	return o
}

func (o GetCockpitEndpointArrayOutput) ToGetCockpitEndpointArrayOutputWithContext(ctx context.Context) GetCockpitEndpointArrayOutput {
	return o
}

func (o GetCockpitEndpointArrayOutput) Index(i pulumi.IntInput) GetCockpitEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCockpitEndpoint {
		return vs[0].([]GetCockpitEndpoint)[vs[1].(int)]
	}).(GetCockpitEndpointOutput)
}

type GetCockpitPushUrl struct {
	// Push URL for logs (Grafana Loki)
	PushLogsUrl string `pulumi:"pushLogsUrl"`
	// Push URL for metrics (Grafana Mimir)
	PushMetricsUrl string `pulumi:"pushMetricsUrl"`
}

// GetCockpitPushUrlInput is an input type that accepts GetCockpitPushUrlArgs and GetCockpitPushUrlOutput values.
// You can construct a concrete instance of `GetCockpitPushUrlInput` via:
//
//	GetCockpitPushUrlArgs{...}
type GetCockpitPushUrlInput interface {
	pulumi.Input

	ToGetCockpitPushUrlOutput() GetCockpitPushUrlOutput
	ToGetCockpitPushUrlOutputWithContext(context.Context) GetCockpitPushUrlOutput
}

type GetCockpitPushUrlArgs struct {
	// Push URL for logs (Grafana Loki)
	PushLogsUrl pulumi.StringInput `pulumi:"pushLogsUrl"`
	// Push URL for metrics (Grafana Mimir)
	PushMetricsUrl pulumi.StringInput `pulumi:"pushMetricsUrl"`
}

func (GetCockpitPushUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockpitPushUrl)(nil)).Elem()
}

func (i GetCockpitPushUrlArgs) ToGetCockpitPushUrlOutput() GetCockpitPushUrlOutput {
	return i.ToGetCockpitPushUrlOutputWithContext(context.Background())
}

func (i GetCockpitPushUrlArgs) ToGetCockpitPushUrlOutputWithContext(ctx context.Context) GetCockpitPushUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCockpitPushUrlOutput)
}

// GetCockpitPushUrlArrayInput is an input type that accepts GetCockpitPushUrlArray and GetCockpitPushUrlArrayOutput values.
// You can construct a concrete instance of `GetCockpitPushUrlArrayInput` via:
//
//	GetCockpitPushUrlArray{ GetCockpitPushUrlArgs{...} }
type GetCockpitPushUrlArrayInput interface {
	pulumi.Input

	ToGetCockpitPushUrlArrayOutput() GetCockpitPushUrlArrayOutput
	ToGetCockpitPushUrlArrayOutputWithContext(context.Context) GetCockpitPushUrlArrayOutput
}

type GetCockpitPushUrlArray []GetCockpitPushUrlInput

func (GetCockpitPushUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCockpitPushUrl)(nil)).Elem()
}

func (i GetCockpitPushUrlArray) ToGetCockpitPushUrlArrayOutput() GetCockpitPushUrlArrayOutput {
	return i.ToGetCockpitPushUrlArrayOutputWithContext(context.Background())
}

func (i GetCockpitPushUrlArray) ToGetCockpitPushUrlArrayOutputWithContext(ctx context.Context) GetCockpitPushUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCockpitPushUrlArrayOutput)
}

type GetCockpitPushUrlOutput struct{ *pulumi.OutputState }

func (GetCockpitPushUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockpitPushUrl)(nil)).Elem()
}

func (o GetCockpitPushUrlOutput) ToGetCockpitPushUrlOutput() GetCockpitPushUrlOutput {
	return o
}

func (o GetCockpitPushUrlOutput) ToGetCockpitPushUrlOutputWithContext(ctx context.Context) GetCockpitPushUrlOutput {
	return o
}

// Push URL for logs (Grafana Loki)
func (o GetCockpitPushUrlOutput) PushLogsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitPushUrl) string { return v.PushLogsUrl }).(pulumi.StringOutput)
}

// Push URL for metrics (Grafana Mimir)
func (o GetCockpitPushUrlOutput) PushMetricsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockpitPushUrl) string { return v.PushMetricsUrl }).(pulumi.StringOutput)
}

type GetCockpitPushUrlArrayOutput struct{ *pulumi.OutputState }

func (GetCockpitPushUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCockpitPushUrl)(nil)).Elem()
}

func (o GetCockpitPushUrlArrayOutput) ToGetCockpitPushUrlArrayOutput() GetCockpitPushUrlArrayOutput {
	return o
}

func (o GetCockpitPushUrlArrayOutput) ToGetCockpitPushUrlArrayOutputWithContext(ctx context.Context) GetCockpitPushUrlArrayOutput {
	return o
}

func (o GetCockpitPushUrlArrayOutput) Index(i pulumi.IntInput) GetCockpitPushUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCockpitPushUrl {
		return vs[0].([]GetCockpitPushUrl)[vs[1].(int)]
	}).(GetCockpitPushUrlOutput)
}

type GetDatabaseAclAclRule struct {
	// A simple text describing this rule
	Description string `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip string `pulumi:"ip"`
}

// GetDatabaseAclAclRuleInput is an input type that accepts GetDatabaseAclAclRuleArgs and GetDatabaseAclAclRuleOutput values.
// You can construct a concrete instance of `GetDatabaseAclAclRuleInput` via:
//
//	GetDatabaseAclAclRuleArgs{...}
type GetDatabaseAclAclRuleInput interface {
	pulumi.Input

	ToGetDatabaseAclAclRuleOutput() GetDatabaseAclAclRuleOutput
	ToGetDatabaseAclAclRuleOutputWithContext(context.Context) GetDatabaseAclAclRuleOutput
}

type GetDatabaseAclAclRuleArgs struct {
	// A simple text describing this rule
	Description pulumi.StringInput `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetDatabaseAclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseAclAclRule)(nil)).Elem()
}

func (i GetDatabaseAclAclRuleArgs) ToGetDatabaseAclAclRuleOutput() GetDatabaseAclAclRuleOutput {
	return i.ToGetDatabaseAclAclRuleOutputWithContext(context.Background())
}

func (i GetDatabaseAclAclRuleArgs) ToGetDatabaseAclAclRuleOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseAclAclRuleOutput)
}

// GetDatabaseAclAclRuleArrayInput is an input type that accepts GetDatabaseAclAclRuleArray and GetDatabaseAclAclRuleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseAclAclRuleArrayInput` via:
//
//	GetDatabaseAclAclRuleArray{ GetDatabaseAclAclRuleArgs{...} }
type GetDatabaseAclAclRuleArrayInput interface {
	pulumi.Input

	ToGetDatabaseAclAclRuleArrayOutput() GetDatabaseAclAclRuleArrayOutput
	ToGetDatabaseAclAclRuleArrayOutputWithContext(context.Context) GetDatabaseAclAclRuleArrayOutput
}

type GetDatabaseAclAclRuleArray []GetDatabaseAclAclRuleInput

func (GetDatabaseAclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseAclAclRule)(nil)).Elem()
}

func (i GetDatabaseAclAclRuleArray) ToGetDatabaseAclAclRuleArrayOutput() GetDatabaseAclAclRuleArrayOutput {
	return i.ToGetDatabaseAclAclRuleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseAclAclRuleArray) ToGetDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseAclAclRuleArrayOutput)
}

type GetDatabaseAclAclRuleOutput struct{ *pulumi.OutputState }

func (GetDatabaseAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseAclAclRule)(nil)).Elem()
}

func (o GetDatabaseAclAclRuleOutput) ToGetDatabaseAclAclRuleOutput() GetDatabaseAclAclRuleOutput {
	return o
}

func (o GetDatabaseAclAclRuleOutput) ToGetDatabaseAclAclRuleOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleOutput {
	return o
}

// A simple text describing this rule
func (o GetDatabaseAclAclRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseAclAclRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
func (o GetDatabaseAclAclRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseAclAclRule) string { return v.Ip }).(pulumi.StringOutput)
}

type GetDatabaseAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseAclAclRule)(nil)).Elem()
}

func (o GetDatabaseAclAclRuleArrayOutput) ToGetDatabaseAclAclRuleArrayOutput() GetDatabaseAclAclRuleArrayOutput {
	return o
}

func (o GetDatabaseAclAclRuleArrayOutput) ToGetDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleArrayOutput {
	return o
}

func (o GetDatabaseAclAclRuleArrayOutput) Index(i pulumi.IntInput) GetDatabaseAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseAclAclRule {
		return vs[0].([]GetDatabaseAclAclRule)[vs[1].(int)]
	}).(GetDatabaseAclAclRuleOutput)
}

type GetDatabaseInstanceLoadBalancer struct {
	// The endpoint ID
	EndpointId string `pulumi:"endpointId"`
	// The hostname of your endpoint
	Hostname string `pulumi:"hostname"`
	// The IP of your load balancer service
	Ip string `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	// The port of your load balancer service
	Port int `pulumi:"port"`
}

// GetDatabaseInstanceLoadBalancerInput is an input type that accepts GetDatabaseInstanceLoadBalancerArgs and GetDatabaseInstanceLoadBalancerOutput values.
// You can construct a concrete instance of `GetDatabaseInstanceLoadBalancerInput` via:
//
//	GetDatabaseInstanceLoadBalancerArgs{...}
type GetDatabaseInstanceLoadBalancerInput interface {
	pulumi.Input

	ToGetDatabaseInstanceLoadBalancerOutput() GetDatabaseInstanceLoadBalancerOutput
	ToGetDatabaseInstanceLoadBalancerOutputWithContext(context.Context) GetDatabaseInstanceLoadBalancerOutput
}

type GetDatabaseInstanceLoadBalancerArgs struct {
	// The endpoint ID
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The hostname of your endpoint
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP of your load balancer service
	Ip pulumi.StringInput `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The port of your load balancer service
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetDatabaseInstanceLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (i GetDatabaseInstanceLoadBalancerArgs) ToGetDatabaseInstanceLoadBalancerOutput() GetDatabaseInstanceLoadBalancerOutput {
	return i.ToGetDatabaseInstanceLoadBalancerOutputWithContext(context.Background())
}

func (i GetDatabaseInstanceLoadBalancerArgs) ToGetDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstanceLoadBalancerOutput)
}

// GetDatabaseInstanceLoadBalancerArrayInput is an input type that accepts GetDatabaseInstanceLoadBalancerArray and GetDatabaseInstanceLoadBalancerArrayOutput values.
// You can construct a concrete instance of `GetDatabaseInstanceLoadBalancerArrayInput` via:
//
//	GetDatabaseInstanceLoadBalancerArray{ GetDatabaseInstanceLoadBalancerArgs{...} }
type GetDatabaseInstanceLoadBalancerArrayInput interface {
	pulumi.Input

	ToGetDatabaseInstanceLoadBalancerArrayOutput() GetDatabaseInstanceLoadBalancerArrayOutput
	ToGetDatabaseInstanceLoadBalancerArrayOutputWithContext(context.Context) GetDatabaseInstanceLoadBalancerArrayOutput
}

type GetDatabaseInstanceLoadBalancerArray []GetDatabaseInstanceLoadBalancerInput

func (GetDatabaseInstanceLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (i GetDatabaseInstanceLoadBalancerArray) ToGetDatabaseInstanceLoadBalancerArrayOutput() GetDatabaseInstanceLoadBalancerArrayOutput {
	return i.ToGetDatabaseInstanceLoadBalancerArrayOutputWithContext(context.Background())
}

func (i GetDatabaseInstanceLoadBalancerArray) ToGetDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstanceLoadBalancerArrayOutput)
}

type GetDatabaseInstanceLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o GetDatabaseInstanceLoadBalancerOutput) ToGetDatabaseInstanceLoadBalancerOutput() GetDatabaseInstanceLoadBalancerOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerOutput) ToGetDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerOutput {
	return o
}

// The endpoint ID
func (o GetDatabaseInstanceLoadBalancerOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The hostname of your endpoint
func (o GetDatabaseInstanceLoadBalancerOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP of your load balancer service
func (o GetDatabaseInstanceLoadBalancerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Ip }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstanceLoadBalancerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Name }).(pulumi.StringOutput)
}

// The port of your load balancer service
func (o GetDatabaseInstanceLoadBalancerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) int { return v.Port }).(pulumi.IntOutput)
}

type GetDatabaseInstanceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) ToGetDatabaseInstanceLoadBalancerArrayOutput() GetDatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) ToGetDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstanceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstanceLoadBalancer {
		return vs[0].([]GetDatabaseInstanceLoadBalancer)[vs[1].(int)]
	}).(GetDatabaseInstanceLoadBalancerOutput)
}

type GetDatabaseInstancePrivateNetwork struct {
	// Whether or not the private network endpoint should be configured with IPAM
	EnableIpam bool `pulumi:"enableIpam"`
	// The endpoint ID
	EndpointId string `pulumi:"endpointId"`
	// The hostname of your endpoint
	Hostname string `pulumi:"hostname"`
	// The IP of your Instance within the private service
	Ip string `pulumi:"ip"`
	// The IP with the given mask within the private subnet
	IpNet string `pulumi:"ipNet"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	// The private network ID
	PnId string `pulumi:"pnId"`
	// The port of your private service
	Port int `pulumi:"port"`
	// The zone you want to attach the resource to
	Zone string `pulumi:"zone"`
}

// GetDatabaseInstancePrivateNetworkInput is an input type that accepts GetDatabaseInstancePrivateNetworkArgs and GetDatabaseInstancePrivateNetworkOutput values.
// You can construct a concrete instance of `GetDatabaseInstancePrivateNetworkInput` via:
//
//	GetDatabaseInstancePrivateNetworkArgs{...}
type GetDatabaseInstancePrivateNetworkInput interface {
	pulumi.Input

	ToGetDatabaseInstancePrivateNetworkOutput() GetDatabaseInstancePrivateNetworkOutput
	ToGetDatabaseInstancePrivateNetworkOutputWithContext(context.Context) GetDatabaseInstancePrivateNetworkOutput
}

type GetDatabaseInstancePrivateNetworkArgs struct {
	// Whether or not the private network endpoint should be configured with IPAM
	EnableIpam pulumi.BoolInput `pulumi:"enableIpam"`
	// The endpoint ID
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The hostname of your endpoint
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The IP of your Instance within the private service
	Ip pulumi.StringInput `pulumi:"ip"`
	// The IP with the given mask within the private subnet
	IpNet pulumi.StringInput `pulumi:"ipNet"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The private network ID
	PnId pulumi.StringInput `pulumi:"pnId"`
	// The port of your private service
	Port pulumi.IntInput `pulumi:"port"`
	// The zone you want to attach the resource to
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetDatabaseInstancePrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i GetDatabaseInstancePrivateNetworkArgs) ToGetDatabaseInstancePrivateNetworkOutput() GetDatabaseInstancePrivateNetworkOutput {
	return i.ToGetDatabaseInstancePrivateNetworkOutputWithContext(context.Background())
}

func (i GetDatabaseInstancePrivateNetworkArgs) ToGetDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstancePrivateNetworkOutput)
}

// GetDatabaseInstancePrivateNetworkArrayInput is an input type that accepts GetDatabaseInstancePrivateNetworkArray and GetDatabaseInstancePrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetDatabaseInstancePrivateNetworkArrayInput` via:
//
//	GetDatabaseInstancePrivateNetworkArray{ GetDatabaseInstancePrivateNetworkArgs{...} }
type GetDatabaseInstancePrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetDatabaseInstancePrivateNetworkArrayOutput() GetDatabaseInstancePrivateNetworkArrayOutput
	ToGetDatabaseInstancePrivateNetworkArrayOutputWithContext(context.Context) GetDatabaseInstancePrivateNetworkArrayOutput
}

type GetDatabaseInstancePrivateNetworkArray []GetDatabaseInstancePrivateNetworkInput

func (GetDatabaseInstancePrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i GetDatabaseInstancePrivateNetworkArray) ToGetDatabaseInstancePrivateNetworkArrayOutput() GetDatabaseInstancePrivateNetworkArrayOutput {
	return i.ToGetDatabaseInstancePrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetDatabaseInstancePrivateNetworkArray) ToGetDatabaseInstancePrivateNetworkArrayOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstancePrivateNetworkArrayOutput)
}

type GetDatabaseInstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o GetDatabaseInstancePrivateNetworkOutput) ToGetDatabaseInstancePrivateNetworkOutput() GetDatabaseInstancePrivateNetworkOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkOutput) ToGetDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkOutput {
	return o
}

// Whether or not the private network endpoint should be configured with IPAM
func (o GetDatabaseInstancePrivateNetworkOutput) EnableIpam() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) bool { return v.EnableIpam }).(pulumi.BoolOutput)
}

// The endpoint ID
func (o GetDatabaseInstancePrivateNetworkOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The hostname of your endpoint
func (o GetDatabaseInstancePrivateNetworkOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Hostname }).(pulumi.StringOutput)
}

// The IP of your Instance within the private service
func (o GetDatabaseInstancePrivateNetworkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Ip }).(pulumi.StringOutput)
}

// The IP with the given mask within the private subnet
func (o GetDatabaseInstancePrivateNetworkOutput) IpNet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.IpNet }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstancePrivateNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The private network ID
func (o GetDatabaseInstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// The port of your private service
func (o GetDatabaseInstancePrivateNetworkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) int { return v.Port }).(pulumi.IntOutput)
}

// The zone you want to attach the resource to
func (o GetDatabaseInstancePrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetDatabaseInstancePrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstancePrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) ToGetDatabaseInstancePrivateNetworkArrayOutput() GetDatabaseInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) ToGetDatabaseInstancePrivateNetworkArrayOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstancePrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstancePrivateNetwork {
		return vs[0].([]GetDatabaseInstancePrivateNetwork)[vs[1].(int)]
	}).(GetDatabaseInstancePrivateNetworkOutput)
}

type GetDatabaseInstanceReadReplica struct {
	// IP of the replica
	Ip string `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	// Port of the replica
	Port int `pulumi:"port"`
}

// GetDatabaseInstanceReadReplicaInput is an input type that accepts GetDatabaseInstanceReadReplicaArgs and GetDatabaseInstanceReadReplicaOutput values.
// You can construct a concrete instance of `GetDatabaseInstanceReadReplicaInput` via:
//
//	GetDatabaseInstanceReadReplicaArgs{...}
type GetDatabaseInstanceReadReplicaInput interface {
	pulumi.Input

	ToGetDatabaseInstanceReadReplicaOutput() GetDatabaseInstanceReadReplicaOutput
	ToGetDatabaseInstanceReadReplicaOutputWithContext(context.Context) GetDatabaseInstanceReadReplicaOutput
}

type GetDatabaseInstanceReadReplicaArgs struct {
	// IP of the replica
	Ip pulumi.StringInput `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// Port of the replica
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetDatabaseInstanceReadReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (i GetDatabaseInstanceReadReplicaArgs) ToGetDatabaseInstanceReadReplicaOutput() GetDatabaseInstanceReadReplicaOutput {
	return i.ToGetDatabaseInstanceReadReplicaOutputWithContext(context.Background())
}

func (i GetDatabaseInstanceReadReplicaArgs) ToGetDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstanceReadReplicaOutput)
}

// GetDatabaseInstanceReadReplicaArrayInput is an input type that accepts GetDatabaseInstanceReadReplicaArray and GetDatabaseInstanceReadReplicaArrayOutput values.
// You can construct a concrete instance of `GetDatabaseInstanceReadReplicaArrayInput` via:
//
//	GetDatabaseInstanceReadReplicaArray{ GetDatabaseInstanceReadReplicaArgs{...} }
type GetDatabaseInstanceReadReplicaArrayInput interface {
	pulumi.Input

	ToGetDatabaseInstanceReadReplicaArrayOutput() GetDatabaseInstanceReadReplicaArrayOutput
	ToGetDatabaseInstanceReadReplicaArrayOutputWithContext(context.Context) GetDatabaseInstanceReadReplicaArrayOutput
}

type GetDatabaseInstanceReadReplicaArray []GetDatabaseInstanceReadReplicaInput

func (GetDatabaseInstanceReadReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (i GetDatabaseInstanceReadReplicaArray) ToGetDatabaseInstanceReadReplicaArrayOutput() GetDatabaseInstanceReadReplicaArrayOutput {
	return i.ToGetDatabaseInstanceReadReplicaArrayOutputWithContext(context.Background())
}

func (i GetDatabaseInstanceReadReplicaArray) ToGetDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseInstanceReadReplicaArrayOutput)
}

type GetDatabaseInstanceReadReplicaOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (o GetDatabaseInstanceReadReplicaOutput) ToGetDatabaseInstanceReadReplicaOutput() GetDatabaseInstanceReadReplicaOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaOutput) ToGetDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaOutput {
	return o
}

// IP of the replica
func (o GetDatabaseInstanceReadReplicaOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) string { return v.Ip }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstanceReadReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) string { return v.Name }).(pulumi.StringOutput)
}

// Port of the replica
func (o GetDatabaseInstanceReadReplicaOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) int { return v.Port }).(pulumi.IntOutput)
}

type GetDatabaseInstanceReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) ToGetDatabaseInstanceReadReplicaArrayOutput() GetDatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) ToGetDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstanceReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstanceReadReplica {
		return vs[0].([]GetDatabaseInstanceReadReplica)[vs[1].(int)]
	}).(GetDatabaseInstanceReadReplicaOutput)
}

type GetDomainRecordGeoIp struct {
	// The list of matches
	Matches []GetDomainRecordGeoIpMatch `pulumi:"matches"`
}

// GetDomainRecordGeoIpInput is an input type that accepts GetDomainRecordGeoIpArgs and GetDomainRecordGeoIpOutput values.
// You can construct a concrete instance of `GetDomainRecordGeoIpInput` via:
//
//	GetDomainRecordGeoIpArgs{...}
type GetDomainRecordGeoIpInput interface {
	pulumi.Input

	ToGetDomainRecordGeoIpOutput() GetDomainRecordGeoIpOutput
	ToGetDomainRecordGeoIpOutputWithContext(context.Context) GetDomainRecordGeoIpOutput
}

type GetDomainRecordGeoIpArgs struct {
	// The list of matches
	Matches GetDomainRecordGeoIpMatchArrayInput `pulumi:"matches"`
}

func (GetDomainRecordGeoIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIp)(nil)).Elem()
}

func (i GetDomainRecordGeoIpArgs) ToGetDomainRecordGeoIpOutput() GetDomainRecordGeoIpOutput {
	return i.ToGetDomainRecordGeoIpOutputWithContext(context.Background())
}

func (i GetDomainRecordGeoIpArgs) ToGetDomainRecordGeoIpOutputWithContext(ctx context.Context) GetDomainRecordGeoIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordGeoIpOutput)
}

// GetDomainRecordGeoIpArrayInput is an input type that accepts GetDomainRecordGeoIpArray and GetDomainRecordGeoIpArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordGeoIpArrayInput` via:
//
//	GetDomainRecordGeoIpArray{ GetDomainRecordGeoIpArgs{...} }
type GetDomainRecordGeoIpArrayInput interface {
	pulumi.Input

	ToGetDomainRecordGeoIpArrayOutput() GetDomainRecordGeoIpArrayOutput
	ToGetDomainRecordGeoIpArrayOutputWithContext(context.Context) GetDomainRecordGeoIpArrayOutput
}

type GetDomainRecordGeoIpArray []GetDomainRecordGeoIpInput

func (GetDomainRecordGeoIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIp)(nil)).Elem()
}

func (i GetDomainRecordGeoIpArray) ToGetDomainRecordGeoIpArrayOutput() GetDomainRecordGeoIpArrayOutput {
	return i.ToGetDomainRecordGeoIpArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordGeoIpArray) ToGetDomainRecordGeoIpArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordGeoIpArrayOutput)
}

type GetDomainRecordGeoIpOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIp)(nil)).Elem()
}

func (o GetDomainRecordGeoIpOutput) ToGetDomainRecordGeoIpOutput() GetDomainRecordGeoIpOutput {
	return o
}

func (o GetDomainRecordGeoIpOutput) ToGetDomainRecordGeoIpOutputWithContext(ctx context.Context) GetDomainRecordGeoIpOutput {
	return o
}

// The list of matches
func (o GetDomainRecordGeoIpOutput) Matches() GetDomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIp) []GetDomainRecordGeoIpMatch { return v.Matches }).(GetDomainRecordGeoIpMatchArrayOutput)
}

type GetDomainRecordGeoIpArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIp)(nil)).Elem()
}

func (o GetDomainRecordGeoIpArrayOutput) ToGetDomainRecordGeoIpArrayOutput() GetDomainRecordGeoIpArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpArrayOutput) ToGetDomainRecordGeoIpArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpArrayOutput) Index(i pulumi.IntInput) GetDomainRecordGeoIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordGeoIp {
		return vs[0].([]GetDomainRecordGeoIp)[vs[1].(int)]
	}).(GetDomainRecordGeoIpOutput)
}

type GetDomainRecordGeoIpMatch struct {
	// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
	Continents []string `pulumi:"continents"`
	// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
	Countries []string `pulumi:"countries"`
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data string `pulumi:"data"`
}

// GetDomainRecordGeoIpMatchInput is an input type that accepts GetDomainRecordGeoIpMatchArgs and GetDomainRecordGeoIpMatchOutput values.
// You can construct a concrete instance of `GetDomainRecordGeoIpMatchInput` via:
//
//	GetDomainRecordGeoIpMatchArgs{...}
type GetDomainRecordGeoIpMatchInput interface {
	pulumi.Input

	ToGetDomainRecordGeoIpMatchOutput() GetDomainRecordGeoIpMatchOutput
	ToGetDomainRecordGeoIpMatchOutputWithContext(context.Context) GetDomainRecordGeoIpMatchOutput
}

type GetDomainRecordGeoIpMatchArgs struct {
	// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
	Continents pulumi.StringArrayInput `pulumi:"continents"`
	// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data pulumi.StringInput `pulumi:"data"`
}

func (GetDomainRecordGeoIpMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (i GetDomainRecordGeoIpMatchArgs) ToGetDomainRecordGeoIpMatchOutput() GetDomainRecordGeoIpMatchOutput {
	return i.ToGetDomainRecordGeoIpMatchOutputWithContext(context.Background())
}

func (i GetDomainRecordGeoIpMatchArgs) ToGetDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordGeoIpMatchOutput)
}

// GetDomainRecordGeoIpMatchArrayInput is an input type that accepts GetDomainRecordGeoIpMatchArray and GetDomainRecordGeoIpMatchArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordGeoIpMatchArrayInput` via:
//
//	GetDomainRecordGeoIpMatchArray{ GetDomainRecordGeoIpMatchArgs{...} }
type GetDomainRecordGeoIpMatchArrayInput interface {
	pulumi.Input

	ToGetDomainRecordGeoIpMatchArrayOutput() GetDomainRecordGeoIpMatchArrayOutput
	ToGetDomainRecordGeoIpMatchArrayOutputWithContext(context.Context) GetDomainRecordGeoIpMatchArrayOutput
}

type GetDomainRecordGeoIpMatchArray []GetDomainRecordGeoIpMatchInput

func (GetDomainRecordGeoIpMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (i GetDomainRecordGeoIpMatchArray) ToGetDomainRecordGeoIpMatchArrayOutput() GetDomainRecordGeoIpMatchArrayOutput {
	return i.ToGetDomainRecordGeoIpMatchArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordGeoIpMatchArray) ToGetDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordGeoIpMatchArrayOutput)
}

type GetDomainRecordGeoIpMatchOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (o GetDomainRecordGeoIpMatchOutput) ToGetDomainRecordGeoIpMatchOutput() GetDomainRecordGeoIpMatchOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchOutput) ToGetDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchOutput {
	return o
}

// List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
func (o GetDomainRecordGeoIpMatchOutput) Continents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) []string { return v.Continents }).(pulumi.StringArrayOutput)
}

// List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
func (o GetDomainRecordGeoIpMatchOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
// Cannot be used with `recordId`.
func (o GetDomainRecordGeoIpMatchOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) string { return v.Data }).(pulumi.StringOutput)
}

type GetDomainRecordGeoIpMatchArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (o GetDomainRecordGeoIpMatchArrayOutput) ToGetDomainRecordGeoIpMatchArrayOutput() GetDomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchArrayOutput) ToGetDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchArrayOutput) Index(i pulumi.IntInput) GetDomainRecordGeoIpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordGeoIpMatch {
		return vs[0].([]GetDomainRecordGeoIpMatch)[vs[1].(int)]
	}).(GetDomainRecordGeoIpMatchOutput)
}

type GetDomainRecordHttpService struct {
	// IPs to check
	Ips []string `pulumi:"ips"`
	// Text to search
	MustContain string `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list
	Strategy string `pulumi:"strategy"`
	// URL to match the mustContain text to validate an IP
	Url string `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent string `pulumi:"userAgent"`
}

// GetDomainRecordHttpServiceInput is an input type that accepts GetDomainRecordHttpServiceArgs and GetDomainRecordHttpServiceOutput values.
// You can construct a concrete instance of `GetDomainRecordHttpServiceInput` via:
//
//	GetDomainRecordHttpServiceArgs{...}
type GetDomainRecordHttpServiceInput interface {
	pulumi.Input

	ToGetDomainRecordHttpServiceOutput() GetDomainRecordHttpServiceOutput
	ToGetDomainRecordHttpServiceOutputWithContext(context.Context) GetDomainRecordHttpServiceOutput
}

type GetDomainRecordHttpServiceArgs struct {
	// IPs to check
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Text to search
	MustContain pulumi.StringInput `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// URL to match the mustContain text to validate an IP
	Url pulumi.StringInput `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent pulumi.StringInput `pulumi:"userAgent"`
}

func (GetDomainRecordHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordHttpService)(nil)).Elem()
}

func (i GetDomainRecordHttpServiceArgs) ToGetDomainRecordHttpServiceOutput() GetDomainRecordHttpServiceOutput {
	return i.ToGetDomainRecordHttpServiceOutputWithContext(context.Background())
}

func (i GetDomainRecordHttpServiceArgs) ToGetDomainRecordHttpServiceOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordHttpServiceOutput)
}

// GetDomainRecordHttpServiceArrayInput is an input type that accepts GetDomainRecordHttpServiceArray and GetDomainRecordHttpServiceArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordHttpServiceArrayInput` via:
//
//	GetDomainRecordHttpServiceArray{ GetDomainRecordHttpServiceArgs{...} }
type GetDomainRecordHttpServiceArrayInput interface {
	pulumi.Input

	ToGetDomainRecordHttpServiceArrayOutput() GetDomainRecordHttpServiceArrayOutput
	ToGetDomainRecordHttpServiceArrayOutputWithContext(context.Context) GetDomainRecordHttpServiceArrayOutput
}

type GetDomainRecordHttpServiceArray []GetDomainRecordHttpServiceInput

func (GetDomainRecordHttpServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordHttpService)(nil)).Elem()
}

func (i GetDomainRecordHttpServiceArray) ToGetDomainRecordHttpServiceArrayOutput() GetDomainRecordHttpServiceArrayOutput {
	return i.ToGetDomainRecordHttpServiceArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordHttpServiceArray) ToGetDomainRecordHttpServiceArrayOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordHttpServiceArrayOutput)
}

type GetDomainRecordHttpServiceOutput struct{ *pulumi.OutputState }

func (GetDomainRecordHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordHttpService)(nil)).Elem()
}

func (o GetDomainRecordHttpServiceOutput) ToGetDomainRecordHttpServiceOutput() GetDomainRecordHttpServiceOutput {
	return o
}

func (o GetDomainRecordHttpServiceOutput) ToGetDomainRecordHttpServiceOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceOutput {
	return o
}

// IPs to check
func (o GetDomainRecordHttpServiceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Text to search
func (o GetDomainRecordHttpServiceOutput) MustContain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.MustContain }).(pulumi.StringOutput)
}

// Strategy to return an IP from the IPs list
func (o GetDomainRecordHttpServiceOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.Strategy }).(pulumi.StringOutput)
}

// URL to match the mustContain text to validate an IP
func (o GetDomainRecordHttpServiceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.Url }).(pulumi.StringOutput)
}

// User-agent used when checking the URL
func (o GetDomainRecordHttpServiceOutput) UserAgent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.UserAgent }).(pulumi.StringOutput)
}

type GetDomainRecordHttpServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordHttpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordHttpService)(nil)).Elem()
}

func (o GetDomainRecordHttpServiceArrayOutput) ToGetDomainRecordHttpServiceArrayOutput() GetDomainRecordHttpServiceArrayOutput {
	return o
}

func (o GetDomainRecordHttpServiceArrayOutput) ToGetDomainRecordHttpServiceArrayOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceArrayOutput {
	return o
}

func (o GetDomainRecordHttpServiceArrayOutput) Index(i pulumi.IntInput) GetDomainRecordHttpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordHttpService {
		return vs[0].([]GetDomainRecordHttpService)[vs[1].(int)]
	}).(GetDomainRecordHttpServiceOutput)
}

type GetDomainRecordView struct {
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data string `pulumi:"data"`
	// The subnet of the view
	Subnet string `pulumi:"subnet"`
}

// GetDomainRecordViewInput is an input type that accepts GetDomainRecordViewArgs and GetDomainRecordViewOutput values.
// You can construct a concrete instance of `GetDomainRecordViewInput` via:
//
//	GetDomainRecordViewArgs{...}
type GetDomainRecordViewInput interface {
	pulumi.Input

	ToGetDomainRecordViewOutput() GetDomainRecordViewOutput
	ToGetDomainRecordViewOutputWithContext(context.Context) GetDomainRecordViewOutput
}

type GetDomainRecordViewArgs struct {
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data pulumi.StringInput `pulumi:"data"`
	// The subnet of the view
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (GetDomainRecordViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordView)(nil)).Elem()
}

func (i GetDomainRecordViewArgs) ToGetDomainRecordViewOutput() GetDomainRecordViewOutput {
	return i.ToGetDomainRecordViewOutputWithContext(context.Background())
}

func (i GetDomainRecordViewArgs) ToGetDomainRecordViewOutputWithContext(ctx context.Context) GetDomainRecordViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordViewOutput)
}

// GetDomainRecordViewArrayInput is an input type that accepts GetDomainRecordViewArray and GetDomainRecordViewArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordViewArrayInput` via:
//
//	GetDomainRecordViewArray{ GetDomainRecordViewArgs{...} }
type GetDomainRecordViewArrayInput interface {
	pulumi.Input

	ToGetDomainRecordViewArrayOutput() GetDomainRecordViewArrayOutput
	ToGetDomainRecordViewArrayOutputWithContext(context.Context) GetDomainRecordViewArrayOutput
}

type GetDomainRecordViewArray []GetDomainRecordViewInput

func (GetDomainRecordViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordView)(nil)).Elem()
}

func (i GetDomainRecordViewArray) ToGetDomainRecordViewArrayOutput() GetDomainRecordViewArrayOutput {
	return i.ToGetDomainRecordViewArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordViewArray) ToGetDomainRecordViewArrayOutputWithContext(ctx context.Context) GetDomainRecordViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordViewArrayOutput)
}

type GetDomainRecordViewOutput struct{ *pulumi.OutputState }

func (GetDomainRecordViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordView)(nil)).Elem()
}

func (o GetDomainRecordViewOutput) ToGetDomainRecordViewOutput() GetDomainRecordViewOutput {
	return o
}

func (o GetDomainRecordViewOutput) ToGetDomainRecordViewOutputWithContext(ctx context.Context) GetDomainRecordViewOutput {
	return o
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
// Cannot be used with `recordId`.
func (o GetDomainRecordViewOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordView) string { return v.Data }).(pulumi.StringOutput)
}

// The subnet of the view
func (o GetDomainRecordViewOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordView) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetDomainRecordViewArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordView)(nil)).Elem()
}

func (o GetDomainRecordViewArrayOutput) ToGetDomainRecordViewArrayOutput() GetDomainRecordViewArrayOutput {
	return o
}

func (o GetDomainRecordViewArrayOutput) ToGetDomainRecordViewArrayOutputWithContext(ctx context.Context) GetDomainRecordViewArrayOutput {
	return o
}

func (o GetDomainRecordViewArrayOutput) Index(i pulumi.IntInput) GetDomainRecordViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordView {
		return vs[0].([]GetDomainRecordView)[vs[1].(int)]
	}).(GetDomainRecordViewOutput)
}

type GetDomainRecordWeighted struct {
	// The weighted IP
	Ip string `pulumi:"ip"`
	// The weight of the IP
	Weight int `pulumi:"weight"`
}

// GetDomainRecordWeightedInput is an input type that accepts GetDomainRecordWeightedArgs and GetDomainRecordWeightedOutput values.
// You can construct a concrete instance of `GetDomainRecordWeightedInput` via:
//
//	GetDomainRecordWeightedArgs{...}
type GetDomainRecordWeightedInput interface {
	pulumi.Input

	ToGetDomainRecordWeightedOutput() GetDomainRecordWeightedOutput
	ToGetDomainRecordWeightedOutputWithContext(context.Context) GetDomainRecordWeightedOutput
}

type GetDomainRecordWeightedArgs struct {
	// The weighted IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// The weight of the IP
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetDomainRecordWeightedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordWeighted)(nil)).Elem()
}

func (i GetDomainRecordWeightedArgs) ToGetDomainRecordWeightedOutput() GetDomainRecordWeightedOutput {
	return i.ToGetDomainRecordWeightedOutputWithContext(context.Background())
}

func (i GetDomainRecordWeightedArgs) ToGetDomainRecordWeightedOutputWithContext(ctx context.Context) GetDomainRecordWeightedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordWeightedOutput)
}

// GetDomainRecordWeightedArrayInput is an input type that accepts GetDomainRecordWeightedArray and GetDomainRecordWeightedArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordWeightedArrayInput` via:
//
//	GetDomainRecordWeightedArray{ GetDomainRecordWeightedArgs{...} }
type GetDomainRecordWeightedArrayInput interface {
	pulumi.Input

	ToGetDomainRecordWeightedArrayOutput() GetDomainRecordWeightedArrayOutput
	ToGetDomainRecordWeightedArrayOutputWithContext(context.Context) GetDomainRecordWeightedArrayOutput
}

type GetDomainRecordWeightedArray []GetDomainRecordWeightedInput

func (GetDomainRecordWeightedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordWeighted)(nil)).Elem()
}

func (i GetDomainRecordWeightedArray) ToGetDomainRecordWeightedArrayOutput() GetDomainRecordWeightedArrayOutput {
	return i.ToGetDomainRecordWeightedArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordWeightedArray) ToGetDomainRecordWeightedArrayOutputWithContext(ctx context.Context) GetDomainRecordWeightedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordWeightedArrayOutput)
}

type GetDomainRecordWeightedOutput struct{ *pulumi.OutputState }

func (GetDomainRecordWeightedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordWeighted)(nil)).Elem()
}

func (o GetDomainRecordWeightedOutput) ToGetDomainRecordWeightedOutput() GetDomainRecordWeightedOutput {
	return o
}

func (o GetDomainRecordWeightedOutput) ToGetDomainRecordWeightedOutputWithContext(ctx context.Context) GetDomainRecordWeightedOutput {
	return o
}

// The weighted IP
func (o GetDomainRecordWeightedOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordWeighted) string { return v.Ip }).(pulumi.StringOutput)
}

// The weight of the IP
func (o GetDomainRecordWeightedOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainRecordWeighted) int { return v.Weight }).(pulumi.IntOutput)
}

type GetDomainRecordWeightedArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordWeightedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordWeighted)(nil)).Elem()
}

func (o GetDomainRecordWeightedArrayOutput) ToGetDomainRecordWeightedArrayOutput() GetDomainRecordWeightedArrayOutput {
	return o
}

func (o GetDomainRecordWeightedArrayOutput) ToGetDomainRecordWeightedArrayOutputWithContext(ctx context.Context) GetDomainRecordWeightedArrayOutput {
	return o
}

func (o GetDomainRecordWeightedArrayOutput) Index(i pulumi.IntInput) GetDomainRecordWeightedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordWeighted {
		return vs[0].([]GetDomainRecordWeighted)[vs[1].(int)]
	}).(GetDomainRecordWeightedOutput)
}

type GetFlexibleIpsIp struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The description of the flexible IP.
	Description string `pulumi:"description"`
	// The MAC address ID.
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	// The MAC address of the Virtual MAC.
	MacAddresses []GetFlexibleIpsIpMacAddress `pulumi:"macAddresses"`
	// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
	OrganizationId string `pulumi:"organizationId"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId string `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	// The status of virtual MAC.
	Status string `pulumi:"status"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone string `pulumi:"zone"`
}

// GetFlexibleIpsIpInput is an input type that accepts GetFlexibleIpsIpArgs and GetFlexibleIpsIpOutput values.
// You can construct a concrete instance of `GetFlexibleIpsIpInput` via:
//
//	GetFlexibleIpsIpArgs{...}
type GetFlexibleIpsIpInput interface {
	pulumi.Input

	ToGetFlexibleIpsIpOutput() GetFlexibleIpsIpOutput
	ToGetFlexibleIpsIpOutputWithContext(context.Context) GetFlexibleIpsIpOutput
}

type GetFlexibleIpsIpArgs struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the flexible IP.
	Description pulumi.StringInput `pulumi:"description"`
	// The MAC address ID.
	Id        pulumi.StringInput `pulumi:"id"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The MAC address of the Virtual MAC.
	MacAddresses GetFlexibleIpsIpMacAddressArrayInput `pulumi:"macAddresses"`
	// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// (Defaults to provider `projectId`) The ID of the project the IP is in.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// The status of virtual MAC.
	Status pulumi.StringInput `pulumi:"status"`
	// List of tags used as filter. IPs with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetFlexibleIpsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIpsIp)(nil)).Elem()
}

func (i GetFlexibleIpsIpArgs) ToGetFlexibleIpsIpOutput() GetFlexibleIpsIpOutput {
	return i.ToGetFlexibleIpsIpOutputWithContext(context.Background())
}

func (i GetFlexibleIpsIpArgs) ToGetFlexibleIpsIpOutputWithContext(ctx context.Context) GetFlexibleIpsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIpsIpOutput)
}

// GetFlexibleIpsIpArrayInput is an input type that accepts GetFlexibleIpsIpArray and GetFlexibleIpsIpArrayOutput values.
// You can construct a concrete instance of `GetFlexibleIpsIpArrayInput` via:
//
//	GetFlexibleIpsIpArray{ GetFlexibleIpsIpArgs{...} }
type GetFlexibleIpsIpArrayInput interface {
	pulumi.Input

	ToGetFlexibleIpsIpArrayOutput() GetFlexibleIpsIpArrayOutput
	ToGetFlexibleIpsIpArrayOutputWithContext(context.Context) GetFlexibleIpsIpArrayOutput
}

type GetFlexibleIpsIpArray []GetFlexibleIpsIpInput

func (GetFlexibleIpsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIpsIp)(nil)).Elem()
}

func (i GetFlexibleIpsIpArray) ToGetFlexibleIpsIpArrayOutput() GetFlexibleIpsIpArrayOutput {
	return i.ToGetFlexibleIpsIpArrayOutputWithContext(context.Background())
}

func (i GetFlexibleIpsIpArray) ToGetFlexibleIpsIpArrayOutputWithContext(ctx context.Context) GetFlexibleIpsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIpsIpArrayOutput)
}

type GetFlexibleIpsIpOutput struct{ *pulumi.OutputState }

func (GetFlexibleIpsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIpsIp)(nil)).Elem()
}

func (o GetFlexibleIpsIpOutput) ToGetFlexibleIpsIpOutput() GetFlexibleIpsIpOutput {
	return o
}

func (o GetFlexibleIpsIpOutput) ToGetFlexibleIpsIpOutputWithContext(ctx context.Context) GetFlexibleIpsIpOutput {
	return o
}

// The date on which the flexible IP was created (RFC 3339 format).
func (o GetFlexibleIpsIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the flexible IP.
func (o GetFlexibleIpsIpOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.Description }).(pulumi.StringOutput)
}

// The MAC address ID.
func (o GetFlexibleIpsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlexibleIpsIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The MAC address of the Virtual MAC.
func (o GetFlexibleIpsIpOutput) MacAddresses() GetFlexibleIpsIpMacAddressArrayOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) []GetFlexibleIpsIpMacAddress { return v.MacAddresses }).(GetFlexibleIpsIpMacAddressArrayOutput)
}

// (Defaults to provider `organizationId`) The ID of the organization the IP is in.
func (o GetFlexibleIpsIpOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// (Defaults to provider `projectId`) The ID of the project the IP is in.
func (o GetFlexibleIpsIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o GetFlexibleIpsIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// The status of virtual MAC.
func (o GetFlexibleIpsIpOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.Status }).(pulumi.StringOutput)
}

// List of tags used as filter. IPs with these exact tags are listed.
func (o GetFlexibleIpsIpOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date on which the flexible IP was last updated (RFC 3339 format).
func (o GetFlexibleIpsIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which IPs exist.
func (o GetFlexibleIpsIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetFlexibleIpsIpArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleIpsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIpsIp)(nil)).Elem()
}

func (o GetFlexibleIpsIpArrayOutput) ToGetFlexibleIpsIpArrayOutput() GetFlexibleIpsIpArrayOutput {
	return o
}

func (o GetFlexibleIpsIpArrayOutput) ToGetFlexibleIpsIpArrayOutputWithContext(ctx context.Context) GetFlexibleIpsIpArrayOutput {
	return o
}

func (o GetFlexibleIpsIpArrayOutput) Index(i pulumi.IntInput) GetFlexibleIpsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleIpsIp {
		return vs[0].([]GetFlexibleIpsIp)[vs[1].(int)]
	}).(GetFlexibleIpsIpOutput)
}

type GetFlexibleIpsIpMacAddress struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The MAC address ID.
	Id string `pulumi:"id"`
	// The MAC address of the Virtual MAC.
	MacAddress string `pulumi:"macAddress"`
	// The type of virtual MAC.
	MacType string `pulumi:"macType"`
	// The status of virtual MAC.
	Status string `pulumi:"status"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone string `pulumi:"zone"`
}

// GetFlexibleIpsIpMacAddressInput is an input type that accepts GetFlexibleIpsIpMacAddressArgs and GetFlexibleIpsIpMacAddressOutput values.
// You can construct a concrete instance of `GetFlexibleIpsIpMacAddressInput` via:
//
//	GetFlexibleIpsIpMacAddressArgs{...}
type GetFlexibleIpsIpMacAddressInput interface {
	pulumi.Input

	ToGetFlexibleIpsIpMacAddressOutput() GetFlexibleIpsIpMacAddressOutput
	ToGetFlexibleIpsIpMacAddressOutputWithContext(context.Context) GetFlexibleIpsIpMacAddressOutput
}

type GetFlexibleIpsIpMacAddressArgs struct {
	// The date on which the flexible IP was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The MAC address ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The MAC address of the Virtual MAC.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The type of virtual MAC.
	MacType pulumi.StringInput `pulumi:"macType"`
	// The status of virtual MAC.
	Status pulumi.StringInput `pulumi:"status"`
	// The date on which the flexible IP was last updated (RFC 3339 format).
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which IPs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetFlexibleIpsIpMacAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIpsIpMacAddress)(nil)).Elem()
}

func (i GetFlexibleIpsIpMacAddressArgs) ToGetFlexibleIpsIpMacAddressOutput() GetFlexibleIpsIpMacAddressOutput {
	return i.ToGetFlexibleIpsIpMacAddressOutputWithContext(context.Background())
}

func (i GetFlexibleIpsIpMacAddressArgs) ToGetFlexibleIpsIpMacAddressOutputWithContext(ctx context.Context) GetFlexibleIpsIpMacAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIpsIpMacAddressOutput)
}

// GetFlexibleIpsIpMacAddressArrayInput is an input type that accepts GetFlexibleIpsIpMacAddressArray and GetFlexibleIpsIpMacAddressArrayOutput values.
// You can construct a concrete instance of `GetFlexibleIpsIpMacAddressArrayInput` via:
//
//	GetFlexibleIpsIpMacAddressArray{ GetFlexibleIpsIpMacAddressArgs{...} }
type GetFlexibleIpsIpMacAddressArrayInput interface {
	pulumi.Input

	ToGetFlexibleIpsIpMacAddressArrayOutput() GetFlexibleIpsIpMacAddressArrayOutput
	ToGetFlexibleIpsIpMacAddressArrayOutputWithContext(context.Context) GetFlexibleIpsIpMacAddressArrayOutput
}

type GetFlexibleIpsIpMacAddressArray []GetFlexibleIpsIpMacAddressInput

func (GetFlexibleIpsIpMacAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIpsIpMacAddress)(nil)).Elem()
}

func (i GetFlexibleIpsIpMacAddressArray) ToGetFlexibleIpsIpMacAddressArrayOutput() GetFlexibleIpsIpMacAddressArrayOutput {
	return i.ToGetFlexibleIpsIpMacAddressArrayOutputWithContext(context.Background())
}

func (i GetFlexibleIpsIpMacAddressArray) ToGetFlexibleIpsIpMacAddressArrayOutputWithContext(ctx context.Context) GetFlexibleIpsIpMacAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleIpsIpMacAddressArrayOutput)
}

type GetFlexibleIpsIpMacAddressOutput struct{ *pulumi.OutputState }

func (GetFlexibleIpsIpMacAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleIpsIpMacAddress)(nil)).Elem()
}

func (o GetFlexibleIpsIpMacAddressOutput) ToGetFlexibleIpsIpMacAddressOutput() GetFlexibleIpsIpMacAddressOutput {
	return o
}

func (o GetFlexibleIpsIpMacAddressOutput) ToGetFlexibleIpsIpMacAddressOutputWithContext(ctx context.Context) GetFlexibleIpsIpMacAddressOutput {
	return o
}

// The date on which the flexible IP was created (RFC 3339 format).
func (o GetFlexibleIpsIpMacAddressOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The MAC address ID.
func (o GetFlexibleIpsIpMacAddressOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.Id }).(pulumi.StringOutput)
}

// The MAC address of the Virtual MAC.
func (o GetFlexibleIpsIpMacAddressOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The type of virtual MAC.
func (o GetFlexibleIpsIpMacAddressOutput) MacType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.MacType }).(pulumi.StringOutput)
}

// The status of virtual MAC.
func (o GetFlexibleIpsIpMacAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.Status }).(pulumi.StringOutput)
}

// The date on which the flexible IP was last updated (RFC 3339 format).
func (o GetFlexibleIpsIpMacAddressOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which IPs exist.
func (o GetFlexibleIpsIpMacAddressOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleIpsIpMacAddress) string { return v.Zone }).(pulumi.StringOutput)
}

type GetFlexibleIpsIpMacAddressArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleIpsIpMacAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleIpsIpMacAddress)(nil)).Elem()
}

func (o GetFlexibleIpsIpMacAddressArrayOutput) ToGetFlexibleIpsIpMacAddressArrayOutput() GetFlexibleIpsIpMacAddressArrayOutput {
	return o
}

func (o GetFlexibleIpsIpMacAddressArrayOutput) ToGetFlexibleIpsIpMacAddressArrayOutputWithContext(ctx context.Context) GetFlexibleIpsIpMacAddressArrayOutput {
	return o
}

func (o GetFlexibleIpsIpMacAddressArrayOutput) Index(i pulumi.IntInput) GetFlexibleIpsIpMacAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleIpsIpMacAddress {
		return vs[0].([]GetFlexibleIpsIpMacAddress)[vs[1].(int)]
	}).(GetFlexibleIpsIpMacAddressOutput)
}

type GetInstanceSecurityGroupInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to.
	Ip string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule apply to.
	IpRange string `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol string `pulumi:"protocol"`
}

// GetInstanceSecurityGroupInboundRuleInput is an input type that accepts GetInstanceSecurityGroupInboundRuleArgs and GetInstanceSecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `GetInstanceSecurityGroupInboundRuleInput` via:
//
//	GetInstanceSecurityGroupInboundRuleArgs{...}
type GetInstanceSecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToGetInstanceSecurityGroupInboundRuleOutput() GetInstanceSecurityGroupInboundRuleOutput
	ToGetInstanceSecurityGroupInboundRuleOutputWithContext(context.Context) GetInstanceSecurityGroupInboundRuleOutput
}

type GetInstanceSecurityGroupInboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule apply to.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port pulumi.IntInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetInstanceSecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetInstanceSecurityGroupInboundRuleArgs) ToGetInstanceSecurityGroupInboundRuleOutput() GetInstanceSecurityGroupInboundRuleOutput {
	return i.ToGetInstanceSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i GetInstanceSecurityGroupInboundRuleArgs) ToGetInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSecurityGroupInboundRuleOutput)
}

// GetInstanceSecurityGroupInboundRuleArrayInput is an input type that accepts GetInstanceSecurityGroupInboundRuleArray and GetInstanceSecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `GetInstanceSecurityGroupInboundRuleArrayInput` via:
//
//	GetInstanceSecurityGroupInboundRuleArray{ GetInstanceSecurityGroupInboundRuleArgs{...} }
type GetInstanceSecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToGetInstanceSecurityGroupInboundRuleArrayOutput() GetInstanceSecurityGroupInboundRuleArrayOutput
	ToGetInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Context) GetInstanceSecurityGroupInboundRuleArrayOutput
}

type GetInstanceSecurityGroupInboundRuleArray []GetInstanceSecurityGroupInboundRuleInput

func (GetInstanceSecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i GetInstanceSecurityGroupInboundRuleArray) ToGetInstanceSecurityGroupInboundRuleArrayOutput() GetInstanceSecurityGroupInboundRuleArrayOutput {
	return i.ToGetInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i GetInstanceSecurityGroupInboundRuleArray) ToGetInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSecurityGroupInboundRuleArrayOutput)
}

type GetInstanceSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupInboundRuleOutput) ToGetInstanceSecurityGroupInboundRuleOutput() GetInstanceSecurityGroupInboundRuleOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleOutput) ToGetInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o GetInstanceSecurityGroupInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to.
func (o GetInstanceSecurityGroupInboundRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Ip }).(pulumi.StringOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule apply to.
func (o GetInstanceSecurityGroupInboundRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.IpRange }).(pulumi.StringOutput)
}

// The port this rule apply to. If no port is specified, rule will apply to all port.
func (o GetInstanceSecurityGroupInboundRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) int { return v.Port }).(pulumi.IntOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o GetInstanceSecurityGroupInboundRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.PortRange }).(pulumi.StringOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o GetInstanceSecurityGroupInboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetInstanceSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) ToGetInstanceSecurityGroupInboundRuleArrayOutput() GetInstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) ToGetInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) GetInstanceSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSecurityGroupInboundRule {
		return vs[0].([]GetInstanceSecurityGroupInboundRule)[vs[1].(int)]
	}).(GetInstanceSecurityGroupInboundRuleOutput)
}

type GetInstanceSecurityGroupOutboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to.
	Ip string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule apply to.
	IpRange string `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port int `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol string `pulumi:"protocol"`
}

// GetInstanceSecurityGroupOutboundRuleInput is an input type that accepts GetInstanceSecurityGroupOutboundRuleArgs and GetInstanceSecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `GetInstanceSecurityGroupOutboundRuleInput` via:
//
//	GetInstanceSecurityGroupOutboundRuleArgs{...}
type GetInstanceSecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToGetInstanceSecurityGroupOutboundRuleOutput() GetInstanceSecurityGroupOutboundRuleOutput
	ToGetInstanceSecurityGroupOutboundRuleOutputWithContext(context.Context) GetInstanceSecurityGroupOutboundRuleOutput
}

type GetInstanceSecurityGroupOutboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule apply to.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port pulumi.IntInput `pulumi:"port"`
	// Computed port range for this rule (e.g: 1-1024, 22-22)
	PortRange pulumi.StringInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetInstanceSecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetInstanceSecurityGroupOutboundRuleArgs) ToGetInstanceSecurityGroupOutboundRuleOutput() GetInstanceSecurityGroupOutboundRuleOutput {
	return i.ToGetInstanceSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i GetInstanceSecurityGroupOutboundRuleArgs) ToGetInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSecurityGroupOutboundRuleOutput)
}

// GetInstanceSecurityGroupOutboundRuleArrayInput is an input type that accepts GetInstanceSecurityGroupOutboundRuleArray and GetInstanceSecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `GetInstanceSecurityGroupOutboundRuleArrayInput` via:
//
//	GetInstanceSecurityGroupOutboundRuleArray{ GetInstanceSecurityGroupOutboundRuleArgs{...} }
type GetInstanceSecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToGetInstanceSecurityGroupOutboundRuleArrayOutput() GetInstanceSecurityGroupOutboundRuleArrayOutput
	ToGetInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) GetInstanceSecurityGroupOutboundRuleArrayOutput
}

type GetInstanceSecurityGroupOutboundRuleArray []GetInstanceSecurityGroupOutboundRuleInput

func (GetInstanceSecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i GetInstanceSecurityGroupOutboundRuleArray) ToGetInstanceSecurityGroupOutboundRuleArrayOutput() GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return i.ToGetInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i GetInstanceSecurityGroupOutboundRuleArray) ToGetInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSecurityGroupOutboundRuleArrayOutput)
}

type GetInstanceSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) ToGetInstanceSecurityGroupOutboundRuleOutput() GetInstanceSecurityGroupOutboundRuleOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) ToGetInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o GetInstanceSecurityGroupOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to.
func (o GetInstanceSecurityGroupOutboundRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Ip }).(pulumi.StringOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule apply to.
func (o GetInstanceSecurityGroupOutboundRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.IpRange }).(pulumi.StringOutput)
}

// The port this rule apply to. If no port is specified, rule will apply to all port.
func (o GetInstanceSecurityGroupOutboundRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) int { return v.Port }).(pulumi.IntOutput)
}

// Computed port range for this rule (e.g: 1-1024, 22-22)
func (o GetInstanceSecurityGroupOutboundRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.PortRange }).(pulumi.StringOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o GetInstanceSecurityGroupOutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetInstanceSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) ToGetInstanceSecurityGroupOutboundRuleArrayOutput() GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) ToGetInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) GetInstanceSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSecurityGroupOutboundRule {
		return vs[0].([]GetInstanceSecurityGroupOutboundRule)[vs[1].(int)]
	}).(GetInstanceSecurityGroupOutboundRuleOutput)
}

type GetInstanceServerPrivateNetwork struct {
	// MAC address of the NIC
	MacAddress string `pulumi:"macAddress"`
	// The Private Network ID
	PnId string `pulumi:"pnId"`
	// The private NIC state
	Status string `pulumi:"status"`
	// `zone`) The zone in which the server exists.
	Zone string `pulumi:"zone"`
}

// GetInstanceServerPrivateNetworkInput is an input type that accepts GetInstanceServerPrivateNetworkArgs and GetInstanceServerPrivateNetworkOutput values.
// You can construct a concrete instance of `GetInstanceServerPrivateNetworkInput` via:
//
//	GetInstanceServerPrivateNetworkArgs{...}
type GetInstanceServerPrivateNetworkInput interface {
	pulumi.Input

	ToGetInstanceServerPrivateNetworkOutput() GetInstanceServerPrivateNetworkOutput
	ToGetInstanceServerPrivateNetworkOutputWithContext(context.Context) GetInstanceServerPrivateNetworkOutput
}

type GetInstanceServerPrivateNetworkArgs struct {
	// MAC address of the NIC
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The Private Network ID
	PnId pulumi.StringInput `pulumi:"pnId"`
	// The private NIC state
	Status pulumi.StringInput `pulumi:"status"`
	// `zone`) The zone in which the server exists.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (i GetInstanceServerPrivateNetworkArgs) ToGetInstanceServerPrivateNetworkOutput() GetInstanceServerPrivateNetworkOutput {
	return i.ToGetInstanceServerPrivateNetworkOutputWithContext(context.Background())
}

func (i GetInstanceServerPrivateNetworkArgs) ToGetInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerPrivateNetworkOutput)
}

// GetInstanceServerPrivateNetworkArrayInput is an input type that accepts GetInstanceServerPrivateNetworkArray and GetInstanceServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerPrivateNetworkArrayInput` via:
//
//	GetInstanceServerPrivateNetworkArray{ GetInstanceServerPrivateNetworkArgs{...} }
type GetInstanceServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetInstanceServerPrivateNetworkArrayOutput() GetInstanceServerPrivateNetworkArrayOutput
	ToGetInstanceServerPrivateNetworkArrayOutputWithContext(context.Context) GetInstanceServerPrivateNetworkArrayOutput
}

type GetInstanceServerPrivateNetworkArray []GetInstanceServerPrivateNetworkInput

func (GetInstanceServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (i GetInstanceServerPrivateNetworkArray) ToGetInstanceServerPrivateNetworkArrayOutput() GetInstanceServerPrivateNetworkArrayOutput {
	return i.ToGetInstanceServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerPrivateNetworkArray) ToGetInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerPrivateNetworkArrayOutput)
}

type GetInstanceServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (o GetInstanceServerPrivateNetworkOutput) ToGetInstanceServerPrivateNetworkOutput() GetInstanceServerPrivateNetworkOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkOutput) ToGetInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkOutput {
	return o
}

// MAC address of the NIC
func (o GetInstanceServerPrivateNetworkOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The Private Network ID
func (o GetInstanceServerPrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// The private NIC state
func (o GetInstanceServerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// `zone`) The zone in which the server exists.
func (o GetInstanceServerPrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (o GetInstanceServerPrivateNetworkArrayOutput) ToGetInstanceServerPrivateNetworkArrayOutput() GetInstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkArrayOutput) ToGetInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetInstanceServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerPrivateNetwork {
		return vs[0].([]GetInstanceServerPrivateNetwork)[vs[1].(int)]
	}).(GetInstanceServerPrivateNetworkOutput)
}

type GetInstanceServerPublicIp struct {
	// The address of the IP
	Address string `pulumi:"address"`
	// The ID of the IP
	Id string `pulumi:"id"`
}

// GetInstanceServerPublicIpInput is an input type that accepts GetInstanceServerPublicIpArgs and GetInstanceServerPublicIpOutput values.
// You can construct a concrete instance of `GetInstanceServerPublicIpInput` via:
//
//	GetInstanceServerPublicIpArgs{...}
type GetInstanceServerPublicIpInput interface {
	pulumi.Input

	ToGetInstanceServerPublicIpOutput() GetInstanceServerPublicIpOutput
	ToGetInstanceServerPublicIpOutputWithContext(context.Context) GetInstanceServerPublicIpOutput
}

type GetInstanceServerPublicIpArgs struct {
	// The address of the IP
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the IP
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetInstanceServerPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerPublicIp)(nil)).Elem()
}

func (i GetInstanceServerPublicIpArgs) ToGetInstanceServerPublicIpOutput() GetInstanceServerPublicIpOutput {
	return i.ToGetInstanceServerPublicIpOutputWithContext(context.Background())
}

func (i GetInstanceServerPublicIpArgs) ToGetInstanceServerPublicIpOutputWithContext(ctx context.Context) GetInstanceServerPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerPublicIpOutput)
}

// GetInstanceServerPublicIpArrayInput is an input type that accepts GetInstanceServerPublicIpArray and GetInstanceServerPublicIpArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerPublicIpArrayInput` via:
//
//	GetInstanceServerPublicIpArray{ GetInstanceServerPublicIpArgs{...} }
type GetInstanceServerPublicIpArrayInput interface {
	pulumi.Input

	ToGetInstanceServerPublicIpArrayOutput() GetInstanceServerPublicIpArrayOutput
	ToGetInstanceServerPublicIpArrayOutputWithContext(context.Context) GetInstanceServerPublicIpArrayOutput
}

type GetInstanceServerPublicIpArray []GetInstanceServerPublicIpInput

func (GetInstanceServerPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerPublicIp)(nil)).Elem()
}

func (i GetInstanceServerPublicIpArray) ToGetInstanceServerPublicIpArrayOutput() GetInstanceServerPublicIpArrayOutput {
	return i.ToGetInstanceServerPublicIpArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerPublicIpArray) ToGetInstanceServerPublicIpArrayOutputWithContext(ctx context.Context) GetInstanceServerPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerPublicIpArrayOutput)
}

type GetInstanceServerPublicIpOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerPublicIp)(nil)).Elem()
}

func (o GetInstanceServerPublicIpOutput) ToGetInstanceServerPublicIpOutput() GetInstanceServerPublicIpOutput {
	return o
}

func (o GetInstanceServerPublicIpOutput) ToGetInstanceServerPublicIpOutputWithContext(ctx context.Context) GetInstanceServerPublicIpOutput {
	return o
}

// The address of the IP
func (o GetInstanceServerPublicIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPublicIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the IP
func (o GetInstanceServerPublicIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPublicIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetInstanceServerPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerPublicIp)(nil)).Elem()
}

func (o GetInstanceServerPublicIpArrayOutput) ToGetInstanceServerPublicIpArrayOutput() GetInstanceServerPublicIpArrayOutput {
	return o
}

func (o GetInstanceServerPublicIpArrayOutput) ToGetInstanceServerPublicIpArrayOutputWithContext(ctx context.Context) GetInstanceServerPublicIpArrayOutput {
	return o
}

func (o GetInstanceServerPublicIpArrayOutput) Index(i pulumi.IntInput) GetInstanceServerPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerPublicIp {
		return vs[0].([]GetInstanceServerPublicIp)[vs[1].(int)]
	}).(GetInstanceServerPublicIpOutput)
}

type GetInstanceServerRootVolume struct {
	// Set the volume where the boot the server
	Boot bool `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name string `pulumi:"name"`
	// Size of the root volume in gigabytes.
	SizeInGb int `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server.
	VolumeId string `pulumi:"volumeId"`
	// Volume type of the root volume
	VolumeType string `pulumi:"volumeType"`
}

// GetInstanceServerRootVolumeInput is an input type that accepts GetInstanceServerRootVolumeArgs and GetInstanceServerRootVolumeOutput values.
// You can construct a concrete instance of `GetInstanceServerRootVolumeInput` via:
//
//	GetInstanceServerRootVolumeArgs{...}
type GetInstanceServerRootVolumeInput interface {
	pulumi.Input

	ToGetInstanceServerRootVolumeOutput() GetInstanceServerRootVolumeOutput
	ToGetInstanceServerRootVolumeOutputWithContext(context.Context) GetInstanceServerRootVolumeOutput
}

type GetInstanceServerRootVolumeArgs struct {
	// Set the volume where the boot the server
	Boot pulumi.BoolInput `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The server name. Only one of `name` and `serverId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// Size of the root volume in gigabytes.
	SizeInGb pulumi.IntInput `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// Volume type of the root volume
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetInstanceServerRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerRootVolume)(nil)).Elem()
}

func (i GetInstanceServerRootVolumeArgs) ToGetInstanceServerRootVolumeOutput() GetInstanceServerRootVolumeOutput {
	return i.ToGetInstanceServerRootVolumeOutputWithContext(context.Background())
}

func (i GetInstanceServerRootVolumeArgs) ToGetInstanceServerRootVolumeOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerRootVolumeOutput)
}

// GetInstanceServerRootVolumeArrayInput is an input type that accepts GetInstanceServerRootVolumeArray and GetInstanceServerRootVolumeArrayOutput values.
// You can construct a concrete instance of `GetInstanceServerRootVolumeArrayInput` via:
//
//	GetInstanceServerRootVolumeArray{ GetInstanceServerRootVolumeArgs{...} }
type GetInstanceServerRootVolumeArrayInput interface {
	pulumi.Input

	ToGetInstanceServerRootVolumeArrayOutput() GetInstanceServerRootVolumeArrayOutput
	ToGetInstanceServerRootVolumeArrayOutputWithContext(context.Context) GetInstanceServerRootVolumeArrayOutput
}

type GetInstanceServerRootVolumeArray []GetInstanceServerRootVolumeInput

func (GetInstanceServerRootVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerRootVolume)(nil)).Elem()
}

func (i GetInstanceServerRootVolumeArray) ToGetInstanceServerRootVolumeArrayOutput() GetInstanceServerRootVolumeArrayOutput {
	return i.ToGetInstanceServerRootVolumeArrayOutputWithContext(context.Background())
}

func (i GetInstanceServerRootVolumeArray) ToGetInstanceServerRootVolumeArrayOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServerRootVolumeArrayOutput)
}

type GetInstanceServerRootVolumeOutput struct{ *pulumi.OutputState }

func (GetInstanceServerRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerRootVolume)(nil)).Elem()
}

func (o GetInstanceServerRootVolumeOutput) ToGetInstanceServerRootVolumeOutput() GetInstanceServerRootVolumeOutput {
	return o
}

func (o GetInstanceServerRootVolumeOutput) ToGetInstanceServerRootVolumeOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeOutput {
	return o
}

// Set the volume where the boot the server
func (o GetInstanceServerRootVolumeOutput) Boot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) bool { return v.Boot }).(pulumi.BoolOutput)
}

// Forces deletion of the root volume on instance termination.
func (o GetInstanceServerRootVolumeOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The server name. Only one of `name` and `serverId` should be specified.
func (o GetInstanceServerRootVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Size of the root volume in gigabytes.
func (o GetInstanceServerRootVolumeOutput) SizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) int { return v.SizeInGb }).(pulumi.IntOutput)
}

// The volume ID of the root volume of the server.
func (o GetInstanceServerRootVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

// Volume type of the root volume
func (o GetInstanceServerRootVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetInstanceServerRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerRootVolume)(nil)).Elem()
}

func (o GetInstanceServerRootVolumeArrayOutput) ToGetInstanceServerRootVolumeArrayOutput() GetInstanceServerRootVolumeArrayOutput {
	return o
}

func (o GetInstanceServerRootVolumeArrayOutput) ToGetInstanceServerRootVolumeArrayOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeArrayOutput {
	return o
}

func (o GetInstanceServerRootVolumeArrayOutput) Index(i pulumi.IntInput) GetInstanceServerRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerRootVolume {
		return vs[0].([]GetInstanceServerRootVolume)[vs[1].(int)]
	}).(GetInstanceServerRootVolumeOutput)
}

type GetInstanceServersServer struct {
	// The boot Type of the server. Possible values are: `local`, `bootscript` or `rescue`.
	BootType string `pulumi:"bootType"`
	// The ID of the bootscript.
	BootscriptId string `pulumi:"bootscriptId"`
	// If true a dynamic IP will be attached to the server.
	EnableDynamicIp bool `pulumi:"enableDynamicIp"`
	// Determines if IPv6 is enabled for the server.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The ID of the IP
	Id string `pulumi:"id"`
	// The UUID or the label of the base image used by the server.
	Image string `pulumi:"image"`
	// The default ipv6 address routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6Address string `pulumi:"ipv6Address"`
	// The ipv6 gateway address. ( Only set when enableIpv6 is set to true )
	Ipv6Gateway string `pulumi:"ipv6Gateway"`
	// The prefix length of the ipv6 subnet routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6PrefixLength int `pulumi:"ipv6PrefixLength"`
	// The server name used as filter. Servers with a name like it are listed.
	Name string `pulumi:"name"`
	// The organization ID the server is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
	PlacementGroupId              string `pulumi:"placementGroupId"`
	PlacementGroupPolicyRespected bool   `pulumi:"placementGroupPolicyRespected"`
	// The Scaleway internal IP address of the server.
	PrivateIp string `pulumi:"privateIp"`
	// The ID of the project the server is associated with.
	ProjectId string `pulumi:"projectId"`
	// The public IP address of the server.
	PublicIp string `pulumi:"publicIp"`
	// The list of public IPs of the server
	PublicIps []GetInstanceServersServerPublicIp `pulumi:"publicIps"`
	// True if the server support routed ip only.
	RoutedIpEnabled bool `pulumi:"routedIpEnabled"`
	// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The state of the server. Possible values are: `started`, `stopped` or `standby`.
	State string `pulumi:"state"`
	// List of tags used as filter. Servers with these exact tags are listed.
	Tags []string `pulumi:"tags"`
	// The commercial type of the server.
	Type string `pulumi:"type"`
	// `zone`) The zone in which servers exist.
	Zone string `pulumi:"zone"`
}

// GetInstanceServersServerInput is an input type that accepts GetInstanceServersServerArgs and GetInstanceServersServerOutput values.
// You can construct a concrete instance of `GetInstanceServersServerInput` via:
//
//	GetInstanceServersServerArgs{...}
type GetInstanceServersServerInput interface {
	pulumi.Input

	ToGetInstanceServersServerOutput() GetInstanceServersServerOutput
	ToGetInstanceServersServerOutputWithContext(context.Context) GetInstanceServersServerOutput
}

type GetInstanceServersServerArgs struct {
	// The boot Type of the server. Possible values are: `local`, `bootscript` or `rescue`.
	BootType pulumi.StringInput `pulumi:"bootType"`
	// The ID of the bootscript.
	BootscriptId pulumi.StringInput `pulumi:"bootscriptId"`
	// If true a dynamic IP will be attached to the server.
	EnableDynamicIp pulumi.BoolInput `pulumi:"enableDynamicIp"`
	// Determines if IPv6 is enabled for the server.
	EnableIpv6 pulumi.BoolInput `pulumi:"enableIpv6"`
	// The ID of the IP
	Id pulumi.StringInput `pulumi:"id"`
	// The UUID or the label of the base image used by the server.
	Image pulumi.StringInput `pulumi:"image"`
	// The default ipv6 address routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The ipv6 gateway address. ( Only set when enableIpv6 is set to true )
	Ipv6Gateway pulumi.StringInput `pulumi:"ipv6Gateway"`
	// The prefix length of the ipv6 subnet routed to the server. ( Only set when enableIpv6 is set to true )
	Ipv6PrefixLength pulumi.IntInput `pulumi:"ipv6PrefixLength"`
	// The server name used as filter. Servers with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID the server is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
	PlacementGroupId              pulumi.StringInput `pulumi:"placementGroupId"`
	PlacementGroupPolicyRespected pulumi.BoolInput   `pulumi:"placementGroupPolicyRespected"`
	// The Scaleway internal IP address of the server.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The ID of the project the server is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The public IP address of the server.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The list of public IPs of the server
	PublicIps GetInstanceServersServerPublicIpArrayInput `pulumi:"publicIps"`
	// True if the server support routed ip only.
	RoutedIpEnabled pulumi.BoolInput `pulumi:"routedIpEnabled"`
	// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The state of the server. Possible values are: `started`, `stopped` or `standby`.
	State pulumi.StringInput `pulumi:"state"`
	// List of tags used as filter. Servers with these exact tags are listed.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The commercial type of the server.
	Type pulumi.StringInput `pulumi:"type"`
	// `zone`) The zone in which servers exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetInstanceServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServersServer)(nil)).Elem()
}

func (i GetInstanceServersServerArgs) ToGetInstanceServersServerOutput() GetInstanceServersServerOutput {
	return i.ToGetInstanceServersServerOutputWithContext(context.Background())
}

func (i GetInstanceServersServerArgs) ToGetInstanceServersServerOutputWithContext(ctx context.Context) GetInstanceServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServersServerOutput)
}

// GetInstanceServersServerArrayInput is an input type that accepts GetInstanceServersServerArray and GetInstanceServersServerArrayOutput values.
// You can construct a concrete instance of `GetInstanceServersServerArrayInput` via:
//
//	GetInstanceServersServerArray{ GetInstanceServersServerArgs{...} }
type GetInstanceServersServerArrayInput interface {
	pulumi.Input

	ToGetInstanceServersServerArrayOutput() GetInstanceServersServerArrayOutput
	ToGetInstanceServersServerArrayOutputWithContext(context.Context) GetInstanceServersServerArrayOutput
}

type GetInstanceServersServerArray []GetInstanceServersServerInput

func (GetInstanceServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServersServer)(nil)).Elem()
}

func (i GetInstanceServersServerArray) ToGetInstanceServersServerArrayOutput() GetInstanceServersServerArrayOutput {
	return i.ToGetInstanceServersServerArrayOutputWithContext(context.Background())
}

func (i GetInstanceServersServerArray) ToGetInstanceServersServerArrayOutputWithContext(ctx context.Context) GetInstanceServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServersServerArrayOutput)
}

type GetInstanceServersServerOutput struct{ *pulumi.OutputState }

func (GetInstanceServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServersServer)(nil)).Elem()
}

func (o GetInstanceServersServerOutput) ToGetInstanceServersServerOutput() GetInstanceServersServerOutput {
	return o
}

func (o GetInstanceServersServerOutput) ToGetInstanceServersServerOutputWithContext(ctx context.Context) GetInstanceServersServerOutput {
	return o
}

// The boot Type of the server. Possible values are: `local`, `bootscript` or `rescue`.
func (o GetInstanceServersServerOutput) BootType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.BootType }).(pulumi.StringOutput)
}

// The ID of the bootscript.
func (o GetInstanceServersServerOutput) BootscriptId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.BootscriptId }).(pulumi.StringOutput)
}

// If true a dynamic IP will be attached to the server.
func (o GetInstanceServersServerOutput) EnableDynamicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServersServer) bool { return v.EnableDynamicIp }).(pulumi.BoolOutput)
}

// Determines if IPv6 is enabled for the server.
func (o GetInstanceServersServerOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServersServer) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The ID of the IP
func (o GetInstanceServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The UUID or the label of the base image used by the server.
func (o GetInstanceServersServerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Image }).(pulumi.StringOutput)
}

// The default ipv6 address routed to the server. ( Only set when enableIpv6 is set to true )
func (o GetInstanceServersServerOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The ipv6 gateway address. ( Only set when enableIpv6 is set to true )
func (o GetInstanceServersServerOutput) Ipv6Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Ipv6Gateway }).(pulumi.StringOutput)
}

// The prefix length of the ipv6 subnet routed to the server. ( Only set when enableIpv6 is set to true )
func (o GetInstanceServersServerOutput) Ipv6PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceServersServer) int { return v.Ipv6PrefixLength }).(pulumi.IntOutput)
}

// The server name used as filter. Servers with a name like it are listed.
func (o GetInstanceServersServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID the server is associated with.
func (o GetInstanceServersServerOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the server is attached to.
func (o GetInstanceServersServerOutput) PlacementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.PlacementGroupId }).(pulumi.StringOutput)
}

func (o GetInstanceServersServerOutput) PlacementGroupPolicyRespected() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServersServer) bool { return v.PlacementGroupPolicyRespected }).(pulumi.BoolOutput)
}

// The Scaleway internal IP address of the server.
func (o GetInstanceServersServerOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The ID of the project the server is associated with.
func (o GetInstanceServersServerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The public IP address of the server.
func (o GetInstanceServersServerOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The list of public IPs of the server
func (o GetInstanceServersServerOutput) PublicIps() GetInstanceServersServerPublicIpArrayOutput {
	return o.ApplyT(func(v GetInstanceServersServer) []GetInstanceServersServerPublicIp { return v.PublicIps }).(GetInstanceServersServerPublicIpArrayOutput)
}

// True if the server support routed ip only.
func (o GetInstanceServersServerOutput) RoutedIpEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServersServer) bool { return v.RoutedIpEnabled }).(pulumi.BoolOutput)
}

// The [security group](https://developers.scaleway.com/en/products/instance/api/#security-groups-8d7f89) the server is attached to.
func (o GetInstanceServersServerOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The state of the server. Possible values are: `started`, `stopped` or `standby`.
func (o GetInstanceServersServerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.State }).(pulumi.StringOutput)
}

// List of tags used as filter. Servers with these exact tags are listed.
func (o GetInstanceServersServerOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceServersServer) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The commercial type of the server.
func (o GetInstanceServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Type }).(pulumi.StringOutput)
}

// `zone`) The zone in which servers exist.
func (o GetInstanceServersServerOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServer) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServersServer)(nil)).Elem()
}

func (o GetInstanceServersServerArrayOutput) ToGetInstanceServersServerArrayOutput() GetInstanceServersServerArrayOutput {
	return o
}

func (o GetInstanceServersServerArrayOutput) ToGetInstanceServersServerArrayOutputWithContext(ctx context.Context) GetInstanceServersServerArrayOutput {
	return o
}

func (o GetInstanceServersServerArrayOutput) Index(i pulumi.IntInput) GetInstanceServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServersServer {
		return vs[0].([]GetInstanceServersServer)[vs[1].(int)]
	}).(GetInstanceServersServerOutput)
}

type GetInstanceServersServerPublicIp struct {
	// The address of the IP
	Address string `pulumi:"address"`
	// The ID of the IP
	Id string `pulumi:"id"`
}

// GetInstanceServersServerPublicIpInput is an input type that accepts GetInstanceServersServerPublicIpArgs and GetInstanceServersServerPublicIpOutput values.
// You can construct a concrete instance of `GetInstanceServersServerPublicIpInput` via:
//
//	GetInstanceServersServerPublicIpArgs{...}
type GetInstanceServersServerPublicIpInput interface {
	pulumi.Input

	ToGetInstanceServersServerPublicIpOutput() GetInstanceServersServerPublicIpOutput
	ToGetInstanceServersServerPublicIpOutputWithContext(context.Context) GetInstanceServersServerPublicIpOutput
}

type GetInstanceServersServerPublicIpArgs struct {
	// The address of the IP
	Address pulumi.StringInput `pulumi:"address"`
	// The ID of the IP
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetInstanceServersServerPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServersServerPublicIp)(nil)).Elem()
}

func (i GetInstanceServersServerPublicIpArgs) ToGetInstanceServersServerPublicIpOutput() GetInstanceServersServerPublicIpOutput {
	return i.ToGetInstanceServersServerPublicIpOutputWithContext(context.Background())
}

func (i GetInstanceServersServerPublicIpArgs) ToGetInstanceServersServerPublicIpOutputWithContext(ctx context.Context) GetInstanceServersServerPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServersServerPublicIpOutput)
}

// GetInstanceServersServerPublicIpArrayInput is an input type that accepts GetInstanceServersServerPublicIpArray and GetInstanceServersServerPublicIpArrayOutput values.
// You can construct a concrete instance of `GetInstanceServersServerPublicIpArrayInput` via:
//
//	GetInstanceServersServerPublicIpArray{ GetInstanceServersServerPublicIpArgs{...} }
type GetInstanceServersServerPublicIpArrayInput interface {
	pulumi.Input

	ToGetInstanceServersServerPublicIpArrayOutput() GetInstanceServersServerPublicIpArrayOutput
	ToGetInstanceServersServerPublicIpArrayOutputWithContext(context.Context) GetInstanceServersServerPublicIpArrayOutput
}

type GetInstanceServersServerPublicIpArray []GetInstanceServersServerPublicIpInput

func (GetInstanceServersServerPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServersServerPublicIp)(nil)).Elem()
}

func (i GetInstanceServersServerPublicIpArray) ToGetInstanceServersServerPublicIpArrayOutput() GetInstanceServersServerPublicIpArrayOutput {
	return i.ToGetInstanceServersServerPublicIpArrayOutputWithContext(context.Background())
}

func (i GetInstanceServersServerPublicIpArray) ToGetInstanceServersServerPublicIpArrayOutputWithContext(ctx context.Context) GetInstanceServersServerPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceServersServerPublicIpArrayOutput)
}

type GetInstanceServersServerPublicIpOutput struct{ *pulumi.OutputState }

func (GetInstanceServersServerPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServersServerPublicIp)(nil)).Elem()
}

func (o GetInstanceServersServerPublicIpOutput) ToGetInstanceServersServerPublicIpOutput() GetInstanceServersServerPublicIpOutput {
	return o
}

func (o GetInstanceServersServerPublicIpOutput) ToGetInstanceServersServerPublicIpOutputWithContext(ctx context.Context) GetInstanceServersServerPublicIpOutput {
	return o
}

// The address of the IP
func (o GetInstanceServersServerPublicIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServerPublicIp) string { return v.Address }).(pulumi.StringOutput)
}

// The ID of the IP
func (o GetInstanceServersServerPublicIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServersServerPublicIp) string { return v.Id }).(pulumi.StringOutput)
}

type GetInstanceServersServerPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServersServerPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServersServerPublicIp)(nil)).Elem()
}

func (o GetInstanceServersServerPublicIpArrayOutput) ToGetInstanceServersServerPublicIpArrayOutput() GetInstanceServersServerPublicIpArrayOutput {
	return o
}

func (o GetInstanceServersServerPublicIpArrayOutput) ToGetInstanceServersServerPublicIpArrayOutputWithContext(ctx context.Context) GetInstanceServersServerPublicIpArrayOutput {
	return o
}

func (o GetInstanceServersServerPublicIpArrayOutput) Index(i pulumi.IntInput) GetInstanceServersServerPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServersServerPublicIp {
		return vs[0].([]GetInstanceServersServerPublicIp)[vs[1].(int)]
	}).(GetInstanceServersServerPublicIpOutput)
}

type GetInstanceSnapshotImport struct {
	// Bucket containing qcow
	Bucket string `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key string `pulumi:"key"`
}

// GetInstanceSnapshotImportInput is an input type that accepts GetInstanceSnapshotImportArgs and GetInstanceSnapshotImportOutput values.
// You can construct a concrete instance of `GetInstanceSnapshotImportInput` via:
//
//	GetInstanceSnapshotImportArgs{...}
type GetInstanceSnapshotImportInput interface {
	pulumi.Input

	ToGetInstanceSnapshotImportOutput() GetInstanceSnapshotImportOutput
	ToGetInstanceSnapshotImportOutputWithContext(context.Context) GetInstanceSnapshotImportOutput
}

type GetInstanceSnapshotImportArgs struct {
	// Bucket containing qcow
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Key of the qcow file in the specified bucket
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetInstanceSnapshotImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSnapshotImport)(nil)).Elem()
}

func (i GetInstanceSnapshotImportArgs) ToGetInstanceSnapshotImportOutput() GetInstanceSnapshotImportOutput {
	return i.ToGetInstanceSnapshotImportOutputWithContext(context.Background())
}

func (i GetInstanceSnapshotImportArgs) ToGetInstanceSnapshotImportOutputWithContext(ctx context.Context) GetInstanceSnapshotImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSnapshotImportOutput)
}

// GetInstanceSnapshotImportArrayInput is an input type that accepts GetInstanceSnapshotImportArray and GetInstanceSnapshotImportArrayOutput values.
// You can construct a concrete instance of `GetInstanceSnapshotImportArrayInput` via:
//
//	GetInstanceSnapshotImportArray{ GetInstanceSnapshotImportArgs{...} }
type GetInstanceSnapshotImportArrayInput interface {
	pulumi.Input

	ToGetInstanceSnapshotImportArrayOutput() GetInstanceSnapshotImportArrayOutput
	ToGetInstanceSnapshotImportArrayOutputWithContext(context.Context) GetInstanceSnapshotImportArrayOutput
}

type GetInstanceSnapshotImportArray []GetInstanceSnapshotImportInput

func (GetInstanceSnapshotImportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSnapshotImport)(nil)).Elem()
}

func (i GetInstanceSnapshotImportArray) ToGetInstanceSnapshotImportArrayOutput() GetInstanceSnapshotImportArrayOutput {
	return i.ToGetInstanceSnapshotImportArrayOutputWithContext(context.Background())
}

func (i GetInstanceSnapshotImportArray) ToGetInstanceSnapshotImportArrayOutputWithContext(ctx context.Context) GetInstanceSnapshotImportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSnapshotImportArrayOutput)
}

type GetInstanceSnapshotImportOutput struct{ *pulumi.OutputState }

func (GetInstanceSnapshotImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSnapshotImport)(nil)).Elem()
}

func (o GetInstanceSnapshotImportOutput) ToGetInstanceSnapshotImportOutput() GetInstanceSnapshotImportOutput {
	return o
}

func (o GetInstanceSnapshotImportOutput) ToGetInstanceSnapshotImportOutputWithContext(ctx context.Context) GetInstanceSnapshotImportOutput {
	return o
}

// Bucket containing qcow
func (o GetInstanceSnapshotImportOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSnapshotImport) string { return v.Bucket }).(pulumi.StringOutput)
}

// Key of the qcow file in the specified bucket
func (o GetInstanceSnapshotImportOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSnapshotImport) string { return v.Key }).(pulumi.StringOutput)
}

type GetInstanceSnapshotImportArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSnapshotImportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSnapshotImport)(nil)).Elem()
}

func (o GetInstanceSnapshotImportArrayOutput) ToGetInstanceSnapshotImportArrayOutput() GetInstanceSnapshotImportArrayOutput {
	return o
}

func (o GetInstanceSnapshotImportArrayOutput) ToGetInstanceSnapshotImportArrayOutputWithContext(ctx context.Context) GetInstanceSnapshotImportArrayOutput {
	return o
}

func (o GetInstanceSnapshotImportArrayOutput) Index(i pulumi.IntInput) GetInstanceSnapshotImportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSnapshotImport {
		return vs[0].([]GetInstanceSnapshotImport)[vs[1].(int)]
	}).(GetInstanceSnapshotImportOutput)
}

type GetIotDeviceCertificate struct {
	// X509 PEM encoded certificate of the device
	Crt string `pulumi:"crt"`
	// X509 PEM encoded key of the device
	Key string `pulumi:"key"`
}

// GetIotDeviceCertificateInput is an input type that accepts GetIotDeviceCertificateArgs and GetIotDeviceCertificateOutput values.
// You can construct a concrete instance of `GetIotDeviceCertificateInput` via:
//
//	GetIotDeviceCertificateArgs{...}
type GetIotDeviceCertificateInput interface {
	pulumi.Input

	ToGetIotDeviceCertificateOutput() GetIotDeviceCertificateOutput
	ToGetIotDeviceCertificateOutputWithContext(context.Context) GetIotDeviceCertificateOutput
}

type GetIotDeviceCertificateArgs struct {
	// X509 PEM encoded certificate of the device
	Crt pulumi.StringInput `pulumi:"crt"`
	// X509 PEM encoded key of the device
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetIotDeviceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceCertificate)(nil)).Elem()
}

func (i GetIotDeviceCertificateArgs) ToGetIotDeviceCertificateOutput() GetIotDeviceCertificateOutput {
	return i.ToGetIotDeviceCertificateOutputWithContext(context.Background())
}

func (i GetIotDeviceCertificateArgs) ToGetIotDeviceCertificateOutputWithContext(ctx context.Context) GetIotDeviceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceCertificateOutput)
}

// GetIotDeviceCertificateArrayInput is an input type that accepts GetIotDeviceCertificateArray and GetIotDeviceCertificateArrayOutput values.
// You can construct a concrete instance of `GetIotDeviceCertificateArrayInput` via:
//
//	GetIotDeviceCertificateArray{ GetIotDeviceCertificateArgs{...} }
type GetIotDeviceCertificateArrayInput interface {
	pulumi.Input

	ToGetIotDeviceCertificateArrayOutput() GetIotDeviceCertificateArrayOutput
	ToGetIotDeviceCertificateArrayOutputWithContext(context.Context) GetIotDeviceCertificateArrayOutput
}

type GetIotDeviceCertificateArray []GetIotDeviceCertificateInput

func (GetIotDeviceCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceCertificate)(nil)).Elem()
}

func (i GetIotDeviceCertificateArray) ToGetIotDeviceCertificateArrayOutput() GetIotDeviceCertificateArrayOutput {
	return i.ToGetIotDeviceCertificateArrayOutputWithContext(context.Background())
}

func (i GetIotDeviceCertificateArray) ToGetIotDeviceCertificateArrayOutputWithContext(ctx context.Context) GetIotDeviceCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceCertificateArrayOutput)
}

type GetIotDeviceCertificateOutput struct{ *pulumi.OutputState }

func (GetIotDeviceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceCertificate)(nil)).Elem()
}

func (o GetIotDeviceCertificateOutput) ToGetIotDeviceCertificateOutput() GetIotDeviceCertificateOutput {
	return o
}

func (o GetIotDeviceCertificateOutput) ToGetIotDeviceCertificateOutputWithContext(ctx context.Context) GetIotDeviceCertificateOutput {
	return o
}

// X509 PEM encoded certificate of the device
func (o GetIotDeviceCertificateOutput) Crt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotDeviceCertificate) string { return v.Crt }).(pulumi.StringOutput)
}

// X509 PEM encoded key of the device
func (o GetIotDeviceCertificateOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotDeviceCertificate) string { return v.Key }).(pulumi.StringOutput)
}

type GetIotDeviceCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetIotDeviceCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceCertificate)(nil)).Elem()
}

func (o GetIotDeviceCertificateArrayOutput) ToGetIotDeviceCertificateArrayOutput() GetIotDeviceCertificateArrayOutput {
	return o
}

func (o GetIotDeviceCertificateArrayOutput) ToGetIotDeviceCertificateArrayOutputWithContext(ctx context.Context) GetIotDeviceCertificateArrayOutput {
	return o
}

func (o GetIotDeviceCertificateArrayOutput) Index(i pulumi.IntInput) GetIotDeviceCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIotDeviceCertificate {
		return vs[0].([]GetIotDeviceCertificate)[vs[1].(int)]
	}).(GetIotDeviceCertificateOutput)
}

type GetIotDeviceMessageFilter struct {
	// Rule to restrict topics the device can publish to
	Publishes []GetIotDeviceMessageFilterPublish `pulumi:"publishes"`
	// Rule to restrict topics the device can subscribe to
	Subscribes []GetIotDeviceMessageFilterSubscribe `pulumi:"subscribes"`
}

// GetIotDeviceMessageFilterInput is an input type that accepts GetIotDeviceMessageFilterArgs and GetIotDeviceMessageFilterOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterInput` via:
//
//	GetIotDeviceMessageFilterArgs{...}
type GetIotDeviceMessageFilterInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterOutput() GetIotDeviceMessageFilterOutput
	ToGetIotDeviceMessageFilterOutputWithContext(context.Context) GetIotDeviceMessageFilterOutput
}

type GetIotDeviceMessageFilterArgs struct {
	// Rule to restrict topics the device can publish to
	Publishes GetIotDeviceMessageFilterPublishArrayInput `pulumi:"publishes"`
	// Rule to restrict topics the device can subscribe to
	Subscribes GetIotDeviceMessageFilterSubscribeArrayInput `pulumi:"subscribes"`
}

func (GetIotDeviceMessageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilter)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterArgs) ToGetIotDeviceMessageFilterOutput() GetIotDeviceMessageFilterOutput {
	return i.ToGetIotDeviceMessageFilterOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterArgs) ToGetIotDeviceMessageFilterOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterOutput)
}

// GetIotDeviceMessageFilterArrayInput is an input type that accepts GetIotDeviceMessageFilterArray and GetIotDeviceMessageFilterArrayOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterArrayInput` via:
//
//	GetIotDeviceMessageFilterArray{ GetIotDeviceMessageFilterArgs{...} }
type GetIotDeviceMessageFilterArrayInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterArrayOutput() GetIotDeviceMessageFilterArrayOutput
	ToGetIotDeviceMessageFilterArrayOutputWithContext(context.Context) GetIotDeviceMessageFilterArrayOutput
}

type GetIotDeviceMessageFilterArray []GetIotDeviceMessageFilterInput

func (GetIotDeviceMessageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilter)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterArray) ToGetIotDeviceMessageFilterArrayOutput() GetIotDeviceMessageFilterArrayOutput {
	return i.ToGetIotDeviceMessageFilterArrayOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterArray) ToGetIotDeviceMessageFilterArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterArrayOutput)
}

type GetIotDeviceMessageFilterOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilter)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterOutput) ToGetIotDeviceMessageFilterOutput() GetIotDeviceMessageFilterOutput {
	return o
}

func (o GetIotDeviceMessageFilterOutput) ToGetIotDeviceMessageFilterOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterOutput {
	return o
}

// Rule to restrict topics the device can publish to
func (o GetIotDeviceMessageFilterOutput) Publishes() GetIotDeviceMessageFilterPublishArrayOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilter) []GetIotDeviceMessageFilterPublish { return v.Publishes }).(GetIotDeviceMessageFilterPublishArrayOutput)
}

// Rule to restrict topics the device can subscribe to
func (o GetIotDeviceMessageFilterOutput) Subscribes() GetIotDeviceMessageFilterSubscribeArrayOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilter) []GetIotDeviceMessageFilterSubscribe { return v.Subscribes }).(GetIotDeviceMessageFilterSubscribeArrayOutput)
}

type GetIotDeviceMessageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilter)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterArrayOutput) ToGetIotDeviceMessageFilterArrayOutput() GetIotDeviceMessageFilterArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterArrayOutput) ToGetIotDeviceMessageFilterArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterArrayOutput) Index(i pulumi.IntInput) GetIotDeviceMessageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIotDeviceMessageFilter {
		return vs[0].([]GetIotDeviceMessageFilter)[vs[1].(int)]
	}).(GetIotDeviceMessageFilterOutput)
}

type GetIotDeviceMessageFilterPublish struct {
	// Publish message filter policy
	Policy string `pulumi:"policy"`
	// List of topics in the set
	Topics []string `pulumi:"topics"`
}

// GetIotDeviceMessageFilterPublishInput is an input type that accepts GetIotDeviceMessageFilterPublishArgs and GetIotDeviceMessageFilterPublishOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterPublishInput` via:
//
//	GetIotDeviceMessageFilterPublishArgs{...}
type GetIotDeviceMessageFilterPublishInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterPublishOutput() GetIotDeviceMessageFilterPublishOutput
	ToGetIotDeviceMessageFilterPublishOutputWithContext(context.Context) GetIotDeviceMessageFilterPublishOutput
}

type GetIotDeviceMessageFilterPublishArgs struct {
	// Publish message filter policy
	Policy pulumi.StringInput `pulumi:"policy"`
	// List of topics in the set
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (GetIotDeviceMessageFilterPublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilterPublish)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterPublishArgs) ToGetIotDeviceMessageFilterPublishOutput() GetIotDeviceMessageFilterPublishOutput {
	return i.ToGetIotDeviceMessageFilterPublishOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterPublishArgs) ToGetIotDeviceMessageFilterPublishOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterPublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterPublishOutput)
}

// GetIotDeviceMessageFilterPublishArrayInput is an input type that accepts GetIotDeviceMessageFilterPublishArray and GetIotDeviceMessageFilterPublishArrayOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterPublishArrayInput` via:
//
//	GetIotDeviceMessageFilterPublishArray{ GetIotDeviceMessageFilterPublishArgs{...} }
type GetIotDeviceMessageFilterPublishArrayInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterPublishArrayOutput() GetIotDeviceMessageFilterPublishArrayOutput
	ToGetIotDeviceMessageFilterPublishArrayOutputWithContext(context.Context) GetIotDeviceMessageFilterPublishArrayOutput
}

type GetIotDeviceMessageFilterPublishArray []GetIotDeviceMessageFilterPublishInput

func (GetIotDeviceMessageFilterPublishArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilterPublish)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterPublishArray) ToGetIotDeviceMessageFilterPublishArrayOutput() GetIotDeviceMessageFilterPublishArrayOutput {
	return i.ToGetIotDeviceMessageFilterPublishArrayOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterPublishArray) ToGetIotDeviceMessageFilterPublishArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterPublishArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterPublishArrayOutput)
}

type GetIotDeviceMessageFilterPublishOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterPublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilterPublish)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterPublishOutput) ToGetIotDeviceMessageFilterPublishOutput() GetIotDeviceMessageFilterPublishOutput {
	return o
}

func (o GetIotDeviceMessageFilterPublishOutput) ToGetIotDeviceMessageFilterPublishOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterPublishOutput {
	return o
}

// Publish message filter policy
func (o GetIotDeviceMessageFilterPublishOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilterPublish) string { return v.Policy }).(pulumi.StringOutput)
}

// List of topics in the set
func (o GetIotDeviceMessageFilterPublishOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilterPublish) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type GetIotDeviceMessageFilterPublishArrayOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterPublishArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilterPublish)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterPublishArrayOutput) ToGetIotDeviceMessageFilterPublishArrayOutput() GetIotDeviceMessageFilterPublishArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterPublishArrayOutput) ToGetIotDeviceMessageFilterPublishArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterPublishArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterPublishArrayOutput) Index(i pulumi.IntInput) GetIotDeviceMessageFilterPublishOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIotDeviceMessageFilterPublish {
		return vs[0].([]GetIotDeviceMessageFilterPublish)[vs[1].(int)]
	}).(GetIotDeviceMessageFilterPublishOutput)
}

type GetIotDeviceMessageFilterSubscribe struct {
	// Subscribe message filter policy
	Policy string `pulumi:"policy"`
	// List of topics in the set
	Topics []string `pulumi:"topics"`
}

// GetIotDeviceMessageFilterSubscribeInput is an input type that accepts GetIotDeviceMessageFilterSubscribeArgs and GetIotDeviceMessageFilterSubscribeOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterSubscribeInput` via:
//
//	GetIotDeviceMessageFilterSubscribeArgs{...}
type GetIotDeviceMessageFilterSubscribeInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterSubscribeOutput() GetIotDeviceMessageFilterSubscribeOutput
	ToGetIotDeviceMessageFilterSubscribeOutputWithContext(context.Context) GetIotDeviceMessageFilterSubscribeOutput
}

type GetIotDeviceMessageFilterSubscribeArgs struct {
	// Subscribe message filter policy
	Policy pulumi.StringInput `pulumi:"policy"`
	// List of topics in the set
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (GetIotDeviceMessageFilterSubscribeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilterSubscribe)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterSubscribeArgs) ToGetIotDeviceMessageFilterSubscribeOutput() GetIotDeviceMessageFilterSubscribeOutput {
	return i.ToGetIotDeviceMessageFilterSubscribeOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterSubscribeArgs) ToGetIotDeviceMessageFilterSubscribeOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterSubscribeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterSubscribeOutput)
}

// GetIotDeviceMessageFilterSubscribeArrayInput is an input type that accepts GetIotDeviceMessageFilterSubscribeArray and GetIotDeviceMessageFilterSubscribeArrayOutput values.
// You can construct a concrete instance of `GetIotDeviceMessageFilterSubscribeArrayInput` via:
//
//	GetIotDeviceMessageFilterSubscribeArray{ GetIotDeviceMessageFilterSubscribeArgs{...} }
type GetIotDeviceMessageFilterSubscribeArrayInput interface {
	pulumi.Input

	ToGetIotDeviceMessageFilterSubscribeArrayOutput() GetIotDeviceMessageFilterSubscribeArrayOutput
	ToGetIotDeviceMessageFilterSubscribeArrayOutputWithContext(context.Context) GetIotDeviceMessageFilterSubscribeArrayOutput
}

type GetIotDeviceMessageFilterSubscribeArray []GetIotDeviceMessageFilterSubscribeInput

func (GetIotDeviceMessageFilterSubscribeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilterSubscribe)(nil)).Elem()
}

func (i GetIotDeviceMessageFilterSubscribeArray) ToGetIotDeviceMessageFilterSubscribeArrayOutput() GetIotDeviceMessageFilterSubscribeArrayOutput {
	return i.ToGetIotDeviceMessageFilterSubscribeArrayOutputWithContext(context.Background())
}

func (i GetIotDeviceMessageFilterSubscribeArray) ToGetIotDeviceMessageFilterSubscribeArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterSubscribeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotDeviceMessageFilterSubscribeArrayOutput)
}

type GetIotDeviceMessageFilterSubscribeOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterSubscribeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotDeviceMessageFilterSubscribe)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterSubscribeOutput) ToGetIotDeviceMessageFilterSubscribeOutput() GetIotDeviceMessageFilterSubscribeOutput {
	return o
}

func (o GetIotDeviceMessageFilterSubscribeOutput) ToGetIotDeviceMessageFilterSubscribeOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterSubscribeOutput {
	return o
}

// Subscribe message filter policy
func (o GetIotDeviceMessageFilterSubscribeOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilterSubscribe) string { return v.Policy }).(pulumi.StringOutput)
}

// List of topics in the set
func (o GetIotDeviceMessageFilterSubscribeOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIotDeviceMessageFilterSubscribe) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type GetIotDeviceMessageFilterSubscribeArrayOutput struct{ *pulumi.OutputState }

func (GetIotDeviceMessageFilterSubscribeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotDeviceMessageFilterSubscribe)(nil)).Elem()
}

func (o GetIotDeviceMessageFilterSubscribeArrayOutput) ToGetIotDeviceMessageFilterSubscribeArrayOutput() GetIotDeviceMessageFilterSubscribeArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterSubscribeArrayOutput) ToGetIotDeviceMessageFilterSubscribeArrayOutputWithContext(ctx context.Context) GetIotDeviceMessageFilterSubscribeArrayOutput {
	return o
}

func (o GetIotDeviceMessageFilterSubscribeArrayOutput) Index(i pulumi.IntInput) GetIotDeviceMessageFilterSubscribeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIotDeviceMessageFilterSubscribe {
		return vs[0].([]GetIotDeviceMessageFilterSubscribe)[vs[1].(int)]
	}).(GetIotDeviceMessageFilterSubscribeOutput)
}

type GetIpamIpResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name *string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIpamIpResourceInput is an input type that accepts GetIpamIpResourceArgs and GetIpamIpResourceOutput values.
// You can construct a concrete instance of `GetIpamIpResourceInput` via:
//
//	GetIpamIpResourceArgs{...}
type GetIpamIpResourceInput interface {
	pulumi.Input

	ToGetIpamIpResourceOutput() GetIpamIpResourceOutput
	ToGetIpamIpResourceOutputWithContext(context.Context) GetIpamIpResourceOutput
}

type GetIpamIpResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIpamIpResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpResource)(nil)).Elem()
}

func (i GetIpamIpResourceArgs) ToGetIpamIpResourceOutput() GetIpamIpResourceOutput {
	return i.ToGetIpamIpResourceOutputWithContext(context.Background())
}

func (i GetIpamIpResourceArgs) ToGetIpamIpResourceOutputWithContext(ctx context.Context) GetIpamIpResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpResourceOutput)
}

func (i GetIpamIpResourceArgs) ToGetIpamIpResourcePtrOutput() GetIpamIpResourcePtrOutput {
	return i.ToGetIpamIpResourcePtrOutputWithContext(context.Background())
}

func (i GetIpamIpResourceArgs) ToGetIpamIpResourcePtrOutputWithContext(ctx context.Context) GetIpamIpResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpResourceOutput).ToGetIpamIpResourcePtrOutputWithContext(ctx)
}

// GetIpamIpResourcePtrInput is an input type that accepts GetIpamIpResourceArgs, GetIpamIpResourcePtr and GetIpamIpResourcePtrOutput values.
// You can construct a concrete instance of `GetIpamIpResourcePtrInput` via:
//
//	        GetIpamIpResourceArgs{...}
//
//	or:
//
//	        nil
type GetIpamIpResourcePtrInput interface {
	pulumi.Input

	ToGetIpamIpResourcePtrOutput() GetIpamIpResourcePtrOutput
	ToGetIpamIpResourcePtrOutputWithContext(context.Context) GetIpamIpResourcePtrOutput
}

type getIpamIpResourcePtrType GetIpamIpResourceArgs

func GetIpamIpResourcePtr(v *GetIpamIpResourceArgs) GetIpamIpResourcePtrInput {
	return (*getIpamIpResourcePtrType)(v)
}

func (*getIpamIpResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpamIpResource)(nil)).Elem()
}

func (i *getIpamIpResourcePtrType) ToGetIpamIpResourcePtrOutput() GetIpamIpResourcePtrOutput {
	return i.ToGetIpamIpResourcePtrOutputWithContext(context.Background())
}

func (i *getIpamIpResourcePtrType) ToGetIpamIpResourcePtrOutputWithContext(ctx context.Context) GetIpamIpResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpResourcePtrOutput)
}

type GetIpamIpResourceOutput struct{ *pulumi.OutputState }

func (GetIpamIpResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpResource)(nil)).Elem()
}

func (o GetIpamIpResourceOutput) ToGetIpamIpResourceOutput() GetIpamIpResourceOutput {
	return o
}

func (o GetIpamIpResourceOutput) ToGetIpamIpResourceOutputWithContext(ctx context.Context) GetIpamIpResourceOutput {
	return o
}

func (o GetIpamIpResourceOutput) ToGetIpamIpResourcePtrOutput() GetIpamIpResourcePtrOutput {
	return o.ToGetIpamIpResourcePtrOutputWithContext(context.Background())
}

func (o GetIpamIpResourceOutput) ToGetIpamIpResourcePtrOutputWithContext(ctx context.Context) GetIpamIpResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIpamIpResource) *GetIpamIpResource {
		return &v
	}).(GetIpamIpResourcePtrOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIpamIpResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIpamIpResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIpamIpResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIpamIpResourcePtrOutput struct{ *pulumi.OutputState }

func (GetIpamIpResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpamIpResource)(nil)).Elem()
}

func (o GetIpamIpResourcePtrOutput) ToGetIpamIpResourcePtrOutput() GetIpamIpResourcePtrOutput {
	return o
}

func (o GetIpamIpResourcePtrOutput) ToGetIpamIpResourcePtrOutputWithContext(ctx context.Context) GetIpamIpResourcePtrOutput {
	return o
}

func (o GetIpamIpResourcePtrOutput) Elem() GetIpamIpResourceOutput {
	return o.ApplyT(func(v *GetIpamIpResource) GetIpamIpResource {
		if v != nil {
			return *v
		}
		var ret GetIpamIpResource
		return ret
	}).(GetIpamIpResourceOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIpamIpResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIpamIpResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIpamIpResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetIpamIpsIp struct {
	// The Scaleway internal IP address of the server.
	Address string `pulumi:"address"`
	// The date and time of the creation of the IP.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the resource.
	Id string `pulumi:"id"`
	// The ID of the project used as filter.
	ProjectId string `pulumi:"projectId"`
	// The region used as filter.
	Region string `pulumi:"region"`
	// Filter by resource ID, type or name.
	Resources []GetIpamIpsIpResource `pulumi:"resources"`
	// The tags used as filter.
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the IP.
	UpdatedAt string `pulumi:"updatedAt"`
	// The zone in which the IP is.
	Zone string `pulumi:"zone"`
}

// GetIpamIpsIpInput is an input type that accepts GetIpamIpsIpArgs and GetIpamIpsIpOutput values.
// You can construct a concrete instance of `GetIpamIpsIpInput` via:
//
//	GetIpamIpsIpArgs{...}
type GetIpamIpsIpInput interface {
	pulumi.Input

	ToGetIpamIpsIpOutput() GetIpamIpsIpOutput
	ToGetIpamIpsIpOutputWithContext(context.Context) GetIpamIpsIpOutput
}

type GetIpamIpsIpArgs struct {
	// The Scaleway internal IP address of the server.
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the IP.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the project used as filter.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The region used as filter.
	Region pulumi.StringInput `pulumi:"region"`
	// Filter by resource ID, type or name.
	Resources GetIpamIpsIpResourceArrayInput `pulumi:"resources"`
	// The tags used as filter.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The date and time of the last update of the IP.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The zone in which the IP is.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetIpamIpsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsIp)(nil)).Elem()
}

func (i GetIpamIpsIpArgs) ToGetIpamIpsIpOutput() GetIpamIpsIpOutput {
	return i.ToGetIpamIpsIpOutputWithContext(context.Background())
}

func (i GetIpamIpsIpArgs) ToGetIpamIpsIpOutputWithContext(ctx context.Context) GetIpamIpsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsIpOutput)
}

// GetIpamIpsIpArrayInput is an input type that accepts GetIpamIpsIpArray and GetIpamIpsIpArrayOutput values.
// You can construct a concrete instance of `GetIpamIpsIpArrayInput` via:
//
//	GetIpamIpsIpArray{ GetIpamIpsIpArgs{...} }
type GetIpamIpsIpArrayInput interface {
	pulumi.Input

	ToGetIpamIpsIpArrayOutput() GetIpamIpsIpArrayOutput
	ToGetIpamIpsIpArrayOutputWithContext(context.Context) GetIpamIpsIpArrayOutput
}

type GetIpamIpsIpArray []GetIpamIpsIpInput

func (GetIpamIpsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpamIpsIp)(nil)).Elem()
}

func (i GetIpamIpsIpArray) ToGetIpamIpsIpArrayOutput() GetIpamIpsIpArrayOutput {
	return i.ToGetIpamIpsIpArrayOutputWithContext(context.Background())
}

func (i GetIpamIpsIpArray) ToGetIpamIpsIpArrayOutputWithContext(ctx context.Context) GetIpamIpsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsIpArrayOutput)
}

type GetIpamIpsIpOutput struct{ *pulumi.OutputState }

func (GetIpamIpsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsIp)(nil)).Elem()
}

func (o GetIpamIpsIpOutput) ToGetIpamIpsIpOutput() GetIpamIpsIpOutput {
	return o
}

func (o GetIpamIpsIpOutput) ToGetIpamIpsIpOutputWithContext(ctx context.Context) GetIpamIpsIpOutput {
	return o
}

// The Scaleway internal IP address of the server.
func (o GetIpamIpsIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the IP.
func (o GetIpamIpsIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the resource.
func (o GetIpamIpsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the project used as filter.
func (o GetIpamIpsIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The region used as filter.
func (o GetIpamIpsIpOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.Region }).(pulumi.StringOutput)
}

// Filter by resource ID, type or name.
func (o GetIpamIpsIpOutput) Resources() GetIpamIpsIpResourceArrayOutput {
	return o.ApplyT(func(v GetIpamIpsIp) []GetIpamIpsIpResource { return v.Resources }).(GetIpamIpsIpResourceArrayOutput)
}

// The tags used as filter.
func (o GetIpamIpsIpOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpamIpsIp) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date and time of the last update of the IP.
func (o GetIpamIpsIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The zone in which the IP is.
func (o GetIpamIpsIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetIpamIpsIpArrayOutput struct{ *pulumi.OutputState }

func (GetIpamIpsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpamIpsIp)(nil)).Elem()
}

func (o GetIpamIpsIpArrayOutput) ToGetIpamIpsIpArrayOutput() GetIpamIpsIpArrayOutput {
	return o
}

func (o GetIpamIpsIpArrayOutput) ToGetIpamIpsIpArrayOutputWithContext(ctx context.Context) GetIpamIpsIpArrayOutput {
	return o
}

func (o GetIpamIpsIpArrayOutput) Index(i pulumi.IntInput) GetIpamIpsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpamIpsIp {
		return vs[0].([]GetIpamIpsIp)[vs[1].(int)]
	}).(GetIpamIpsIpOutput)
}

type GetIpamIpsIpResource struct {
	// The ID of the resource that the IP is bound to.
	Id string `pulumi:"id"`
	// The Mac Address used as filter.
	MacAddress string `pulumi:"macAddress"`
	// The name of the resource to get the IP from.
	Name string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIpamIpsIpResourceInput is an input type that accepts GetIpamIpsIpResourceArgs and GetIpamIpsIpResourceOutput values.
// You can construct a concrete instance of `GetIpamIpsIpResourceInput` via:
//
//	GetIpamIpsIpResourceArgs{...}
type GetIpamIpsIpResourceInput interface {
	pulumi.Input

	ToGetIpamIpsIpResourceOutput() GetIpamIpsIpResourceOutput
	ToGetIpamIpsIpResourceOutputWithContext(context.Context) GetIpamIpsIpResourceOutput
}

type GetIpamIpsIpResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringInput `pulumi:"id"`
	// The Mac Address used as filter.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The name of the resource to get the IP from.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIpamIpsIpResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsIpResource)(nil)).Elem()
}

func (i GetIpamIpsIpResourceArgs) ToGetIpamIpsIpResourceOutput() GetIpamIpsIpResourceOutput {
	return i.ToGetIpamIpsIpResourceOutputWithContext(context.Background())
}

func (i GetIpamIpsIpResourceArgs) ToGetIpamIpsIpResourceOutputWithContext(ctx context.Context) GetIpamIpsIpResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsIpResourceOutput)
}

// GetIpamIpsIpResourceArrayInput is an input type that accepts GetIpamIpsIpResourceArray and GetIpamIpsIpResourceArrayOutput values.
// You can construct a concrete instance of `GetIpamIpsIpResourceArrayInput` via:
//
//	GetIpamIpsIpResourceArray{ GetIpamIpsIpResourceArgs{...} }
type GetIpamIpsIpResourceArrayInput interface {
	pulumi.Input

	ToGetIpamIpsIpResourceArrayOutput() GetIpamIpsIpResourceArrayOutput
	ToGetIpamIpsIpResourceArrayOutputWithContext(context.Context) GetIpamIpsIpResourceArrayOutput
}

type GetIpamIpsIpResourceArray []GetIpamIpsIpResourceInput

func (GetIpamIpsIpResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpamIpsIpResource)(nil)).Elem()
}

func (i GetIpamIpsIpResourceArray) ToGetIpamIpsIpResourceArrayOutput() GetIpamIpsIpResourceArrayOutput {
	return i.ToGetIpamIpsIpResourceArrayOutputWithContext(context.Background())
}

func (i GetIpamIpsIpResourceArray) ToGetIpamIpsIpResourceArrayOutputWithContext(ctx context.Context) GetIpamIpsIpResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsIpResourceArrayOutput)
}

type GetIpamIpsIpResourceOutput struct{ *pulumi.OutputState }

func (GetIpamIpsIpResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsIpResource)(nil)).Elem()
}

func (o GetIpamIpsIpResourceOutput) ToGetIpamIpsIpResourceOutput() GetIpamIpsIpResourceOutput {
	return o
}

func (o GetIpamIpsIpResourceOutput) ToGetIpamIpsIpResourceOutputWithContext(ctx context.Context) GetIpamIpsIpResourceOutput {
	return o
}

// The ID of the resource that the IP is bound to.
func (o GetIpamIpsIpResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIpResource) string { return v.Id }).(pulumi.StringOutput)
}

// The Mac Address used as filter.
func (o GetIpamIpsIpResourceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIpResource) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The name of the resource to get the IP from.
func (o GetIpamIpsIpResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIpResource) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIpamIpsIpResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsIpResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIpamIpsIpResourceArrayOutput struct{ *pulumi.OutputState }

func (GetIpamIpsIpResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpamIpsIpResource)(nil)).Elem()
}

func (o GetIpamIpsIpResourceArrayOutput) ToGetIpamIpsIpResourceArrayOutput() GetIpamIpsIpResourceArrayOutput {
	return o
}

func (o GetIpamIpsIpResourceArrayOutput) ToGetIpamIpsIpResourceArrayOutputWithContext(ctx context.Context) GetIpamIpsIpResourceArrayOutput {
	return o
}

func (o GetIpamIpsIpResourceArrayOutput) Index(i pulumi.IntInput) GetIpamIpsIpResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpamIpsIpResource {
		return vs[0].([]GetIpamIpsIpResource)[vs[1].(int)]
	}).(GetIpamIpsIpResourceOutput)
}

type GetIpamIpsResource struct {
	// The ID of the resource that the IP is bound to.
	Id *string `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name *string `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type string `pulumi:"type"`
}

// GetIpamIpsResourceInput is an input type that accepts GetIpamIpsResourceArgs and GetIpamIpsResourceOutput values.
// You can construct a concrete instance of `GetIpamIpsResourceInput` via:
//
//	GetIpamIpsResourceArgs{...}
type GetIpamIpsResourceInput interface {
	pulumi.Input

	ToGetIpamIpsResourceOutput() GetIpamIpsResourceOutput
	ToGetIpamIpsResourceOutputWithContext(context.Context) GetIpamIpsResourceOutput
}

type GetIpamIpsResourceArgs struct {
	// The ID of the resource that the IP is bound to.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource to get the IP from.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIpamIpsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsResource)(nil)).Elem()
}

func (i GetIpamIpsResourceArgs) ToGetIpamIpsResourceOutput() GetIpamIpsResourceOutput {
	return i.ToGetIpamIpsResourceOutputWithContext(context.Background())
}

func (i GetIpamIpsResourceArgs) ToGetIpamIpsResourceOutputWithContext(ctx context.Context) GetIpamIpsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsResourceOutput)
}

func (i GetIpamIpsResourceArgs) ToGetIpamIpsResourcePtrOutput() GetIpamIpsResourcePtrOutput {
	return i.ToGetIpamIpsResourcePtrOutputWithContext(context.Background())
}

func (i GetIpamIpsResourceArgs) ToGetIpamIpsResourcePtrOutputWithContext(ctx context.Context) GetIpamIpsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsResourceOutput).ToGetIpamIpsResourcePtrOutputWithContext(ctx)
}

// GetIpamIpsResourcePtrInput is an input type that accepts GetIpamIpsResourceArgs, GetIpamIpsResourcePtr and GetIpamIpsResourcePtrOutput values.
// You can construct a concrete instance of `GetIpamIpsResourcePtrInput` via:
//
//	        GetIpamIpsResourceArgs{...}
//
//	or:
//
//	        nil
type GetIpamIpsResourcePtrInput interface {
	pulumi.Input

	ToGetIpamIpsResourcePtrOutput() GetIpamIpsResourcePtrOutput
	ToGetIpamIpsResourcePtrOutputWithContext(context.Context) GetIpamIpsResourcePtrOutput
}

type getIpamIpsResourcePtrType GetIpamIpsResourceArgs

func GetIpamIpsResourcePtr(v *GetIpamIpsResourceArgs) GetIpamIpsResourcePtrInput {
	return (*getIpamIpsResourcePtrType)(v)
}

func (*getIpamIpsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpamIpsResource)(nil)).Elem()
}

func (i *getIpamIpsResourcePtrType) ToGetIpamIpsResourcePtrOutput() GetIpamIpsResourcePtrOutput {
	return i.ToGetIpamIpsResourcePtrOutputWithContext(context.Background())
}

func (i *getIpamIpsResourcePtrType) ToGetIpamIpsResourcePtrOutputWithContext(ctx context.Context) GetIpamIpsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpamIpsResourcePtrOutput)
}

type GetIpamIpsResourceOutput struct{ *pulumi.OutputState }

func (GetIpamIpsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpamIpsResource)(nil)).Elem()
}

func (o GetIpamIpsResourceOutput) ToGetIpamIpsResourceOutput() GetIpamIpsResourceOutput {
	return o
}

func (o GetIpamIpsResourceOutput) ToGetIpamIpsResourceOutputWithContext(ctx context.Context) GetIpamIpsResourceOutput {
	return o
}

func (o GetIpamIpsResourceOutput) ToGetIpamIpsResourcePtrOutput() GetIpamIpsResourcePtrOutput {
	return o.ToGetIpamIpsResourcePtrOutputWithContext(context.Background())
}

func (o GetIpamIpsResourceOutput) ToGetIpamIpsResourcePtrOutputWithContext(ctx context.Context) GetIpamIpsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIpamIpsResource) *GetIpamIpsResource {
		return &v
	}).(GetIpamIpsResourcePtrOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIpamIpsResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpsResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIpamIpsResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpamIpsResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIpamIpsResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpamIpsResource) string { return v.Type }).(pulumi.StringOutput)
}

type GetIpamIpsResourcePtrOutput struct{ *pulumi.OutputState }

func (GetIpamIpsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpamIpsResource)(nil)).Elem()
}

func (o GetIpamIpsResourcePtrOutput) ToGetIpamIpsResourcePtrOutput() GetIpamIpsResourcePtrOutput {
	return o
}

func (o GetIpamIpsResourcePtrOutput) ToGetIpamIpsResourcePtrOutputWithContext(ctx context.Context) GetIpamIpsResourcePtrOutput {
	return o
}

func (o GetIpamIpsResourcePtrOutput) Elem() GetIpamIpsResourceOutput {
	return o.ApplyT(func(v *GetIpamIpsResource) GetIpamIpsResource {
		if v != nil {
			return *v
		}
		var ret GetIpamIpsResource
		return ret
	}).(GetIpamIpsResourceOutput)
}

// The ID of the resource that the IP is bound to.
func (o GetIpamIpsResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpsResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource to get the IP from.
func (o GetIpamIpsResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpsResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the resource to get the IP from. [Documentation](https://pkg.go.dev/github.com/scaleway/scaleway-sdk-go@master/api/ipam/v1#pkg-constants) with type list.
func (o GetIpamIpsResourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetIpamIpsResource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetKubernetesClusterAutoUpgrade struct {
	// True if Kubernetes patch version auto upgrades is enabled.
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

// GetKubernetesClusterAutoUpgradeInput is an input type that accepts GetKubernetesClusterAutoUpgradeArgs and GetKubernetesClusterAutoUpgradeOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAutoUpgradeInput` via:
//
//	GetKubernetesClusterAutoUpgradeArgs{...}
type GetKubernetesClusterAutoUpgradeInput interface {
	pulumi.Input

	ToGetKubernetesClusterAutoUpgradeOutput() GetKubernetesClusterAutoUpgradeOutput
	ToGetKubernetesClusterAutoUpgradeOutputWithContext(context.Context) GetKubernetesClusterAutoUpgradeOutput
}

type GetKubernetesClusterAutoUpgradeArgs struct {
	// True if Kubernetes patch version auto upgrades is enabled.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay pulumi.StringInput `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour pulumi.IntInput `pulumi:"maintenanceWindowStartHour"`
}

func (GetKubernetesClusterAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i GetKubernetesClusterAutoUpgradeArgs) ToGetKubernetesClusterAutoUpgradeOutput() GetKubernetesClusterAutoUpgradeOutput {
	return i.ToGetKubernetesClusterAutoUpgradeOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAutoUpgradeArgs) ToGetKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAutoUpgradeOutput)
}

// GetKubernetesClusterAutoUpgradeArrayInput is an input type that accepts GetKubernetesClusterAutoUpgradeArray and GetKubernetesClusterAutoUpgradeArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAutoUpgradeArrayInput` via:
//
//	GetKubernetesClusterAutoUpgradeArray{ GetKubernetesClusterAutoUpgradeArgs{...} }
type GetKubernetesClusterAutoUpgradeArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAutoUpgradeArrayOutput() GetKubernetesClusterAutoUpgradeArrayOutput
	ToGetKubernetesClusterAutoUpgradeArrayOutputWithContext(context.Context) GetKubernetesClusterAutoUpgradeArrayOutput
}

type GetKubernetesClusterAutoUpgradeArray []GetKubernetesClusterAutoUpgradeInput

func (GetKubernetesClusterAutoUpgradeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i GetKubernetesClusterAutoUpgradeArray) ToGetKubernetesClusterAutoUpgradeArrayOutput() GetKubernetesClusterAutoUpgradeArrayOutput {
	return i.ToGetKubernetesClusterAutoUpgradeArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAutoUpgradeArray) ToGetKubernetesClusterAutoUpgradeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAutoUpgradeArrayOutput)
}

type GetKubernetesClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o GetKubernetesClusterAutoUpgradeOutput) ToGetKubernetesClusterAutoUpgradeOutput() GetKubernetesClusterAutoUpgradeOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeOutput) ToGetKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeOutput {
	return o
}

// True if Kubernetes patch version auto upgrades is enabled.
func (o GetKubernetesClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o GetKubernetesClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o GetKubernetesClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type GetKubernetesClusterAutoUpgradeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoUpgradeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) ToGetKubernetesClusterAutoUpgradeArrayOutput() GetKubernetesClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) ToGetKubernetesClusterAutoUpgradeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAutoUpgradeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAutoUpgrade {
		return vs[0].([]GetKubernetesClusterAutoUpgrade)[vs[1].(int)]
	}).(GetKubernetesClusterAutoUpgradeOutput)
}

type GetKubernetesClusterAutoscalerConfig struct {
	// True if detecting similar node groups and balance the number of nodes between them is enabled.
	BalanceSimilarNodeGroups bool `pulumi:"balanceSimilarNodeGroups"`
	// True if the scale down feature of the autoscaler is disabled.
	DisableScaleDown bool `pulumi:"disableScaleDown"`
	// The type of resource estimator used in scale up.
	Estimator string `pulumi:"estimator"`
	// The type of node group expander be used in scale up.
	Expander string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff int `pulumi:"expendablePodsPriorityCutoff"`
	// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
	IgnoreDaemonsetsUtilization bool `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec int `pulumi:"maxGracefulTerminationSec"`
	// The duration after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd string `pulumi:"scaleDownDelayAfterAdd"`
	// The duration a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime string `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold float64 `pulumi:"scaleDownUtilizationThreshold"`
}

// GetKubernetesClusterAutoscalerConfigInput is an input type that accepts GetKubernetesClusterAutoscalerConfigArgs and GetKubernetesClusterAutoscalerConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAutoscalerConfigInput` via:
//
//	GetKubernetesClusterAutoscalerConfigArgs{...}
type GetKubernetesClusterAutoscalerConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterAutoscalerConfigOutput() GetKubernetesClusterAutoscalerConfigOutput
	ToGetKubernetesClusterAutoscalerConfigOutputWithContext(context.Context) GetKubernetesClusterAutoscalerConfigOutput
}

type GetKubernetesClusterAutoscalerConfigArgs struct {
	// True if detecting similar node groups and balance the number of nodes between them is enabled.
	BalanceSimilarNodeGroups pulumi.BoolInput `pulumi:"balanceSimilarNodeGroups"`
	// True if the scale down feature of the autoscaler is disabled.
	DisableScaleDown pulumi.BoolInput `pulumi:"disableScaleDown"`
	// The type of resource estimator used in scale up.
	Estimator pulumi.StringInput `pulumi:"estimator"`
	// The type of node group expander be used in scale up.
	Expander pulumi.StringInput `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff pulumi.IntInput `pulumi:"expendablePodsPriorityCutoff"`
	// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
	IgnoreDaemonsetsUtilization pulumi.BoolInput `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec pulumi.IntInput `pulumi:"maxGracefulTerminationSec"`
	// The duration after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd pulumi.StringInput `pulumi:"scaleDownDelayAfterAdd"`
	// The duration a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime pulumi.StringInput `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold pulumi.Float64Input `pulumi:"scaleDownUtilizationThreshold"`
}

func (GetKubernetesClusterAutoscalerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i GetKubernetesClusterAutoscalerConfigArgs) ToGetKubernetesClusterAutoscalerConfigOutput() GetKubernetesClusterAutoscalerConfigOutput {
	return i.ToGetKubernetesClusterAutoscalerConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAutoscalerConfigArgs) ToGetKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAutoscalerConfigOutput)
}

// GetKubernetesClusterAutoscalerConfigArrayInput is an input type that accepts GetKubernetesClusterAutoscalerConfigArray and GetKubernetesClusterAutoscalerConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAutoscalerConfigArrayInput` via:
//
//	GetKubernetesClusterAutoscalerConfigArray{ GetKubernetesClusterAutoscalerConfigArgs{...} }
type GetKubernetesClusterAutoscalerConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAutoscalerConfigArrayOutput() GetKubernetesClusterAutoscalerConfigArrayOutput
	ToGetKubernetesClusterAutoscalerConfigArrayOutputWithContext(context.Context) GetKubernetesClusterAutoscalerConfigArrayOutput
}

type GetKubernetesClusterAutoscalerConfigArray []GetKubernetesClusterAutoscalerConfigInput

func (GetKubernetesClusterAutoscalerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i GetKubernetesClusterAutoscalerConfigArray) ToGetKubernetesClusterAutoscalerConfigArrayOutput() GetKubernetesClusterAutoscalerConfigArrayOutput {
	return i.ToGetKubernetesClusterAutoscalerConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAutoscalerConfigArray) ToGetKubernetesClusterAutoscalerConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAutoscalerConfigArrayOutput)
}

type GetKubernetesClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetKubernetesClusterAutoscalerConfigOutput) ToGetKubernetesClusterAutoscalerConfigOutput() GetKubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigOutput) ToGetKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigOutput {
	return o
}

// True if detecting similar node groups and balance the number of nodes between them is enabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolOutput)
}

// True if the scale down feature of the autoscaler is disabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.DisableScaleDown }).(pulumi.BoolOutput)
}

// The type of resource estimator used in scale up.
func (o GetKubernetesClusterAutoscalerConfigOutput) Estimator() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.Estimator }).(pulumi.StringOutput)
}

// The type of node group expander be used in scale up.
func (o GetKubernetesClusterAutoscalerConfigOutput) Expander() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.Expander }).(pulumi.StringOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o GetKubernetesClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntOutput)
}

// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o GetKubernetesClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) int { return v.MaxGracefulTerminationSec }).(pulumi.IntOutput)
}

// The duration after scale up that scale down evaluation resumes.
func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringOutput)
}

// The duration a node should be unneeded before it is eligible for scale down.
func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.ScaleDownUnneededTime }).(pulumi.StringOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64Output)
}

type GetKubernetesClusterAutoscalerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoscalerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) ToGetKubernetesClusterAutoscalerConfigArrayOutput() GetKubernetesClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) ToGetKubernetesClusterAutoscalerConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAutoscalerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAutoscalerConfig {
		return vs[0].([]GetKubernetesClusterAutoscalerConfig)[vs[1].(int)]
	}).(GetKubernetesClusterAutoscalerConfigOutput)
}

type GetKubernetesClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token string `pulumi:"token"`
}

// GetKubernetesClusterKubeconfigInput is an input type that accepts GetKubernetesClusterKubeconfigArgs and GetKubernetesClusterKubeconfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeconfigInput` via:
//
//	GetKubernetesClusterKubeconfigArgs{...}
type GetKubernetesClusterKubeconfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeconfigOutput() GetKubernetesClusterKubeconfigOutput
	ToGetKubernetesClusterKubeconfigOutputWithContext(context.Context) GetKubernetesClusterKubeconfigOutput
}

type GetKubernetesClusterKubeconfigArgs struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile pulumi.StringInput `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host pulumi.StringInput `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetKubernetesClusterKubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeconfigArgs) ToGetKubernetesClusterKubeconfigOutput() GetKubernetesClusterKubeconfigOutput {
	return i.ToGetKubernetesClusterKubeconfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeconfigArgs) ToGetKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeconfigOutput)
}

// GetKubernetesClusterKubeconfigArrayInput is an input type that accepts GetKubernetesClusterKubeconfigArray and GetKubernetesClusterKubeconfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeconfigArrayInput` via:
//
//	GetKubernetesClusterKubeconfigArray{ GetKubernetesClusterKubeconfigArgs{...} }
type GetKubernetesClusterKubeconfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeconfigArrayOutput() GetKubernetesClusterKubeconfigArrayOutput
	ToGetKubernetesClusterKubeconfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeconfigArrayOutput
}

type GetKubernetesClusterKubeconfigArray []GetKubernetesClusterKubeconfigInput

func (GetKubernetesClusterKubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeconfigArray) ToGetKubernetesClusterKubeconfigArrayOutput() GetKubernetesClusterKubeconfigArrayOutput {
	return i.ToGetKubernetesClusterKubeconfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeconfigArray) ToGetKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeconfigArrayOutput)
}

type GetKubernetesClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeconfigOutput) ToGetKubernetesClusterKubeconfigOutput() GetKubernetesClusterKubeconfigOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigOutput) ToGetKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The raw kubeconfig file.
func (o GetKubernetesClusterKubeconfigOutput) ConfigFile() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.ConfigFile }).(pulumi.StringOutput)
}

// The URL of the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.Host }).(pulumi.StringOutput)
}

// The token to connect to the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.Token }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeconfigArrayOutput) ToGetKubernetesClusterKubeconfigArrayOutput() GetKubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigArrayOutput) ToGetKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeconfig {
		return vs[0].([]GetKubernetesClusterKubeconfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeconfigOutput)
}

type GetKubernetesClusterOpenIdConnectConfig struct {
	// A client id that all tokens must be issued for
	ClientId string `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims []string `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix string `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl string `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims []string `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim string `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix string `pulumi:"usernamePrefix"`
}

// GetKubernetesClusterOpenIdConnectConfigInput is an input type that accepts GetKubernetesClusterOpenIdConnectConfigArgs and GetKubernetesClusterOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOpenIdConnectConfigInput` via:
//
//	GetKubernetesClusterOpenIdConnectConfigArgs{...}
type GetKubernetesClusterOpenIdConnectConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterOpenIdConnectConfigOutput() GetKubernetesClusterOpenIdConnectConfigOutput
	ToGetKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Context) GetKubernetesClusterOpenIdConnectConfigOutput
}

type GetKubernetesClusterOpenIdConnectConfigArgs struct {
	// A client id that all tokens must be issued for
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims pulumi.StringArrayInput `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix pulumi.StringInput `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims pulumi.StringArrayInput `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim pulumi.StringInput `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix pulumi.StringInput `pulumi:"usernamePrefix"`
}

func (GetKubernetesClusterOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i GetKubernetesClusterOpenIdConnectConfigArgs) ToGetKubernetesClusterOpenIdConnectConfigOutput() GetKubernetesClusterOpenIdConnectConfigOutput {
	return i.ToGetKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOpenIdConnectConfigArgs) ToGetKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOpenIdConnectConfigOutput)
}

// GetKubernetesClusterOpenIdConnectConfigArrayInput is an input type that accepts GetKubernetesClusterOpenIdConnectConfigArray and GetKubernetesClusterOpenIdConnectConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOpenIdConnectConfigArrayInput` via:
//
//	GetKubernetesClusterOpenIdConnectConfigArray{ GetKubernetesClusterOpenIdConnectConfigArgs{...} }
type GetKubernetesClusterOpenIdConnectConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterOpenIdConnectConfigArrayOutput() GetKubernetesClusterOpenIdConnectConfigArrayOutput
	ToGetKubernetesClusterOpenIdConnectConfigArrayOutputWithContext(context.Context) GetKubernetesClusterOpenIdConnectConfigArrayOutput
}

type GetKubernetesClusterOpenIdConnectConfigArray []GetKubernetesClusterOpenIdConnectConfigInput

func (GetKubernetesClusterOpenIdConnectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i GetKubernetesClusterOpenIdConnectConfigArray) ToGetKubernetesClusterOpenIdConnectConfigArrayOutput() GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return i.ToGetKubernetesClusterOpenIdConnectConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOpenIdConnectConfigArray) ToGetKubernetesClusterOpenIdConnectConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOpenIdConnectConfigArrayOutput)
}

type GetKubernetesClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) ToGetKubernetesClusterOpenIdConnectConfigOutput() GetKubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) ToGetKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigOutput {
	return o
}

// A client id that all tokens must be issued for
func (o GetKubernetesClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// JWT claim to use as the user's group
func (o GetKubernetesClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o GetKubernetesClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.GroupsPrefix }).(pulumi.StringOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o GetKubernetesClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o GetKubernetesClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o GetKubernetesClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.UsernameClaim }).(pulumi.StringOutput)
}

// Prefix prepended to username
func (o GetKubernetesClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.UsernamePrefix }).(pulumi.StringOutput)
}

type GetKubernetesClusterOpenIdConnectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOpenIdConnectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) ToGetKubernetesClusterOpenIdConnectConfigArrayOutput() GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) ToGetKubernetesClusterOpenIdConnectConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterOpenIdConnectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterOpenIdConnectConfig {
		return vs[0].([]GetKubernetesClusterOpenIdConnectConfig)[vs[1].(int)]
	}).(GetKubernetesClusterOpenIdConnectConfigOutput)
}

type GetKubernetesNodePoolNode struct {
	// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
	Name string `pulumi:"name"`
	// The public IPv4.
	PublicIp string `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 string `pulumi:"publicIpV6"`
	// The status of the node.
	Status string `pulumi:"status"`
}

// GetKubernetesNodePoolNodeInput is an input type that accepts GetKubernetesNodePoolNodeArgs and GetKubernetesNodePoolNodeOutput values.
// You can construct a concrete instance of `GetKubernetesNodePoolNodeInput` via:
//
//	GetKubernetesNodePoolNodeArgs{...}
type GetKubernetesNodePoolNodeInput interface {
	pulumi.Input

	ToGetKubernetesNodePoolNodeOutput() GetKubernetesNodePoolNodeOutput
	ToGetKubernetesNodePoolNodeOutputWithContext(context.Context) GetKubernetesNodePoolNodeOutput
}

type GetKubernetesNodePoolNodeArgs struct {
	// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
	Name pulumi.StringInput `pulumi:"name"`
	// The public IPv4.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 pulumi.StringInput `pulumi:"publicIpV6"`
	// The status of the node.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetKubernetesNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesNodePoolNodeArgs) ToGetKubernetesNodePoolNodeOutput() GetKubernetesNodePoolNodeOutput {
	return i.ToGetKubernetesNodePoolNodeOutputWithContext(context.Background())
}

func (i GetKubernetesNodePoolNodeArgs) ToGetKubernetesNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodePoolNodeOutput)
}

// GetKubernetesNodePoolNodeArrayInput is an input type that accepts GetKubernetesNodePoolNodeArray and GetKubernetesNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `GetKubernetesNodePoolNodeArrayInput` via:
//
//	GetKubernetesNodePoolNodeArray{ GetKubernetesNodePoolNodeArgs{...} }
type GetKubernetesNodePoolNodeArrayInput interface {
	pulumi.Input

	ToGetKubernetesNodePoolNodeArrayOutput() GetKubernetesNodePoolNodeArrayOutput
	ToGetKubernetesNodePoolNodeArrayOutputWithContext(context.Context) GetKubernetesNodePoolNodeArrayOutput
}

type GetKubernetesNodePoolNodeArray []GetKubernetesNodePoolNodeInput

func (GetKubernetesNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesNodePoolNodeArray) ToGetKubernetesNodePoolNodeArrayOutput() GetKubernetesNodePoolNodeArrayOutput {
	return i.ToGetKubernetesNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i GetKubernetesNodePoolNodeArray) ToGetKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodePoolNodeArrayOutput)
}

type GetKubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesNodePoolNodeOutput) ToGetKubernetesNodePoolNodeOutput() GetKubernetesNodePoolNodeOutput {
	return o
}

func (o GetKubernetesNodePoolNodeOutput) ToGetKubernetesNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeOutput {
	return o
}

// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
func (o GetKubernetesNodePoolNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.Name }).(pulumi.StringOutput)
}

// The public IPv4.
func (o GetKubernetesNodePoolNodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The public IPv6.
func (o GetKubernetesNodePoolNodeOutput) PublicIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.PublicIpV6 }).(pulumi.StringOutput)
}

// The status of the node.
func (o GetKubernetesNodePoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetKubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesNodePoolNodeArrayOutput) ToGetKubernetesNodePoolNodeArrayOutput() GetKubernetesNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesNodePoolNodeArrayOutput) ToGetKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodePoolNode {
		return vs[0].([]GetKubernetesNodePoolNode)[vs[1].(int)]
	}).(GetKubernetesNodePoolNodeOutput)
}

type GetKubernetesNodePoolUpgradePolicy struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

// GetKubernetesNodePoolUpgradePolicyInput is an input type that accepts GetKubernetesNodePoolUpgradePolicyArgs and GetKubernetesNodePoolUpgradePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesNodePoolUpgradePolicyInput` via:
//
//	GetKubernetesNodePoolUpgradePolicyArgs{...}
type GetKubernetesNodePoolUpgradePolicyInput interface {
	pulumi.Input

	ToGetKubernetesNodePoolUpgradePolicyOutput() GetKubernetesNodePoolUpgradePolicyOutput
	ToGetKubernetesNodePoolUpgradePolicyOutputWithContext(context.Context) GetKubernetesNodePoolUpgradePolicyOutput
}

type GetKubernetesNodePoolUpgradePolicyArgs struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge pulumi.IntInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable pulumi.IntInput `pulumi:"maxUnavailable"`
}

func (GetKubernetesNodePoolUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i GetKubernetesNodePoolUpgradePolicyArgs) ToGetKubernetesNodePoolUpgradePolicyOutput() GetKubernetesNodePoolUpgradePolicyOutput {
	return i.ToGetKubernetesNodePoolUpgradePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesNodePoolUpgradePolicyArgs) ToGetKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodePoolUpgradePolicyOutput)
}

// GetKubernetesNodePoolUpgradePolicyArrayInput is an input type that accepts GetKubernetesNodePoolUpgradePolicyArray and GetKubernetesNodePoolUpgradePolicyArrayOutput values.
// You can construct a concrete instance of `GetKubernetesNodePoolUpgradePolicyArrayInput` via:
//
//	GetKubernetesNodePoolUpgradePolicyArray{ GetKubernetesNodePoolUpgradePolicyArgs{...} }
type GetKubernetesNodePoolUpgradePolicyArrayInput interface {
	pulumi.Input

	ToGetKubernetesNodePoolUpgradePolicyArrayOutput() GetKubernetesNodePoolUpgradePolicyArrayOutput
	ToGetKubernetesNodePoolUpgradePolicyArrayOutputWithContext(context.Context) GetKubernetesNodePoolUpgradePolicyArrayOutput
}

type GetKubernetesNodePoolUpgradePolicyArray []GetKubernetesNodePoolUpgradePolicyInput

func (GetKubernetesNodePoolUpgradePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i GetKubernetesNodePoolUpgradePolicyArray) ToGetKubernetesNodePoolUpgradePolicyArrayOutput() GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return i.ToGetKubernetesNodePoolUpgradePolicyArrayOutputWithContext(context.Background())
}

func (i GetKubernetesNodePoolUpgradePolicyArray) ToGetKubernetesNodePoolUpgradePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesNodePoolUpgradePolicyArrayOutput)
}

type GetKubernetesNodePoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) ToGetKubernetesNodePoolUpgradePolicyOutput() GetKubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) ToGetKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyOutput {
	return o
}

// The maximum number of nodes to be created during the upgrade
func (o GetKubernetesNodePoolUpgradePolicyOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolUpgradePolicy) int { return v.MaxSurge }).(pulumi.IntOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o GetKubernetesNodePoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolUpgradePolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetKubernetesNodePoolUpgradePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolUpgradePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) ToGetKubernetesNodePoolUpgradePolicyArrayOutput() GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) ToGetKubernetesNodePoolUpgradePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodePoolUpgradePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodePoolUpgradePolicy {
		return vs[0].([]GetKubernetesNodePoolUpgradePolicy)[vs[1].(int)]
	}).(GetKubernetesNodePoolUpgradePolicyOutput)
}

type GetLbAclsAcl struct {
	// The action that has been undertaken when an ACL filter had matched.
	Actions []GetLbAclsAclAction `pulumi:"actions"`
	// The date at which the ACL was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The description of the ACL resource.
	Description string `pulumi:"description"`
	// The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
	// > **Important:** LB Frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId string `pulumi:"frontendId"`
	// The associated ACL ID.
	// > **Important:** LB ACLs' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	Id string `pulumi:"id"`
	// The order between the ACLs.
	Index int `pulumi:"index"`
	// The ACL match rule.
	Matches []GetLbAclsAclMatch `pulumi:"matches"`
	// The ACL name used as filter. ACLs with a name like it are listed.
	Name string `pulumi:"name"`
	// The date at which the ACL was last updated (RFC 3339 format).
	UpdateAt string `pulumi:"updateAt"`
}

// GetLbAclsAclInput is an input type that accepts GetLbAclsAclArgs and GetLbAclsAclOutput values.
// You can construct a concrete instance of `GetLbAclsAclInput` via:
//
//	GetLbAclsAclArgs{...}
type GetLbAclsAclInput interface {
	pulumi.Input

	ToGetLbAclsAclOutput() GetLbAclsAclOutput
	ToGetLbAclsAclOutputWithContext(context.Context) GetLbAclsAclOutput
}

type GetLbAclsAclArgs struct {
	// The action that has been undertaken when an ACL filter had matched.
	Actions GetLbAclsAclActionArrayInput `pulumi:"actions"`
	// The date at which the ACL was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the ACL resource.
	Description pulumi.StringInput `pulumi:"description"`
	// The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
	// > **Important:** LB Frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	FrontendId pulumi.StringInput `pulumi:"frontendId"`
	// The associated ACL ID.
	// > **Important:** LB ACLs' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	Id pulumi.StringInput `pulumi:"id"`
	// The order between the ACLs.
	Index pulumi.IntInput `pulumi:"index"`
	// The ACL match rule.
	Matches GetLbAclsAclMatchArrayInput `pulumi:"matches"`
	// The ACL name used as filter. ACLs with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// The date at which the ACL was last updated (RFC 3339 format).
	UpdateAt pulumi.StringInput `pulumi:"updateAt"`
}

func (GetLbAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAcl)(nil)).Elem()
}

func (i GetLbAclsAclArgs) ToGetLbAclsAclOutput() GetLbAclsAclOutput {
	return i.ToGetLbAclsAclOutputWithContext(context.Background())
}

func (i GetLbAclsAclArgs) ToGetLbAclsAclOutputWithContext(ctx context.Context) GetLbAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclOutput)
}

// GetLbAclsAclArrayInput is an input type that accepts GetLbAclsAclArray and GetLbAclsAclArrayOutput values.
// You can construct a concrete instance of `GetLbAclsAclArrayInput` via:
//
//	GetLbAclsAclArray{ GetLbAclsAclArgs{...} }
type GetLbAclsAclArrayInput interface {
	pulumi.Input

	ToGetLbAclsAclArrayOutput() GetLbAclsAclArrayOutput
	ToGetLbAclsAclArrayOutputWithContext(context.Context) GetLbAclsAclArrayOutput
}

type GetLbAclsAclArray []GetLbAclsAclInput

func (GetLbAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAcl)(nil)).Elem()
}

func (i GetLbAclsAclArray) ToGetLbAclsAclArrayOutput() GetLbAclsAclArrayOutput {
	return i.ToGetLbAclsAclArrayOutputWithContext(context.Background())
}

func (i GetLbAclsAclArray) ToGetLbAclsAclArrayOutputWithContext(ctx context.Context) GetLbAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclArrayOutput)
}

type GetLbAclsAclOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAcl)(nil)).Elem()
}

func (o GetLbAclsAclOutput) ToGetLbAclsAclOutput() GetLbAclsAclOutput {
	return o
}

func (o GetLbAclsAclOutput) ToGetLbAclsAclOutputWithContext(ctx context.Context) GetLbAclsAclOutput {
	return o
}

// The action that has been undertaken when an ACL filter had matched.
func (o GetLbAclsAclOutput) Actions() GetLbAclsAclActionArrayOutput {
	return o.ApplyT(func(v GetLbAclsAcl) []GetLbAclsAclAction { return v.Actions }).(GetLbAclsAclActionArrayOutput)
}

// The date at which the ACL was created (RFC 3339 format).
func (o GetLbAclsAclOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the ACL resource.
func (o GetLbAclsAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The frontend ID this ACL is attached to. ACLs with a frontend ID like it are listed.
// > **Important:** LB Frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
func (o GetLbAclsAclOutput) FrontendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.FrontendId }).(pulumi.StringOutput)
}

// The associated ACL ID.
// > **Important:** LB ACLs' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
func (o GetLbAclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The order between the ACLs.
func (o GetLbAclsAclOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbAclsAcl) int { return v.Index }).(pulumi.IntOutput)
}

// The ACL match rule.
func (o GetLbAclsAclOutput) Matches() GetLbAclsAclMatchArrayOutput {
	return o.ApplyT(func(v GetLbAclsAcl) []GetLbAclsAclMatch { return v.Matches }).(GetLbAclsAclMatchArrayOutput)
}

// The ACL name used as filter. ACLs with a name like it are listed.
func (o GetLbAclsAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.Name }).(pulumi.StringOutput)
}

// The date at which the ACL was last updated (RFC 3339 format).
func (o GetLbAclsAclOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAcl) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetLbAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAcl)(nil)).Elem()
}

func (o GetLbAclsAclArrayOutput) ToGetLbAclsAclArrayOutput() GetLbAclsAclArrayOutput {
	return o
}

func (o GetLbAclsAclArrayOutput) ToGetLbAclsAclArrayOutputWithContext(ctx context.Context) GetLbAclsAclArrayOutput {
	return o
}

func (o GetLbAclsAclArrayOutput) Index(i pulumi.IntInput) GetLbAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbAclsAcl {
		return vs[0].([]GetLbAclsAcl)[vs[1].(int)]
	}).(GetLbAclsAclOutput)
}

type GetLbAclsAclAction struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects []GetLbAclsAclActionRedirect `pulumi:"redirects"`
	// The redirect type.
	Type string `pulumi:"type"`
}

// GetLbAclsAclActionInput is an input type that accepts GetLbAclsAclActionArgs and GetLbAclsAclActionOutput values.
// You can construct a concrete instance of `GetLbAclsAclActionInput` via:
//
//	GetLbAclsAclActionArgs{...}
type GetLbAclsAclActionInput interface {
	pulumi.Input

	ToGetLbAclsAclActionOutput() GetLbAclsAclActionOutput
	ToGetLbAclsAclActionOutputWithContext(context.Context) GetLbAclsAclActionOutput
}

type GetLbAclsAclActionArgs struct {
	// Redirect parameters when using an ACL with `redirect` action.
	Redirects GetLbAclsAclActionRedirectArrayInput `pulumi:"redirects"`
	// The redirect type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLbAclsAclActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclAction)(nil)).Elem()
}

func (i GetLbAclsAclActionArgs) ToGetLbAclsAclActionOutput() GetLbAclsAclActionOutput {
	return i.ToGetLbAclsAclActionOutputWithContext(context.Background())
}

func (i GetLbAclsAclActionArgs) ToGetLbAclsAclActionOutputWithContext(ctx context.Context) GetLbAclsAclActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclActionOutput)
}

// GetLbAclsAclActionArrayInput is an input type that accepts GetLbAclsAclActionArray and GetLbAclsAclActionArrayOutput values.
// You can construct a concrete instance of `GetLbAclsAclActionArrayInput` via:
//
//	GetLbAclsAclActionArray{ GetLbAclsAclActionArgs{...} }
type GetLbAclsAclActionArrayInput interface {
	pulumi.Input

	ToGetLbAclsAclActionArrayOutput() GetLbAclsAclActionArrayOutput
	ToGetLbAclsAclActionArrayOutputWithContext(context.Context) GetLbAclsAclActionArrayOutput
}

type GetLbAclsAclActionArray []GetLbAclsAclActionInput

func (GetLbAclsAclActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclAction)(nil)).Elem()
}

func (i GetLbAclsAclActionArray) ToGetLbAclsAclActionArrayOutput() GetLbAclsAclActionArrayOutput {
	return i.ToGetLbAclsAclActionArrayOutputWithContext(context.Background())
}

func (i GetLbAclsAclActionArray) ToGetLbAclsAclActionArrayOutputWithContext(ctx context.Context) GetLbAclsAclActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclActionArrayOutput)
}

type GetLbAclsAclActionOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclAction)(nil)).Elem()
}

func (o GetLbAclsAclActionOutput) ToGetLbAclsAclActionOutput() GetLbAclsAclActionOutput {
	return o
}

func (o GetLbAclsAclActionOutput) ToGetLbAclsAclActionOutputWithContext(ctx context.Context) GetLbAclsAclActionOutput {
	return o
}

// Redirect parameters when using an ACL with `redirect` action.
func (o GetLbAclsAclActionOutput) Redirects() GetLbAclsAclActionRedirectArrayOutput {
	return o.ApplyT(func(v GetLbAclsAclAction) []GetLbAclsAclActionRedirect { return v.Redirects }).(GetLbAclsAclActionRedirectArrayOutput)
}

// The redirect type.
func (o GetLbAclsAclActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAclAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetLbAclsAclActionArrayOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclAction)(nil)).Elem()
}

func (o GetLbAclsAclActionArrayOutput) ToGetLbAclsAclActionArrayOutput() GetLbAclsAclActionArrayOutput {
	return o
}

func (o GetLbAclsAclActionArrayOutput) ToGetLbAclsAclActionArrayOutputWithContext(ctx context.Context) GetLbAclsAclActionArrayOutput {
	return o
}

func (o GetLbAclsAclActionArrayOutput) Index(i pulumi.IntInput) GetLbAclsAclActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbAclsAclAction {
		return vs[0].([]GetLbAclsAclAction)[vs[1].(int)]
	}).(GetLbAclsAclActionOutput)
}

type GetLbAclsAclActionRedirect struct {
	// The HTTP redirect code used.
	Code int `pulumi:"code"`
	// The URL used in case of a location redirect or the scheme name that replaces the request's original scheme.
	Target string `pulumi:"target"`
	// The redirect type.
	Type string `pulumi:"type"`
}

// GetLbAclsAclActionRedirectInput is an input type that accepts GetLbAclsAclActionRedirectArgs and GetLbAclsAclActionRedirectOutput values.
// You can construct a concrete instance of `GetLbAclsAclActionRedirectInput` via:
//
//	GetLbAclsAclActionRedirectArgs{...}
type GetLbAclsAclActionRedirectInput interface {
	pulumi.Input

	ToGetLbAclsAclActionRedirectOutput() GetLbAclsAclActionRedirectOutput
	ToGetLbAclsAclActionRedirectOutputWithContext(context.Context) GetLbAclsAclActionRedirectOutput
}

type GetLbAclsAclActionRedirectArgs struct {
	// The HTTP redirect code used.
	Code pulumi.IntInput `pulumi:"code"`
	// The URL used in case of a location redirect or the scheme name that replaces the request's original scheme.
	Target pulumi.StringInput `pulumi:"target"`
	// The redirect type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLbAclsAclActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclActionRedirect)(nil)).Elem()
}

func (i GetLbAclsAclActionRedirectArgs) ToGetLbAclsAclActionRedirectOutput() GetLbAclsAclActionRedirectOutput {
	return i.ToGetLbAclsAclActionRedirectOutputWithContext(context.Background())
}

func (i GetLbAclsAclActionRedirectArgs) ToGetLbAclsAclActionRedirectOutputWithContext(ctx context.Context) GetLbAclsAclActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclActionRedirectOutput)
}

// GetLbAclsAclActionRedirectArrayInput is an input type that accepts GetLbAclsAclActionRedirectArray and GetLbAclsAclActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetLbAclsAclActionRedirectArrayInput` via:
//
//	GetLbAclsAclActionRedirectArray{ GetLbAclsAclActionRedirectArgs{...} }
type GetLbAclsAclActionRedirectArrayInput interface {
	pulumi.Input

	ToGetLbAclsAclActionRedirectArrayOutput() GetLbAclsAclActionRedirectArrayOutput
	ToGetLbAclsAclActionRedirectArrayOutputWithContext(context.Context) GetLbAclsAclActionRedirectArrayOutput
}

type GetLbAclsAclActionRedirectArray []GetLbAclsAclActionRedirectInput

func (GetLbAclsAclActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclActionRedirect)(nil)).Elem()
}

func (i GetLbAclsAclActionRedirectArray) ToGetLbAclsAclActionRedirectArrayOutput() GetLbAclsAclActionRedirectArrayOutput {
	return i.ToGetLbAclsAclActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetLbAclsAclActionRedirectArray) ToGetLbAclsAclActionRedirectArrayOutputWithContext(ctx context.Context) GetLbAclsAclActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclActionRedirectArrayOutput)
}

type GetLbAclsAclActionRedirectOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclActionRedirect)(nil)).Elem()
}

func (o GetLbAclsAclActionRedirectOutput) ToGetLbAclsAclActionRedirectOutput() GetLbAclsAclActionRedirectOutput {
	return o
}

func (o GetLbAclsAclActionRedirectOutput) ToGetLbAclsAclActionRedirectOutputWithContext(ctx context.Context) GetLbAclsAclActionRedirectOutput {
	return o
}

// The HTTP redirect code used.
func (o GetLbAclsAclActionRedirectOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbAclsAclActionRedirect) int { return v.Code }).(pulumi.IntOutput)
}

// The URL used in case of a location redirect or the scheme name that replaces the request's original scheme.
func (o GetLbAclsAclActionRedirectOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAclActionRedirect) string { return v.Target }).(pulumi.StringOutput)
}

// The redirect type.
func (o GetLbAclsAclActionRedirectOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAclActionRedirect) string { return v.Type }).(pulumi.StringOutput)
}

type GetLbAclsAclActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclActionRedirect)(nil)).Elem()
}

func (o GetLbAclsAclActionRedirectArrayOutput) ToGetLbAclsAclActionRedirectArrayOutput() GetLbAclsAclActionRedirectArrayOutput {
	return o
}

func (o GetLbAclsAclActionRedirectArrayOutput) ToGetLbAclsAclActionRedirectArrayOutputWithContext(ctx context.Context) GetLbAclsAclActionRedirectArrayOutput {
	return o
}

func (o GetLbAclsAclActionRedirectArrayOutput) Index(i pulumi.IntInput) GetLbAclsAclActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbAclsAclActionRedirect {
		return vs[0].([]GetLbAclsAclActionRedirect)[vs[1].(int)]
	}).(GetLbAclsAclActionRedirectOutput)
}

type GetLbAclsAclMatch struct {
	// The matched HTTP filter.
	HttpFilter string `pulumi:"httpFilter"`
	// A list of possible values for the HTTP filter based on the HTTP header.
	HttpFilterOption string `pulumi:"httpFilterOption"`
	// The possible values matched for a given HTTP filter.
	HttpFilterValues []string `pulumi:"httpFilterValues"`
	// The condition will be of type "unless" if invert is set to `true`
	Invert bool `pulumi:"invert"`
	// A list of matched IPs or CIDR v4/v6 addresses of the client of the session.
	IpSubnets []string `pulumi:"ipSubnets"`
}

// GetLbAclsAclMatchInput is an input type that accepts GetLbAclsAclMatchArgs and GetLbAclsAclMatchOutput values.
// You can construct a concrete instance of `GetLbAclsAclMatchInput` via:
//
//	GetLbAclsAclMatchArgs{...}
type GetLbAclsAclMatchInput interface {
	pulumi.Input

	ToGetLbAclsAclMatchOutput() GetLbAclsAclMatchOutput
	ToGetLbAclsAclMatchOutputWithContext(context.Context) GetLbAclsAclMatchOutput
}

type GetLbAclsAclMatchArgs struct {
	// The matched HTTP filter.
	HttpFilter pulumi.StringInput `pulumi:"httpFilter"`
	// A list of possible values for the HTTP filter based on the HTTP header.
	HttpFilterOption pulumi.StringInput `pulumi:"httpFilterOption"`
	// The possible values matched for a given HTTP filter.
	HttpFilterValues pulumi.StringArrayInput `pulumi:"httpFilterValues"`
	// The condition will be of type "unless" if invert is set to `true`
	Invert pulumi.BoolInput `pulumi:"invert"`
	// A list of matched IPs or CIDR v4/v6 addresses of the client of the session.
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
}

func (GetLbAclsAclMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclMatch)(nil)).Elem()
}

func (i GetLbAclsAclMatchArgs) ToGetLbAclsAclMatchOutput() GetLbAclsAclMatchOutput {
	return i.ToGetLbAclsAclMatchOutputWithContext(context.Background())
}

func (i GetLbAclsAclMatchArgs) ToGetLbAclsAclMatchOutputWithContext(ctx context.Context) GetLbAclsAclMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclMatchOutput)
}

// GetLbAclsAclMatchArrayInput is an input type that accepts GetLbAclsAclMatchArray and GetLbAclsAclMatchArrayOutput values.
// You can construct a concrete instance of `GetLbAclsAclMatchArrayInput` via:
//
//	GetLbAclsAclMatchArray{ GetLbAclsAclMatchArgs{...} }
type GetLbAclsAclMatchArrayInput interface {
	pulumi.Input

	ToGetLbAclsAclMatchArrayOutput() GetLbAclsAclMatchArrayOutput
	ToGetLbAclsAclMatchArrayOutputWithContext(context.Context) GetLbAclsAclMatchArrayOutput
}

type GetLbAclsAclMatchArray []GetLbAclsAclMatchInput

func (GetLbAclsAclMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclMatch)(nil)).Elem()
}

func (i GetLbAclsAclMatchArray) ToGetLbAclsAclMatchArrayOutput() GetLbAclsAclMatchArrayOutput {
	return i.ToGetLbAclsAclMatchArrayOutputWithContext(context.Background())
}

func (i GetLbAclsAclMatchArray) ToGetLbAclsAclMatchArrayOutputWithContext(ctx context.Context) GetLbAclsAclMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbAclsAclMatchArrayOutput)
}

type GetLbAclsAclMatchOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbAclsAclMatch)(nil)).Elem()
}

func (o GetLbAclsAclMatchOutput) ToGetLbAclsAclMatchOutput() GetLbAclsAclMatchOutput {
	return o
}

func (o GetLbAclsAclMatchOutput) ToGetLbAclsAclMatchOutputWithContext(ctx context.Context) GetLbAclsAclMatchOutput {
	return o
}

// The matched HTTP filter.
func (o GetLbAclsAclMatchOutput) HttpFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAclMatch) string { return v.HttpFilter }).(pulumi.StringOutput)
}

// A list of possible values for the HTTP filter based on the HTTP header.
func (o GetLbAclsAclMatchOutput) HttpFilterOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbAclsAclMatch) string { return v.HttpFilterOption }).(pulumi.StringOutput)
}

// The possible values matched for a given HTTP filter.
func (o GetLbAclsAclMatchOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbAclsAclMatch) []string { return v.HttpFilterValues }).(pulumi.StringArrayOutput)
}

// The condition will be of type "unless" if invert is set to `true`
func (o GetLbAclsAclMatchOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbAclsAclMatch) bool { return v.Invert }).(pulumi.BoolOutput)
}

// A list of matched IPs or CIDR v4/v6 addresses of the client of the session.
func (o GetLbAclsAclMatchOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbAclsAclMatch) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

type GetLbAclsAclMatchArrayOutput struct{ *pulumi.OutputState }

func (GetLbAclsAclMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbAclsAclMatch)(nil)).Elem()
}

func (o GetLbAclsAclMatchArrayOutput) ToGetLbAclsAclMatchArrayOutput() GetLbAclsAclMatchArrayOutput {
	return o
}

func (o GetLbAclsAclMatchArrayOutput) ToGetLbAclsAclMatchArrayOutputWithContext(ctx context.Context) GetLbAclsAclMatchArrayOutput {
	return o
}

func (o GetLbAclsAclMatchArrayOutput) Index(i pulumi.IntInput) GetLbAclsAclMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbAclsAclMatch {
		return vs[0].([]GetLbAclsAclMatch)[vs[1].(int)]
	}).(GetLbAclsAclMatchOutput)
}

type GetLbBackendHealthCheckHttp struct {
	// The expected HTTP status code
	Code int `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader string `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method string `pulumi:"method"`
	// The SNI to use for HC requests over SSL
	Sni string `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests
	Uri string `pulumi:"uri"`
}

// GetLbBackendHealthCheckHttpInput is an input type that accepts GetLbBackendHealthCheckHttpArgs and GetLbBackendHealthCheckHttpOutput values.
// You can construct a concrete instance of `GetLbBackendHealthCheckHttpInput` via:
//
//	GetLbBackendHealthCheckHttpArgs{...}
type GetLbBackendHealthCheckHttpInput interface {
	pulumi.Input

	ToGetLbBackendHealthCheckHttpOutput() GetLbBackendHealthCheckHttpOutput
	ToGetLbBackendHealthCheckHttpOutputWithContext(context.Context) GetLbBackendHealthCheckHttpOutput
}

type GetLbBackendHealthCheckHttpArgs struct {
	// The expected HTTP status code
	Code pulumi.IntInput `pulumi:"code"`
	// The HTTP host header to use for HC requests
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests
	Method pulumi.StringInput `pulumi:"method"`
	// The SNI to use for HC requests over SSL
	Sni pulumi.StringInput `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetLbBackendHealthCheckHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendHealthCheckHttp)(nil)).Elem()
}

func (i GetLbBackendHealthCheckHttpArgs) ToGetLbBackendHealthCheckHttpOutput() GetLbBackendHealthCheckHttpOutput {
	return i.ToGetLbBackendHealthCheckHttpOutputWithContext(context.Background())
}

func (i GetLbBackendHealthCheckHttpArgs) ToGetLbBackendHealthCheckHttpOutputWithContext(ctx context.Context) GetLbBackendHealthCheckHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendHealthCheckHttpOutput)
}

// GetLbBackendHealthCheckHttpArrayInput is an input type that accepts GetLbBackendHealthCheckHttpArray and GetLbBackendHealthCheckHttpArrayOutput values.
// You can construct a concrete instance of `GetLbBackendHealthCheckHttpArrayInput` via:
//
//	GetLbBackendHealthCheckHttpArray{ GetLbBackendHealthCheckHttpArgs{...} }
type GetLbBackendHealthCheckHttpArrayInput interface {
	pulumi.Input

	ToGetLbBackendHealthCheckHttpArrayOutput() GetLbBackendHealthCheckHttpArrayOutput
	ToGetLbBackendHealthCheckHttpArrayOutputWithContext(context.Context) GetLbBackendHealthCheckHttpArrayOutput
}

type GetLbBackendHealthCheckHttpArray []GetLbBackendHealthCheckHttpInput

func (GetLbBackendHealthCheckHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendHealthCheckHttp)(nil)).Elem()
}

func (i GetLbBackendHealthCheckHttpArray) ToGetLbBackendHealthCheckHttpArrayOutput() GetLbBackendHealthCheckHttpArrayOutput {
	return i.ToGetLbBackendHealthCheckHttpArrayOutputWithContext(context.Background())
}

func (i GetLbBackendHealthCheckHttpArray) ToGetLbBackendHealthCheckHttpArrayOutputWithContext(ctx context.Context) GetLbBackendHealthCheckHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendHealthCheckHttpArrayOutput)
}

type GetLbBackendHealthCheckHttpOutput struct{ *pulumi.OutputState }

func (GetLbBackendHealthCheckHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendHealthCheckHttp)(nil)).Elem()
}

func (o GetLbBackendHealthCheckHttpOutput) ToGetLbBackendHealthCheckHttpOutput() GetLbBackendHealthCheckHttpOutput {
	return o
}

func (o GetLbBackendHealthCheckHttpOutput) ToGetLbBackendHealthCheckHttpOutputWithContext(ctx context.Context) GetLbBackendHealthCheckHttpOutput {
	return o
}

// The expected HTTP status code
func (o GetLbBackendHealthCheckHttpOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbBackendHealthCheckHttp) int { return v.Code }).(pulumi.IntOutput)
}

// The HTTP host header to use for HC requests
func (o GetLbBackendHealthCheckHttpOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendHealthCheckHttp) string { return v.HostHeader }).(pulumi.StringOutput)
}

// The HTTP method to use for HC requests
func (o GetLbBackendHealthCheckHttpOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendHealthCheckHttp) string { return v.Method }).(pulumi.StringOutput)
}

// The SNI to use for HC requests over SSL
func (o GetLbBackendHealthCheckHttpOutput) Sni() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendHealthCheckHttp) string { return v.Sni }).(pulumi.StringOutput)
}

// The HTTPS endpoint URL to call for HC requests
func (o GetLbBackendHealthCheckHttpOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendHealthCheckHttp) string { return v.Uri }).(pulumi.StringOutput)
}

type GetLbBackendHealthCheckHttpArrayOutput struct{ *pulumi.OutputState }

func (GetLbBackendHealthCheckHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendHealthCheckHttp)(nil)).Elem()
}

func (o GetLbBackendHealthCheckHttpArrayOutput) ToGetLbBackendHealthCheckHttpArrayOutput() GetLbBackendHealthCheckHttpArrayOutput {
	return o
}

func (o GetLbBackendHealthCheckHttpArrayOutput) ToGetLbBackendHealthCheckHttpArrayOutputWithContext(ctx context.Context) GetLbBackendHealthCheckHttpArrayOutput {
	return o
}

func (o GetLbBackendHealthCheckHttpArrayOutput) Index(i pulumi.IntInput) GetLbBackendHealthCheckHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbBackendHealthCheckHttp {
		return vs[0].([]GetLbBackendHealthCheckHttp)[vs[1].(int)]
	}).(GetLbBackendHealthCheckHttpOutput)
}

type GetLbBackendHealthCheckTcp struct {
}

// GetLbBackendHealthCheckTcpInput is an input type that accepts GetLbBackendHealthCheckTcpArgs and GetLbBackendHealthCheckTcpOutput values.
// You can construct a concrete instance of `GetLbBackendHealthCheckTcpInput` via:
//
//	GetLbBackendHealthCheckTcpArgs{...}
type GetLbBackendHealthCheckTcpInput interface {
	pulumi.Input

	ToGetLbBackendHealthCheckTcpOutput() GetLbBackendHealthCheckTcpOutput
	ToGetLbBackendHealthCheckTcpOutputWithContext(context.Context) GetLbBackendHealthCheckTcpOutput
}

type GetLbBackendHealthCheckTcpArgs struct {
}

func (GetLbBackendHealthCheckTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendHealthCheckTcp)(nil)).Elem()
}

func (i GetLbBackendHealthCheckTcpArgs) ToGetLbBackendHealthCheckTcpOutput() GetLbBackendHealthCheckTcpOutput {
	return i.ToGetLbBackendHealthCheckTcpOutputWithContext(context.Background())
}

func (i GetLbBackendHealthCheckTcpArgs) ToGetLbBackendHealthCheckTcpOutputWithContext(ctx context.Context) GetLbBackendHealthCheckTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendHealthCheckTcpOutput)
}

// GetLbBackendHealthCheckTcpArrayInput is an input type that accepts GetLbBackendHealthCheckTcpArray and GetLbBackendHealthCheckTcpArrayOutput values.
// You can construct a concrete instance of `GetLbBackendHealthCheckTcpArrayInput` via:
//
//	GetLbBackendHealthCheckTcpArray{ GetLbBackendHealthCheckTcpArgs{...} }
type GetLbBackendHealthCheckTcpArrayInput interface {
	pulumi.Input

	ToGetLbBackendHealthCheckTcpArrayOutput() GetLbBackendHealthCheckTcpArrayOutput
	ToGetLbBackendHealthCheckTcpArrayOutputWithContext(context.Context) GetLbBackendHealthCheckTcpArrayOutput
}

type GetLbBackendHealthCheckTcpArray []GetLbBackendHealthCheckTcpInput

func (GetLbBackendHealthCheckTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendHealthCheckTcp)(nil)).Elem()
}

func (i GetLbBackendHealthCheckTcpArray) ToGetLbBackendHealthCheckTcpArrayOutput() GetLbBackendHealthCheckTcpArrayOutput {
	return i.ToGetLbBackendHealthCheckTcpArrayOutputWithContext(context.Background())
}

func (i GetLbBackendHealthCheckTcpArray) ToGetLbBackendHealthCheckTcpArrayOutputWithContext(ctx context.Context) GetLbBackendHealthCheckTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendHealthCheckTcpArrayOutput)
}

type GetLbBackendHealthCheckTcpOutput struct{ *pulumi.OutputState }

func (GetLbBackendHealthCheckTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendHealthCheckTcp)(nil)).Elem()
}

func (o GetLbBackendHealthCheckTcpOutput) ToGetLbBackendHealthCheckTcpOutput() GetLbBackendHealthCheckTcpOutput {
	return o
}

func (o GetLbBackendHealthCheckTcpOutput) ToGetLbBackendHealthCheckTcpOutputWithContext(ctx context.Context) GetLbBackendHealthCheckTcpOutput {
	return o
}

type GetLbBackendHealthCheckTcpArrayOutput struct{ *pulumi.OutputState }

func (GetLbBackendHealthCheckTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendHealthCheckTcp)(nil)).Elem()
}

func (o GetLbBackendHealthCheckTcpArrayOutput) ToGetLbBackendHealthCheckTcpArrayOutput() GetLbBackendHealthCheckTcpArrayOutput {
	return o
}

func (o GetLbBackendHealthCheckTcpArrayOutput) ToGetLbBackendHealthCheckTcpArrayOutputWithContext(ctx context.Context) GetLbBackendHealthCheckTcpArrayOutput {
	return o
}

func (o GetLbBackendHealthCheckTcpArrayOutput) Index(i pulumi.IntInput) GetLbBackendHealthCheckTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbBackendHealthCheckTcp {
		return vs[0].([]GetLbBackendHealthCheckTcp)[vs[1].(int)]
	}).(GetLbBackendHealthCheckTcpOutput)
}

type GetLbBackendsBackend struct {
	// The date at which the backend was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// Scaleway S3 bucket website to be served in case all backend servers are down.
	FailoverHost string `pulumi:"failoverHost"`
	// User sessions will be forwarded to this port of backend servers.
	ForwardPort int `pulumi:"forwardPort"`
	// Load balancing algorithm.
	ForwardPortAlgorithm string `pulumi:"forwardPortAlgorithm"`
	// Backend protocol.
	ForwardProtocol string `pulumi:"forwardProtocol"`
	// Interval between two HC requests.
	HealthCheckDelay string `pulumi:"healthCheckDelay"`
	// This block enable HTTP health check.
	HealthCheckHttp []GetLbBackendsBackendHealthCheckHttp `pulumi:"healthCheckHttp"`
	// This block enable HTTPS health check.
	HealthCheckHttps []GetLbBackendsBackendHealthCheckHttp `pulumi:"healthCheckHttps"`
	// Number of allowed failed HC requests before the backend server is marked down.
	HealthCheckMaxRetries int `pulumi:"healthCheckMaxRetries"`
	// Port the HC requests will be sent to.
	HealthCheckPort int `pulumi:"healthCheckPort"`
	// This block enable TCP health check.
	HealthCheckTcps []GetLbBackendsBackendHealthCheckTcp `pulumi:"healthCheckTcps"`
	// Timeout before we consider a HC request failed.
	HealthCheckTimeout string `pulumi:"healthCheckTimeout"`
	// The associated backend ID.
	Id string `pulumi:"id"`
	// Specifies whether the Load Balancer should check the backend server’s certificate before initiating a connection.
	IgnoreSslServerVerify bool `pulumi:"ignoreSslServerVerify"`
	// The load-balancer ID this backend is attached to. backends with a LB ID like it are listed.
	LbId string `pulumi:"lbId"`
	// The backend name used as filter. Backends with a name like it are listed.
	Name string `pulumi:"name"`
	// Modify what occurs when a backend server is marked down.
	OnMarkedDownAction string `pulumi:"onMarkedDownAction"`
	// The type of PROXY protocol.
	ProxyProtocol string `pulumi:"proxyProtocol"`
	// List of backend server IP addresses.
	ServerIps []string `pulumi:"serverIps"`
	// Enables SSL between load balancer and backend servers.
	SslBridging bool `pulumi:"sslBridging"`
	// Enables cookie-based session persistence.
	StickySessions string `pulumi:"stickySessions"`
	// Cookie name for sticky sessions.
	StickySessionsCookieName string `pulumi:"stickySessionsCookieName"`
	// Maximum initial server connection establishment time.
	TimeoutConnect string `pulumi:"timeoutConnect"`
	// Maximum server connection inactivity time.
	TimeoutServer string `pulumi:"timeoutServer"`
	// Maximum tunnel inactivity time.
	TimeoutTunnel string `pulumi:"timeoutTunnel"`
	// The date at which the backend was last updated (RFC 3339 format).
	UpdateAt string `pulumi:"updateAt"`
}

// GetLbBackendsBackendInput is an input type that accepts GetLbBackendsBackendArgs and GetLbBackendsBackendOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendInput` via:
//
//	GetLbBackendsBackendArgs{...}
type GetLbBackendsBackendInput interface {
	pulumi.Input

	ToGetLbBackendsBackendOutput() GetLbBackendsBackendOutput
	ToGetLbBackendsBackendOutputWithContext(context.Context) GetLbBackendsBackendOutput
}

type GetLbBackendsBackendArgs struct {
	// The date at which the backend was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Scaleway S3 bucket website to be served in case all backend servers are down.
	FailoverHost pulumi.StringInput `pulumi:"failoverHost"`
	// User sessions will be forwarded to this port of backend servers.
	ForwardPort pulumi.IntInput `pulumi:"forwardPort"`
	// Load balancing algorithm.
	ForwardPortAlgorithm pulumi.StringInput `pulumi:"forwardPortAlgorithm"`
	// Backend protocol.
	ForwardProtocol pulumi.StringInput `pulumi:"forwardProtocol"`
	// Interval between two HC requests.
	HealthCheckDelay pulumi.StringInput `pulumi:"healthCheckDelay"`
	// This block enable HTTP health check.
	HealthCheckHttp GetLbBackendsBackendHealthCheckHttpArrayInput `pulumi:"healthCheckHttp"`
	// This block enable HTTPS health check.
	HealthCheckHttps GetLbBackendsBackendHealthCheckHttpArrayInput `pulumi:"healthCheckHttps"`
	// Number of allowed failed HC requests before the backend server is marked down.
	HealthCheckMaxRetries pulumi.IntInput `pulumi:"healthCheckMaxRetries"`
	// Port the HC requests will be sent to.
	HealthCheckPort pulumi.IntInput `pulumi:"healthCheckPort"`
	// This block enable TCP health check.
	HealthCheckTcps GetLbBackendsBackendHealthCheckTcpArrayInput `pulumi:"healthCheckTcps"`
	// Timeout before we consider a HC request failed.
	HealthCheckTimeout pulumi.StringInput `pulumi:"healthCheckTimeout"`
	// The associated backend ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the Load Balancer should check the backend server’s certificate before initiating a connection.
	IgnoreSslServerVerify pulumi.BoolInput `pulumi:"ignoreSslServerVerify"`
	// The load-balancer ID this backend is attached to. backends with a LB ID like it are listed.
	LbId pulumi.StringInput `pulumi:"lbId"`
	// The backend name used as filter. Backends with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// Modify what occurs when a backend server is marked down.
	OnMarkedDownAction pulumi.StringInput `pulumi:"onMarkedDownAction"`
	// The type of PROXY protocol.
	ProxyProtocol pulumi.StringInput `pulumi:"proxyProtocol"`
	// List of backend server IP addresses.
	ServerIps pulumi.StringArrayInput `pulumi:"serverIps"`
	// Enables SSL between load balancer and backend servers.
	SslBridging pulumi.BoolInput `pulumi:"sslBridging"`
	// Enables cookie-based session persistence.
	StickySessions pulumi.StringInput `pulumi:"stickySessions"`
	// Cookie name for sticky sessions.
	StickySessionsCookieName pulumi.StringInput `pulumi:"stickySessionsCookieName"`
	// Maximum initial server connection establishment time.
	TimeoutConnect pulumi.StringInput `pulumi:"timeoutConnect"`
	// Maximum server connection inactivity time.
	TimeoutServer pulumi.StringInput `pulumi:"timeoutServer"`
	// Maximum tunnel inactivity time.
	TimeoutTunnel pulumi.StringInput `pulumi:"timeoutTunnel"`
	// The date at which the backend was last updated (RFC 3339 format).
	UpdateAt pulumi.StringInput `pulumi:"updateAt"`
}

func (GetLbBackendsBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackend)(nil)).Elem()
}

func (i GetLbBackendsBackendArgs) ToGetLbBackendsBackendOutput() GetLbBackendsBackendOutput {
	return i.ToGetLbBackendsBackendOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendArgs) ToGetLbBackendsBackendOutputWithContext(ctx context.Context) GetLbBackendsBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendOutput)
}

// GetLbBackendsBackendArrayInput is an input type that accepts GetLbBackendsBackendArray and GetLbBackendsBackendArrayOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendArrayInput` via:
//
//	GetLbBackendsBackendArray{ GetLbBackendsBackendArgs{...} }
type GetLbBackendsBackendArrayInput interface {
	pulumi.Input

	ToGetLbBackendsBackendArrayOutput() GetLbBackendsBackendArrayOutput
	ToGetLbBackendsBackendArrayOutputWithContext(context.Context) GetLbBackendsBackendArrayOutput
}

type GetLbBackendsBackendArray []GetLbBackendsBackendInput

func (GetLbBackendsBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackend)(nil)).Elem()
}

func (i GetLbBackendsBackendArray) ToGetLbBackendsBackendArrayOutput() GetLbBackendsBackendArrayOutput {
	return i.ToGetLbBackendsBackendArrayOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendArray) ToGetLbBackendsBackendArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendArrayOutput)
}

type GetLbBackendsBackendOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackend)(nil)).Elem()
}

func (o GetLbBackendsBackendOutput) ToGetLbBackendsBackendOutput() GetLbBackendsBackendOutput {
	return o
}

func (o GetLbBackendsBackendOutput) ToGetLbBackendsBackendOutputWithContext(ctx context.Context) GetLbBackendsBackendOutput {
	return o
}

// The date at which the backend was created (RFC 3339 format).
func (o GetLbBackendsBackendOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Scaleway S3 bucket website to be served in case all backend servers are down.
func (o GetLbBackendsBackendOutput) FailoverHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.FailoverHost }).(pulumi.StringOutput)
}

// User sessions will be forwarded to this port of backend servers.
func (o GetLbBackendsBackendOutput) ForwardPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) int { return v.ForwardPort }).(pulumi.IntOutput)
}

// Load balancing algorithm.
func (o GetLbBackendsBackendOutput) ForwardPortAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.ForwardPortAlgorithm }).(pulumi.StringOutput)
}

// Backend protocol.
func (o GetLbBackendsBackendOutput) ForwardProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.ForwardProtocol }).(pulumi.StringOutput)
}

// Interval between two HC requests.
func (o GetLbBackendsBackendOutput) HealthCheckDelay() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.HealthCheckDelay }).(pulumi.StringOutput)
}

// This block enable HTTP health check.
func (o GetLbBackendsBackendOutput) HealthCheckHttp() GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) []GetLbBackendsBackendHealthCheckHttp { return v.HealthCheckHttp }).(GetLbBackendsBackendHealthCheckHttpArrayOutput)
}

// This block enable HTTPS health check.
func (o GetLbBackendsBackendOutput) HealthCheckHttps() GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) []GetLbBackendsBackendHealthCheckHttp { return v.HealthCheckHttps }).(GetLbBackendsBackendHealthCheckHttpArrayOutput)
}

// Number of allowed failed HC requests before the backend server is marked down.
func (o GetLbBackendsBackendOutput) HealthCheckMaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) int { return v.HealthCheckMaxRetries }).(pulumi.IntOutput)
}

// Port the HC requests will be sent to.
func (o GetLbBackendsBackendOutput) HealthCheckPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) int { return v.HealthCheckPort }).(pulumi.IntOutput)
}

// This block enable TCP health check.
func (o GetLbBackendsBackendOutput) HealthCheckTcps() GetLbBackendsBackendHealthCheckTcpArrayOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) []GetLbBackendsBackendHealthCheckTcp { return v.HealthCheckTcps }).(GetLbBackendsBackendHealthCheckTcpArrayOutput)
}

// Timeout before we consider a HC request failed.
func (o GetLbBackendsBackendOutput) HealthCheckTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.HealthCheckTimeout }).(pulumi.StringOutput)
}

// The associated backend ID.
func (o GetLbBackendsBackendOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the Load Balancer should check the backend server’s certificate before initiating a connection.
func (o GetLbBackendsBackendOutput) IgnoreSslServerVerify() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) bool { return v.IgnoreSslServerVerify }).(pulumi.BoolOutput)
}

// The load-balancer ID this backend is attached to. backends with a LB ID like it are listed.
func (o GetLbBackendsBackendOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.LbId }).(pulumi.StringOutput)
}

// The backend name used as filter. Backends with a name like it are listed.
func (o GetLbBackendsBackendOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.Name }).(pulumi.StringOutput)
}

// Modify what occurs when a backend server is marked down.
func (o GetLbBackendsBackendOutput) OnMarkedDownAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.OnMarkedDownAction }).(pulumi.StringOutput)
}

// The type of PROXY protocol.
func (o GetLbBackendsBackendOutput) ProxyProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.ProxyProtocol }).(pulumi.StringOutput)
}

// List of backend server IP addresses.
func (o GetLbBackendsBackendOutput) ServerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) []string { return v.ServerIps }).(pulumi.StringArrayOutput)
}

// Enables SSL between load balancer and backend servers.
func (o GetLbBackendsBackendOutput) SslBridging() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) bool { return v.SslBridging }).(pulumi.BoolOutput)
}

// Enables cookie-based session persistence.
func (o GetLbBackendsBackendOutput) StickySessions() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.StickySessions }).(pulumi.StringOutput)
}

// Cookie name for sticky sessions.
func (o GetLbBackendsBackendOutput) StickySessionsCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.StickySessionsCookieName }).(pulumi.StringOutput)
}

// Maximum initial server connection establishment time.
func (o GetLbBackendsBackendOutput) TimeoutConnect() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.TimeoutConnect }).(pulumi.StringOutput)
}

// Maximum server connection inactivity time.
func (o GetLbBackendsBackendOutput) TimeoutServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.TimeoutServer }).(pulumi.StringOutput)
}

// Maximum tunnel inactivity time.
func (o GetLbBackendsBackendOutput) TimeoutTunnel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.TimeoutTunnel }).(pulumi.StringOutput)
}

// The date at which the backend was last updated (RFC 3339 format).
func (o GetLbBackendsBackendOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackend) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetLbBackendsBackendArrayOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackend)(nil)).Elem()
}

func (o GetLbBackendsBackendArrayOutput) ToGetLbBackendsBackendArrayOutput() GetLbBackendsBackendArrayOutput {
	return o
}

func (o GetLbBackendsBackendArrayOutput) ToGetLbBackendsBackendArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendArrayOutput {
	return o
}

func (o GetLbBackendsBackendArrayOutput) Index(i pulumi.IntInput) GetLbBackendsBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbBackendsBackend {
		return vs[0].([]GetLbBackendsBackend)[vs[1].(int)]
	}).(GetLbBackendsBackendOutput)
}

type GetLbBackendsBackendHealthCheckHttp struct {
	// The expected HTTP status code.
	Code int `pulumi:"code"`
	// The HTTP host header to use for HC requests.
	HostHeader string `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests.
	Method string `pulumi:"method"`
	// The SNI to use for HC requests over SSL.
	Sni string `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri string `pulumi:"uri"`
}

// GetLbBackendsBackendHealthCheckHttpInput is an input type that accepts GetLbBackendsBackendHealthCheckHttpArgs and GetLbBackendsBackendHealthCheckHttpOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendHealthCheckHttpInput` via:
//
//	GetLbBackendsBackendHealthCheckHttpArgs{...}
type GetLbBackendsBackendHealthCheckHttpInput interface {
	pulumi.Input

	ToGetLbBackendsBackendHealthCheckHttpOutput() GetLbBackendsBackendHealthCheckHttpOutput
	ToGetLbBackendsBackendHealthCheckHttpOutputWithContext(context.Context) GetLbBackendsBackendHealthCheckHttpOutput
}

type GetLbBackendsBackendHealthCheckHttpArgs struct {
	// The expected HTTP status code.
	Code pulumi.IntInput `pulumi:"code"`
	// The HTTP host header to use for HC requests.
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	// The HTTP method to use for HC requests.
	Method pulumi.StringInput `pulumi:"method"`
	// The SNI to use for HC requests over SSL.
	Sni pulumi.StringInput `pulumi:"sni"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetLbBackendsBackendHealthCheckHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackendHealthCheckHttp)(nil)).Elem()
}

func (i GetLbBackendsBackendHealthCheckHttpArgs) ToGetLbBackendsBackendHealthCheckHttpOutput() GetLbBackendsBackendHealthCheckHttpOutput {
	return i.ToGetLbBackendsBackendHealthCheckHttpOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendHealthCheckHttpArgs) ToGetLbBackendsBackendHealthCheckHttpOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendHealthCheckHttpOutput)
}

// GetLbBackendsBackendHealthCheckHttpArrayInput is an input type that accepts GetLbBackendsBackendHealthCheckHttpArray and GetLbBackendsBackendHealthCheckHttpArrayOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendHealthCheckHttpArrayInput` via:
//
//	GetLbBackendsBackendHealthCheckHttpArray{ GetLbBackendsBackendHealthCheckHttpArgs{...} }
type GetLbBackendsBackendHealthCheckHttpArrayInput interface {
	pulumi.Input

	ToGetLbBackendsBackendHealthCheckHttpArrayOutput() GetLbBackendsBackendHealthCheckHttpArrayOutput
	ToGetLbBackendsBackendHealthCheckHttpArrayOutputWithContext(context.Context) GetLbBackendsBackendHealthCheckHttpArrayOutput
}

type GetLbBackendsBackendHealthCheckHttpArray []GetLbBackendsBackendHealthCheckHttpInput

func (GetLbBackendsBackendHealthCheckHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackendHealthCheckHttp)(nil)).Elem()
}

func (i GetLbBackendsBackendHealthCheckHttpArray) ToGetLbBackendsBackendHealthCheckHttpArrayOutput() GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return i.ToGetLbBackendsBackendHealthCheckHttpArrayOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendHealthCheckHttpArray) ToGetLbBackendsBackendHealthCheckHttpArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendHealthCheckHttpArrayOutput)
}

type GetLbBackendsBackendHealthCheckHttpOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendHealthCheckHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackendHealthCheckHttp)(nil)).Elem()
}

func (o GetLbBackendsBackendHealthCheckHttpOutput) ToGetLbBackendsBackendHealthCheckHttpOutput() GetLbBackendsBackendHealthCheckHttpOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckHttpOutput) ToGetLbBackendsBackendHealthCheckHttpOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckHttpOutput {
	return o
}

// The expected HTTP status code.
func (o GetLbBackendsBackendHealthCheckHttpOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbBackendsBackendHealthCheckHttp) int { return v.Code }).(pulumi.IntOutput)
}

// The HTTP host header to use for HC requests.
func (o GetLbBackendsBackendHealthCheckHttpOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackendHealthCheckHttp) string { return v.HostHeader }).(pulumi.StringOutput)
}

// The HTTP method to use for HC requests.
func (o GetLbBackendsBackendHealthCheckHttpOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackendHealthCheckHttp) string { return v.Method }).(pulumi.StringOutput)
}

// The SNI to use for HC requests over SSL.
func (o GetLbBackendsBackendHealthCheckHttpOutput) Sni() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackendHealthCheckHttp) string { return v.Sni }).(pulumi.StringOutput)
}

// The HTTPS endpoint URL to call for HC requests.
func (o GetLbBackendsBackendHealthCheckHttpOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbBackendsBackendHealthCheckHttp) string { return v.Uri }).(pulumi.StringOutput)
}

type GetLbBackendsBackendHealthCheckHttpArrayOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendHealthCheckHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackendHealthCheckHttp)(nil)).Elem()
}

func (o GetLbBackendsBackendHealthCheckHttpArrayOutput) ToGetLbBackendsBackendHealthCheckHttpArrayOutput() GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckHttpArrayOutput) ToGetLbBackendsBackendHealthCheckHttpArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckHttpArrayOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckHttpArrayOutput) Index(i pulumi.IntInput) GetLbBackendsBackendHealthCheckHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbBackendsBackendHealthCheckHttp {
		return vs[0].([]GetLbBackendsBackendHealthCheckHttp)[vs[1].(int)]
	}).(GetLbBackendsBackendHealthCheckHttpOutput)
}

type GetLbBackendsBackendHealthCheckTcp struct {
}

// GetLbBackendsBackendHealthCheckTcpInput is an input type that accepts GetLbBackendsBackendHealthCheckTcpArgs and GetLbBackendsBackendHealthCheckTcpOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendHealthCheckTcpInput` via:
//
//	GetLbBackendsBackendHealthCheckTcpArgs{...}
type GetLbBackendsBackendHealthCheckTcpInput interface {
	pulumi.Input

	ToGetLbBackendsBackendHealthCheckTcpOutput() GetLbBackendsBackendHealthCheckTcpOutput
	ToGetLbBackendsBackendHealthCheckTcpOutputWithContext(context.Context) GetLbBackendsBackendHealthCheckTcpOutput
}

type GetLbBackendsBackendHealthCheckTcpArgs struct {
}

func (GetLbBackendsBackendHealthCheckTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackendHealthCheckTcp)(nil)).Elem()
}

func (i GetLbBackendsBackendHealthCheckTcpArgs) ToGetLbBackendsBackendHealthCheckTcpOutput() GetLbBackendsBackendHealthCheckTcpOutput {
	return i.ToGetLbBackendsBackendHealthCheckTcpOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendHealthCheckTcpArgs) ToGetLbBackendsBackendHealthCheckTcpOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendHealthCheckTcpOutput)
}

// GetLbBackendsBackendHealthCheckTcpArrayInput is an input type that accepts GetLbBackendsBackendHealthCheckTcpArray and GetLbBackendsBackendHealthCheckTcpArrayOutput values.
// You can construct a concrete instance of `GetLbBackendsBackendHealthCheckTcpArrayInput` via:
//
//	GetLbBackendsBackendHealthCheckTcpArray{ GetLbBackendsBackendHealthCheckTcpArgs{...} }
type GetLbBackendsBackendHealthCheckTcpArrayInput interface {
	pulumi.Input

	ToGetLbBackendsBackendHealthCheckTcpArrayOutput() GetLbBackendsBackendHealthCheckTcpArrayOutput
	ToGetLbBackendsBackendHealthCheckTcpArrayOutputWithContext(context.Context) GetLbBackendsBackendHealthCheckTcpArrayOutput
}

type GetLbBackendsBackendHealthCheckTcpArray []GetLbBackendsBackendHealthCheckTcpInput

func (GetLbBackendsBackendHealthCheckTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackendHealthCheckTcp)(nil)).Elem()
}

func (i GetLbBackendsBackendHealthCheckTcpArray) ToGetLbBackendsBackendHealthCheckTcpArrayOutput() GetLbBackendsBackendHealthCheckTcpArrayOutput {
	return i.ToGetLbBackendsBackendHealthCheckTcpArrayOutputWithContext(context.Background())
}

func (i GetLbBackendsBackendHealthCheckTcpArray) ToGetLbBackendsBackendHealthCheckTcpArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbBackendsBackendHealthCheckTcpArrayOutput)
}

type GetLbBackendsBackendHealthCheckTcpOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendHealthCheckTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbBackendsBackendHealthCheckTcp)(nil)).Elem()
}

func (o GetLbBackendsBackendHealthCheckTcpOutput) ToGetLbBackendsBackendHealthCheckTcpOutput() GetLbBackendsBackendHealthCheckTcpOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckTcpOutput) ToGetLbBackendsBackendHealthCheckTcpOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckTcpOutput {
	return o
}

type GetLbBackendsBackendHealthCheckTcpArrayOutput struct{ *pulumi.OutputState }

func (GetLbBackendsBackendHealthCheckTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbBackendsBackendHealthCheckTcp)(nil)).Elem()
}

func (o GetLbBackendsBackendHealthCheckTcpArrayOutput) ToGetLbBackendsBackendHealthCheckTcpArrayOutput() GetLbBackendsBackendHealthCheckTcpArrayOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckTcpArrayOutput) ToGetLbBackendsBackendHealthCheckTcpArrayOutputWithContext(ctx context.Context) GetLbBackendsBackendHealthCheckTcpArrayOutput {
	return o
}

func (o GetLbBackendsBackendHealthCheckTcpArrayOutput) Index(i pulumi.IntInput) GetLbBackendsBackendHealthCheckTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbBackendsBackendHealthCheckTcp {
		return vs[0].([]GetLbBackendsBackendHealthCheckTcp)[vs[1].(int)]
	}).(GetLbBackendsBackendHealthCheckTcpOutput)
}

type GetLbFrontendAcl struct {
	// Action to undertake when an ACL filter matches
	Actions []GetLbFrontendAclAction `pulumi:"actions"`
	// Date and time of ACL's creation (RFC 3339 format)
	CreatedAt string `pulumi:"createdAt"`
	// Description of the ACL
	Description string `pulumi:"description"`
	// The ACL match rule
	Matches []GetLbFrontendAclMatch `pulumi:"matches"`
	// The name of the frontend.
	// - When using the `name` you should specify the `lb-id`
	Name string `pulumi:"name"`
	// Date and time of ACL's update (RFC 3339 format)
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetLbFrontendAclInput is an input type that accepts GetLbFrontendAclArgs and GetLbFrontendAclOutput values.
// You can construct a concrete instance of `GetLbFrontendAclInput` via:
//
//	GetLbFrontendAclArgs{...}
type GetLbFrontendAclInput interface {
	pulumi.Input

	ToGetLbFrontendAclOutput() GetLbFrontendAclOutput
	ToGetLbFrontendAclOutputWithContext(context.Context) GetLbFrontendAclOutput
}

type GetLbFrontendAclArgs struct {
	// Action to undertake when an ACL filter matches
	Actions GetLbFrontendAclActionArrayInput `pulumi:"actions"`
	// Date and time of ACL's creation (RFC 3339 format)
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Description of the ACL
	Description pulumi.StringInput `pulumi:"description"`
	// The ACL match rule
	Matches GetLbFrontendAclMatchArrayInput `pulumi:"matches"`
	// The name of the frontend.
	// - When using the `name` you should specify the `lb-id`
	Name pulumi.StringInput `pulumi:"name"`
	// Date and time of ACL's update (RFC 3339 format)
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetLbFrontendAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAcl)(nil)).Elem()
}

func (i GetLbFrontendAclArgs) ToGetLbFrontendAclOutput() GetLbFrontendAclOutput {
	return i.ToGetLbFrontendAclOutputWithContext(context.Background())
}

func (i GetLbFrontendAclArgs) ToGetLbFrontendAclOutputWithContext(ctx context.Context) GetLbFrontendAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclOutput)
}

// GetLbFrontendAclArrayInput is an input type that accepts GetLbFrontendAclArray and GetLbFrontendAclArrayOutput values.
// You can construct a concrete instance of `GetLbFrontendAclArrayInput` via:
//
//	GetLbFrontendAclArray{ GetLbFrontendAclArgs{...} }
type GetLbFrontendAclArrayInput interface {
	pulumi.Input

	ToGetLbFrontendAclArrayOutput() GetLbFrontendAclArrayOutput
	ToGetLbFrontendAclArrayOutputWithContext(context.Context) GetLbFrontendAclArrayOutput
}

type GetLbFrontendAclArray []GetLbFrontendAclInput

func (GetLbFrontendAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAcl)(nil)).Elem()
}

func (i GetLbFrontendAclArray) ToGetLbFrontendAclArrayOutput() GetLbFrontendAclArrayOutput {
	return i.ToGetLbFrontendAclArrayOutputWithContext(context.Background())
}

func (i GetLbFrontendAclArray) ToGetLbFrontendAclArrayOutputWithContext(ctx context.Context) GetLbFrontendAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclArrayOutput)
}

type GetLbFrontendAclOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAcl)(nil)).Elem()
}

func (o GetLbFrontendAclOutput) ToGetLbFrontendAclOutput() GetLbFrontendAclOutput {
	return o
}

func (o GetLbFrontendAclOutput) ToGetLbFrontendAclOutputWithContext(ctx context.Context) GetLbFrontendAclOutput {
	return o
}

// Action to undertake when an ACL filter matches
func (o GetLbFrontendAclOutput) Actions() GetLbFrontendAclActionArrayOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) []GetLbFrontendAclAction { return v.Actions }).(GetLbFrontendAclActionArrayOutput)
}

// Date and time of ACL's creation (RFC 3339 format)
func (o GetLbFrontendAclOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the ACL
func (o GetLbFrontendAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The ACL match rule
func (o GetLbFrontendAclOutput) Matches() GetLbFrontendAclMatchArrayOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) []GetLbFrontendAclMatch { return v.Matches }).(GetLbFrontendAclMatchArrayOutput)
}

// The name of the frontend.
// - When using the `name` you should specify the `lb-id`
func (o GetLbFrontendAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) string { return v.Name }).(pulumi.StringOutput)
}

// Date and time of ACL's update (RFC 3339 format)
func (o GetLbFrontendAclOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAcl) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetLbFrontendAclArrayOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAcl)(nil)).Elem()
}

func (o GetLbFrontendAclArrayOutput) ToGetLbFrontendAclArrayOutput() GetLbFrontendAclArrayOutput {
	return o
}

func (o GetLbFrontendAclArrayOutput) ToGetLbFrontendAclArrayOutputWithContext(ctx context.Context) GetLbFrontendAclArrayOutput {
	return o
}

func (o GetLbFrontendAclArrayOutput) Index(i pulumi.IntInput) GetLbFrontendAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbFrontendAcl {
		return vs[0].([]GetLbFrontendAcl)[vs[1].(int)]
	}).(GetLbFrontendAclOutput)
}

type GetLbFrontendAclAction struct {
	// Redirect parameters when using an ACL with `redirect` action
	Redirects []GetLbFrontendAclActionRedirect `pulumi:"redirects"`
	// The action type
	Type string `pulumi:"type"`
}

// GetLbFrontendAclActionInput is an input type that accepts GetLbFrontendAclActionArgs and GetLbFrontendAclActionOutput values.
// You can construct a concrete instance of `GetLbFrontendAclActionInput` via:
//
//	GetLbFrontendAclActionArgs{...}
type GetLbFrontendAclActionInput interface {
	pulumi.Input

	ToGetLbFrontendAclActionOutput() GetLbFrontendAclActionOutput
	ToGetLbFrontendAclActionOutputWithContext(context.Context) GetLbFrontendAclActionOutput
}

type GetLbFrontendAclActionArgs struct {
	// Redirect parameters when using an ACL with `redirect` action
	Redirects GetLbFrontendAclActionRedirectArrayInput `pulumi:"redirects"`
	// The action type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLbFrontendAclActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclAction)(nil)).Elem()
}

func (i GetLbFrontendAclActionArgs) ToGetLbFrontendAclActionOutput() GetLbFrontendAclActionOutput {
	return i.ToGetLbFrontendAclActionOutputWithContext(context.Background())
}

func (i GetLbFrontendAclActionArgs) ToGetLbFrontendAclActionOutputWithContext(ctx context.Context) GetLbFrontendAclActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclActionOutput)
}

// GetLbFrontendAclActionArrayInput is an input type that accepts GetLbFrontendAclActionArray and GetLbFrontendAclActionArrayOutput values.
// You can construct a concrete instance of `GetLbFrontendAclActionArrayInput` via:
//
//	GetLbFrontendAclActionArray{ GetLbFrontendAclActionArgs{...} }
type GetLbFrontendAclActionArrayInput interface {
	pulumi.Input

	ToGetLbFrontendAclActionArrayOutput() GetLbFrontendAclActionArrayOutput
	ToGetLbFrontendAclActionArrayOutputWithContext(context.Context) GetLbFrontendAclActionArrayOutput
}

type GetLbFrontendAclActionArray []GetLbFrontendAclActionInput

func (GetLbFrontendAclActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclAction)(nil)).Elem()
}

func (i GetLbFrontendAclActionArray) ToGetLbFrontendAclActionArrayOutput() GetLbFrontendAclActionArrayOutput {
	return i.ToGetLbFrontendAclActionArrayOutputWithContext(context.Background())
}

func (i GetLbFrontendAclActionArray) ToGetLbFrontendAclActionArrayOutputWithContext(ctx context.Context) GetLbFrontendAclActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclActionArrayOutput)
}

type GetLbFrontendAclActionOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclAction)(nil)).Elem()
}

func (o GetLbFrontendAclActionOutput) ToGetLbFrontendAclActionOutput() GetLbFrontendAclActionOutput {
	return o
}

func (o GetLbFrontendAclActionOutput) ToGetLbFrontendAclActionOutputWithContext(ctx context.Context) GetLbFrontendAclActionOutput {
	return o
}

// Redirect parameters when using an ACL with `redirect` action
func (o GetLbFrontendAclActionOutput) Redirects() GetLbFrontendAclActionRedirectArrayOutput {
	return o.ApplyT(func(v GetLbFrontendAclAction) []GetLbFrontendAclActionRedirect { return v.Redirects }).(GetLbFrontendAclActionRedirectArrayOutput)
}

// The action type
func (o GetLbFrontendAclActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAclAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetLbFrontendAclActionArrayOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclAction)(nil)).Elem()
}

func (o GetLbFrontendAclActionArrayOutput) ToGetLbFrontendAclActionArrayOutput() GetLbFrontendAclActionArrayOutput {
	return o
}

func (o GetLbFrontendAclActionArrayOutput) ToGetLbFrontendAclActionArrayOutputWithContext(ctx context.Context) GetLbFrontendAclActionArrayOutput {
	return o
}

func (o GetLbFrontendAclActionArrayOutput) Index(i pulumi.IntInput) GetLbFrontendAclActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbFrontendAclAction {
		return vs[0].([]GetLbFrontendAclAction)[vs[1].(int)]
	}).(GetLbFrontendAclActionOutput)
}

type GetLbFrontendAclActionRedirect struct {
	// The HTTP redirect code to use
	Code int `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target string `pulumi:"target"`
	// The redirect type
	Type string `pulumi:"type"`
}

// GetLbFrontendAclActionRedirectInput is an input type that accepts GetLbFrontendAclActionRedirectArgs and GetLbFrontendAclActionRedirectOutput values.
// You can construct a concrete instance of `GetLbFrontendAclActionRedirectInput` via:
//
//	GetLbFrontendAclActionRedirectArgs{...}
type GetLbFrontendAclActionRedirectInput interface {
	pulumi.Input

	ToGetLbFrontendAclActionRedirectOutput() GetLbFrontendAclActionRedirectOutput
	ToGetLbFrontendAclActionRedirectOutputWithContext(context.Context) GetLbFrontendAclActionRedirectOutput
}

type GetLbFrontendAclActionRedirectArgs struct {
	// The HTTP redirect code to use
	Code pulumi.IntInput `pulumi:"code"`
	// An URL can be used in case of a location redirect
	Target pulumi.StringInput `pulumi:"target"`
	// The redirect type
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLbFrontendAclActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclActionRedirect)(nil)).Elem()
}

func (i GetLbFrontendAclActionRedirectArgs) ToGetLbFrontendAclActionRedirectOutput() GetLbFrontendAclActionRedirectOutput {
	return i.ToGetLbFrontendAclActionRedirectOutputWithContext(context.Background())
}

func (i GetLbFrontendAclActionRedirectArgs) ToGetLbFrontendAclActionRedirectOutputWithContext(ctx context.Context) GetLbFrontendAclActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclActionRedirectOutput)
}

// GetLbFrontendAclActionRedirectArrayInput is an input type that accepts GetLbFrontendAclActionRedirectArray and GetLbFrontendAclActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetLbFrontendAclActionRedirectArrayInput` via:
//
//	GetLbFrontendAclActionRedirectArray{ GetLbFrontendAclActionRedirectArgs{...} }
type GetLbFrontendAclActionRedirectArrayInput interface {
	pulumi.Input

	ToGetLbFrontendAclActionRedirectArrayOutput() GetLbFrontendAclActionRedirectArrayOutput
	ToGetLbFrontendAclActionRedirectArrayOutputWithContext(context.Context) GetLbFrontendAclActionRedirectArrayOutput
}

type GetLbFrontendAclActionRedirectArray []GetLbFrontendAclActionRedirectInput

func (GetLbFrontendAclActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclActionRedirect)(nil)).Elem()
}

func (i GetLbFrontendAclActionRedirectArray) ToGetLbFrontendAclActionRedirectArrayOutput() GetLbFrontendAclActionRedirectArrayOutput {
	return i.ToGetLbFrontendAclActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetLbFrontendAclActionRedirectArray) ToGetLbFrontendAclActionRedirectArrayOutputWithContext(ctx context.Context) GetLbFrontendAclActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclActionRedirectArrayOutput)
}

type GetLbFrontendAclActionRedirectOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclActionRedirect)(nil)).Elem()
}

func (o GetLbFrontendAclActionRedirectOutput) ToGetLbFrontendAclActionRedirectOutput() GetLbFrontendAclActionRedirectOutput {
	return o
}

func (o GetLbFrontendAclActionRedirectOutput) ToGetLbFrontendAclActionRedirectOutputWithContext(ctx context.Context) GetLbFrontendAclActionRedirectOutput {
	return o
}

// The HTTP redirect code to use
func (o GetLbFrontendAclActionRedirectOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbFrontendAclActionRedirect) int { return v.Code }).(pulumi.IntOutput)
}

// An URL can be used in case of a location redirect
func (o GetLbFrontendAclActionRedirectOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAclActionRedirect) string { return v.Target }).(pulumi.StringOutput)
}

// The redirect type
func (o GetLbFrontendAclActionRedirectOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAclActionRedirect) string { return v.Type }).(pulumi.StringOutput)
}

type GetLbFrontendAclActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclActionRedirect)(nil)).Elem()
}

func (o GetLbFrontendAclActionRedirectArrayOutput) ToGetLbFrontendAclActionRedirectArrayOutput() GetLbFrontendAclActionRedirectArrayOutput {
	return o
}

func (o GetLbFrontendAclActionRedirectArrayOutput) ToGetLbFrontendAclActionRedirectArrayOutputWithContext(ctx context.Context) GetLbFrontendAclActionRedirectArrayOutput {
	return o
}

func (o GetLbFrontendAclActionRedirectArrayOutput) Index(i pulumi.IntInput) GetLbFrontendAclActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbFrontendAclActionRedirect {
		return vs[0].([]GetLbFrontendAclActionRedirect)[vs[1].(int)]
	}).(GetLbFrontendAclActionRedirectOutput)
}

type GetLbFrontendAclMatch struct {
	// The HTTP filter to match
	HttpFilter string `pulumi:"httpFilter"`
	// You can use this field with httpHeaderMatch acl type to set the header name to filter
	HttpFilterOption string `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter
	HttpFilterValues []string `pulumi:"httpFilterValues"`
	// If set to true, the condition will be of type "unless"
	Invert bool `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match
	IpSubnets []string `pulumi:"ipSubnets"`
}

// GetLbFrontendAclMatchInput is an input type that accepts GetLbFrontendAclMatchArgs and GetLbFrontendAclMatchOutput values.
// You can construct a concrete instance of `GetLbFrontendAclMatchInput` via:
//
//	GetLbFrontendAclMatchArgs{...}
type GetLbFrontendAclMatchInput interface {
	pulumi.Input

	ToGetLbFrontendAclMatchOutput() GetLbFrontendAclMatchOutput
	ToGetLbFrontendAclMatchOutputWithContext(context.Context) GetLbFrontendAclMatchOutput
}

type GetLbFrontendAclMatchArgs struct {
	// The HTTP filter to match
	HttpFilter pulumi.StringInput `pulumi:"httpFilter"`
	// You can use this field with httpHeaderMatch acl type to set the header name to filter
	HttpFilterOption pulumi.StringInput `pulumi:"httpFilterOption"`
	// A list of possible values to match for the given HTTP filter
	HttpFilterValues pulumi.StringArrayInput `pulumi:"httpFilterValues"`
	// If set to true, the condition will be of type "unless"
	Invert pulumi.BoolInput `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
}

func (GetLbFrontendAclMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclMatch)(nil)).Elem()
}

func (i GetLbFrontendAclMatchArgs) ToGetLbFrontendAclMatchOutput() GetLbFrontendAclMatchOutput {
	return i.ToGetLbFrontendAclMatchOutputWithContext(context.Background())
}

func (i GetLbFrontendAclMatchArgs) ToGetLbFrontendAclMatchOutputWithContext(ctx context.Context) GetLbFrontendAclMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclMatchOutput)
}

// GetLbFrontendAclMatchArrayInput is an input type that accepts GetLbFrontendAclMatchArray and GetLbFrontendAclMatchArrayOutput values.
// You can construct a concrete instance of `GetLbFrontendAclMatchArrayInput` via:
//
//	GetLbFrontendAclMatchArray{ GetLbFrontendAclMatchArgs{...} }
type GetLbFrontendAclMatchArrayInput interface {
	pulumi.Input

	ToGetLbFrontendAclMatchArrayOutput() GetLbFrontendAclMatchArrayOutput
	ToGetLbFrontendAclMatchArrayOutputWithContext(context.Context) GetLbFrontendAclMatchArrayOutput
}

type GetLbFrontendAclMatchArray []GetLbFrontendAclMatchInput

func (GetLbFrontendAclMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclMatch)(nil)).Elem()
}

func (i GetLbFrontendAclMatchArray) ToGetLbFrontendAclMatchArrayOutput() GetLbFrontendAclMatchArrayOutput {
	return i.ToGetLbFrontendAclMatchArrayOutputWithContext(context.Background())
}

func (i GetLbFrontendAclMatchArray) ToGetLbFrontendAclMatchArrayOutputWithContext(ctx context.Context) GetLbFrontendAclMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendAclMatchArrayOutput)
}

type GetLbFrontendAclMatchOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendAclMatch)(nil)).Elem()
}

func (o GetLbFrontendAclMatchOutput) ToGetLbFrontendAclMatchOutput() GetLbFrontendAclMatchOutput {
	return o
}

func (o GetLbFrontendAclMatchOutput) ToGetLbFrontendAclMatchOutputWithContext(ctx context.Context) GetLbFrontendAclMatchOutput {
	return o
}

// The HTTP filter to match
func (o GetLbFrontendAclMatchOutput) HttpFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAclMatch) string { return v.HttpFilter }).(pulumi.StringOutput)
}

// You can use this field with httpHeaderMatch acl type to set the header name to filter
func (o GetLbFrontendAclMatchOutput) HttpFilterOption() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendAclMatch) string { return v.HttpFilterOption }).(pulumi.StringOutput)
}

// A list of possible values to match for the given HTTP filter
func (o GetLbFrontendAclMatchOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbFrontendAclMatch) []string { return v.HttpFilterValues }).(pulumi.StringArrayOutput)
}

// If set to true, the condition will be of type "unless"
func (o GetLbFrontendAclMatchOutput) Invert() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbFrontendAclMatch) bool { return v.Invert }).(pulumi.BoolOutput)
}

// A list of IPs or CIDR v4/v6 addresses of the client of the session to match
func (o GetLbFrontendAclMatchOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbFrontendAclMatch) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

type GetLbFrontendAclMatchArrayOutput struct{ *pulumi.OutputState }

func (GetLbFrontendAclMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendAclMatch)(nil)).Elem()
}

func (o GetLbFrontendAclMatchArrayOutput) ToGetLbFrontendAclMatchArrayOutput() GetLbFrontendAclMatchArrayOutput {
	return o
}

func (o GetLbFrontendAclMatchArrayOutput) ToGetLbFrontendAclMatchArrayOutputWithContext(ctx context.Context) GetLbFrontendAclMatchArrayOutput {
	return o
}

func (o GetLbFrontendAclMatchArrayOutput) Index(i pulumi.IntInput) GetLbFrontendAclMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbFrontendAclMatch {
		return vs[0].([]GetLbFrontendAclMatch)[vs[1].(int)]
	}).(GetLbFrontendAclMatchOutput)
}

type GetLbFrontendsFrontend struct {
	// The load-balancer backend ID this frontend is attached to.
	// > **Important:** LB backends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	BackendId string `pulumi:"backendId"`
	// List of Certificate IDs that are used by the frontend.
	CertificateIds []string `pulumi:"certificateIds"`
	// The date at which the frontend was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// If HTTP/3 protocol is activated.
	EnableHttp3 bool `pulumi:"enableHttp3"`
	// The associated frontend ID.
	// > **Important:** LB frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	Id string `pulumi:"id"`
	// TCP port the frontend listen to.
	InboundPort int `pulumi:"inboundPort"`
	// The load-balancer ID this frontend is attached to. frontends with a LB ID like it are listed.
	LbId string `pulumi:"lbId"`
	// The frontend name used as filter. Frontends with a name like it are listed.
	Name string `pulumi:"name"`
	// Maximum inactivity time on the client side.
	TimeoutClient string `pulumi:"timeoutClient"`
	// The date at which the frontend was last updated (RFC 3339 format).
	UpdateAt string `pulumi:"updateAt"`
}

// GetLbFrontendsFrontendInput is an input type that accepts GetLbFrontendsFrontendArgs and GetLbFrontendsFrontendOutput values.
// You can construct a concrete instance of `GetLbFrontendsFrontendInput` via:
//
//	GetLbFrontendsFrontendArgs{...}
type GetLbFrontendsFrontendInput interface {
	pulumi.Input

	ToGetLbFrontendsFrontendOutput() GetLbFrontendsFrontendOutput
	ToGetLbFrontendsFrontendOutputWithContext(context.Context) GetLbFrontendsFrontendOutput
}

type GetLbFrontendsFrontendArgs struct {
	// The load-balancer backend ID this frontend is attached to.
	// > **Important:** LB backends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	BackendId pulumi.StringInput `pulumi:"backendId"`
	// List of Certificate IDs that are used by the frontend.
	CertificateIds pulumi.StringArrayInput `pulumi:"certificateIds"`
	// The date at which the frontend was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// If HTTP/3 protocol is activated.
	EnableHttp3 pulumi.BoolInput `pulumi:"enableHttp3"`
	// The associated frontend ID.
	// > **Important:** LB frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
	Id pulumi.StringInput `pulumi:"id"`
	// TCP port the frontend listen to.
	InboundPort pulumi.IntInput `pulumi:"inboundPort"`
	// The load-balancer ID this frontend is attached to. frontends with a LB ID like it are listed.
	LbId pulumi.StringInput `pulumi:"lbId"`
	// The frontend name used as filter. Frontends with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// Maximum inactivity time on the client side.
	TimeoutClient pulumi.StringInput `pulumi:"timeoutClient"`
	// The date at which the frontend was last updated (RFC 3339 format).
	UpdateAt pulumi.StringInput `pulumi:"updateAt"`
}

func (GetLbFrontendsFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendsFrontend)(nil)).Elem()
}

func (i GetLbFrontendsFrontendArgs) ToGetLbFrontendsFrontendOutput() GetLbFrontendsFrontendOutput {
	return i.ToGetLbFrontendsFrontendOutputWithContext(context.Background())
}

func (i GetLbFrontendsFrontendArgs) ToGetLbFrontendsFrontendOutputWithContext(ctx context.Context) GetLbFrontendsFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendsFrontendOutput)
}

// GetLbFrontendsFrontendArrayInput is an input type that accepts GetLbFrontendsFrontendArray and GetLbFrontendsFrontendArrayOutput values.
// You can construct a concrete instance of `GetLbFrontendsFrontendArrayInput` via:
//
//	GetLbFrontendsFrontendArray{ GetLbFrontendsFrontendArgs{...} }
type GetLbFrontendsFrontendArrayInput interface {
	pulumi.Input

	ToGetLbFrontendsFrontendArrayOutput() GetLbFrontendsFrontendArrayOutput
	ToGetLbFrontendsFrontendArrayOutputWithContext(context.Context) GetLbFrontendsFrontendArrayOutput
}

type GetLbFrontendsFrontendArray []GetLbFrontendsFrontendInput

func (GetLbFrontendsFrontendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendsFrontend)(nil)).Elem()
}

func (i GetLbFrontendsFrontendArray) ToGetLbFrontendsFrontendArrayOutput() GetLbFrontendsFrontendArrayOutput {
	return i.ToGetLbFrontendsFrontendArrayOutputWithContext(context.Background())
}

func (i GetLbFrontendsFrontendArray) ToGetLbFrontendsFrontendArrayOutputWithContext(ctx context.Context) GetLbFrontendsFrontendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbFrontendsFrontendArrayOutput)
}

type GetLbFrontendsFrontendOutput struct{ *pulumi.OutputState }

func (GetLbFrontendsFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbFrontendsFrontend)(nil)).Elem()
}

func (o GetLbFrontendsFrontendOutput) ToGetLbFrontendsFrontendOutput() GetLbFrontendsFrontendOutput {
	return o
}

func (o GetLbFrontendsFrontendOutput) ToGetLbFrontendsFrontendOutputWithContext(ctx context.Context) GetLbFrontendsFrontendOutput {
	return o
}

// The load-balancer backend ID this frontend is attached to.
// > **Important:** LB backends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
func (o GetLbFrontendsFrontendOutput) BackendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.BackendId }).(pulumi.StringOutput)
}

// List of Certificate IDs that are used by the frontend.
func (o GetLbFrontendsFrontendOutput) CertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) []string { return v.CertificateIds }).(pulumi.StringArrayOutput)
}

// The date at which the frontend was created (RFC 3339 format).
func (o GetLbFrontendsFrontendOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// If HTTP/3 protocol is activated.
func (o GetLbFrontendsFrontendOutput) EnableHttp3() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) bool { return v.EnableHttp3 }).(pulumi.BoolOutput)
}

// The associated frontend ID.
// > **Important:** LB frontends' IDs are zoned, which means they are of the form `{zone}/{id}`, e.g. `fr-par-1/11111111-1111-1111-1111-111111111111`
func (o GetLbFrontendsFrontendOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.Id }).(pulumi.StringOutput)
}

// TCP port the frontend listen to.
func (o GetLbFrontendsFrontendOutput) InboundPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) int { return v.InboundPort }).(pulumi.IntOutput)
}

// The load-balancer ID this frontend is attached to. frontends with a LB ID like it are listed.
func (o GetLbFrontendsFrontendOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.LbId }).(pulumi.StringOutput)
}

// The frontend name used as filter. Frontends with a name like it are listed.
func (o GetLbFrontendsFrontendOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.Name }).(pulumi.StringOutput)
}

// Maximum inactivity time on the client side.
func (o GetLbFrontendsFrontendOutput) TimeoutClient() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.TimeoutClient }).(pulumi.StringOutput)
}

// The date at which the frontend was last updated (RFC 3339 format).
func (o GetLbFrontendsFrontendOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbFrontendsFrontend) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetLbFrontendsFrontendArrayOutput struct{ *pulumi.OutputState }

func (GetLbFrontendsFrontendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbFrontendsFrontend)(nil)).Elem()
}

func (o GetLbFrontendsFrontendArrayOutput) ToGetLbFrontendsFrontendArrayOutput() GetLbFrontendsFrontendArrayOutput {
	return o
}

func (o GetLbFrontendsFrontendArrayOutput) ToGetLbFrontendsFrontendArrayOutputWithContext(ctx context.Context) GetLbFrontendsFrontendArrayOutput {
	return o
}

func (o GetLbFrontendsFrontendArrayOutput) Index(i pulumi.IntInput) GetLbFrontendsFrontendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbFrontendsFrontend {
		return vs[0].([]GetLbFrontendsFrontend)[vs[1].(int)]
	}).(GetLbFrontendsFrontendOutput)
}

type GetLbIpsIp struct {
	// The associated IP ID.
	Id string `pulumi:"id"`
	// The IP Address
	IpAddress string `pulumi:"ipAddress"`
	// The associated load-balancer ID if any
	LbId string `pulumi:"lbId"`
	// The organization ID the load-balancer is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the project the load-balancer is associated with.
	ProjectId string `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse string `pulumi:"reverse"`
	// `zone`) The zone in which IPs exist.
	Zone string `pulumi:"zone"`
}

// GetLbIpsIpInput is an input type that accepts GetLbIpsIpArgs and GetLbIpsIpOutput values.
// You can construct a concrete instance of `GetLbIpsIpInput` via:
//
//	GetLbIpsIpArgs{...}
type GetLbIpsIpInput interface {
	pulumi.Input

	ToGetLbIpsIpOutput() GetLbIpsIpOutput
	ToGetLbIpsIpOutputWithContext(context.Context) GetLbIpsIpOutput
}

type GetLbIpsIpArgs struct {
	// The associated IP ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP Address
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The associated load-balancer ID if any
	LbId pulumi.StringInput `pulumi:"lbId"`
	// The organization ID the load-balancer is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The reverse domain associated with this IP.
	Reverse pulumi.StringInput `pulumi:"reverse"`
	// `zone`) The zone in which IPs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetLbIpsIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbIpsIp)(nil)).Elem()
}

func (i GetLbIpsIpArgs) ToGetLbIpsIpOutput() GetLbIpsIpOutput {
	return i.ToGetLbIpsIpOutputWithContext(context.Background())
}

func (i GetLbIpsIpArgs) ToGetLbIpsIpOutputWithContext(ctx context.Context) GetLbIpsIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbIpsIpOutput)
}

// GetLbIpsIpArrayInput is an input type that accepts GetLbIpsIpArray and GetLbIpsIpArrayOutput values.
// You can construct a concrete instance of `GetLbIpsIpArrayInput` via:
//
//	GetLbIpsIpArray{ GetLbIpsIpArgs{...} }
type GetLbIpsIpArrayInput interface {
	pulumi.Input

	ToGetLbIpsIpArrayOutput() GetLbIpsIpArrayOutput
	ToGetLbIpsIpArrayOutputWithContext(context.Context) GetLbIpsIpArrayOutput
}

type GetLbIpsIpArray []GetLbIpsIpInput

func (GetLbIpsIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbIpsIp)(nil)).Elem()
}

func (i GetLbIpsIpArray) ToGetLbIpsIpArrayOutput() GetLbIpsIpArrayOutput {
	return i.ToGetLbIpsIpArrayOutputWithContext(context.Background())
}

func (i GetLbIpsIpArray) ToGetLbIpsIpArrayOutputWithContext(ctx context.Context) GetLbIpsIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbIpsIpArrayOutput)
}

type GetLbIpsIpOutput struct{ *pulumi.OutputState }

func (GetLbIpsIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbIpsIp)(nil)).Elem()
}

func (o GetLbIpsIpOutput) ToGetLbIpsIpOutput() GetLbIpsIpOutput {
	return o
}

func (o GetLbIpsIpOutput) ToGetLbIpsIpOutputWithContext(ctx context.Context) GetLbIpsIpOutput {
	return o
}

// The associated IP ID.
func (o GetLbIpsIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.Id }).(pulumi.StringOutput)
}

// The IP Address
func (o GetLbIpsIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The associated load-balancer ID if any
func (o GetLbIpsIpOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.LbId }).(pulumi.StringOutput)
}

// The organization ID the load-balancer is associated with.
func (o GetLbIpsIpOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the project the load-balancer is associated with.
func (o GetLbIpsIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The reverse domain associated with this IP.
func (o GetLbIpsIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// `zone`) The zone in which IPs exist.
func (o GetLbIpsIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbIpsIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLbIpsIpArrayOutput struct{ *pulumi.OutputState }

func (GetLbIpsIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbIpsIp)(nil)).Elem()
}

func (o GetLbIpsIpArrayOutput) ToGetLbIpsIpArrayOutput() GetLbIpsIpArrayOutput {
	return o
}

func (o GetLbIpsIpArrayOutput) ToGetLbIpsIpArrayOutputWithContext(ctx context.Context) GetLbIpsIpArrayOutput {
	return o
}

func (o GetLbIpsIpArrayOutput) Index(i pulumi.IntInput) GetLbIpsIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbIpsIp {
		return vs[0].([]GetLbIpsIp)[vs[1].(int)]
	}).(GetLbIpsIpOutput)
}

type GetLbRoutesRoute struct {
	// The backend ID destination of redirection
	BackendId string `pulumi:"backendId"`
	// The date at which the route was created (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The frontend ID origin of redirection used as a filter. routes with a frontend ID like it are listed.
	FrontendId string `pulumi:"frontendId"`
	// The associated route ID.
	Id string `pulumi:"id"`
	// Specifies the host of the server to which the request is being sent.
	MatchHostHeader string `pulumi:"matchHostHeader"`
	// Server Name Indication TLS extension field from an incoming connection made via an SSL/TLS transport layer.
	MatchSni string `pulumi:"matchSni"`
	// The date at which the route was last updated (RFC 3339 format).
	UpdateAt string `pulumi:"updateAt"`
}

// GetLbRoutesRouteInput is an input type that accepts GetLbRoutesRouteArgs and GetLbRoutesRouteOutput values.
// You can construct a concrete instance of `GetLbRoutesRouteInput` via:
//
//	GetLbRoutesRouteArgs{...}
type GetLbRoutesRouteInput interface {
	pulumi.Input

	ToGetLbRoutesRouteOutput() GetLbRoutesRouteOutput
	ToGetLbRoutesRouteOutputWithContext(context.Context) GetLbRoutesRouteOutput
}

type GetLbRoutesRouteArgs struct {
	// The backend ID destination of redirection
	BackendId pulumi.StringInput `pulumi:"backendId"`
	// The date at which the route was created (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The frontend ID origin of redirection used as a filter. routes with a frontend ID like it are listed.
	FrontendId pulumi.StringInput `pulumi:"frontendId"`
	// The associated route ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the host of the server to which the request is being sent.
	MatchHostHeader pulumi.StringInput `pulumi:"matchHostHeader"`
	// Server Name Indication TLS extension field from an incoming connection made via an SSL/TLS transport layer.
	MatchSni pulumi.StringInput `pulumi:"matchSni"`
	// The date at which the route was last updated (RFC 3339 format).
	UpdateAt pulumi.StringInput `pulumi:"updateAt"`
}

func (GetLbRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbRoutesRoute)(nil)).Elem()
}

func (i GetLbRoutesRouteArgs) ToGetLbRoutesRouteOutput() GetLbRoutesRouteOutput {
	return i.ToGetLbRoutesRouteOutputWithContext(context.Background())
}

func (i GetLbRoutesRouteArgs) ToGetLbRoutesRouteOutputWithContext(ctx context.Context) GetLbRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbRoutesRouteOutput)
}

// GetLbRoutesRouteArrayInput is an input type that accepts GetLbRoutesRouteArray and GetLbRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetLbRoutesRouteArrayInput` via:
//
//	GetLbRoutesRouteArray{ GetLbRoutesRouteArgs{...} }
type GetLbRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetLbRoutesRouteArrayOutput() GetLbRoutesRouteArrayOutput
	ToGetLbRoutesRouteArrayOutputWithContext(context.Context) GetLbRoutesRouteArrayOutput
}

type GetLbRoutesRouteArray []GetLbRoutesRouteInput

func (GetLbRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbRoutesRoute)(nil)).Elem()
}

func (i GetLbRoutesRouteArray) ToGetLbRoutesRouteArrayOutput() GetLbRoutesRouteArrayOutput {
	return i.ToGetLbRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetLbRoutesRouteArray) ToGetLbRoutesRouteArrayOutputWithContext(ctx context.Context) GetLbRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbRoutesRouteArrayOutput)
}

type GetLbRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetLbRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbRoutesRoute)(nil)).Elem()
}

func (o GetLbRoutesRouteOutput) ToGetLbRoutesRouteOutput() GetLbRoutesRouteOutput {
	return o
}

func (o GetLbRoutesRouteOutput) ToGetLbRoutesRouteOutputWithContext(ctx context.Context) GetLbRoutesRouteOutput {
	return o
}

// The backend ID destination of redirection
func (o GetLbRoutesRouteOutput) BackendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.BackendId }).(pulumi.StringOutput)
}

// The date at which the route was created (RFC 3339 format).
func (o GetLbRoutesRouteOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The frontend ID origin of redirection used as a filter. routes with a frontend ID like it are listed.
func (o GetLbRoutesRouteOutput) FrontendId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.FrontendId }).(pulumi.StringOutput)
}

// The associated route ID.
func (o GetLbRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the host of the server to which the request is being sent.
func (o GetLbRoutesRouteOutput) MatchHostHeader() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.MatchHostHeader }).(pulumi.StringOutput)
}

// Server Name Indication TLS extension field from an incoming connection made via an SSL/TLS transport layer.
func (o GetLbRoutesRouteOutput) MatchSni() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.MatchSni }).(pulumi.StringOutput)
}

// The date at which the route was last updated (RFC 3339 format).
func (o GetLbRoutesRouteOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbRoutesRoute) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetLbRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetLbRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbRoutesRoute)(nil)).Elem()
}

func (o GetLbRoutesRouteArrayOutput) ToGetLbRoutesRouteArrayOutput() GetLbRoutesRouteArrayOutput {
	return o
}

func (o GetLbRoutesRouteArrayOutput) ToGetLbRoutesRouteArrayOutputWithContext(ctx context.Context) GetLbRoutesRouteArrayOutput {
	return o
}

func (o GetLbRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetLbRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbRoutesRoute {
		return vs[0].([]GetLbRoutesRoute)[vs[1].(int)]
	}).(GetLbRoutesRouteOutput)
}

type GetLbsLb struct {
	// Number of backends the Load balancer has.
	BackendCount int `pulumi:"backendCount"`
	// Date at which the Load balancer was created.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the load-balancer.
	Description string `pulumi:"description"`
	// Number of frontends the Load balancer has.
	FrontendCount int `pulumi:"frontendCount"`
	// The ID of the load-balancer.
	Id string `pulumi:"id"`
	// List of underlying instances.
	Instances []GetLbsLbInstance `pulumi:"instances"`
	// List of IPs attached to the Load balancer.
	Ips []GetLbsLbIp `pulumi:"ips"`
	// The load balancer name used as a filter. LBs with a name like it are listed.
	Name string `pulumi:"name"`
	// The organization ID the load-balancer is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// Number of private networks attached to the Load balancer.
	PrivateNetworkCount int `pulumi:"privateNetworkCount"`
	// The ID of the project the load-balancer is associated with.
	ProjectId string `pulumi:"projectId"`
	// Number of routes the Load balancer has.
	RouteCount int `pulumi:"routeCount"`
	// Determines the minimal SSL version which needs to be supported on client side.
	SslCompatibilityLevel string `pulumi:"sslCompatibilityLevel"`
	// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
	Status string `pulumi:"status"`
	// The subscriber information.
	Subscriber string `pulumi:"subscriber"`
	// The tags associated with the load-balancer.
	Tags []string `pulumi:"tags"`
	// The offer type of the load-balancer.
	Type string `pulumi:"type"`
	// Date at which the Load balancer was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which LBs exist.
	Zone string `pulumi:"zone"`
}

// GetLbsLbInput is an input type that accepts GetLbsLbArgs and GetLbsLbOutput values.
// You can construct a concrete instance of `GetLbsLbInput` via:
//
//	GetLbsLbArgs{...}
type GetLbsLbInput interface {
	pulumi.Input

	ToGetLbsLbOutput() GetLbsLbOutput
	ToGetLbsLbOutputWithContext(context.Context) GetLbsLbOutput
}

type GetLbsLbArgs struct {
	// Number of backends the Load balancer has.
	BackendCount pulumi.IntInput `pulumi:"backendCount"`
	// Date at which the Load balancer was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the load-balancer.
	Description pulumi.StringInput `pulumi:"description"`
	// Number of frontends the Load balancer has.
	FrontendCount pulumi.IntInput `pulumi:"frontendCount"`
	// The ID of the load-balancer.
	Id pulumi.StringInput `pulumi:"id"`
	// List of underlying instances.
	Instances GetLbsLbInstanceArrayInput `pulumi:"instances"`
	// List of IPs attached to the Load balancer.
	Ips GetLbsLbIpArrayInput `pulumi:"ips"`
	// The load balancer name used as a filter. LBs with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID the load-balancer is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// Number of private networks attached to the Load balancer.
	PrivateNetworkCount pulumi.IntInput `pulumi:"privateNetworkCount"`
	// The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Number of routes the Load balancer has.
	RouteCount pulumi.IntInput `pulumi:"routeCount"`
	// Determines the minimal SSL version which needs to be supported on client side.
	SslCompatibilityLevel pulumi.StringInput `pulumi:"sslCompatibilityLevel"`
	// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
	Status pulumi.StringInput `pulumi:"status"`
	// The subscriber information.
	Subscriber pulumi.StringInput `pulumi:"subscriber"`
	// The tags associated with the load-balancer.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The offer type of the load-balancer.
	Type pulumi.StringInput `pulumi:"type"`
	// Date at which the Load balancer was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which LBs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetLbsLbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLb)(nil)).Elem()
}

func (i GetLbsLbArgs) ToGetLbsLbOutput() GetLbsLbOutput {
	return i.ToGetLbsLbOutputWithContext(context.Background())
}

func (i GetLbsLbArgs) ToGetLbsLbOutputWithContext(ctx context.Context) GetLbsLbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbOutput)
}

// GetLbsLbArrayInput is an input type that accepts GetLbsLbArray and GetLbsLbArrayOutput values.
// You can construct a concrete instance of `GetLbsLbArrayInput` via:
//
//	GetLbsLbArray{ GetLbsLbArgs{...} }
type GetLbsLbArrayInput interface {
	pulumi.Input

	ToGetLbsLbArrayOutput() GetLbsLbArrayOutput
	ToGetLbsLbArrayOutputWithContext(context.Context) GetLbsLbArrayOutput
}

type GetLbsLbArray []GetLbsLbInput

func (GetLbsLbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLb)(nil)).Elem()
}

func (i GetLbsLbArray) ToGetLbsLbArrayOutput() GetLbsLbArrayOutput {
	return i.ToGetLbsLbArrayOutputWithContext(context.Background())
}

func (i GetLbsLbArray) ToGetLbsLbArrayOutputWithContext(ctx context.Context) GetLbsLbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbArrayOutput)
}

type GetLbsLbOutput struct{ *pulumi.OutputState }

func (GetLbsLbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLb)(nil)).Elem()
}

func (o GetLbsLbOutput) ToGetLbsLbOutput() GetLbsLbOutput {
	return o
}

func (o GetLbsLbOutput) ToGetLbsLbOutputWithContext(ctx context.Context) GetLbsLbOutput {
	return o
}

// Number of backends the Load balancer has.
func (o GetLbsLbOutput) BackendCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbsLb) int { return v.BackendCount }).(pulumi.IntOutput)
}

// Date at which the Load balancer was created.
func (o GetLbsLbOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the load-balancer.
func (o GetLbsLbOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Description }).(pulumi.StringOutput)
}

// Number of frontends the Load balancer has.
func (o GetLbsLbOutput) FrontendCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbsLb) int { return v.FrontendCount }).(pulumi.IntOutput)
}

// The ID of the load-balancer.
func (o GetLbsLbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Id }).(pulumi.StringOutput)
}

// List of underlying instances.
func (o GetLbsLbOutput) Instances() GetLbsLbInstanceArrayOutput {
	return o.ApplyT(func(v GetLbsLb) []GetLbsLbInstance { return v.Instances }).(GetLbsLbInstanceArrayOutput)
}

// List of IPs attached to the Load balancer.
func (o GetLbsLbOutput) Ips() GetLbsLbIpArrayOutput {
	return o.ApplyT(func(v GetLbsLb) []GetLbsLbIp { return v.Ips }).(GetLbsLbIpArrayOutput)
}

// The load balancer name used as a filter. LBs with a name like it are listed.
func (o GetLbsLbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID the load-balancer is associated with.
func (o GetLbsLbOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Number of private networks attached to the Load balancer.
func (o GetLbsLbOutput) PrivateNetworkCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbsLb) int { return v.PrivateNetworkCount }).(pulumi.IntOutput)
}

// The ID of the project the load-balancer is associated with.
func (o GetLbsLbOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Number of routes the Load balancer has.
func (o GetLbsLbOutput) RouteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLbsLb) int { return v.RouteCount }).(pulumi.IntOutput)
}

// Determines the minimal SSL version which needs to be supported on client side.
func (o GetLbsLbOutput) SslCompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.SslCompatibilityLevel }).(pulumi.StringOutput)
}

// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
func (o GetLbsLbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Status }).(pulumi.StringOutput)
}

// The subscriber information.
func (o GetLbsLbOutput) Subscriber() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Subscriber }).(pulumi.StringOutput)
}

// The tags associated with the load-balancer.
func (o GetLbsLbOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLbsLb) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The offer type of the load-balancer.
func (o GetLbsLbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Type }).(pulumi.StringOutput)
}

// Date at which the Load balancer was updated.
func (o GetLbsLbOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which LBs exist.
func (o GetLbsLbOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLb) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLbsLbArrayOutput struct{ *pulumi.OutputState }

func (GetLbsLbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLb)(nil)).Elem()
}

func (o GetLbsLbArrayOutput) ToGetLbsLbArrayOutput() GetLbsLbArrayOutput {
	return o
}

func (o GetLbsLbArrayOutput) ToGetLbsLbArrayOutputWithContext(ctx context.Context) GetLbsLbArrayOutput {
	return o
}

func (o GetLbsLbArrayOutput) Index(i pulumi.IntInput) GetLbsLbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbsLb {
		return vs[0].([]GetLbsLb)[vs[1].(int)]
	}).(GetLbsLbOutput)
}

type GetLbsLbInstance struct {
	// Date at which the Load balancer was created.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the load-balancer.
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
	Status string `pulumi:"status"`
	// Date at which the Load balancer was updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// `zone`) The zone in which LBs exist.
	Zone string `pulumi:"zone"`
}

// GetLbsLbInstanceInput is an input type that accepts GetLbsLbInstanceArgs and GetLbsLbInstanceOutput values.
// You can construct a concrete instance of `GetLbsLbInstanceInput` via:
//
//	GetLbsLbInstanceArgs{...}
type GetLbsLbInstanceInput interface {
	pulumi.Input

	ToGetLbsLbInstanceOutput() GetLbsLbInstanceOutput
	ToGetLbsLbInstanceOutputWithContext(context.Context) GetLbsLbInstanceOutput
}

type GetLbsLbInstanceArgs struct {
	// Date at which the Load balancer was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the load-balancer.
	Id        pulumi.StringInput `pulumi:"id"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
	Status pulumi.StringInput `pulumi:"status"`
	// Date at which the Load balancer was updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// `zone`) The zone in which LBs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetLbsLbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLbInstance)(nil)).Elem()
}

func (i GetLbsLbInstanceArgs) ToGetLbsLbInstanceOutput() GetLbsLbInstanceOutput {
	return i.ToGetLbsLbInstanceOutputWithContext(context.Background())
}

func (i GetLbsLbInstanceArgs) ToGetLbsLbInstanceOutputWithContext(ctx context.Context) GetLbsLbInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbInstanceOutput)
}

// GetLbsLbInstanceArrayInput is an input type that accepts GetLbsLbInstanceArray and GetLbsLbInstanceArrayOutput values.
// You can construct a concrete instance of `GetLbsLbInstanceArrayInput` via:
//
//	GetLbsLbInstanceArray{ GetLbsLbInstanceArgs{...} }
type GetLbsLbInstanceArrayInput interface {
	pulumi.Input

	ToGetLbsLbInstanceArrayOutput() GetLbsLbInstanceArrayOutput
	ToGetLbsLbInstanceArrayOutputWithContext(context.Context) GetLbsLbInstanceArrayOutput
}

type GetLbsLbInstanceArray []GetLbsLbInstanceInput

func (GetLbsLbInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLbInstance)(nil)).Elem()
}

func (i GetLbsLbInstanceArray) ToGetLbsLbInstanceArrayOutput() GetLbsLbInstanceArrayOutput {
	return i.ToGetLbsLbInstanceArrayOutputWithContext(context.Background())
}

func (i GetLbsLbInstanceArray) ToGetLbsLbInstanceArrayOutputWithContext(ctx context.Context) GetLbsLbInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbInstanceArrayOutput)
}

type GetLbsLbInstanceOutput struct{ *pulumi.OutputState }

func (GetLbsLbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLbInstance)(nil)).Elem()
}

func (o GetLbsLbInstanceOutput) ToGetLbsLbInstanceOutput() GetLbsLbInstanceOutput {
	return o
}

func (o GetLbsLbInstanceOutput) ToGetLbsLbInstanceOutputWithContext(ctx context.Context) GetLbsLbInstanceOutput {
	return o
}

// Date at which the Load balancer was created.
func (o GetLbsLbInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the load-balancer.
func (o GetLbsLbInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLbsLbInstanceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The state of the LB's instance. Possible values are: `unknown`, `ready`, `pending`, `stopped`, `error`, `locked` and `migrating`.
func (o GetLbsLbInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Date at which the Load balancer was updated.
func (o GetLbsLbInstanceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// `zone`) The zone in which LBs exist.
func (o GetLbsLbInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbInstance) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLbsLbInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetLbsLbInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLbInstance)(nil)).Elem()
}

func (o GetLbsLbInstanceArrayOutput) ToGetLbsLbInstanceArrayOutput() GetLbsLbInstanceArrayOutput {
	return o
}

func (o GetLbsLbInstanceArrayOutput) ToGetLbsLbInstanceArrayOutputWithContext(ctx context.Context) GetLbsLbInstanceArrayOutput {
	return o
}

func (o GetLbsLbInstanceArrayOutput) Index(i pulumi.IntInput) GetLbsLbInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbsLbInstance {
		return vs[0].([]GetLbsLbInstance)[vs[1].(int)]
	}).(GetLbsLbInstanceOutput)
}

type GetLbsLbIp struct {
	// The ID of the load-balancer.
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	LbId      string `pulumi:"lbId"`
	// The organization ID the load-balancer is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the project the load-balancer is associated with.
	ProjectId string `pulumi:"projectId"`
	Reverse   string `pulumi:"reverse"`
	// `zone`) The zone in which LBs exist.
	Zone string `pulumi:"zone"`
}

// GetLbsLbIpInput is an input type that accepts GetLbsLbIpArgs and GetLbsLbIpOutput values.
// You can construct a concrete instance of `GetLbsLbIpInput` via:
//
//	GetLbsLbIpArgs{...}
type GetLbsLbIpInput interface {
	pulumi.Input

	ToGetLbsLbIpOutput() GetLbsLbIpOutput
	ToGetLbsLbIpOutputWithContext(context.Context) GetLbsLbIpOutput
}

type GetLbsLbIpArgs struct {
	// The ID of the load-balancer.
	Id        pulumi.StringInput `pulumi:"id"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	LbId      pulumi.StringInput `pulumi:"lbId"`
	// The organization ID the load-balancer is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The ID of the project the load-balancer is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	Reverse   pulumi.StringInput `pulumi:"reverse"`
	// `zone`) The zone in which LBs exist.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetLbsLbIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLbIp)(nil)).Elem()
}

func (i GetLbsLbIpArgs) ToGetLbsLbIpOutput() GetLbsLbIpOutput {
	return i.ToGetLbsLbIpOutputWithContext(context.Background())
}

func (i GetLbsLbIpArgs) ToGetLbsLbIpOutputWithContext(ctx context.Context) GetLbsLbIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbIpOutput)
}

// GetLbsLbIpArrayInput is an input type that accepts GetLbsLbIpArray and GetLbsLbIpArrayOutput values.
// You can construct a concrete instance of `GetLbsLbIpArrayInput` via:
//
//	GetLbsLbIpArray{ GetLbsLbIpArgs{...} }
type GetLbsLbIpArrayInput interface {
	pulumi.Input

	ToGetLbsLbIpArrayOutput() GetLbsLbIpArrayOutput
	ToGetLbsLbIpArrayOutputWithContext(context.Context) GetLbsLbIpArrayOutput
}

type GetLbsLbIpArray []GetLbsLbIpInput

func (GetLbsLbIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLbIp)(nil)).Elem()
}

func (i GetLbsLbIpArray) ToGetLbsLbIpArrayOutput() GetLbsLbIpArrayOutput {
	return i.ToGetLbsLbIpArrayOutputWithContext(context.Background())
}

func (i GetLbsLbIpArray) ToGetLbsLbIpArrayOutputWithContext(ctx context.Context) GetLbsLbIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLbsLbIpArrayOutput)
}

type GetLbsLbIpOutput struct{ *pulumi.OutputState }

func (GetLbsLbIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLbsLbIp)(nil)).Elem()
}

func (o GetLbsLbIpOutput) ToGetLbsLbIpOutput() GetLbsLbIpOutput {
	return o
}

func (o GetLbsLbIpOutput) ToGetLbsLbIpOutputWithContext(ctx context.Context) GetLbsLbIpOutput {
	return o
}

// The ID of the load-balancer.
func (o GetLbsLbIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLbsLbIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetLbsLbIpOutput) LbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.LbId }).(pulumi.StringOutput)
}

// The organization ID the load-balancer is associated with.
func (o GetLbsLbIpOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the project the load-balancer is associated with.
func (o GetLbsLbIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetLbsLbIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.Reverse }).(pulumi.StringOutput)
}

// `zone`) The zone in which LBs exist.
func (o GetLbsLbIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLbsLbIp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLbsLbIpArrayOutput struct{ *pulumi.OutputState }

func (GetLbsLbIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLbsLbIp)(nil)).Elem()
}

func (o GetLbsLbIpArrayOutput) ToGetLbsLbIpArrayOutput() GetLbsLbIpArrayOutput {
	return o
}

func (o GetLbsLbIpArrayOutput) ToGetLbsLbIpArrayOutputWithContext(ctx context.Context) GetLbsLbIpArrayOutput {
	return o
}

func (o GetLbsLbIpArrayOutput) Index(i pulumi.IntInput) GetLbsLbIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLbsLbIp {
		return vs[0].([]GetLbsLbIp)[vs[1].(int)]
	}).(GetLbsLbIpOutput)
}

type GetLoadbalancerCertificateCustomCertificate struct {
	// The full PEM-formatted certificate chain
	CertificateChain string `pulumi:"certificateChain"`
}

// GetLoadbalancerCertificateCustomCertificateInput is an input type that accepts GetLoadbalancerCertificateCustomCertificateArgs and GetLoadbalancerCertificateCustomCertificateOutput values.
// You can construct a concrete instance of `GetLoadbalancerCertificateCustomCertificateInput` via:
//
//	GetLoadbalancerCertificateCustomCertificateArgs{...}
type GetLoadbalancerCertificateCustomCertificateInput interface {
	pulumi.Input

	ToGetLoadbalancerCertificateCustomCertificateOutput() GetLoadbalancerCertificateCustomCertificateOutput
	ToGetLoadbalancerCertificateCustomCertificateOutputWithContext(context.Context) GetLoadbalancerCertificateCustomCertificateOutput
}

type GetLoadbalancerCertificateCustomCertificateArgs struct {
	// The full PEM-formatted certificate chain
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (GetLoadbalancerCertificateCustomCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i GetLoadbalancerCertificateCustomCertificateArgs) ToGetLoadbalancerCertificateCustomCertificateOutput() GetLoadbalancerCertificateCustomCertificateOutput {
	return i.ToGetLoadbalancerCertificateCustomCertificateOutputWithContext(context.Background())
}

func (i GetLoadbalancerCertificateCustomCertificateArgs) ToGetLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) GetLoadbalancerCertificateCustomCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerCertificateCustomCertificateOutput)
}

// GetLoadbalancerCertificateCustomCertificateArrayInput is an input type that accepts GetLoadbalancerCertificateCustomCertificateArray and GetLoadbalancerCertificateCustomCertificateArrayOutput values.
// You can construct a concrete instance of `GetLoadbalancerCertificateCustomCertificateArrayInput` via:
//
//	GetLoadbalancerCertificateCustomCertificateArray{ GetLoadbalancerCertificateCustomCertificateArgs{...} }
type GetLoadbalancerCertificateCustomCertificateArrayInput interface {
	pulumi.Input

	ToGetLoadbalancerCertificateCustomCertificateArrayOutput() GetLoadbalancerCertificateCustomCertificateArrayOutput
	ToGetLoadbalancerCertificateCustomCertificateArrayOutputWithContext(context.Context) GetLoadbalancerCertificateCustomCertificateArrayOutput
}

type GetLoadbalancerCertificateCustomCertificateArray []GetLoadbalancerCertificateCustomCertificateInput

func (GetLoadbalancerCertificateCustomCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i GetLoadbalancerCertificateCustomCertificateArray) ToGetLoadbalancerCertificateCustomCertificateArrayOutput() GetLoadbalancerCertificateCustomCertificateArrayOutput {
	return i.ToGetLoadbalancerCertificateCustomCertificateArrayOutputWithContext(context.Background())
}

func (i GetLoadbalancerCertificateCustomCertificateArray) ToGetLoadbalancerCertificateCustomCertificateArrayOutputWithContext(ctx context.Context) GetLoadbalancerCertificateCustomCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerCertificateCustomCertificateArrayOutput)
}

type GetLoadbalancerCertificateCustomCertificateOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerCertificateCustomCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o GetLoadbalancerCertificateCustomCertificateOutput) ToGetLoadbalancerCertificateCustomCertificateOutput() GetLoadbalancerCertificateCustomCertificateOutput {
	return o
}

func (o GetLoadbalancerCertificateCustomCertificateOutput) ToGetLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) GetLoadbalancerCertificateCustomCertificateOutput {
	return o
}

// The full PEM-formatted certificate chain
func (o GetLoadbalancerCertificateCustomCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerCertificateCustomCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type GetLoadbalancerCertificateCustomCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerCertificateCustomCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o GetLoadbalancerCertificateCustomCertificateArrayOutput) ToGetLoadbalancerCertificateCustomCertificateArrayOutput() GetLoadbalancerCertificateCustomCertificateArrayOutput {
	return o
}

func (o GetLoadbalancerCertificateCustomCertificateArrayOutput) ToGetLoadbalancerCertificateCustomCertificateArrayOutputWithContext(ctx context.Context) GetLoadbalancerCertificateCustomCertificateArrayOutput {
	return o
}

func (o GetLoadbalancerCertificateCustomCertificateArrayOutput) Index(i pulumi.IntInput) GetLoadbalancerCertificateCustomCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadbalancerCertificateCustomCertificate {
		return vs[0].([]GetLoadbalancerCertificateCustomCertificate)[vs[1].(int)]
	}).(GetLoadbalancerCertificateCustomCertificateOutput)
}

type GetLoadbalancerCertificateLetsencrypt struct {
	// The main domain name of the certificate
	CommonName string `pulumi:"commonName"`
	// The alternative domain names of the certificate
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
}

// GetLoadbalancerCertificateLetsencryptInput is an input type that accepts GetLoadbalancerCertificateLetsencryptArgs and GetLoadbalancerCertificateLetsencryptOutput values.
// You can construct a concrete instance of `GetLoadbalancerCertificateLetsencryptInput` via:
//
//	GetLoadbalancerCertificateLetsencryptArgs{...}
type GetLoadbalancerCertificateLetsencryptInput interface {
	pulumi.Input

	ToGetLoadbalancerCertificateLetsencryptOutput() GetLoadbalancerCertificateLetsencryptOutput
	ToGetLoadbalancerCertificateLetsencryptOutputWithContext(context.Context) GetLoadbalancerCertificateLetsencryptOutput
}

type GetLoadbalancerCertificateLetsencryptArgs struct {
	// The main domain name of the certificate
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// The alternative domain names of the certificate
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
}

func (GetLoadbalancerCertificateLetsencryptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i GetLoadbalancerCertificateLetsencryptArgs) ToGetLoadbalancerCertificateLetsencryptOutput() GetLoadbalancerCertificateLetsencryptOutput {
	return i.ToGetLoadbalancerCertificateLetsencryptOutputWithContext(context.Background())
}

func (i GetLoadbalancerCertificateLetsencryptArgs) ToGetLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) GetLoadbalancerCertificateLetsencryptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerCertificateLetsencryptOutput)
}

// GetLoadbalancerCertificateLetsencryptArrayInput is an input type that accepts GetLoadbalancerCertificateLetsencryptArray and GetLoadbalancerCertificateLetsencryptArrayOutput values.
// You can construct a concrete instance of `GetLoadbalancerCertificateLetsencryptArrayInput` via:
//
//	GetLoadbalancerCertificateLetsencryptArray{ GetLoadbalancerCertificateLetsencryptArgs{...} }
type GetLoadbalancerCertificateLetsencryptArrayInput interface {
	pulumi.Input

	ToGetLoadbalancerCertificateLetsencryptArrayOutput() GetLoadbalancerCertificateLetsencryptArrayOutput
	ToGetLoadbalancerCertificateLetsencryptArrayOutputWithContext(context.Context) GetLoadbalancerCertificateLetsencryptArrayOutput
}

type GetLoadbalancerCertificateLetsencryptArray []GetLoadbalancerCertificateLetsencryptInput

func (GetLoadbalancerCertificateLetsencryptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i GetLoadbalancerCertificateLetsencryptArray) ToGetLoadbalancerCertificateLetsencryptArrayOutput() GetLoadbalancerCertificateLetsencryptArrayOutput {
	return i.ToGetLoadbalancerCertificateLetsencryptArrayOutputWithContext(context.Background())
}

func (i GetLoadbalancerCertificateLetsencryptArray) ToGetLoadbalancerCertificateLetsencryptArrayOutputWithContext(ctx context.Context) GetLoadbalancerCertificateLetsencryptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerCertificateLetsencryptArrayOutput)
}

type GetLoadbalancerCertificateLetsencryptOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerCertificateLetsencryptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o GetLoadbalancerCertificateLetsencryptOutput) ToGetLoadbalancerCertificateLetsencryptOutput() GetLoadbalancerCertificateLetsencryptOutput {
	return o
}

func (o GetLoadbalancerCertificateLetsencryptOutput) ToGetLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) GetLoadbalancerCertificateLetsencryptOutput {
	return o
}

// The main domain name of the certificate
func (o GetLoadbalancerCertificateLetsencryptOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerCertificateLetsencrypt) string { return v.CommonName }).(pulumi.StringOutput)
}

// The alternative domain names of the certificate
func (o GetLoadbalancerCertificateLetsencryptOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadbalancerCertificateLetsencrypt) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

type GetLoadbalancerCertificateLetsencryptArrayOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerCertificateLetsencryptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o GetLoadbalancerCertificateLetsencryptArrayOutput) ToGetLoadbalancerCertificateLetsencryptArrayOutput() GetLoadbalancerCertificateLetsencryptArrayOutput {
	return o
}

func (o GetLoadbalancerCertificateLetsencryptArrayOutput) ToGetLoadbalancerCertificateLetsencryptArrayOutputWithContext(ctx context.Context) GetLoadbalancerCertificateLetsencryptArrayOutput {
	return o
}

func (o GetLoadbalancerCertificateLetsencryptArrayOutput) Index(i pulumi.IntInput) GetLoadbalancerCertificateLetsencryptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadbalancerCertificateLetsencrypt {
		return vs[0].([]GetLoadbalancerCertificateLetsencrypt)[vs[1].(int)]
	}).(GetLoadbalancerCertificateLetsencryptOutput)
}

type GetLoadbalancerPrivateNetwork struct {
	// Set to true if you want to let DHCP assign IP addresses
	DhcpConfig bool `pulumi:"dhcpConfig"`
	// The Private Network ID
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// Define an IP address in the subnet of your private network that will be assigned to your load balancer instance
	StaticConfigs []string `pulumi:"staticConfigs"`
	// The status of private network connection
	Status string `pulumi:"status"`
	// (Defaults to provider `zone`) The zone in which the LB exists.
	Zone string `pulumi:"zone"`
}

// GetLoadbalancerPrivateNetworkInput is an input type that accepts GetLoadbalancerPrivateNetworkArgs and GetLoadbalancerPrivateNetworkOutput values.
// You can construct a concrete instance of `GetLoadbalancerPrivateNetworkInput` via:
//
//	GetLoadbalancerPrivateNetworkArgs{...}
type GetLoadbalancerPrivateNetworkInput interface {
	pulumi.Input

	ToGetLoadbalancerPrivateNetworkOutput() GetLoadbalancerPrivateNetworkOutput
	ToGetLoadbalancerPrivateNetworkOutputWithContext(context.Context) GetLoadbalancerPrivateNetworkOutput
}

type GetLoadbalancerPrivateNetworkArgs struct {
	// Set to true if you want to let DHCP assign IP addresses
	DhcpConfig pulumi.BoolInput `pulumi:"dhcpConfig"`
	// The Private Network ID
	PrivateNetworkId pulumi.StringInput `pulumi:"privateNetworkId"`
	// Define an IP address in the subnet of your private network that will be assigned to your load balancer instance
	StaticConfigs pulumi.StringArrayInput `pulumi:"staticConfigs"`
	// The status of private network connection
	Status pulumi.StringInput `pulumi:"status"`
	// (Defaults to provider `zone`) The zone in which the LB exists.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetLoadbalancerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i GetLoadbalancerPrivateNetworkArgs) ToGetLoadbalancerPrivateNetworkOutput() GetLoadbalancerPrivateNetworkOutput {
	return i.ToGetLoadbalancerPrivateNetworkOutputWithContext(context.Background())
}

func (i GetLoadbalancerPrivateNetworkArgs) ToGetLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerPrivateNetworkOutput)
}

// GetLoadbalancerPrivateNetworkArrayInput is an input type that accepts GetLoadbalancerPrivateNetworkArray and GetLoadbalancerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetLoadbalancerPrivateNetworkArrayInput` via:
//
//	GetLoadbalancerPrivateNetworkArray{ GetLoadbalancerPrivateNetworkArgs{...} }
type GetLoadbalancerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetLoadbalancerPrivateNetworkArrayOutput() GetLoadbalancerPrivateNetworkArrayOutput
	ToGetLoadbalancerPrivateNetworkArrayOutputWithContext(context.Context) GetLoadbalancerPrivateNetworkArrayOutput
}

type GetLoadbalancerPrivateNetworkArray []GetLoadbalancerPrivateNetworkInput

func (GetLoadbalancerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i GetLoadbalancerPrivateNetworkArray) ToGetLoadbalancerPrivateNetworkArrayOutput() GetLoadbalancerPrivateNetworkArrayOutput {
	return i.ToGetLoadbalancerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetLoadbalancerPrivateNetworkArray) ToGetLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadbalancerPrivateNetworkArrayOutput)
}

type GetLoadbalancerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o GetLoadbalancerPrivateNetworkOutput) ToGetLoadbalancerPrivateNetworkOutput() GetLoadbalancerPrivateNetworkOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkOutput) ToGetLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkOutput {
	return o
}

// Set to true if you want to let DHCP assign IP addresses
func (o GetLoadbalancerPrivateNetworkOutput) DhcpConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) bool { return v.DhcpConfig }).(pulumi.BoolOutput)
}

// The Private Network ID
func (o GetLoadbalancerPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

// Define an IP address in the subnet of your private network that will be assigned to your load balancer instance
func (o GetLoadbalancerPrivateNetworkOutput) StaticConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) []string { return v.StaticConfigs }).(pulumi.StringArrayOutput)
}

// The status of private network connection
func (o GetLoadbalancerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// (Defaults to provider `zone`) The zone in which the LB exists.
func (o GetLoadbalancerPrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLoadbalancerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) ToGetLoadbalancerPrivateNetworkArrayOutput() GetLoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) ToGetLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetLoadbalancerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadbalancerPrivateNetwork {
		return vs[0].([]GetLoadbalancerPrivateNetwork)[vs[1].(int)]
	}).(GetLoadbalancerPrivateNetworkOutput)
}

type GetObjectBucketCorsRule struct {
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	AllowedMethods []string `pulumi:"allowedMethods"`
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	ExposeHeaders  []string `pulumi:"exposeHeaders"`
	MaxAgeSeconds  int      `pulumi:"maxAgeSeconds"`
}

// GetObjectBucketCorsRuleInput is an input type that accepts GetObjectBucketCorsRuleArgs and GetObjectBucketCorsRuleOutput values.
// You can construct a concrete instance of `GetObjectBucketCorsRuleInput` via:
//
//	GetObjectBucketCorsRuleArgs{...}
type GetObjectBucketCorsRuleInput interface {
	pulumi.Input

	ToGetObjectBucketCorsRuleOutput() GetObjectBucketCorsRuleOutput
	ToGetObjectBucketCorsRuleOutputWithContext(context.Context) GetObjectBucketCorsRuleOutput
}

type GetObjectBucketCorsRuleArgs struct {
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	ExposeHeaders  pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	MaxAgeSeconds  pulumi.IntInput         `pulumi:"maxAgeSeconds"`
}

func (GetObjectBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketCorsRule)(nil)).Elem()
}

func (i GetObjectBucketCorsRuleArgs) ToGetObjectBucketCorsRuleOutput() GetObjectBucketCorsRuleOutput {
	return i.ToGetObjectBucketCorsRuleOutputWithContext(context.Background())
}

func (i GetObjectBucketCorsRuleArgs) ToGetObjectBucketCorsRuleOutputWithContext(ctx context.Context) GetObjectBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketCorsRuleOutput)
}

// GetObjectBucketCorsRuleArrayInput is an input type that accepts GetObjectBucketCorsRuleArray and GetObjectBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `GetObjectBucketCorsRuleArrayInput` via:
//
//	GetObjectBucketCorsRuleArray{ GetObjectBucketCorsRuleArgs{...} }
type GetObjectBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToGetObjectBucketCorsRuleArrayOutput() GetObjectBucketCorsRuleArrayOutput
	ToGetObjectBucketCorsRuleArrayOutputWithContext(context.Context) GetObjectBucketCorsRuleArrayOutput
}

type GetObjectBucketCorsRuleArray []GetObjectBucketCorsRuleInput

func (GetObjectBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketCorsRule)(nil)).Elem()
}

func (i GetObjectBucketCorsRuleArray) ToGetObjectBucketCorsRuleArrayOutput() GetObjectBucketCorsRuleArrayOutput {
	return i.ToGetObjectBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i GetObjectBucketCorsRuleArray) ToGetObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) GetObjectBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketCorsRuleArrayOutput)
}

type GetObjectBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (GetObjectBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketCorsRule)(nil)).Elem()
}

func (o GetObjectBucketCorsRuleOutput) ToGetObjectBucketCorsRuleOutput() GetObjectBucketCorsRuleOutput {
	return o
}

func (o GetObjectBucketCorsRuleOutput) ToGetObjectBucketCorsRuleOutputWithContext(ctx context.Context) GetObjectBucketCorsRuleOutput {
	return o
}

func (o GetObjectBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetObjectBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

func (o GetObjectBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetObjectBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

func (o GetObjectBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetObjectBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o GetObjectBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetObjectBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o GetObjectBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectBucketCorsRule) int { return v.MaxAgeSeconds }).(pulumi.IntOutput)
}

type GetObjectBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (GetObjectBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketCorsRule)(nil)).Elem()
}

func (o GetObjectBucketCorsRuleArrayOutput) ToGetObjectBucketCorsRuleArrayOutput() GetObjectBucketCorsRuleArrayOutput {
	return o
}

func (o GetObjectBucketCorsRuleArrayOutput) ToGetObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) GetObjectBucketCorsRuleArrayOutput {
	return o
}

func (o GetObjectBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) GetObjectBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectBucketCorsRule {
		return vs[0].([]GetObjectBucketCorsRule)[vs[1].(int)]
	}).(GetObjectBucketCorsRuleOutput)
}

type GetObjectBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed
	AbortIncompleteMultipartUploadDays int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies if the configuration rule is Enabled or Disabled
	Enabled bool `pulumi:"enabled"`
	// Specifies a period in the object's expire
	Expirations []GetObjectBucketLifecycleRuleExpiration `pulumi:"expirations"`
	// The unique name of the bucket.
	Id string `pulumi:"id"`
	// The prefix identifying one or more objects to which the rule applies
	Prefix string `pulumi:"prefix"`
	// The tags associated with the bucket lifecycle
	Tags map[string]string `pulumi:"tags"`
	// Define when objects transition to another storage class
	Transitions []GetObjectBucketLifecycleRuleTransition `pulumi:"transitions"`
}

// GetObjectBucketLifecycleRuleInput is an input type that accepts GetObjectBucketLifecycleRuleArgs and GetObjectBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleInput` via:
//
//	GetObjectBucketLifecycleRuleArgs{...}
type GetObjectBucketLifecycleRuleInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleOutput() GetObjectBucketLifecycleRuleOutput
	ToGetObjectBucketLifecycleRuleOutputWithContext(context.Context) GetObjectBucketLifecycleRuleOutput
}

type GetObjectBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed
	AbortIncompleteMultipartUploadDays pulumi.IntInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies if the configuration rule is Enabled or Disabled
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a period in the object's expire
	Expirations GetObjectBucketLifecycleRuleExpirationArrayInput `pulumi:"expirations"`
	// The unique name of the bucket.
	Id pulumi.StringInput `pulumi:"id"`
	// The prefix identifying one or more objects to which the rule applies
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The tags associated with the bucket lifecycle
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Define when objects transition to another storage class
	Transitions GetObjectBucketLifecycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (GetObjectBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRule)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleArgs) ToGetObjectBucketLifecycleRuleOutput() GetObjectBucketLifecycleRuleOutput {
	return i.ToGetObjectBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleArgs) ToGetObjectBucketLifecycleRuleOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleOutput)
}

// GetObjectBucketLifecycleRuleArrayInput is an input type that accepts GetObjectBucketLifecycleRuleArray and GetObjectBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleArrayInput` via:
//
//	GetObjectBucketLifecycleRuleArray{ GetObjectBucketLifecycleRuleArgs{...} }
type GetObjectBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleArrayOutput() GetObjectBucketLifecycleRuleArrayOutput
	ToGetObjectBucketLifecycleRuleArrayOutputWithContext(context.Context) GetObjectBucketLifecycleRuleArrayOutput
}

type GetObjectBucketLifecycleRuleArray []GetObjectBucketLifecycleRuleInput

func (GetObjectBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRule)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleArray) ToGetObjectBucketLifecycleRuleArrayOutput() GetObjectBucketLifecycleRuleArrayOutput {
	return i.ToGetObjectBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleArray) ToGetObjectBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleArrayOutput)
}

type GetObjectBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRule)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleOutput) ToGetObjectBucketLifecycleRuleOutput() GetObjectBucketLifecycleRuleOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleOutput) ToGetObjectBucketLifecycleRuleOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed
func (o GetObjectBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntOutput)
}

// Specifies if the configuration rule is Enabled or Disabled
func (o GetObjectBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a period in the object's expire
func (o GetObjectBucketLifecycleRuleOutput) Expirations() GetObjectBucketLifecycleRuleExpirationArrayOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) []GetObjectBucketLifecycleRuleExpiration { return v.Expirations }).(GetObjectBucketLifecycleRuleExpirationArrayOutput)
}

// The unique name of the bucket.
func (o GetObjectBucketLifecycleRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) string { return v.Id }).(pulumi.StringOutput)
}

// The prefix identifying one or more objects to which the rule applies
func (o GetObjectBucketLifecycleRuleOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) string { return v.Prefix }).(pulumi.StringOutput)
}

// The tags associated with the bucket lifecycle
func (o GetObjectBucketLifecycleRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Define when objects transition to another storage class
func (o GetObjectBucketLifecycleRuleOutput) Transitions() GetObjectBucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRule) []GetObjectBucketLifecycleRuleTransition { return v.Transitions }).(GetObjectBucketLifecycleRuleTransitionArrayOutput)
}

type GetObjectBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRule)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleArrayOutput) ToGetObjectBucketLifecycleRuleArrayOutput() GetObjectBucketLifecycleRuleArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleArrayOutput) ToGetObjectBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) GetObjectBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectBucketLifecycleRule {
		return vs[0].([]GetObjectBucketLifecycleRule)[vs[1].(int)]
	}).(GetObjectBucketLifecycleRuleOutput)
}

type GetObjectBucketLifecycleRuleExpiration struct {
	// Specifies the number of days after object creation when the specific rule action takes effect
	Days int `pulumi:"days"`
}

// GetObjectBucketLifecycleRuleExpirationInput is an input type that accepts GetObjectBucketLifecycleRuleExpirationArgs and GetObjectBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleExpirationInput` via:
//
//	GetObjectBucketLifecycleRuleExpirationArgs{...}
type GetObjectBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleExpirationOutput() GetObjectBucketLifecycleRuleExpirationOutput
	ToGetObjectBucketLifecycleRuleExpirationOutputWithContext(context.Context) GetObjectBucketLifecycleRuleExpirationOutput
}

type GetObjectBucketLifecycleRuleExpirationArgs struct {
	// Specifies the number of days after object creation when the specific rule action takes effect
	Days pulumi.IntInput `pulumi:"days"`
}

func (GetObjectBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleExpirationArgs) ToGetObjectBucketLifecycleRuleExpirationOutput() GetObjectBucketLifecycleRuleExpirationOutput {
	return i.ToGetObjectBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleExpirationArgs) ToGetObjectBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleExpirationOutput)
}

// GetObjectBucketLifecycleRuleExpirationArrayInput is an input type that accepts GetObjectBucketLifecycleRuleExpirationArray and GetObjectBucketLifecycleRuleExpirationArrayOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleExpirationArrayInput` via:
//
//	GetObjectBucketLifecycleRuleExpirationArray{ GetObjectBucketLifecycleRuleExpirationArgs{...} }
type GetObjectBucketLifecycleRuleExpirationArrayInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleExpirationArrayOutput() GetObjectBucketLifecycleRuleExpirationArrayOutput
	ToGetObjectBucketLifecycleRuleExpirationArrayOutputWithContext(context.Context) GetObjectBucketLifecycleRuleExpirationArrayOutput
}

type GetObjectBucketLifecycleRuleExpirationArray []GetObjectBucketLifecycleRuleExpirationInput

func (GetObjectBucketLifecycleRuleExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleExpirationArray) ToGetObjectBucketLifecycleRuleExpirationArrayOutput() GetObjectBucketLifecycleRuleExpirationArrayOutput {
	return i.ToGetObjectBucketLifecycleRuleExpirationArrayOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleExpirationArray) ToGetObjectBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleExpirationArrayOutput)
}

type GetObjectBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleExpirationOutput) ToGetObjectBucketLifecycleRuleExpirationOutput() GetObjectBucketLifecycleRuleExpirationOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleExpirationOutput) ToGetObjectBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleExpirationOutput {
	return o
}

// Specifies the number of days after object creation when the specific rule action takes effect
func (o GetObjectBucketLifecycleRuleExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRuleExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type GetObjectBucketLifecycleRuleExpirationArrayOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleExpirationArrayOutput) ToGetObjectBucketLifecycleRuleExpirationArrayOutput() GetObjectBucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleExpirationArrayOutput) ToGetObjectBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleExpirationArrayOutput) Index(i pulumi.IntInput) GetObjectBucketLifecycleRuleExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectBucketLifecycleRuleExpiration {
		return vs[0].([]GetObjectBucketLifecycleRuleExpiration)[vs[1].(int)]
	}).(GetObjectBucketLifecycleRuleExpirationOutput)
}

type GetObjectBucketLifecycleRuleTransition struct {
	// Specifies the number of days after object creation when the specific rule action takes effect
	Days int `pulumi:"days"`
	// Specifies the Scaleway Object Storage class to which you want the object to transition
	StorageClass string `pulumi:"storageClass"`
}

// GetObjectBucketLifecycleRuleTransitionInput is an input type that accepts GetObjectBucketLifecycleRuleTransitionArgs and GetObjectBucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleTransitionInput` via:
//
//	GetObjectBucketLifecycleRuleTransitionArgs{...}
type GetObjectBucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleTransitionOutput() GetObjectBucketLifecycleRuleTransitionOutput
	ToGetObjectBucketLifecycleRuleTransitionOutputWithContext(context.Context) GetObjectBucketLifecycleRuleTransitionOutput
}

type GetObjectBucketLifecycleRuleTransitionArgs struct {
	// Specifies the number of days after object creation when the specific rule action takes effect
	Days pulumi.IntInput `pulumi:"days"`
	// Specifies the Scaleway Object Storage class to which you want the object to transition
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (GetObjectBucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleTransitionArgs) ToGetObjectBucketLifecycleRuleTransitionOutput() GetObjectBucketLifecycleRuleTransitionOutput {
	return i.ToGetObjectBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleTransitionArgs) ToGetObjectBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleTransitionOutput)
}

// GetObjectBucketLifecycleRuleTransitionArrayInput is an input type that accepts GetObjectBucketLifecycleRuleTransitionArray and GetObjectBucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `GetObjectBucketLifecycleRuleTransitionArrayInput` via:
//
//	GetObjectBucketLifecycleRuleTransitionArray{ GetObjectBucketLifecycleRuleTransitionArgs{...} }
type GetObjectBucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToGetObjectBucketLifecycleRuleTransitionArrayOutput() GetObjectBucketLifecycleRuleTransitionArrayOutput
	ToGetObjectBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) GetObjectBucketLifecycleRuleTransitionArrayOutput
}

type GetObjectBucketLifecycleRuleTransitionArray []GetObjectBucketLifecycleRuleTransitionInput

func (GetObjectBucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (i GetObjectBucketLifecycleRuleTransitionArray) ToGetObjectBucketLifecycleRuleTransitionArrayOutput() GetObjectBucketLifecycleRuleTransitionArrayOutput {
	return i.ToGetObjectBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i GetObjectBucketLifecycleRuleTransitionArray) ToGetObjectBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketLifecycleRuleTransitionArrayOutput)
}

type GetObjectBucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleTransitionOutput) ToGetObjectBucketLifecycleRuleTransitionOutput() GetObjectBucketLifecycleRuleTransitionOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleTransitionOutput) ToGetObjectBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleTransitionOutput {
	return o
}

// Specifies the number of days after object creation when the specific rule action takes effect
func (o GetObjectBucketLifecycleRuleTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRuleTransition) int { return v.Days }).(pulumi.IntOutput)
}

// Specifies the Scaleway Object Storage class to which you want the object to transition
func (o GetObjectBucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectBucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type GetObjectBucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (GetObjectBucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketLifecycleRuleTransition)(nil)).Elem()
}

func (o GetObjectBucketLifecycleRuleTransitionArrayOutput) ToGetObjectBucketLifecycleRuleTransitionArrayOutput() GetObjectBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleTransitionArrayOutput) ToGetObjectBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) GetObjectBucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o GetObjectBucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) GetObjectBucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectBucketLifecycleRuleTransition {
		return vs[0].([]GetObjectBucketLifecycleRuleTransition)[vs[1].(int)]
	}).(GetObjectBucketLifecycleRuleTransitionOutput)
}

type GetObjectBucketVersioning struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state
	Enabled bool `pulumi:"enabled"`
}

// GetObjectBucketVersioningInput is an input type that accepts GetObjectBucketVersioningArgs and GetObjectBucketVersioningOutput values.
// You can construct a concrete instance of `GetObjectBucketVersioningInput` via:
//
//	GetObjectBucketVersioningArgs{...}
type GetObjectBucketVersioningInput interface {
	pulumi.Input

	ToGetObjectBucketVersioningOutput() GetObjectBucketVersioningOutput
	ToGetObjectBucketVersioningOutputWithContext(context.Context) GetObjectBucketVersioningOutput
}

type GetObjectBucketVersioningArgs struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetObjectBucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketVersioning)(nil)).Elem()
}

func (i GetObjectBucketVersioningArgs) ToGetObjectBucketVersioningOutput() GetObjectBucketVersioningOutput {
	return i.ToGetObjectBucketVersioningOutputWithContext(context.Background())
}

func (i GetObjectBucketVersioningArgs) ToGetObjectBucketVersioningOutputWithContext(ctx context.Context) GetObjectBucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketVersioningOutput)
}

// GetObjectBucketVersioningArrayInput is an input type that accepts GetObjectBucketVersioningArray and GetObjectBucketVersioningArrayOutput values.
// You can construct a concrete instance of `GetObjectBucketVersioningArrayInput` via:
//
//	GetObjectBucketVersioningArray{ GetObjectBucketVersioningArgs{...} }
type GetObjectBucketVersioningArrayInput interface {
	pulumi.Input

	ToGetObjectBucketVersioningArrayOutput() GetObjectBucketVersioningArrayOutput
	ToGetObjectBucketVersioningArrayOutputWithContext(context.Context) GetObjectBucketVersioningArrayOutput
}

type GetObjectBucketVersioningArray []GetObjectBucketVersioningInput

func (GetObjectBucketVersioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketVersioning)(nil)).Elem()
}

func (i GetObjectBucketVersioningArray) ToGetObjectBucketVersioningArrayOutput() GetObjectBucketVersioningArrayOutput {
	return i.ToGetObjectBucketVersioningArrayOutputWithContext(context.Background())
}

func (i GetObjectBucketVersioningArray) ToGetObjectBucketVersioningArrayOutputWithContext(ctx context.Context) GetObjectBucketVersioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetObjectBucketVersioningArrayOutput)
}

type GetObjectBucketVersioningOutput struct{ *pulumi.OutputState }

func (GetObjectBucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectBucketVersioning)(nil)).Elem()
}

func (o GetObjectBucketVersioningOutput) ToGetObjectBucketVersioningOutput() GetObjectBucketVersioningOutput {
	return o
}

func (o GetObjectBucketVersioningOutput) ToGetObjectBucketVersioningOutputWithContext(ctx context.Context) GetObjectBucketVersioningOutput {
	return o
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state
func (o GetObjectBucketVersioningOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetObjectBucketVersioning) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetObjectBucketVersioningArrayOutput struct{ *pulumi.OutputState }

func (GetObjectBucketVersioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetObjectBucketVersioning)(nil)).Elem()
}

func (o GetObjectBucketVersioningArrayOutput) ToGetObjectBucketVersioningArrayOutput() GetObjectBucketVersioningArrayOutput {
	return o
}

func (o GetObjectBucketVersioningArrayOutput) ToGetObjectBucketVersioningArrayOutputWithContext(ctx context.Context) GetObjectBucketVersioningArrayOutput {
	return o
}

func (o GetObjectBucketVersioningArrayOutput) Index(i pulumi.IntInput) GetObjectBucketVersioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetObjectBucketVersioning {
		return vs[0].([]GetObjectBucketVersioning)[vs[1].(int)]
	}).(GetObjectBucketVersioningOutput)
}

type GetRedisClusterAcl struct {
	// Description of the rule.
	Description string `pulumi:"description"`
	// The ID of the Redis cluster.
	Id string `pulumi:"id"`
	// IPv4 network address of the rule (IP network in a CIDR format).
	Ip string `pulumi:"ip"`
}

// GetRedisClusterAclInput is an input type that accepts GetRedisClusterAclArgs and GetRedisClusterAclOutput values.
// You can construct a concrete instance of `GetRedisClusterAclInput` via:
//
//	GetRedisClusterAclArgs{...}
type GetRedisClusterAclInput interface {
	pulumi.Input

	ToGetRedisClusterAclOutput() GetRedisClusterAclOutput
	ToGetRedisClusterAclOutputWithContext(context.Context) GetRedisClusterAclOutput
}

type GetRedisClusterAclArgs struct {
	// Description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Redis cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// IPv4 network address of the rule (IP network in a CIDR format).
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetRedisClusterAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterAcl)(nil)).Elem()
}

func (i GetRedisClusterAclArgs) ToGetRedisClusterAclOutput() GetRedisClusterAclOutput {
	return i.ToGetRedisClusterAclOutputWithContext(context.Background())
}

func (i GetRedisClusterAclArgs) ToGetRedisClusterAclOutputWithContext(ctx context.Context) GetRedisClusterAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterAclOutput)
}

// GetRedisClusterAclArrayInput is an input type that accepts GetRedisClusterAclArray and GetRedisClusterAclArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterAclArrayInput` via:
//
//	GetRedisClusterAclArray{ GetRedisClusterAclArgs{...} }
type GetRedisClusterAclArrayInput interface {
	pulumi.Input

	ToGetRedisClusterAclArrayOutput() GetRedisClusterAclArrayOutput
	ToGetRedisClusterAclArrayOutputWithContext(context.Context) GetRedisClusterAclArrayOutput
}

type GetRedisClusterAclArray []GetRedisClusterAclInput

func (GetRedisClusterAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterAcl)(nil)).Elem()
}

func (i GetRedisClusterAclArray) ToGetRedisClusterAclArrayOutput() GetRedisClusterAclArrayOutput {
	return i.ToGetRedisClusterAclArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterAclArray) ToGetRedisClusterAclArrayOutputWithContext(ctx context.Context) GetRedisClusterAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterAclArrayOutput)
}

type GetRedisClusterAclOutput struct{ *pulumi.OutputState }

func (GetRedisClusterAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterAcl)(nil)).Elem()
}

func (o GetRedisClusterAclOutput) ToGetRedisClusterAclOutput() GetRedisClusterAclOutput {
	return o
}

func (o GetRedisClusterAclOutput) ToGetRedisClusterAclOutputWithContext(ctx context.Context) GetRedisClusterAclOutput {
	return o
}

// Description of the rule.
func (o GetRedisClusterAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Redis cluster.
func (o GetRedisClusterAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterAcl) string { return v.Id }).(pulumi.StringOutput)
}

// IPv4 network address of the rule (IP network in a CIDR format).
func (o GetRedisClusterAclOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterAcl) string { return v.Ip }).(pulumi.StringOutput)
}

type GetRedisClusterAclArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterAcl)(nil)).Elem()
}

func (o GetRedisClusterAclArrayOutput) ToGetRedisClusterAclArrayOutput() GetRedisClusterAclArrayOutput {
	return o
}

func (o GetRedisClusterAclArrayOutput) ToGetRedisClusterAclArrayOutputWithContext(ctx context.Context) GetRedisClusterAclArrayOutput {
	return o
}

func (o GetRedisClusterAclArrayOutput) Index(i pulumi.IntInput) GetRedisClusterAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterAcl {
		return vs[0].([]GetRedisClusterAcl)[vs[1].(int)]
	}).(GetRedisClusterAclOutput)
}

type GetRedisClusterPrivateNetwork struct {
	// UUID of the endpoint to be connected to the cluster
	EndpointId string `pulumi:"endpointId"`
	// The ID of the Redis cluster.
	Id string `pulumi:"id"`
	// List of IPv4 addresses of the private network with a CIDR notation
	ServiceIps []string `pulumi:"serviceIps"`
	// `region`) The zone in which the server exists.
	Zone string `pulumi:"zone"`
}

// GetRedisClusterPrivateNetworkInput is an input type that accepts GetRedisClusterPrivateNetworkArgs and GetRedisClusterPrivateNetworkOutput values.
// You can construct a concrete instance of `GetRedisClusterPrivateNetworkInput` via:
//
//	GetRedisClusterPrivateNetworkArgs{...}
type GetRedisClusterPrivateNetworkInput interface {
	pulumi.Input

	ToGetRedisClusterPrivateNetworkOutput() GetRedisClusterPrivateNetworkOutput
	ToGetRedisClusterPrivateNetworkOutputWithContext(context.Context) GetRedisClusterPrivateNetworkOutput
}

type GetRedisClusterPrivateNetworkArgs struct {
	// UUID of the endpoint to be connected to the cluster
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// The ID of the Redis cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// List of IPv4 addresses of the private network with a CIDR notation
	ServiceIps pulumi.StringArrayInput `pulumi:"serviceIps"`
	// `region`) The zone in which the server exists.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetRedisClusterPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterPrivateNetwork)(nil)).Elem()
}

func (i GetRedisClusterPrivateNetworkArgs) ToGetRedisClusterPrivateNetworkOutput() GetRedisClusterPrivateNetworkOutput {
	return i.ToGetRedisClusterPrivateNetworkOutputWithContext(context.Background())
}

func (i GetRedisClusterPrivateNetworkArgs) ToGetRedisClusterPrivateNetworkOutputWithContext(ctx context.Context) GetRedisClusterPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterPrivateNetworkOutput)
}

// GetRedisClusterPrivateNetworkArrayInput is an input type that accepts GetRedisClusterPrivateNetworkArray and GetRedisClusterPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterPrivateNetworkArrayInput` via:
//
//	GetRedisClusterPrivateNetworkArray{ GetRedisClusterPrivateNetworkArgs{...} }
type GetRedisClusterPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetRedisClusterPrivateNetworkArrayOutput() GetRedisClusterPrivateNetworkArrayOutput
	ToGetRedisClusterPrivateNetworkArrayOutputWithContext(context.Context) GetRedisClusterPrivateNetworkArrayOutput
}

type GetRedisClusterPrivateNetworkArray []GetRedisClusterPrivateNetworkInput

func (GetRedisClusterPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterPrivateNetwork)(nil)).Elem()
}

func (i GetRedisClusterPrivateNetworkArray) ToGetRedisClusterPrivateNetworkArrayOutput() GetRedisClusterPrivateNetworkArrayOutput {
	return i.ToGetRedisClusterPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterPrivateNetworkArray) ToGetRedisClusterPrivateNetworkArrayOutputWithContext(ctx context.Context) GetRedisClusterPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterPrivateNetworkArrayOutput)
}

type GetRedisClusterPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetRedisClusterPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterPrivateNetwork)(nil)).Elem()
}

func (o GetRedisClusterPrivateNetworkOutput) ToGetRedisClusterPrivateNetworkOutput() GetRedisClusterPrivateNetworkOutput {
	return o
}

func (o GetRedisClusterPrivateNetworkOutput) ToGetRedisClusterPrivateNetworkOutputWithContext(ctx context.Context) GetRedisClusterPrivateNetworkOutput {
	return o
}

// UUID of the endpoint to be connected to the cluster
func (o GetRedisClusterPrivateNetworkOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterPrivateNetwork) string { return v.EndpointId }).(pulumi.StringOutput)
}

// The ID of the Redis cluster.
func (o GetRedisClusterPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// List of IPv4 addresses of the private network with a CIDR notation
func (o GetRedisClusterPrivateNetworkOutput) ServiceIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisClusterPrivateNetwork) []string { return v.ServiceIps }).(pulumi.StringArrayOutput)
}

// `region`) The zone in which the server exists.
func (o GetRedisClusterPrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterPrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetRedisClusterPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterPrivateNetwork)(nil)).Elem()
}

func (o GetRedisClusterPrivateNetworkArrayOutput) ToGetRedisClusterPrivateNetworkArrayOutput() GetRedisClusterPrivateNetworkArrayOutput {
	return o
}

func (o GetRedisClusterPrivateNetworkArrayOutput) ToGetRedisClusterPrivateNetworkArrayOutputWithContext(ctx context.Context) GetRedisClusterPrivateNetworkArrayOutput {
	return o
}

func (o GetRedisClusterPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetRedisClusterPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterPrivateNetwork {
		return vs[0].([]GetRedisClusterPrivateNetwork)[vs[1].(int)]
	}).(GetRedisClusterPrivateNetworkOutput)
}

type GetRedisClusterPublicNetwork struct {
	// The ID of the Redis cluster.
	Id  string   `pulumi:"id"`
	Ips []string `pulumi:"ips"`
	// TCP port of the endpoint
	Port int `pulumi:"port"`
}

// GetRedisClusterPublicNetworkInput is an input type that accepts GetRedisClusterPublicNetworkArgs and GetRedisClusterPublicNetworkOutput values.
// You can construct a concrete instance of `GetRedisClusterPublicNetworkInput` via:
//
//	GetRedisClusterPublicNetworkArgs{...}
type GetRedisClusterPublicNetworkInput interface {
	pulumi.Input

	ToGetRedisClusterPublicNetworkOutput() GetRedisClusterPublicNetworkOutput
	ToGetRedisClusterPublicNetworkOutputWithContext(context.Context) GetRedisClusterPublicNetworkOutput
}

type GetRedisClusterPublicNetworkArgs struct {
	// The ID of the Redis cluster.
	Id  pulumi.StringInput      `pulumi:"id"`
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// TCP port of the endpoint
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetRedisClusterPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterPublicNetwork)(nil)).Elem()
}

func (i GetRedisClusterPublicNetworkArgs) ToGetRedisClusterPublicNetworkOutput() GetRedisClusterPublicNetworkOutput {
	return i.ToGetRedisClusterPublicNetworkOutputWithContext(context.Background())
}

func (i GetRedisClusterPublicNetworkArgs) ToGetRedisClusterPublicNetworkOutputWithContext(ctx context.Context) GetRedisClusterPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterPublicNetworkOutput)
}

// GetRedisClusterPublicNetworkArrayInput is an input type that accepts GetRedisClusterPublicNetworkArray and GetRedisClusterPublicNetworkArrayOutput values.
// You can construct a concrete instance of `GetRedisClusterPublicNetworkArrayInput` via:
//
//	GetRedisClusterPublicNetworkArray{ GetRedisClusterPublicNetworkArgs{...} }
type GetRedisClusterPublicNetworkArrayInput interface {
	pulumi.Input

	ToGetRedisClusterPublicNetworkArrayOutput() GetRedisClusterPublicNetworkArrayOutput
	ToGetRedisClusterPublicNetworkArrayOutputWithContext(context.Context) GetRedisClusterPublicNetworkArrayOutput
}

type GetRedisClusterPublicNetworkArray []GetRedisClusterPublicNetworkInput

func (GetRedisClusterPublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterPublicNetwork)(nil)).Elem()
}

func (i GetRedisClusterPublicNetworkArray) ToGetRedisClusterPublicNetworkArrayOutput() GetRedisClusterPublicNetworkArrayOutput {
	return i.ToGetRedisClusterPublicNetworkArrayOutputWithContext(context.Background())
}

func (i GetRedisClusterPublicNetworkArray) ToGetRedisClusterPublicNetworkArrayOutputWithContext(ctx context.Context) GetRedisClusterPublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisClusterPublicNetworkArrayOutput)
}

type GetRedisClusterPublicNetworkOutput struct{ *pulumi.OutputState }

func (GetRedisClusterPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisClusterPublicNetwork)(nil)).Elem()
}

func (o GetRedisClusterPublicNetworkOutput) ToGetRedisClusterPublicNetworkOutput() GetRedisClusterPublicNetworkOutput {
	return o
}

func (o GetRedisClusterPublicNetworkOutput) ToGetRedisClusterPublicNetworkOutputWithContext(ctx context.Context) GetRedisClusterPublicNetworkOutput {
	return o
}

// The ID of the Redis cluster.
func (o GetRedisClusterPublicNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisClusterPublicNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRedisClusterPublicNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisClusterPublicNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// TCP port of the endpoint
func (o GetRedisClusterPublicNetworkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisClusterPublicNetwork) int { return v.Port }).(pulumi.IntOutput)
}

type GetRedisClusterPublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetRedisClusterPublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisClusterPublicNetwork)(nil)).Elem()
}

func (o GetRedisClusterPublicNetworkArrayOutput) ToGetRedisClusterPublicNetworkArrayOutput() GetRedisClusterPublicNetworkArrayOutput {
	return o
}

func (o GetRedisClusterPublicNetworkArrayOutput) ToGetRedisClusterPublicNetworkArrayOutputWithContext(ctx context.Context) GetRedisClusterPublicNetworkArrayOutput {
	return o
}

func (o GetRedisClusterPublicNetworkArrayOutput) Index(i pulumi.IntInput) GetRedisClusterPublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisClusterPublicNetwork {
		return vs[0].([]GetRedisClusterPublicNetwork)[vs[1].(int)]
	}).(GetRedisClusterPublicNetworkOutput)
}

type GetTemDomainReputation struct {
	// The previously-calculated domain's reputation score
	PreviousScore int `pulumi:"previousScore"`
	// Time and date the previous reputation score was calculated
	PreviousScoredAt string `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score
	Score int `pulumi:"score"`
	// Time and date the score was calculated
	ScoredAt string `pulumi:"scoredAt"`
	// Status of the domain's reputation
	Status string `pulumi:"status"`
}

// GetTemDomainReputationInput is an input type that accepts GetTemDomainReputationArgs and GetTemDomainReputationOutput values.
// You can construct a concrete instance of `GetTemDomainReputationInput` via:
//
//	GetTemDomainReputationArgs{...}
type GetTemDomainReputationInput interface {
	pulumi.Input

	ToGetTemDomainReputationOutput() GetTemDomainReputationOutput
	ToGetTemDomainReputationOutputWithContext(context.Context) GetTemDomainReputationOutput
}

type GetTemDomainReputationArgs struct {
	// The previously-calculated domain's reputation score
	PreviousScore pulumi.IntInput `pulumi:"previousScore"`
	// Time and date the previous reputation score was calculated
	PreviousScoredAt pulumi.StringInput `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score
	Score pulumi.IntInput `pulumi:"score"`
	// Time and date the score was calculated
	ScoredAt pulumi.StringInput `pulumi:"scoredAt"`
	// Status of the domain's reputation
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetTemDomainReputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemDomainReputation)(nil)).Elem()
}

func (i GetTemDomainReputationArgs) ToGetTemDomainReputationOutput() GetTemDomainReputationOutput {
	return i.ToGetTemDomainReputationOutputWithContext(context.Background())
}

func (i GetTemDomainReputationArgs) ToGetTemDomainReputationOutputWithContext(ctx context.Context) GetTemDomainReputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemDomainReputationOutput)
}

// GetTemDomainReputationArrayInput is an input type that accepts GetTemDomainReputationArray and GetTemDomainReputationArrayOutput values.
// You can construct a concrete instance of `GetTemDomainReputationArrayInput` via:
//
//	GetTemDomainReputationArray{ GetTemDomainReputationArgs{...} }
type GetTemDomainReputationArrayInput interface {
	pulumi.Input

	ToGetTemDomainReputationArrayOutput() GetTemDomainReputationArrayOutput
	ToGetTemDomainReputationArrayOutputWithContext(context.Context) GetTemDomainReputationArrayOutput
}

type GetTemDomainReputationArray []GetTemDomainReputationInput

func (GetTemDomainReputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemDomainReputation)(nil)).Elem()
}

func (i GetTemDomainReputationArray) ToGetTemDomainReputationArrayOutput() GetTemDomainReputationArrayOutput {
	return i.ToGetTemDomainReputationArrayOutputWithContext(context.Background())
}

func (i GetTemDomainReputationArray) ToGetTemDomainReputationArrayOutputWithContext(ctx context.Context) GetTemDomainReputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemDomainReputationArrayOutput)
}

type GetTemDomainReputationOutput struct{ *pulumi.OutputState }

func (GetTemDomainReputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemDomainReputation)(nil)).Elem()
}

func (o GetTemDomainReputationOutput) ToGetTemDomainReputationOutput() GetTemDomainReputationOutput {
	return o
}

func (o GetTemDomainReputationOutput) ToGetTemDomainReputationOutputWithContext(ctx context.Context) GetTemDomainReputationOutput {
	return o
}

// The previously-calculated domain's reputation score
func (o GetTemDomainReputationOutput) PreviousScore() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemDomainReputation) int { return v.PreviousScore }).(pulumi.IntOutput)
}

// Time and date the previous reputation score was calculated
func (o GetTemDomainReputationOutput) PreviousScoredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemDomainReputation) string { return v.PreviousScoredAt }).(pulumi.StringOutput)
}

// A range from 0 to 100 that determines your domain's reputation score
func (o GetTemDomainReputationOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v GetTemDomainReputation) int { return v.Score }).(pulumi.IntOutput)
}

// Time and date the score was calculated
func (o GetTemDomainReputationOutput) ScoredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemDomainReputation) string { return v.ScoredAt }).(pulumi.StringOutput)
}

// Status of the domain's reputation
func (o GetTemDomainReputationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemDomainReputation) string { return v.Status }).(pulumi.StringOutput)
}

type GetTemDomainReputationArrayOutput struct{ *pulumi.OutputState }

func (GetTemDomainReputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemDomainReputation)(nil)).Elem()
}

func (o GetTemDomainReputationArrayOutput) ToGetTemDomainReputationArrayOutput() GetTemDomainReputationArrayOutput {
	return o
}

func (o GetTemDomainReputationArrayOutput) ToGetTemDomainReputationArrayOutputWithContext(ctx context.Context) GetTemDomainReputationArrayOutput {
	return o
}

func (o GetTemDomainReputationArrayOutput) Index(i pulumi.IntInput) GetTemDomainReputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemDomainReputation {
		return vs[0].([]GetTemDomainReputation)[vs[1].(int)]
	}).(GetTemDomainReputationOutput)
}

type GetVpcGatewayNetworkIpamConfig struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIpId string `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute bool `pulumi:"pushDefaultRoute"`
}

// GetVpcGatewayNetworkIpamConfigInput is an input type that accepts GetVpcGatewayNetworkIpamConfigArgs and GetVpcGatewayNetworkIpamConfigOutput values.
// You can construct a concrete instance of `GetVpcGatewayNetworkIpamConfigInput` via:
//
//	GetVpcGatewayNetworkIpamConfigArgs{...}
type GetVpcGatewayNetworkIpamConfigInput interface {
	pulumi.Input

	ToGetVpcGatewayNetworkIpamConfigOutput() GetVpcGatewayNetworkIpamConfigOutput
	ToGetVpcGatewayNetworkIpamConfigOutputWithContext(context.Context) GetVpcGatewayNetworkIpamConfigOutput
}

type GetVpcGatewayNetworkIpamConfigArgs struct {
	// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
	IpamIpId pulumi.StringInput `pulumi:"ipamIpId"`
	// Defines whether the default route is enabled on that Gateway Network
	PushDefaultRoute pulumi.BoolInput `pulumi:"pushDefaultRoute"`
}

func (GetVpcGatewayNetworkIpamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GetVpcGatewayNetworkIpamConfigArgs) ToGetVpcGatewayNetworkIpamConfigOutput() GetVpcGatewayNetworkIpamConfigOutput {
	return i.ToGetVpcGatewayNetworkIpamConfigOutputWithContext(context.Background())
}

func (i GetVpcGatewayNetworkIpamConfigArgs) ToGetVpcGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GetVpcGatewayNetworkIpamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcGatewayNetworkIpamConfigOutput)
}

// GetVpcGatewayNetworkIpamConfigArrayInput is an input type that accepts GetVpcGatewayNetworkIpamConfigArray and GetVpcGatewayNetworkIpamConfigArrayOutput values.
// You can construct a concrete instance of `GetVpcGatewayNetworkIpamConfigArrayInput` via:
//
//	GetVpcGatewayNetworkIpamConfigArray{ GetVpcGatewayNetworkIpamConfigArgs{...} }
type GetVpcGatewayNetworkIpamConfigArrayInput interface {
	pulumi.Input

	ToGetVpcGatewayNetworkIpamConfigArrayOutput() GetVpcGatewayNetworkIpamConfigArrayOutput
	ToGetVpcGatewayNetworkIpamConfigArrayOutputWithContext(context.Context) GetVpcGatewayNetworkIpamConfigArrayOutput
}

type GetVpcGatewayNetworkIpamConfigArray []GetVpcGatewayNetworkIpamConfigInput

func (GetVpcGatewayNetworkIpamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (i GetVpcGatewayNetworkIpamConfigArray) ToGetVpcGatewayNetworkIpamConfigArrayOutput() GetVpcGatewayNetworkIpamConfigArrayOutput {
	return i.ToGetVpcGatewayNetworkIpamConfigArrayOutputWithContext(context.Background())
}

func (i GetVpcGatewayNetworkIpamConfigArray) ToGetVpcGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetVpcGatewayNetworkIpamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcGatewayNetworkIpamConfigArrayOutput)
}

type GetVpcGatewayNetworkIpamConfigOutput struct{ *pulumi.OutputState }

func (GetVpcGatewayNetworkIpamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GetVpcGatewayNetworkIpamConfigOutput) ToGetVpcGatewayNetworkIpamConfigOutput() GetVpcGatewayNetworkIpamConfigOutput {
	return o
}

func (o GetVpcGatewayNetworkIpamConfigOutput) ToGetVpcGatewayNetworkIpamConfigOutputWithContext(ctx context.Context) GetVpcGatewayNetworkIpamConfigOutput {
	return o
}

// Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
func (o GetVpcGatewayNetworkIpamConfigOutput) IpamIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcGatewayNetworkIpamConfig) string { return v.IpamIpId }).(pulumi.StringOutput)
}

// Defines whether the default route is enabled on that Gateway Network
func (o GetVpcGatewayNetworkIpamConfigOutput) PushDefaultRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcGatewayNetworkIpamConfig) bool { return v.PushDefaultRoute }).(pulumi.BoolOutput)
}

type GetVpcGatewayNetworkIpamConfigArrayOutput struct{ *pulumi.OutputState }

func (GetVpcGatewayNetworkIpamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcGatewayNetworkIpamConfig)(nil)).Elem()
}

func (o GetVpcGatewayNetworkIpamConfigArrayOutput) ToGetVpcGatewayNetworkIpamConfigArrayOutput() GetVpcGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GetVpcGatewayNetworkIpamConfigArrayOutput) ToGetVpcGatewayNetworkIpamConfigArrayOutputWithContext(ctx context.Context) GetVpcGatewayNetworkIpamConfigArrayOutput {
	return o
}

func (o GetVpcGatewayNetworkIpamConfigArrayOutput) Index(i pulumi.IntInput) GetVpcGatewayNetworkIpamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcGatewayNetworkIpamConfig {
		return vs[0].([]GetVpcGatewayNetworkIpamConfig)[vs[1].(int)]
	}).(GetVpcGatewayNetworkIpamConfigOutput)
}

type GetVpcPrivateNetworkIpv4Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address string `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the private network.
	Id string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength int `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetVpcPrivateNetworkIpv4SubnetInput is an input type that accepts GetVpcPrivateNetworkIpv4SubnetArgs and GetVpcPrivateNetworkIpv4SubnetOutput values.
// You can construct a concrete instance of `GetVpcPrivateNetworkIpv4SubnetInput` via:
//
//	GetVpcPrivateNetworkIpv4SubnetArgs{...}
type GetVpcPrivateNetworkIpv4SubnetInput interface {
	pulumi.Input

	ToGetVpcPrivateNetworkIpv4SubnetOutput() GetVpcPrivateNetworkIpv4SubnetOutput
	ToGetVpcPrivateNetworkIpv4SubnetOutputWithContext(context.Context) GetVpcPrivateNetworkIpv4SubnetOutput
}

type GetVpcPrivateNetworkIpv4SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the private network.
	Id pulumi.StringInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetVpcPrivateNetworkIpv4SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i GetVpcPrivateNetworkIpv4SubnetArgs) ToGetVpcPrivateNetworkIpv4SubnetOutput() GetVpcPrivateNetworkIpv4SubnetOutput {
	return i.ToGetVpcPrivateNetworkIpv4SubnetOutputWithContext(context.Background())
}

func (i GetVpcPrivateNetworkIpv4SubnetArgs) ToGetVpcPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv4SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPrivateNetworkIpv4SubnetOutput)
}

// GetVpcPrivateNetworkIpv4SubnetArrayInput is an input type that accepts GetVpcPrivateNetworkIpv4SubnetArray and GetVpcPrivateNetworkIpv4SubnetArrayOutput values.
// You can construct a concrete instance of `GetVpcPrivateNetworkIpv4SubnetArrayInput` via:
//
//	GetVpcPrivateNetworkIpv4SubnetArray{ GetVpcPrivateNetworkIpv4SubnetArgs{...} }
type GetVpcPrivateNetworkIpv4SubnetArrayInput interface {
	pulumi.Input

	ToGetVpcPrivateNetworkIpv4SubnetArrayOutput() GetVpcPrivateNetworkIpv4SubnetArrayOutput
	ToGetVpcPrivateNetworkIpv4SubnetArrayOutputWithContext(context.Context) GetVpcPrivateNetworkIpv4SubnetArrayOutput
}

type GetVpcPrivateNetworkIpv4SubnetArray []GetVpcPrivateNetworkIpv4SubnetInput

func (GetVpcPrivateNetworkIpv4SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (i GetVpcPrivateNetworkIpv4SubnetArray) ToGetVpcPrivateNetworkIpv4SubnetArrayOutput() GetVpcPrivateNetworkIpv4SubnetArrayOutput {
	return i.ToGetVpcPrivateNetworkIpv4SubnetArrayOutputWithContext(context.Background())
}

func (i GetVpcPrivateNetworkIpv4SubnetArray) ToGetVpcPrivateNetworkIpv4SubnetArrayOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv4SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPrivateNetworkIpv4SubnetArrayOutput)
}

type GetVpcPrivateNetworkIpv4SubnetOutput struct{ *pulumi.OutputState }

func (GetVpcPrivateNetworkIpv4SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o GetVpcPrivateNetworkIpv4SubnetOutput) ToGetVpcPrivateNetworkIpv4SubnetOutput() GetVpcPrivateNetworkIpv4SubnetOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv4SubnetOutput) ToGetVpcPrivateNetworkIpv4SubnetOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv4SubnetOutput {
	return o
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
func (o GetVpcPrivateNetworkIpv4SubnetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the subnet
func (o GetVpcPrivateNetworkIpv4SubnetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the private network.
func (o GetVpcPrivateNetworkIpv4SubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.Id }).(pulumi.StringOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
func (o GetVpcPrivateNetworkIpv4SubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// The subnet CIDR
func (o GetVpcPrivateNetworkIpv4SubnetOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.Subnet }).(pulumi.StringOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o GetVpcPrivateNetworkIpv4SubnetOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The date and time of the last update of the subnet
func (o GetVpcPrivateNetworkIpv4SubnetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv4Subnet) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetVpcPrivateNetworkIpv4SubnetArrayOutput struct{ *pulumi.OutputState }

func (GetVpcPrivateNetworkIpv4SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPrivateNetworkIpv4Subnet)(nil)).Elem()
}

func (o GetVpcPrivateNetworkIpv4SubnetArrayOutput) ToGetVpcPrivateNetworkIpv4SubnetArrayOutput() GetVpcPrivateNetworkIpv4SubnetArrayOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv4SubnetArrayOutput) ToGetVpcPrivateNetworkIpv4SubnetArrayOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv4SubnetArrayOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv4SubnetArrayOutput) Index(i pulumi.IntInput) GetVpcPrivateNetworkIpv4SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcPrivateNetworkIpv4Subnet {
		return vs[0].([]GetVpcPrivateNetworkIpv4Subnet)[vs[1].(int)]
	}).(GetVpcPrivateNetworkIpv4SubnetOutput)
}

type GetVpcPrivateNetworkIpv6Subnet struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address string `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the private network.
	Id string `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength int `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet string `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask string `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetVpcPrivateNetworkIpv6SubnetInput is an input type that accepts GetVpcPrivateNetworkIpv6SubnetArgs and GetVpcPrivateNetworkIpv6SubnetOutput values.
// You can construct a concrete instance of `GetVpcPrivateNetworkIpv6SubnetInput` via:
//
//	GetVpcPrivateNetworkIpv6SubnetArgs{...}
type GetVpcPrivateNetworkIpv6SubnetInput interface {
	pulumi.Input

	ToGetVpcPrivateNetworkIpv6SubnetOutput() GetVpcPrivateNetworkIpv6SubnetOutput
	ToGetVpcPrivateNetworkIpv6SubnetOutputWithContext(context.Context) GetVpcPrivateNetworkIpv6SubnetOutput
}

type GetVpcPrivateNetworkIpv6SubnetArgs struct {
	// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
	Address pulumi.StringInput `pulumi:"address"`
	// The date and time of the creation of the subnet
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the private network.
	Id pulumi.StringInput `pulumi:"id"`
	// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The subnet CIDR
	Subnet pulumi.StringInput `pulumi:"subnet"`
	// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
	// The date and time of the last update of the subnet
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetVpcPrivateNetworkIpv6SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i GetVpcPrivateNetworkIpv6SubnetArgs) ToGetVpcPrivateNetworkIpv6SubnetOutput() GetVpcPrivateNetworkIpv6SubnetOutput {
	return i.ToGetVpcPrivateNetworkIpv6SubnetOutputWithContext(context.Background())
}

func (i GetVpcPrivateNetworkIpv6SubnetArgs) ToGetVpcPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv6SubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPrivateNetworkIpv6SubnetOutput)
}

// GetVpcPrivateNetworkIpv6SubnetArrayInput is an input type that accepts GetVpcPrivateNetworkIpv6SubnetArray and GetVpcPrivateNetworkIpv6SubnetArrayOutput values.
// You can construct a concrete instance of `GetVpcPrivateNetworkIpv6SubnetArrayInput` via:
//
//	GetVpcPrivateNetworkIpv6SubnetArray{ GetVpcPrivateNetworkIpv6SubnetArgs{...} }
type GetVpcPrivateNetworkIpv6SubnetArrayInput interface {
	pulumi.Input

	ToGetVpcPrivateNetworkIpv6SubnetArrayOutput() GetVpcPrivateNetworkIpv6SubnetArrayOutput
	ToGetVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Context) GetVpcPrivateNetworkIpv6SubnetArrayOutput
}

type GetVpcPrivateNetworkIpv6SubnetArray []GetVpcPrivateNetworkIpv6SubnetInput

func (GetVpcPrivateNetworkIpv6SubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (i GetVpcPrivateNetworkIpv6SubnetArray) ToGetVpcPrivateNetworkIpv6SubnetArrayOutput() GetVpcPrivateNetworkIpv6SubnetArrayOutput {
	return i.ToGetVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(context.Background())
}

func (i GetVpcPrivateNetworkIpv6SubnetArray) ToGetVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv6SubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPrivateNetworkIpv6SubnetArrayOutput)
}

type GetVpcPrivateNetworkIpv6SubnetOutput struct{ *pulumi.OutputState }

func (GetVpcPrivateNetworkIpv6SubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o GetVpcPrivateNetworkIpv6SubnetOutput) ToGetVpcPrivateNetworkIpv6SubnetOutput() GetVpcPrivateNetworkIpv6SubnetOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv6SubnetOutput) ToGetVpcPrivateNetworkIpv6SubnetOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv6SubnetOutput {
	return o
}

// The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
func (o GetVpcPrivateNetworkIpv6SubnetOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the subnet
func (o GetVpcPrivateNetworkIpv6SubnetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the private network.
func (o GetVpcPrivateNetworkIpv6SubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.Id }).(pulumi.StringOutput)
}

// The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
func (o GetVpcPrivateNetworkIpv6SubnetOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) int { return v.PrefixLength }).(pulumi.IntOutput)
}

// The subnet CIDR
func (o GetVpcPrivateNetworkIpv6SubnetOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.Subnet }).(pulumi.StringOutput)
}

// The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
func (o GetVpcPrivateNetworkIpv6SubnetOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.SubnetMask }).(pulumi.StringOutput)
}

// The date and time of the last update of the subnet
func (o GetVpcPrivateNetworkIpv6SubnetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPrivateNetworkIpv6Subnet) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetVpcPrivateNetworkIpv6SubnetArrayOutput struct{ *pulumi.OutputState }

func (GetVpcPrivateNetworkIpv6SubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPrivateNetworkIpv6Subnet)(nil)).Elem()
}

func (o GetVpcPrivateNetworkIpv6SubnetArrayOutput) ToGetVpcPrivateNetworkIpv6SubnetArrayOutput() GetVpcPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv6SubnetArrayOutput) ToGetVpcPrivateNetworkIpv6SubnetArrayOutputWithContext(ctx context.Context) GetVpcPrivateNetworkIpv6SubnetArrayOutput {
	return o
}

func (o GetVpcPrivateNetworkIpv6SubnetArrayOutput) Index(i pulumi.IntInput) GetVpcPrivateNetworkIpv6SubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcPrivateNetworkIpv6Subnet {
		return vs[0].([]GetVpcPrivateNetworkIpv6Subnet)[vs[1].(int)]
	}).(GetVpcPrivateNetworkIpv6SubnetOutput)
}

type GetVpcsVpc struct {
	// Date and time of VPC's creation (RFC 3339 format).
	CreatedAt string `pulumi:"createdAt"`
	// The associated VPC ID.
	// > **Important:** VPCs' IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id string `pulumi:"id"`
	// Defines whether the VPC is the default one for its Project.
	IsDefault bool `pulumi:"isDefault"`
	// The VPC name used as filter. VPCs with a name like it are listed.
	Name string `pulumi:"name"`
	// The organization ID the VPC is associated with.
	OrganizationId string `pulumi:"organizationId"`
	// The ID of the project the VPC is associated with.
	ProjectId string `pulumi:"projectId"`
	// `region`). The region in which vpcs exist.
	Region string `pulumi:"region"`
	// List of tags used as filter. VPCs with these exact tags are listed.
	Tags     []string `pulumi:"tags"`
	UpdateAt string   `pulumi:"updateAt"`
}

// GetVpcsVpcInput is an input type that accepts GetVpcsVpcArgs and GetVpcsVpcOutput values.
// You can construct a concrete instance of `GetVpcsVpcInput` via:
//
//	GetVpcsVpcArgs{...}
type GetVpcsVpcInput interface {
	pulumi.Input

	ToGetVpcsVpcOutput() GetVpcsVpcOutput
	ToGetVpcsVpcOutputWithContext(context.Context) GetVpcsVpcOutput
}

type GetVpcsVpcArgs struct {
	// Date and time of VPC's creation (RFC 3339 format).
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The associated VPC ID.
	// > **Important:** VPCs' IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
	Id pulumi.StringInput `pulumi:"id"`
	// Defines whether the VPC is the default one for its Project.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The VPC name used as filter. VPCs with a name like it are listed.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID the VPC is associated with.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The ID of the project the VPC is associated with.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// `region`). The region in which vpcs exist.
	Region pulumi.StringInput `pulumi:"region"`
	// List of tags used as filter. VPCs with these exact tags are listed.
	Tags     pulumi.StringArrayInput `pulumi:"tags"`
	UpdateAt pulumi.StringInput      `pulumi:"updateAt"`
}

func (GetVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return i.ToGetVpcsVpcOutputWithContext(context.Background())
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcOutput)
}

// GetVpcsVpcArrayInput is an input type that accepts GetVpcsVpcArray and GetVpcsVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcArrayInput` via:
//
//	GetVpcsVpcArray{ GetVpcsVpcArgs{...} }
type GetVpcsVpcArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput
	ToGetVpcsVpcArrayOutputWithContext(context.Context) GetVpcsVpcArrayOutput
}

type GetVpcsVpcArray []GetVpcsVpcInput

func (GetVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return i.ToGetVpcsVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcArrayOutput)
}

type GetVpcsVpcOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return o
}

// Date and time of VPC's creation (RFC 3339 format).
func (o GetVpcsVpcOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The associated VPC ID.
// > **Important:** VPCs' IDs are regional, which means they are of the form `{region}/{id}`, e.g. `fr-par/11111111-1111-1111-1111-111111111111
func (o GetVpcsVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Id }).(pulumi.StringOutput)
}

// Defines whether the VPC is the default one for its Project.
func (o GetVpcsVpcOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcsVpc) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The VPC name used as filter. VPCs with a name like it are listed.
func (o GetVpcsVpcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID the VPC is associated with.
func (o GetVpcsVpcOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the project the VPC is associated with.
func (o GetVpcsVpcOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ProjectId }).(pulumi.StringOutput)
}

// `region`). The region in which vpcs exist.
func (o GetVpcsVpcOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Region }).(pulumi.StringOutput)
}

// List of tags used as filter. VPCs with these exact tags are listed.
func (o GetVpcsVpcOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetVpcsVpcOutput) UpdateAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.UpdateAt }).(pulumi.StringOutput)
}

type GetVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpc {
		return vs[0].([]GetVpcsVpc)[vs[1].(int)]
	}).(GetVpcsVpcOutput)
}

type GetWebHostOfferProduct struct {
	// The quota of databases.
	DatabasesQuota int `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota int `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota int `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota int `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name string `pulumi:"name"`
	// The product option.
	Option bool `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram int `pulumi:"ram"`
	// If support is included.
	SupportIncluded bool `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu int `pulumi:"vCpu"`
}

// GetWebHostOfferProductInput is an input type that accepts GetWebHostOfferProductArgs and GetWebHostOfferProductOutput values.
// You can construct a concrete instance of `GetWebHostOfferProductInput` via:
//
//	GetWebHostOfferProductArgs{...}
type GetWebHostOfferProductInput interface {
	pulumi.Input

	ToGetWebHostOfferProductOutput() GetWebHostOfferProductOutput
	ToGetWebHostOfferProductOutputWithContext(context.Context) GetWebHostOfferProductOutput
}

type GetWebHostOfferProductArgs struct {
	// The quota of databases.
	DatabasesQuota pulumi.IntInput `pulumi:"databasesQuota"`
	// The quota of email accounts.
	EmailAccountsQuota pulumi.IntInput `pulumi:"emailAccountsQuota"`
	// The quota of email storage.
	EmailStorageQuota pulumi.IntInput `pulumi:"emailStorageQuota"`
	// The quota of hosting storage.
	HostingStorageQuota pulumi.IntInput `pulumi:"hostingStorageQuota"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The product option.
	Option pulumi.BoolInput `pulumi:"option"`
	// The capacity of the memory in GB.
	Ram pulumi.IntInput `pulumi:"ram"`
	// If support is included.
	SupportIncluded pulumi.BoolInput `pulumi:"supportIncluded"`
	// The number of cores.
	VCpu pulumi.IntInput `pulumi:"vCpu"`
}

func (GetWebHostOfferProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostOfferProduct)(nil)).Elem()
}

func (i GetWebHostOfferProductArgs) ToGetWebHostOfferProductOutput() GetWebHostOfferProductOutput {
	return i.ToGetWebHostOfferProductOutputWithContext(context.Background())
}

func (i GetWebHostOfferProductArgs) ToGetWebHostOfferProductOutputWithContext(ctx context.Context) GetWebHostOfferProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostOfferProductOutput)
}

// GetWebHostOfferProductArrayInput is an input type that accepts GetWebHostOfferProductArray and GetWebHostOfferProductArrayOutput values.
// You can construct a concrete instance of `GetWebHostOfferProductArrayInput` via:
//
//	GetWebHostOfferProductArray{ GetWebHostOfferProductArgs{...} }
type GetWebHostOfferProductArrayInput interface {
	pulumi.Input

	ToGetWebHostOfferProductArrayOutput() GetWebHostOfferProductArrayOutput
	ToGetWebHostOfferProductArrayOutputWithContext(context.Context) GetWebHostOfferProductArrayOutput
}

type GetWebHostOfferProductArray []GetWebHostOfferProductInput

func (GetWebHostOfferProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostOfferProduct)(nil)).Elem()
}

func (i GetWebHostOfferProductArray) ToGetWebHostOfferProductArrayOutput() GetWebHostOfferProductArrayOutput {
	return i.ToGetWebHostOfferProductArrayOutputWithContext(context.Background())
}

func (i GetWebHostOfferProductArray) ToGetWebHostOfferProductArrayOutputWithContext(ctx context.Context) GetWebHostOfferProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebHostOfferProductArrayOutput)
}

type GetWebHostOfferProductOutput struct{ *pulumi.OutputState }

func (GetWebHostOfferProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebHostOfferProduct)(nil)).Elem()
}

func (o GetWebHostOfferProductOutput) ToGetWebHostOfferProductOutput() GetWebHostOfferProductOutput {
	return o
}

func (o GetWebHostOfferProductOutput) ToGetWebHostOfferProductOutputWithContext(ctx context.Context) GetWebHostOfferProductOutput {
	return o
}

// The quota of databases.
func (o GetWebHostOfferProductOutput) DatabasesQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.DatabasesQuota }).(pulumi.IntOutput)
}

// The quota of email accounts.
func (o GetWebHostOfferProductOutput) EmailAccountsQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.EmailAccountsQuota }).(pulumi.IntOutput)
}

// The quota of email storage.
func (o GetWebHostOfferProductOutput) EmailStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.EmailStorageQuota }).(pulumi.IntOutput)
}

// The quota of hosting storage.
func (o GetWebHostOfferProductOutput) HostingStorageQuota() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.HostingStorageQuota }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetWebHostOfferProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) string { return v.Name }).(pulumi.StringOutput)
}

// The product option.
func (o GetWebHostOfferProductOutput) Option() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) bool { return v.Option }).(pulumi.BoolOutput)
}

// The capacity of the memory in GB.
func (o GetWebHostOfferProductOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.Ram }).(pulumi.IntOutput)
}

// If support is included.
func (o GetWebHostOfferProductOutput) SupportIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) bool { return v.SupportIncluded }).(pulumi.BoolOutput)
}

// The number of cores.
func (o GetWebHostOfferProductOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetWebHostOfferProduct) int { return v.VCpu }).(pulumi.IntOutput)
}

type GetWebHostOfferProductArrayOutput struct{ *pulumi.OutputState }

func (GetWebHostOfferProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebHostOfferProduct)(nil)).Elem()
}

func (o GetWebHostOfferProductArrayOutput) ToGetWebHostOfferProductArrayOutput() GetWebHostOfferProductArrayOutput {
	return o
}

func (o GetWebHostOfferProductArrayOutput) ToGetWebHostOfferProductArrayOutputWithContext(ctx context.Context) GetWebHostOfferProductArrayOutput {
	return o
}

func (o GetWebHostOfferProductArrayOutput) Index(i pulumi.IntInput) GetWebHostOfferProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebHostOfferProduct {
		return vs[0].([]GetWebHostOfferProduct)[vs[1].(int)]
	}).(GetWebHostOfferProductOutput)
}

type GetWebhostingCpanelUrl struct {
	Dashboard string `pulumi:"dashboard"`
	Webmail   string `pulumi:"webmail"`
}

// GetWebhostingCpanelUrlInput is an input type that accepts GetWebhostingCpanelUrlArgs and GetWebhostingCpanelUrlOutput values.
// You can construct a concrete instance of `GetWebhostingCpanelUrlInput` via:
//
//	GetWebhostingCpanelUrlArgs{...}
type GetWebhostingCpanelUrlInput interface {
	pulumi.Input

	ToGetWebhostingCpanelUrlOutput() GetWebhostingCpanelUrlOutput
	ToGetWebhostingCpanelUrlOutputWithContext(context.Context) GetWebhostingCpanelUrlOutput
}

type GetWebhostingCpanelUrlArgs struct {
	Dashboard pulumi.StringInput `pulumi:"dashboard"`
	Webmail   pulumi.StringInput `pulumi:"webmail"`
}

func (GetWebhostingCpanelUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhostingCpanelUrl)(nil)).Elem()
}

func (i GetWebhostingCpanelUrlArgs) ToGetWebhostingCpanelUrlOutput() GetWebhostingCpanelUrlOutput {
	return i.ToGetWebhostingCpanelUrlOutputWithContext(context.Background())
}

func (i GetWebhostingCpanelUrlArgs) ToGetWebhostingCpanelUrlOutputWithContext(ctx context.Context) GetWebhostingCpanelUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhostingCpanelUrlOutput)
}

// GetWebhostingCpanelUrlArrayInput is an input type that accepts GetWebhostingCpanelUrlArray and GetWebhostingCpanelUrlArrayOutput values.
// You can construct a concrete instance of `GetWebhostingCpanelUrlArrayInput` via:
//
//	GetWebhostingCpanelUrlArray{ GetWebhostingCpanelUrlArgs{...} }
type GetWebhostingCpanelUrlArrayInput interface {
	pulumi.Input

	ToGetWebhostingCpanelUrlArrayOutput() GetWebhostingCpanelUrlArrayOutput
	ToGetWebhostingCpanelUrlArrayOutputWithContext(context.Context) GetWebhostingCpanelUrlArrayOutput
}

type GetWebhostingCpanelUrlArray []GetWebhostingCpanelUrlInput

func (GetWebhostingCpanelUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhostingCpanelUrl)(nil)).Elem()
}

func (i GetWebhostingCpanelUrlArray) ToGetWebhostingCpanelUrlArrayOutput() GetWebhostingCpanelUrlArrayOutput {
	return i.ToGetWebhostingCpanelUrlArrayOutputWithContext(context.Background())
}

func (i GetWebhostingCpanelUrlArray) ToGetWebhostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetWebhostingCpanelUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhostingCpanelUrlArrayOutput)
}

type GetWebhostingCpanelUrlOutput struct{ *pulumi.OutputState }

func (GetWebhostingCpanelUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhostingCpanelUrl)(nil)).Elem()
}

func (o GetWebhostingCpanelUrlOutput) ToGetWebhostingCpanelUrlOutput() GetWebhostingCpanelUrlOutput {
	return o
}

func (o GetWebhostingCpanelUrlOutput) ToGetWebhostingCpanelUrlOutputWithContext(ctx context.Context) GetWebhostingCpanelUrlOutput {
	return o
}

func (o GetWebhostingCpanelUrlOutput) Dashboard() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhostingCpanelUrl) string { return v.Dashboard }).(pulumi.StringOutput)
}

func (o GetWebhostingCpanelUrlOutput) Webmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhostingCpanelUrl) string { return v.Webmail }).(pulumi.StringOutput)
}

type GetWebhostingCpanelUrlArrayOutput struct{ *pulumi.OutputState }

func (GetWebhostingCpanelUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhostingCpanelUrl)(nil)).Elem()
}

func (o GetWebhostingCpanelUrlArrayOutput) ToGetWebhostingCpanelUrlArrayOutput() GetWebhostingCpanelUrlArrayOutput {
	return o
}

func (o GetWebhostingCpanelUrlArrayOutput) ToGetWebhostingCpanelUrlArrayOutputWithContext(ctx context.Context) GetWebhostingCpanelUrlArrayOutput {
	return o
}

func (o GetWebhostingCpanelUrlArrayOutput) Index(i pulumi.IntInput) GetWebhostingCpanelUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebhostingCpanelUrl {
		return vs[0].([]GetWebhostingCpanelUrl)[vs[1].(int)]
	}).(GetWebhostingCpanelUrlOutput)
}

type GetWebhostingOption struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetWebhostingOptionInput is an input type that accepts GetWebhostingOptionArgs and GetWebhostingOptionOutput values.
// You can construct a concrete instance of `GetWebhostingOptionInput` via:
//
//	GetWebhostingOptionArgs{...}
type GetWebhostingOptionInput interface {
	pulumi.Input

	ToGetWebhostingOptionOutput() GetWebhostingOptionOutput
	ToGetWebhostingOptionOutputWithContext(context.Context) GetWebhostingOptionOutput
}

type GetWebhostingOptionArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetWebhostingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhostingOption)(nil)).Elem()
}

func (i GetWebhostingOptionArgs) ToGetWebhostingOptionOutput() GetWebhostingOptionOutput {
	return i.ToGetWebhostingOptionOutputWithContext(context.Background())
}

func (i GetWebhostingOptionArgs) ToGetWebhostingOptionOutputWithContext(ctx context.Context) GetWebhostingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhostingOptionOutput)
}

// GetWebhostingOptionArrayInput is an input type that accepts GetWebhostingOptionArray and GetWebhostingOptionArrayOutput values.
// You can construct a concrete instance of `GetWebhostingOptionArrayInput` via:
//
//	GetWebhostingOptionArray{ GetWebhostingOptionArgs{...} }
type GetWebhostingOptionArrayInput interface {
	pulumi.Input

	ToGetWebhostingOptionArrayOutput() GetWebhostingOptionArrayOutput
	ToGetWebhostingOptionArrayOutputWithContext(context.Context) GetWebhostingOptionArrayOutput
}

type GetWebhostingOptionArray []GetWebhostingOptionInput

func (GetWebhostingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhostingOption)(nil)).Elem()
}

func (i GetWebhostingOptionArray) ToGetWebhostingOptionArrayOutput() GetWebhostingOptionArrayOutput {
	return i.ToGetWebhostingOptionArrayOutputWithContext(context.Background())
}

func (i GetWebhostingOptionArray) ToGetWebhostingOptionArrayOutputWithContext(ctx context.Context) GetWebhostingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWebhostingOptionArrayOutput)
}

type GetWebhostingOptionOutput struct{ *pulumi.OutputState }

func (GetWebhostingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhostingOption)(nil)).Elem()
}

func (o GetWebhostingOptionOutput) ToGetWebhostingOptionOutput() GetWebhostingOptionOutput {
	return o
}

func (o GetWebhostingOptionOutput) ToGetWebhostingOptionOutputWithContext(ctx context.Context) GetWebhostingOptionOutput {
	return o
}

func (o GetWebhostingOptionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhostingOption) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetWebhostingOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhostingOption) string { return v.Name }).(pulumi.StringOutput)
}

type GetWebhostingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetWebhostingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWebhostingOption)(nil)).Elem()
}

func (o GetWebhostingOptionArrayOutput) ToGetWebhostingOptionArrayOutput() GetWebhostingOptionArrayOutput {
	return o
}

func (o GetWebhostingOptionArrayOutput) ToGetWebhostingOptionArrayOutputWithContext(ctx context.Context) GetWebhostingOptionArrayOutput {
	return o
}

func (o GetWebhostingOptionArrayOutput) Index(i pulumi.IntInput) GetWebhostingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWebhostingOption {
		return vs[0].([]GetWebhostingOption)[vs[1].(int)]
	}).(GetWebhostingOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpInput)(nil)).Elem(), BaremetalServerIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpArrayInput)(nil)).Elem(), BaremetalServerIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpv4Input)(nil)).Elem(), BaremetalServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpv4ArrayInput)(nil)).Elem(), BaremetalServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpv6Input)(nil)).Elem(), BaremetalServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerIpv6ArrayInput)(nil)).Elem(), BaremetalServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerOptionInput)(nil)).Elem(), BaremetalServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerOptionArrayInput)(nil)).Elem(), BaremetalServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerPrivateNetworkInput)(nil)).Elem(), BaremetalServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerPrivateNetworkArrayInput)(nil)).Elem(), BaremetalServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitEndpointInput)(nil)).Elem(), CockpitEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitEndpointArrayInput)(nil)).Elem(), CockpitEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitPushUrlInput)(nil)).Elem(), CockpitPushUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitPushUrlArrayInput)(nil)).Elem(), CockpitPushUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitTokenScopesInput)(nil)).Elem(), CockpitTokenScopesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CockpitTokenScopesPtrInput)(nil)).Elem(), CockpitTokenScopesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTriggerNatsInput)(nil)).Elem(), ContainerTriggerNatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTriggerNatsPtrInput)(nil)).Elem(), ContainerTriggerNatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTriggerSqsInput)(nil)).Elem(), ContainerTriggerSqsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTriggerSqsPtrInput)(nil)).Elem(), ContainerTriggerSqsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseAclAclRuleInput)(nil)).Elem(), DatabaseAclAclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseAclAclRuleArrayInput)(nil)).Elem(), DatabaseAclAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstanceLoadBalancerInput)(nil)).Elem(), DatabaseInstanceLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstanceLoadBalancerArrayInput)(nil)).Elem(), DatabaseInstanceLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstancePrivateNetworkInput)(nil)).Elem(), DatabaseInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstancePrivateNetworkPtrInput)(nil)).Elem(), DatabaseInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstanceReadReplicaInput)(nil)).Elem(), DatabaseInstanceReadReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstanceReadReplicaArrayInput)(nil)).Elem(), DatabaseInstanceReadReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReadReplicaDirectAccessInput)(nil)).Elem(), DatabaseReadReplicaDirectAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReadReplicaDirectAccessPtrInput)(nil)).Elem(), DatabaseReadReplicaDirectAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReadReplicaPrivateNetworkInput)(nil)).Elem(), DatabaseReadReplicaPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReadReplicaPrivateNetworkPtrInput)(nil)).Elem(), DatabaseReadReplicaPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentdbReadReplicaDirectAccessInput)(nil)).Elem(), DocumentdbReadReplicaDirectAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentdbReadReplicaDirectAccessPtrInput)(nil)).Elem(), DocumentdbReadReplicaDirectAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentdbReadReplicaPrivateNetworkInput)(nil)).Elem(), DocumentdbReadReplicaPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentdbReadReplicaPrivateNetworkPtrInput)(nil)).Elem(), DocumentdbReadReplicaPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpInput)(nil)).Elem(), DomainRecordGeoIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpPtrInput)(nil)).Elem(), DomainRecordGeoIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpMatchInput)(nil)).Elem(), DomainRecordGeoIpMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpMatchArrayInput)(nil)).Elem(), DomainRecordGeoIpMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordHttpServiceInput)(nil)).Elem(), DomainRecordHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordHttpServicePtrInput)(nil)).Elem(), DomainRecordHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordViewInput)(nil)).Elem(), DomainRecordViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordViewArrayInput)(nil)).Elem(), DomainRecordViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordWeightedInput)(nil)).Elem(), DomainRecordWeightedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordWeightedArrayInput)(nil)).Elem(), DomainRecordWeightedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerNatsInput)(nil)).Elem(), FunctionTriggerNatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerNatsPtrInput)(nil)).Elem(), FunctionTriggerNatsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerSqsInput)(nil)).Elem(), FunctionTriggerSqsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTriggerSqsPtrInput)(nil)).Elem(), FunctionTriggerSqsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamPolicyRuleInput)(nil)).Elem(), IamPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamPolicyRuleArrayInput)(nil)).Elem(), IamPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceImageAdditionalVolumeInput)(nil)).Elem(), InstanceImageAdditionalVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceImageAdditionalVolumeArrayInput)(nil)).Elem(), InstanceImageAdditionalVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupInboundRuleInput)(nil)).Elem(), InstanceSecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupInboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupOutboundRuleInput)(nil)).Elem(), InstanceSecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupOutboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesInboundRuleInput)(nil)).Elem(), InstanceSecurityGroupRulesInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesInboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupRulesInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRuleInput)(nil)).Elem(), InstanceSecurityGroupRulesOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupRulesOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPrivateNetworkInput)(nil)).Elem(), InstanceServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPrivateNetworkArrayInput)(nil)).Elem(), InstanceServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPublicIpInput)(nil)).Elem(), InstanceServerPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPublicIpArrayInput)(nil)).Elem(), InstanceServerPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerRootVolumeInput)(nil)).Elem(), InstanceServerRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerRootVolumePtrInput)(nil)).Elem(), InstanceServerRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSnapshotImportInput)(nil)).Elem(), InstanceSnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSnapshotImportPtrInput)(nil)).Elem(), InstanceSnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceCertificateInput)(nil)).Elem(), IotDeviceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceCertificatePtrInput)(nil)).Elem(), IotDeviceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersInput)(nil)).Elem(), IotDeviceMessageFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPtrInput)(nil)).Elem(), IotDeviceMessageFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPublishInput)(nil)).Elem(), IotDeviceMessageFiltersPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPublishPtrInput)(nil)).Elem(), IotDeviceMessageFiltersPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersSubscribeInput)(nil)).Elem(), IotDeviceMessageFiltersSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersSubscribePtrInput)(nil)).Elem(), IotDeviceMessageFiltersSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteDatabaseInput)(nil)).Elem(), IotRouteDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteDatabasePtrInput)(nil)).Elem(), IotRouteDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteRestInput)(nil)).Elem(), IotRouteRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteRestPtrInput)(nil)).Elem(), IotRouteRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteS3Input)(nil)).Elem(), IotRouteS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteS3PtrInput)(nil)).Elem(), IotRouteS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpResourceInput)(nil)).Elem(), IpamIpResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpResourceArrayInput)(nil)).Elem(), IpamIpResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpReverseInput)(nil)).Elem(), IpamIpReverseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpReverseArrayInput)(nil)).Elem(), IpamIpReverseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpSourceInput)(nil)).Elem(), IpamIpSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpamIpSourceArrayInput)(nil)).Elem(), IpamIpSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionCronInput)(nil)).Elem(), JobDefinitionCronArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDefinitionCronPtrInput)(nil)).Elem(), JobDefinitionCronArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoUpgradeInput)(nil)).Elem(), KubernetesClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoUpgradePtrInput)(nil)).Elem(), KubernetesClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoscalerConfigInput)(nil)).Elem(), KubernetesClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoscalerConfigPtrInput)(nil)).Elem(), KubernetesClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeconfigInput)(nil)).Elem(), KubernetesClusterKubeconfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeconfigArrayInput)(nil)).Elem(), KubernetesClusterKubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOpenIdConnectConfigInput)(nil)).Elem(), KubernetesClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOpenIdConnectConfigPtrInput)(nil)).Elem(), KubernetesClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeInput)(nil)).Elem(), KubernetesNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeArrayInput)(nil)).Elem(), KubernetesNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolUpgradePolicyInput)(nil)).Elem(), KubernetesNodePoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolUpgradePolicyPtrInput)(nil)).Elem(), KubernetesNodePoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclActionInput)(nil)).Elem(), LoadbalancerAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclActionPtrInput)(nil)).Elem(), LoadbalancerAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclActionRedirectInput)(nil)).Elem(), LoadbalancerAclActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclActionRedirectArrayInput)(nil)).Elem(), LoadbalancerAclActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclMatchInput)(nil)).Elem(), LoadbalancerAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerAclMatchPtrInput)(nil)).Elem(), LoadbalancerAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpsInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpsPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckTcpInput)(nil)).Elem(), LoadbalancerBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckTcpPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateCustomCertificateInput)(nil)).Elem(), LoadbalancerCertificateCustomCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateCustomCertificatePtrInput)(nil)).Elem(), LoadbalancerCertificateCustomCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateLetsencryptInput)(nil)).Elem(), LoadbalancerCertificateLetsencryptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateLetsencryptPtrInput)(nil)).Elem(), LoadbalancerCertificateLetsencryptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclInput)(nil)).Elem(), LoadbalancerFrontendAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclArrayInput)(nil)).Elem(), LoadbalancerFrontendAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclActionInput)(nil)).Elem(), LoadbalancerFrontendAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclActionRedirectInput)(nil)).Elem(), LoadbalancerFrontendAclActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclActionRedirectArrayInput)(nil)).Elem(), LoadbalancerFrontendAclActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclMatchInput)(nil)).Elem(), LoadbalancerFrontendAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerPrivateNetworkInput)(nil)).Elem(), LoadbalancerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerPrivateNetworkArrayInput)(nil)).Elem(), LoadbalancerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqSnsCredentialsPermissionsInput)(nil)).Elem(), MnqSnsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqSnsCredentialsPermissionsPtrInput)(nil)).Elem(), MnqSnsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqSqsCredentialsPermissionsInput)(nil)).Elem(), MnqSqsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MnqSqsCredentialsPermissionsPtrInput)(nil)).Elem(), MnqSqsCredentialsPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyPtrInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantArrayInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantGranteeInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyGrantGranteeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyGrantGranteePtrInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyGrantGranteeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyOwnerInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketAclAccessControlPolicyOwnerPtrInput)(nil)).Elem(), ObjectBucketAclAccessControlPolicyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketCorsRuleInput)(nil)).Elem(), ObjectBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketCorsRuleArrayInput)(nil)).Elem(), ObjectBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleInput)(nil)).Elem(), ObjectBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleArrayInput)(nil)).Elem(), ObjectBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleExpirationInput)(nil)).Elem(), ObjectBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleExpirationPtrInput)(nil)).Elem(), ObjectBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleTransitionInput)(nil)).Elem(), ObjectBucketLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLifecycleRuleTransitionArrayInput)(nil)).Elem(), ObjectBucketLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLockConfigurationRuleInput)(nil)).Elem(), ObjectBucketLockConfigurationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLockConfigurationRulePtrInput)(nil)).Elem(), ObjectBucketLockConfigurationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLockConfigurationRuleDefaultRetentionInput)(nil)).Elem(), ObjectBucketLockConfigurationRuleDefaultRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketLockConfigurationRuleDefaultRetentionPtrInput)(nil)).Elem(), ObjectBucketLockConfigurationRuleDefaultRetentionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketVersioningInput)(nil)).Elem(), ObjectBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketVersioningPtrInput)(nil)).Elem(), ObjectBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketWebsiteConfigurationErrorDocumentInput)(nil)).Elem(), ObjectBucketWebsiteConfigurationErrorDocumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketWebsiteConfigurationErrorDocumentPtrInput)(nil)).Elem(), ObjectBucketWebsiteConfigurationErrorDocumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketWebsiteConfigurationIndexDocumentInput)(nil)).Elem(), ObjectBucketWebsiteConfigurationIndexDocumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketWebsiteConfigurationIndexDocumentPtrInput)(nil)).Elem(), ObjectBucketWebsiteConfigurationIndexDocumentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterAclInput)(nil)).Elem(), RedisClusterAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterAclArrayInput)(nil)).Elem(), RedisClusterAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterPrivateNetworkInput)(nil)).Elem(), RedisClusterPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterPrivateNetworkArrayInput)(nil)).Elem(), RedisClusterPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterPublicNetworkInput)(nil)).Elem(), RedisClusterPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterPublicNetworkPtrInput)(nil)).Elem(), RedisClusterPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemDomainReputationInput)(nil)).Elem(), TemDomainReputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemDomainReputationArrayInput)(nil)).Elem(), TemDomainReputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcGatewayNetworkIpamConfigInput)(nil)).Elem(), VpcGatewayNetworkIpamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcGatewayNetworkIpamConfigArrayInput)(nil)).Elem(), VpcGatewayNetworkIpamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPrivateNetworkIpv4SubnetInput)(nil)).Elem(), VpcPrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPrivateNetworkIpv4SubnetPtrInput)(nil)).Elem(), VpcPrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPrivateNetworkIpv6SubnetInput)(nil)).Elem(), VpcPrivateNetworkIpv6SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPrivateNetworkIpv6SubnetArrayInput)(nil)).Elem(), VpcPrivateNetworkIpv6SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhostingCpanelUrlInput)(nil)).Elem(), WebhostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhostingCpanelUrlArrayInput)(nil)).Elem(), WebhostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhostingOptionInput)(nil)).Elem(), WebhostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhostingOptionArrayInput)(nil)).Elem(), WebhostingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalOfferCpuInput)(nil)).Elem(), GetBaremetalOfferCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalOfferDiskInput)(nil)).Elem(), GetBaremetalOfferDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalOfferDiskArrayInput)(nil)).Elem(), GetBaremetalOfferDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalOfferMemoryInput)(nil)).Elem(), GetBaremetalOfferMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalOfferMemoryArrayInput)(nil)).Elem(), GetBaremetalOfferMemoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpInput)(nil)).Elem(), GetBaremetalServerIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpArrayInput)(nil)).Elem(), GetBaremetalServerIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpv4Input)(nil)).Elem(), GetBaremetalServerIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpv4ArrayInput)(nil)).Elem(), GetBaremetalServerIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpv6Input)(nil)).Elem(), GetBaremetalServerIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerIpv6ArrayInput)(nil)).Elem(), GetBaremetalServerIpv6Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerOptionInput)(nil)).Elem(), GetBaremetalServerOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerOptionArrayInput)(nil)).Elem(), GetBaremetalServerOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerPrivateNetworkInput)(nil)).Elem(), GetBaremetalServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBaremetalServerPrivateNetworkArrayInput)(nil)).Elem(), GetBaremetalServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBillingConsumptionsConsumptionInput)(nil)).Elem(), GetBillingConsumptionsConsumptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBillingConsumptionsConsumptionArrayInput)(nil)).Elem(), GetBillingConsumptionsConsumptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBillingInvoicesInvoiceInput)(nil)).Elem(), GetBillingInvoicesInvoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBillingInvoicesInvoiceArrayInput)(nil)).Elem(), GetBillingInvoicesInvoiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCockpitEndpointInput)(nil)).Elem(), GetCockpitEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCockpitEndpointArrayInput)(nil)).Elem(), GetCockpitEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCockpitPushUrlInput)(nil)).Elem(), GetCockpitPushUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCockpitPushUrlArrayInput)(nil)).Elem(), GetCockpitPushUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseAclAclRuleInput)(nil)).Elem(), GetDatabaseAclAclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseAclAclRuleArrayInput)(nil)).Elem(), GetDatabaseAclAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstanceLoadBalancerInput)(nil)).Elem(), GetDatabaseInstanceLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstanceLoadBalancerArrayInput)(nil)).Elem(), GetDatabaseInstanceLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstancePrivateNetworkInput)(nil)).Elem(), GetDatabaseInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstancePrivateNetworkArrayInput)(nil)).Elem(), GetDatabaseInstancePrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstanceReadReplicaInput)(nil)).Elem(), GetDatabaseInstanceReadReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseInstanceReadReplicaArrayInput)(nil)).Elem(), GetDatabaseInstanceReadReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordGeoIpInput)(nil)).Elem(), GetDomainRecordGeoIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordGeoIpArrayInput)(nil)).Elem(), GetDomainRecordGeoIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordGeoIpMatchInput)(nil)).Elem(), GetDomainRecordGeoIpMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordGeoIpMatchArrayInput)(nil)).Elem(), GetDomainRecordGeoIpMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordHttpServiceInput)(nil)).Elem(), GetDomainRecordHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordHttpServiceArrayInput)(nil)).Elem(), GetDomainRecordHttpServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordViewInput)(nil)).Elem(), GetDomainRecordViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordViewArrayInput)(nil)).Elem(), GetDomainRecordViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordWeightedInput)(nil)).Elem(), GetDomainRecordWeightedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainRecordWeightedArrayInput)(nil)).Elem(), GetDomainRecordWeightedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIpsIpInput)(nil)).Elem(), GetFlexibleIpsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIpsIpArrayInput)(nil)).Elem(), GetFlexibleIpsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIpsIpMacAddressInput)(nil)).Elem(), GetFlexibleIpsIpMacAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleIpsIpMacAddressArrayInput)(nil)).Elem(), GetFlexibleIpsIpMacAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSecurityGroupInboundRuleInput)(nil)).Elem(), GetInstanceSecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSecurityGroupInboundRuleArrayInput)(nil)).Elem(), GetInstanceSecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSecurityGroupOutboundRuleInput)(nil)).Elem(), GetInstanceSecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSecurityGroupOutboundRuleArrayInput)(nil)).Elem(), GetInstanceSecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerPrivateNetworkInput)(nil)).Elem(), GetInstanceServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerPrivateNetworkArrayInput)(nil)).Elem(), GetInstanceServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerPublicIpInput)(nil)).Elem(), GetInstanceServerPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerPublicIpArrayInput)(nil)).Elem(), GetInstanceServerPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerRootVolumeInput)(nil)).Elem(), GetInstanceServerRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServerRootVolumeArrayInput)(nil)).Elem(), GetInstanceServerRootVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServersServerInput)(nil)).Elem(), GetInstanceServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServersServerArrayInput)(nil)).Elem(), GetInstanceServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServersServerPublicIpInput)(nil)).Elem(), GetInstanceServersServerPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceServersServerPublicIpArrayInput)(nil)).Elem(), GetInstanceServersServerPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSnapshotImportInput)(nil)).Elem(), GetInstanceSnapshotImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSnapshotImportArrayInput)(nil)).Elem(), GetInstanceSnapshotImportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceCertificateInput)(nil)).Elem(), GetIotDeviceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceCertificateArrayInput)(nil)).Elem(), GetIotDeviceCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterInput)(nil)).Elem(), GetIotDeviceMessageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterArrayInput)(nil)).Elem(), GetIotDeviceMessageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterPublishInput)(nil)).Elem(), GetIotDeviceMessageFilterPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterPublishArrayInput)(nil)).Elem(), GetIotDeviceMessageFilterPublishArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterSubscribeInput)(nil)).Elem(), GetIotDeviceMessageFilterSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotDeviceMessageFilterSubscribeArrayInput)(nil)).Elem(), GetIotDeviceMessageFilterSubscribeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpResourceInput)(nil)).Elem(), GetIpamIpResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpResourcePtrInput)(nil)).Elem(), GetIpamIpResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsIpInput)(nil)).Elem(), GetIpamIpsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsIpArrayInput)(nil)).Elem(), GetIpamIpsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsIpResourceInput)(nil)).Elem(), GetIpamIpsIpResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsIpResourceArrayInput)(nil)).Elem(), GetIpamIpsIpResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsResourceInput)(nil)).Elem(), GetIpamIpsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpamIpsResourcePtrInput)(nil)).Elem(), GetIpamIpsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAutoUpgradeInput)(nil)).Elem(), GetKubernetesClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAutoUpgradeArrayInput)(nil)).Elem(), GetKubernetesClusterAutoUpgradeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAutoscalerConfigInput)(nil)).Elem(), GetKubernetesClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAutoscalerConfigArrayInput)(nil)).Elem(), GetKubernetesClusterAutoscalerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeconfigInput)(nil)).Elem(), GetKubernetesClusterKubeconfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeconfigArrayInput)(nil)).Elem(), GetKubernetesClusterKubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOpenIdConnectConfigInput)(nil)).Elem(), GetKubernetesClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOpenIdConnectConfigArrayInput)(nil)).Elem(), GetKubernetesClusterOpenIdConnectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesNodePoolNodeInput)(nil)).Elem(), GetKubernetesNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesNodePoolNodeArrayInput)(nil)).Elem(), GetKubernetesNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesNodePoolUpgradePolicyInput)(nil)).Elem(), GetKubernetesNodePoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesNodePoolUpgradePolicyArrayInput)(nil)).Elem(), GetKubernetesNodePoolUpgradePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclInput)(nil)).Elem(), GetLbAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclArrayInput)(nil)).Elem(), GetLbAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclActionInput)(nil)).Elem(), GetLbAclsAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclActionArrayInput)(nil)).Elem(), GetLbAclsAclActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclActionRedirectInput)(nil)).Elem(), GetLbAclsAclActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclActionRedirectArrayInput)(nil)).Elem(), GetLbAclsAclActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclMatchInput)(nil)).Elem(), GetLbAclsAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbAclsAclMatchArrayInput)(nil)).Elem(), GetLbAclsAclMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendHealthCheckHttpInput)(nil)).Elem(), GetLbBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendHealthCheckHttpArrayInput)(nil)).Elem(), GetLbBackendHealthCheckHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendHealthCheckTcpInput)(nil)).Elem(), GetLbBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendHealthCheckTcpArrayInput)(nil)).Elem(), GetLbBackendHealthCheckTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendInput)(nil)).Elem(), GetLbBackendsBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendArrayInput)(nil)).Elem(), GetLbBackendsBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendHealthCheckHttpInput)(nil)).Elem(), GetLbBackendsBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendHealthCheckHttpArrayInput)(nil)).Elem(), GetLbBackendsBackendHealthCheckHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendHealthCheckTcpInput)(nil)).Elem(), GetLbBackendsBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbBackendsBackendHealthCheckTcpArrayInput)(nil)).Elem(), GetLbBackendsBackendHealthCheckTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclInput)(nil)).Elem(), GetLbFrontendAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclArrayInput)(nil)).Elem(), GetLbFrontendAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclActionInput)(nil)).Elem(), GetLbFrontendAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclActionArrayInput)(nil)).Elem(), GetLbFrontendAclActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclActionRedirectInput)(nil)).Elem(), GetLbFrontendAclActionRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclActionRedirectArrayInput)(nil)).Elem(), GetLbFrontendAclActionRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclMatchInput)(nil)).Elem(), GetLbFrontendAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendAclMatchArrayInput)(nil)).Elem(), GetLbFrontendAclMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendsFrontendInput)(nil)).Elem(), GetLbFrontendsFrontendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbFrontendsFrontendArrayInput)(nil)).Elem(), GetLbFrontendsFrontendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbIpsIpInput)(nil)).Elem(), GetLbIpsIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbIpsIpArrayInput)(nil)).Elem(), GetLbIpsIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbRoutesRouteInput)(nil)).Elem(), GetLbRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbRoutesRouteArrayInput)(nil)).Elem(), GetLbRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbInput)(nil)).Elem(), GetLbsLbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbArrayInput)(nil)).Elem(), GetLbsLbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbInstanceInput)(nil)).Elem(), GetLbsLbInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbInstanceArrayInput)(nil)).Elem(), GetLbsLbInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbIpInput)(nil)).Elem(), GetLbsLbIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLbsLbIpArrayInput)(nil)).Elem(), GetLbsLbIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerCertificateCustomCertificateInput)(nil)).Elem(), GetLoadbalancerCertificateCustomCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerCertificateCustomCertificateArrayInput)(nil)).Elem(), GetLoadbalancerCertificateCustomCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerCertificateLetsencryptInput)(nil)).Elem(), GetLoadbalancerCertificateLetsencryptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerCertificateLetsencryptArrayInput)(nil)).Elem(), GetLoadbalancerCertificateLetsencryptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerPrivateNetworkInput)(nil)).Elem(), GetLoadbalancerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadbalancerPrivateNetworkArrayInput)(nil)).Elem(), GetLoadbalancerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketCorsRuleInput)(nil)).Elem(), GetObjectBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketCorsRuleArrayInput)(nil)).Elem(), GetObjectBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleInput)(nil)).Elem(), GetObjectBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleArrayInput)(nil)).Elem(), GetObjectBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleExpirationInput)(nil)).Elem(), GetObjectBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleExpirationArrayInput)(nil)).Elem(), GetObjectBucketLifecycleRuleExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleTransitionInput)(nil)).Elem(), GetObjectBucketLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketLifecycleRuleTransitionArrayInput)(nil)).Elem(), GetObjectBucketLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketVersioningInput)(nil)).Elem(), GetObjectBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetObjectBucketVersioningArrayInput)(nil)).Elem(), GetObjectBucketVersioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterAclInput)(nil)).Elem(), GetRedisClusterAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterAclArrayInput)(nil)).Elem(), GetRedisClusterAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterPrivateNetworkInput)(nil)).Elem(), GetRedisClusterPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterPrivateNetworkArrayInput)(nil)).Elem(), GetRedisClusterPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterPublicNetworkInput)(nil)).Elem(), GetRedisClusterPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisClusterPublicNetworkArrayInput)(nil)).Elem(), GetRedisClusterPublicNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemDomainReputationInput)(nil)).Elem(), GetTemDomainReputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemDomainReputationArrayInput)(nil)).Elem(), GetTemDomainReputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcGatewayNetworkIpamConfigInput)(nil)).Elem(), GetVpcGatewayNetworkIpamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcGatewayNetworkIpamConfigArrayInput)(nil)).Elem(), GetVpcGatewayNetworkIpamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcPrivateNetworkIpv4SubnetInput)(nil)).Elem(), GetVpcPrivateNetworkIpv4SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcPrivateNetworkIpv4SubnetArrayInput)(nil)).Elem(), GetVpcPrivateNetworkIpv4SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcPrivateNetworkIpv6SubnetInput)(nil)).Elem(), GetVpcPrivateNetworkIpv6SubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcPrivateNetworkIpv6SubnetArrayInput)(nil)).Elem(), GetVpcPrivateNetworkIpv6SubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcInput)(nil)).Elem(), GetVpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcArrayInput)(nil)).Elem(), GetVpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostOfferProductInput)(nil)).Elem(), GetWebHostOfferProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebHostOfferProductArrayInput)(nil)).Elem(), GetWebHostOfferProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhostingCpanelUrlInput)(nil)).Elem(), GetWebhostingCpanelUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhostingCpanelUrlArrayInput)(nil)).Elem(), GetWebhostingCpanelUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhostingOptionInput)(nil)).Elem(), GetWebhostingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWebhostingOptionArrayInput)(nil)).Elem(), GetWebhostingOptionArray{})
	pulumi.RegisterOutputType(BaremetalServerIpOutput{})
	pulumi.RegisterOutputType(BaremetalServerIpArrayOutput{})
	pulumi.RegisterOutputType(BaremetalServerIpv4Output{})
	pulumi.RegisterOutputType(BaremetalServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(BaremetalServerIpv6Output{})
	pulumi.RegisterOutputType(BaremetalServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(BaremetalServerOptionOutput{})
	pulumi.RegisterOutputType(BaremetalServerOptionArrayOutput{})
	pulumi.RegisterOutputType(BaremetalServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(BaremetalServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(CockpitEndpointOutput{})
	pulumi.RegisterOutputType(CockpitEndpointArrayOutput{})
	pulumi.RegisterOutputType(CockpitPushUrlOutput{})
	pulumi.RegisterOutputType(CockpitPushUrlArrayOutput{})
	pulumi.RegisterOutputType(CockpitTokenScopesOutput{})
	pulumi.RegisterOutputType(CockpitTokenScopesPtrOutput{})
	pulumi.RegisterOutputType(ContainerTriggerNatsOutput{})
	pulumi.RegisterOutputType(ContainerTriggerNatsPtrOutput{})
	pulumi.RegisterOutputType(ContainerTriggerSqsOutput{})
	pulumi.RegisterOutputType(ContainerTriggerSqsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAclAclRuleOutput{})
	pulumi.RegisterOutputType(DatabaseAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceLoadBalancerOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseInstancePrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReadReplicaOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaDirectAccessOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaDirectAccessPtrOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaPrivateNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaPrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(DocumentdbReadReplicaDirectAccessOutput{})
	pulumi.RegisterOutputType(DocumentdbReadReplicaDirectAccessPtrOutput{})
	pulumi.RegisterOutputType(DocumentdbReadReplicaPrivateNetworkOutput{})
	pulumi.RegisterOutputType(DocumentdbReadReplicaPrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpPtrOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpMatchOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpMatchArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordHttpServiceOutput{})
	pulumi.RegisterOutputType(DomainRecordHttpServicePtrOutput{})
	pulumi.RegisterOutputType(DomainRecordViewOutput{})
	pulumi.RegisterOutputType(DomainRecordViewArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordWeightedOutput{})
	pulumi.RegisterOutputType(DomainRecordWeightedArrayOutput{})
	pulumi.RegisterOutputType(FunctionTriggerNatsOutput{})
	pulumi.RegisterOutputType(FunctionTriggerNatsPtrOutput{})
	pulumi.RegisterOutputType(FunctionTriggerSqsOutput{})
	pulumi.RegisterOutputType(FunctionTriggerSqsPtrOutput{})
	pulumi.RegisterOutputType(IamPolicyRuleOutput{})
	pulumi.RegisterOutputType(IamPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceImageAdditionalVolumeOutput{})
	pulumi.RegisterOutputType(InstanceImageAdditionalVolumeArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesInboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesOutboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(InstanceServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(InstanceServerPublicIpOutput{})
	pulumi.RegisterOutputType(InstanceServerPublicIpArrayOutput{})
	pulumi.RegisterOutputType(InstanceServerRootVolumeOutput{})
	pulumi.RegisterOutputType(InstanceServerRootVolumePtrOutput{})
	pulumi.RegisterOutputType(InstanceSnapshotImportOutput{})
	pulumi.RegisterOutputType(InstanceSnapshotImportPtrOutput{})
	pulumi.RegisterOutputType(IotDeviceCertificateOutput{})
	pulumi.RegisterOutputType(IotDeviceCertificatePtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPublishOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPublishPtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersSubscribeOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersSubscribePtrOutput{})
	pulumi.RegisterOutputType(IotRouteDatabaseOutput{})
	pulumi.RegisterOutputType(IotRouteDatabasePtrOutput{})
	pulumi.RegisterOutputType(IotRouteRestOutput{})
	pulumi.RegisterOutputType(IotRouteRestPtrOutput{})
	pulumi.RegisterOutputType(IotRouteS3Output{})
	pulumi.RegisterOutputType(IotRouteS3PtrOutput{})
	pulumi.RegisterOutputType(IpamIpResourceOutput{})
	pulumi.RegisterOutputType(IpamIpResourceArrayOutput{})
	pulumi.RegisterOutputType(IpamIpReverseOutput{})
	pulumi.RegisterOutputType(IpamIpReverseArrayOutput{})
	pulumi.RegisterOutputType(IpamIpSourceOutput{})
	pulumi.RegisterOutputType(IpamIpSourceArrayOutput{})
	pulumi.RegisterOutputType(JobDefinitionCronOutput{})
	pulumi.RegisterOutputType(JobDefinitionCronPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoUpgradePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoscalerConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOpenIdConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclActionOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclActionPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclActionRedirectOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclMatchOutput{})
	pulumi.RegisterOutputType(LoadbalancerAclMatchPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpsOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpsPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckTcpOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckTcpPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateCustomCertificateOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateCustomCertificatePtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateLetsencryptOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateLetsencryptPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclActionOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclActionRedirectOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclMatchOutput{})
	pulumi.RegisterOutputType(LoadbalancerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(LoadbalancerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(MnqSnsCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(MnqSnsCredentialsPermissionsPtrOutput{})
	pulumi.RegisterOutputType(MnqSqsCredentialsPermissionsOutput{})
	pulumi.RegisterOutputType(MnqSqsCredentialsPermissionsPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyGrantOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyGrantArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyGrantGranteeOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyGrantGranteePtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyOwnerOutput{})
	pulumi.RegisterOutputType(ObjectBucketAclAccessControlPolicyOwnerPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(ObjectBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(ObjectBucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketLockConfigurationRuleOutput{})
	pulumi.RegisterOutputType(ObjectBucketLockConfigurationRulePtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketLockConfigurationRuleDefaultRetentionOutput{})
	pulumi.RegisterOutputType(ObjectBucketLockConfigurationRuleDefaultRetentionPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketVersioningOutput{})
	pulumi.RegisterOutputType(ObjectBucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketWebsiteConfigurationErrorDocumentOutput{})
	pulumi.RegisterOutputType(ObjectBucketWebsiteConfigurationErrorDocumentPtrOutput{})
	pulumi.RegisterOutputType(ObjectBucketWebsiteConfigurationIndexDocumentOutput{})
	pulumi.RegisterOutputType(ObjectBucketWebsiteConfigurationIndexDocumentPtrOutput{})
	pulumi.RegisterOutputType(RedisClusterAclOutput{})
	pulumi.RegisterOutputType(RedisClusterAclArrayOutput{})
	pulumi.RegisterOutputType(RedisClusterPrivateNetworkOutput{})
	pulumi.RegisterOutputType(RedisClusterPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(RedisClusterPublicNetworkOutput{})
	pulumi.RegisterOutputType(RedisClusterPublicNetworkPtrOutput{})
	pulumi.RegisterOutputType(TemDomainReputationOutput{})
	pulumi.RegisterOutputType(TemDomainReputationArrayOutput{})
	pulumi.RegisterOutputType(VpcGatewayNetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(VpcGatewayNetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(VpcPrivateNetworkIpv4SubnetOutput{})
	pulumi.RegisterOutputType(VpcPrivateNetworkIpv4SubnetPtrOutput{})
	pulumi.RegisterOutputType(VpcPrivateNetworkIpv6SubnetOutput{})
	pulumi.RegisterOutputType(VpcPrivateNetworkIpv6SubnetArrayOutput{})
	pulumi.RegisterOutputType(WebhostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(WebhostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(WebhostingOptionOutput{})
	pulumi.RegisterOutputType(WebhostingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferCpuOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferDiskOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferDiskArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferMemoryOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerIpOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerIpArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerIpv4Output{})
	pulumi.RegisterOutputType(GetBaremetalServerIpv4ArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerIpv6Output{})
	pulumi.RegisterOutputType(GetBaremetalServerIpv6ArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerOptionOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerOptionArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetBaremetalServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetBillingConsumptionsConsumptionOutput{})
	pulumi.RegisterOutputType(GetBillingConsumptionsConsumptionArrayOutput{})
	pulumi.RegisterOutputType(GetBillingInvoicesInvoiceOutput{})
	pulumi.RegisterOutputType(GetBillingInvoicesInvoiceArrayOutput{})
	pulumi.RegisterOutputType(GetCockpitEndpointOutput{})
	pulumi.RegisterOutputType(GetCockpitEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetCockpitPushUrlOutput{})
	pulumi.RegisterOutputType(GetCockpitPushUrlArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseAclAclRuleOutput{})
	pulumi.RegisterOutputType(GetDatabaseAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstancePrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceReadReplicaOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpMatchOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpMatchArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordHttpServiceOutput{})
	pulumi.RegisterOutputType(GetDomainRecordHttpServiceArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordViewOutput{})
	pulumi.RegisterOutputType(GetDomainRecordViewArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordWeightedOutput{})
	pulumi.RegisterOutputType(GetDomainRecordWeightedArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleIpsIpOutput{})
	pulumi.RegisterOutputType(GetFlexibleIpsIpArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleIpsIpMacAddressOutput{})
	pulumi.RegisterOutputType(GetFlexibleIpsIpMacAddressArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPublicIpOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerRootVolumeOutput{})
	pulumi.RegisterOutputType(GetInstanceServerRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServersServerOutput{})
	pulumi.RegisterOutputType(GetInstanceServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServersServerPublicIpOutput{})
	pulumi.RegisterOutputType(GetInstanceServersServerPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSnapshotImportOutput{})
	pulumi.RegisterOutputType(GetInstanceSnapshotImportArrayOutput{})
	pulumi.RegisterOutputType(GetIotDeviceCertificateOutput{})
	pulumi.RegisterOutputType(GetIotDeviceCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterPublishOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterPublishArrayOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterSubscribeOutput{})
	pulumi.RegisterOutputType(GetIotDeviceMessageFilterSubscribeArrayOutput{})
	pulumi.RegisterOutputType(GetIpamIpResourceOutput{})
	pulumi.RegisterOutputType(GetIpamIpResourcePtrOutput{})
	pulumi.RegisterOutputType(GetIpamIpsIpOutput{})
	pulumi.RegisterOutputType(GetIpamIpsIpArrayOutput{})
	pulumi.RegisterOutputType(GetIpamIpsIpResourceOutput{})
	pulumi.RegisterOutputType(GetIpamIpsIpResourceArrayOutput{})
	pulumi.RegisterOutputType(GetIpamIpsResourceOutput{})
	pulumi.RegisterOutputType(GetIpamIpsResourcePtrOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoUpgradeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoscalerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOpenIdConnectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolUpgradePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclActionOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclActionArrayOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclActionRedirectOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclMatchOutput{})
	pulumi.RegisterOutputType(GetLbAclsAclMatchArrayOutput{})
	pulumi.RegisterOutputType(GetLbBackendHealthCheckHttpOutput{})
	pulumi.RegisterOutputType(GetLbBackendHealthCheckHttpArrayOutput{})
	pulumi.RegisterOutputType(GetLbBackendHealthCheckTcpOutput{})
	pulumi.RegisterOutputType(GetLbBackendHealthCheckTcpArrayOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendArrayOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendHealthCheckHttpOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendHealthCheckHttpArrayOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendHealthCheckTcpOutput{})
	pulumi.RegisterOutputType(GetLbBackendsBackendHealthCheckTcpArrayOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclArrayOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclActionOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclActionArrayOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclActionRedirectOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclMatchOutput{})
	pulumi.RegisterOutputType(GetLbFrontendAclMatchArrayOutput{})
	pulumi.RegisterOutputType(GetLbFrontendsFrontendOutput{})
	pulumi.RegisterOutputType(GetLbFrontendsFrontendArrayOutput{})
	pulumi.RegisterOutputType(GetLbIpsIpOutput{})
	pulumi.RegisterOutputType(GetLbIpsIpArrayOutput{})
	pulumi.RegisterOutputType(GetLbRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetLbRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetLbsLbOutput{})
	pulumi.RegisterOutputType(GetLbsLbArrayOutput{})
	pulumi.RegisterOutputType(GetLbsLbInstanceOutput{})
	pulumi.RegisterOutputType(GetLbsLbInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetLbsLbIpOutput{})
	pulumi.RegisterOutputType(GetLbsLbIpArrayOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerCertificateCustomCertificateOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerCertificateCustomCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerCertificateLetsencryptOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerCertificateLetsencryptArrayOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetObjectBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(GetObjectBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleExpirationArrayOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(GetObjectBucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(GetObjectBucketVersioningOutput{})
	pulumi.RegisterOutputType(GetObjectBucketVersioningArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterAclOutput{})
	pulumi.RegisterOutputType(GetRedisClusterAclArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetRedisClusterPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetRedisClusterPublicNetworkOutput{})
	pulumi.RegisterOutputType(GetRedisClusterPublicNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetTemDomainReputationOutput{})
	pulumi.RegisterOutputType(GetTemDomainReputationArrayOutput{})
	pulumi.RegisterOutputType(GetVpcGatewayNetworkIpamConfigOutput{})
	pulumi.RegisterOutputType(GetVpcGatewayNetworkIpamConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPrivateNetworkIpv4SubnetOutput{})
	pulumi.RegisterOutputType(GetVpcPrivateNetworkIpv4SubnetArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPrivateNetworkIpv6SubnetOutput{})
	pulumi.RegisterOutputType(GetVpcPrivateNetworkIpv6SubnetArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(GetWebHostOfferProductOutput{})
	pulumi.RegisterOutputType(GetWebHostOfferProductArrayOutput{})
	pulumi.RegisterOutputType(GetWebhostingCpanelUrlOutput{})
	pulumi.RegisterOutputType(GetWebhostingCpanelUrlArrayOutput{})
	pulumi.RegisterOutputType(GetWebhostingOptionOutput{})
	pulumi.RegisterOutputType(GetWebhostingOptionArrayOutput{})
}
