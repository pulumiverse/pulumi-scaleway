// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

// The `SecretVersion` resource allows you to create and manage secret versions in Scaleway Secret Manager.
//
// Refer to the Secret Manager [product documentation](https://www.scaleway.com/en/docs/identity-and-access-management/secret-manager/) and [API documentation](https://www.scaleway.com/en/developers/api/secret-manager/) for more information.
//
// ## Example Usage
//
// ### Create a secret and a version
//
// The following commands allow you to:
//
// - create a secret named `foo`
// - create a version of this secret containing the `myNewSecret` data
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := scaleway.NewSecret(ctx, "main", &scaleway.SecretArgs{
//				Name:        pulumi.String("foo"),
//				Description: pulumi.String("barr"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo"),
//					pulumi.String("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = scaleway.NewSecretVersion(ctx, "v1", &scaleway.SecretVersionArgs{
//				Description: pulumi.String("version1"),
//				SecretId:    main.ID(),
//				Data:        pulumi.String("my_new_secret"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This section explains how to import a secret version using the `{region}/{id}/{revision}` format.
//
// ~> **Important:** Keep in mind that if you import with the `latest` revision, you will overwrite the previous version you might have been using.
//
// bash
//
// ```sh
// $ pulumi import scaleway:index/secretVersion:SecretVersion main fr-par/11111111-1111-1111-1111-111111111111/2
// ```
type SecretVersion struct {
	pulumi.CustomResourceState

	// The date and time of the secret version's creation (in RFC 3339 format).
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
	Data pulumi.StringOutput `pulumi:"data"`
	// Description of the secret version (e.g. `my-new-description`).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ). The region where the resource exists.
	Region pulumi.StringOutput `pulumi:"region"`
	// The revision number of the secret version.
	Revision pulumi.StringOutput `pulumi:"revision"`
	// The ID of the secret associated with the version.
	SecretId pulumi.StringOutput `pulumi:"secretId"`
	// The status of the secret version.
	Status pulumi.StringOutput `pulumi:"status"`
	// The date and time of the secret version's last update (in RFC 3339 format).
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewSecretVersion registers a new resource with the given unique name, arguments, and options.
func NewSecretVersion(ctx *pulumi.Context,
	name string, args *SecretVersionArgs, opts ...pulumi.ResourceOption) (*SecretVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Data == nil {
		return nil, errors.New("invalid value for required argument 'Data'")
	}
	if args.SecretId == nil {
		return nil, errors.New("invalid value for required argument 'SecretId'")
	}
	if args.Data != nil {
		args.Data = pulumi.ToSecret(args.Data).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"data",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretVersion
	err := ctx.RegisterResource("scaleway:index/secretVersion:SecretVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretVersion gets an existing SecretVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretVersionState, opts ...pulumi.ResourceOption) (*SecretVersion, error) {
	var resource SecretVersion
	err := ctx.ReadResource("scaleway:index/secretVersion:SecretVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretVersion resources.
type secretVersionState struct {
	// The date and time of the secret version's creation (in RFC 3339 format).
	CreatedAt *string `pulumi:"createdAt"`
	// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
	Data *string `pulumi:"data"`
	// Description of the secret version (e.g. `my-new-description`).
	Description *string `pulumi:"description"`
	// ). The region where the resource exists.
	Region *string `pulumi:"region"`
	// The revision number of the secret version.
	Revision *string `pulumi:"revision"`
	// The ID of the secret associated with the version.
	SecretId *string `pulumi:"secretId"`
	// The status of the secret version.
	Status *string `pulumi:"status"`
	// The date and time of the secret version's last update (in RFC 3339 format).
	UpdatedAt *string `pulumi:"updatedAt"`
}

type SecretVersionState struct {
	// The date and time of the secret version's creation (in RFC 3339 format).
	CreatedAt pulumi.StringPtrInput
	// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
	Data pulumi.StringPtrInput
	// Description of the secret version (e.g. `my-new-description`).
	Description pulumi.StringPtrInput
	// ). The region where the resource exists.
	Region pulumi.StringPtrInput
	// The revision number of the secret version.
	Revision pulumi.StringPtrInput
	// The ID of the secret associated with the version.
	SecretId pulumi.StringPtrInput
	// The status of the secret version.
	Status pulumi.StringPtrInput
	// The date and time of the secret version's last update (in RFC 3339 format).
	UpdatedAt pulumi.StringPtrInput
}

func (SecretVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretVersionState)(nil)).Elem()
}

type secretVersionArgs struct {
	// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
	Data string `pulumi:"data"`
	// Description of the secret version (e.g. `my-new-description`).
	Description *string `pulumi:"description"`
	// ). The region where the resource exists.
	Region *string `pulumi:"region"`
	// The ID of the secret associated with the version.
	SecretId string `pulumi:"secretId"`
}

// The set of arguments for constructing a SecretVersion resource.
type SecretVersionArgs struct {
	// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
	Data pulumi.StringInput
	// Description of the secret version (e.g. `my-new-description`).
	Description pulumi.StringPtrInput
	// ). The region where the resource exists.
	Region pulumi.StringPtrInput
	// The ID of the secret associated with the version.
	SecretId pulumi.StringInput
}

func (SecretVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretVersionArgs)(nil)).Elem()
}

type SecretVersionInput interface {
	pulumi.Input

	ToSecretVersionOutput() SecretVersionOutput
	ToSecretVersionOutputWithContext(ctx context.Context) SecretVersionOutput
}

func (*SecretVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretVersion)(nil)).Elem()
}

func (i *SecretVersion) ToSecretVersionOutput() SecretVersionOutput {
	return i.ToSecretVersionOutputWithContext(context.Background())
}

func (i *SecretVersion) ToSecretVersionOutputWithContext(ctx context.Context) SecretVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretVersionOutput)
}

// SecretVersionArrayInput is an input type that accepts SecretVersionArray and SecretVersionArrayOutput values.
// You can construct a concrete instance of `SecretVersionArrayInput` via:
//
//	SecretVersionArray{ SecretVersionArgs{...} }
type SecretVersionArrayInput interface {
	pulumi.Input

	ToSecretVersionArrayOutput() SecretVersionArrayOutput
	ToSecretVersionArrayOutputWithContext(context.Context) SecretVersionArrayOutput
}

type SecretVersionArray []SecretVersionInput

func (SecretVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretVersion)(nil)).Elem()
}

func (i SecretVersionArray) ToSecretVersionArrayOutput() SecretVersionArrayOutput {
	return i.ToSecretVersionArrayOutputWithContext(context.Background())
}

func (i SecretVersionArray) ToSecretVersionArrayOutputWithContext(ctx context.Context) SecretVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretVersionArrayOutput)
}

// SecretVersionMapInput is an input type that accepts SecretVersionMap and SecretVersionMapOutput values.
// You can construct a concrete instance of `SecretVersionMapInput` via:
//
//	SecretVersionMap{ "key": SecretVersionArgs{...} }
type SecretVersionMapInput interface {
	pulumi.Input

	ToSecretVersionMapOutput() SecretVersionMapOutput
	ToSecretVersionMapOutputWithContext(context.Context) SecretVersionMapOutput
}

type SecretVersionMap map[string]SecretVersionInput

func (SecretVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretVersion)(nil)).Elem()
}

func (i SecretVersionMap) ToSecretVersionMapOutput() SecretVersionMapOutput {
	return i.ToSecretVersionMapOutputWithContext(context.Background())
}

func (i SecretVersionMap) ToSecretVersionMapOutputWithContext(ctx context.Context) SecretVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretVersionMapOutput)
}

type SecretVersionOutput struct{ *pulumi.OutputState }

func (SecretVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretVersion)(nil)).Elem()
}

func (o SecretVersionOutput) ToSecretVersionOutput() SecretVersionOutput {
	return o
}

func (o SecretVersionOutput) ToSecretVersionOutputWithContext(ctx context.Context) SecretVersionOutput {
	return o
}

// The date and time of the secret version's creation (in RFC 3339 format).
func (o SecretVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The data payload of the secret version. Must not exceed 64KiB in size (e.g. `my-secret-version-payload`). Find out more on the [data section](https://www.terraform.io/#data-information).
func (o SecretVersionOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.Data }).(pulumi.StringOutput)
}

// Description of the secret version (e.g. `my-new-description`).
func (o SecretVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ). The region where the resource exists.
func (o SecretVersionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The revision number of the secret version.
func (o SecretVersionOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

// The ID of the secret associated with the version.
func (o SecretVersionOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.SecretId }).(pulumi.StringOutput)
}

// The status of the secret version.
func (o SecretVersionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The date and time of the secret version's last update (in RFC 3339 format).
func (o SecretVersionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretVersion) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type SecretVersionArrayOutput struct{ *pulumi.OutputState }

func (SecretVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretVersion)(nil)).Elem()
}

func (o SecretVersionArrayOutput) ToSecretVersionArrayOutput() SecretVersionArrayOutput {
	return o
}

func (o SecretVersionArrayOutput) ToSecretVersionArrayOutputWithContext(ctx context.Context) SecretVersionArrayOutput {
	return o
}

func (o SecretVersionArrayOutput) Index(i pulumi.IntInput) SecretVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretVersion {
		return vs[0].([]*SecretVersion)[vs[1].(int)]
	}).(SecretVersionOutput)
}

type SecretVersionMapOutput struct{ *pulumi.OutputState }

func (SecretVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretVersion)(nil)).Elem()
}

func (o SecretVersionMapOutput) ToSecretVersionMapOutput() SecretVersionMapOutput {
	return o
}

func (o SecretVersionMapOutput) ToSecretVersionMapOutputWithContext(ctx context.Context) SecretVersionMapOutput {
	return o
}

func (o SecretVersionMapOutput) MapIndex(k pulumi.StringInput) SecretVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretVersion {
		return vs[0].(map[string]*SecretVersion)[vs[1].(string)]
	}).(SecretVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretVersionInput)(nil)).Elem(), &SecretVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretVersionArrayInput)(nil)).Elem(), SecretVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretVersionMapInput)(nil)).Elem(), SecretVersionMap{})
	pulumi.RegisterOutputType(SecretVersionOutput{})
	pulumi.RegisterOutputType(SecretVersionArrayOutput{})
	pulumi.RegisterOutputType(SecretVersionMapOutput{})
}
