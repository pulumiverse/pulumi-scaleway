// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tem

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway/internal"
)

var _ = internal.GetEnvOrDefault

type DomainReputation struct {
	// The previously-calculated domain's reputation score.
	PreviousScore *int `pulumi:"previousScore"`
	// The time and date the previous reputation score was calculated.
	PreviousScoredAt *string `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score.
	Score *int `pulumi:"score"`
	// The time and date the score was calculated.
	ScoredAt *string `pulumi:"scoredAt"`
	// The status of the domain's reputation.
	Status *string `pulumi:"status"`
}

// DomainReputationInput is an input type that accepts DomainReputationArgs and DomainReputationOutput values.
// You can construct a concrete instance of `DomainReputationInput` via:
//
//	DomainReputationArgs{...}
type DomainReputationInput interface {
	pulumi.Input

	ToDomainReputationOutput() DomainReputationOutput
	ToDomainReputationOutputWithContext(context.Context) DomainReputationOutput
}

type DomainReputationArgs struct {
	// The previously-calculated domain's reputation score.
	PreviousScore pulumi.IntPtrInput `pulumi:"previousScore"`
	// The time and date the previous reputation score was calculated.
	PreviousScoredAt pulumi.StringPtrInput `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score.
	Score pulumi.IntPtrInput `pulumi:"score"`
	// The time and date the score was calculated.
	ScoredAt pulumi.StringPtrInput `pulumi:"scoredAt"`
	// The status of the domain's reputation.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (DomainReputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainReputation)(nil)).Elem()
}

func (i DomainReputationArgs) ToDomainReputationOutput() DomainReputationOutput {
	return i.ToDomainReputationOutputWithContext(context.Background())
}

func (i DomainReputationArgs) ToDomainReputationOutputWithContext(ctx context.Context) DomainReputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainReputationOutput)
}

// DomainReputationArrayInput is an input type that accepts DomainReputationArray and DomainReputationArrayOutput values.
// You can construct a concrete instance of `DomainReputationArrayInput` via:
//
//	DomainReputationArray{ DomainReputationArgs{...} }
type DomainReputationArrayInput interface {
	pulumi.Input

	ToDomainReputationArrayOutput() DomainReputationArrayOutput
	ToDomainReputationArrayOutputWithContext(context.Context) DomainReputationArrayOutput
}

type DomainReputationArray []DomainReputationInput

func (DomainReputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainReputation)(nil)).Elem()
}

func (i DomainReputationArray) ToDomainReputationArrayOutput() DomainReputationArrayOutput {
	return i.ToDomainReputationArrayOutputWithContext(context.Background())
}

func (i DomainReputationArray) ToDomainReputationArrayOutputWithContext(ctx context.Context) DomainReputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainReputationArrayOutput)
}

type DomainReputationOutput struct{ *pulumi.OutputState }

func (DomainReputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainReputation)(nil)).Elem()
}

func (o DomainReputationOutput) ToDomainReputationOutput() DomainReputationOutput {
	return o
}

func (o DomainReputationOutput) ToDomainReputationOutputWithContext(ctx context.Context) DomainReputationOutput {
	return o
}

// The previously-calculated domain's reputation score.
func (o DomainReputationOutput) PreviousScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainReputation) *int { return v.PreviousScore }).(pulumi.IntPtrOutput)
}

// The time and date the previous reputation score was calculated.
func (o DomainReputationOutput) PreviousScoredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainReputation) *string { return v.PreviousScoredAt }).(pulumi.StringPtrOutput)
}

// A range from 0 to 100 that determines your domain's reputation score.
func (o DomainReputationOutput) Score() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainReputation) *int { return v.Score }).(pulumi.IntPtrOutput)
}

// The time and date the score was calculated.
func (o DomainReputationOutput) ScoredAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainReputation) *string { return v.ScoredAt }).(pulumi.StringPtrOutput)
}

// The status of the domain's reputation.
func (o DomainReputationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainReputation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DomainReputationArrayOutput struct{ *pulumi.OutputState }

func (DomainReputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainReputation)(nil)).Elem()
}

func (o DomainReputationArrayOutput) ToDomainReputationArrayOutput() DomainReputationArrayOutput {
	return o
}

func (o DomainReputationArrayOutput) ToDomainReputationArrayOutputWithContext(ctx context.Context) DomainReputationArrayOutput {
	return o
}

func (o DomainReputationArrayOutput) Index(i pulumi.IntInput) DomainReputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainReputation {
		return vs[0].([]DomainReputation)[vs[1].(int)]
	}).(DomainReputationOutput)
}

type GetDomainReputation struct {
	// The previously-calculated domain's reputation score
	PreviousScore int `pulumi:"previousScore"`
	// Time and date the previous reputation score was calculated
	PreviousScoredAt string `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score
	Score int `pulumi:"score"`
	// Time and date the score was calculated
	ScoredAt string `pulumi:"scoredAt"`
	// Status of the domain's reputation
	Status string `pulumi:"status"`
}

// GetDomainReputationInput is an input type that accepts GetDomainReputationArgs and GetDomainReputationOutput values.
// You can construct a concrete instance of `GetDomainReputationInput` via:
//
//	GetDomainReputationArgs{...}
type GetDomainReputationInput interface {
	pulumi.Input

	ToGetDomainReputationOutput() GetDomainReputationOutput
	ToGetDomainReputationOutputWithContext(context.Context) GetDomainReputationOutput
}

type GetDomainReputationArgs struct {
	// The previously-calculated domain's reputation score
	PreviousScore pulumi.IntInput `pulumi:"previousScore"`
	// Time and date the previous reputation score was calculated
	PreviousScoredAt pulumi.StringInput `pulumi:"previousScoredAt"`
	// A range from 0 to 100 that determines your domain's reputation score
	Score pulumi.IntInput `pulumi:"score"`
	// Time and date the score was calculated
	ScoredAt pulumi.StringInput `pulumi:"scoredAt"`
	// Status of the domain's reputation
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDomainReputationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainReputation)(nil)).Elem()
}

func (i GetDomainReputationArgs) ToGetDomainReputationOutput() GetDomainReputationOutput {
	return i.ToGetDomainReputationOutputWithContext(context.Background())
}

func (i GetDomainReputationArgs) ToGetDomainReputationOutputWithContext(ctx context.Context) GetDomainReputationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainReputationOutput)
}

// GetDomainReputationArrayInput is an input type that accepts GetDomainReputationArray and GetDomainReputationArrayOutput values.
// You can construct a concrete instance of `GetDomainReputationArrayInput` via:
//
//	GetDomainReputationArray{ GetDomainReputationArgs{...} }
type GetDomainReputationArrayInput interface {
	pulumi.Input

	ToGetDomainReputationArrayOutput() GetDomainReputationArrayOutput
	ToGetDomainReputationArrayOutputWithContext(context.Context) GetDomainReputationArrayOutput
}

type GetDomainReputationArray []GetDomainReputationInput

func (GetDomainReputationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainReputation)(nil)).Elem()
}

func (i GetDomainReputationArray) ToGetDomainReputationArrayOutput() GetDomainReputationArrayOutput {
	return i.ToGetDomainReputationArrayOutputWithContext(context.Background())
}

func (i GetDomainReputationArray) ToGetDomainReputationArrayOutputWithContext(ctx context.Context) GetDomainReputationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainReputationArrayOutput)
}

type GetDomainReputationOutput struct{ *pulumi.OutputState }

func (GetDomainReputationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainReputation)(nil)).Elem()
}

func (o GetDomainReputationOutput) ToGetDomainReputationOutput() GetDomainReputationOutput {
	return o
}

func (o GetDomainReputationOutput) ToGetDomainReputationOutputWithContext(ctx context.Context) GetDomainReputationOutput {
	return o
}

// The previously-calculated domain's reputation score
func (o GetDomainReputationOutput) PreviousScore() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainReputation) int { return v.PreviousScore }).(pulumi.IntOutput)
}

// Time and date the previous reputation score was calculated
func (o GetDomainReputationOutput) PreviousScoredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainReputation) string { return v.PreviousScoredAt }).(pulumi.StringOutput)
}

// A range from 0 to 100 that determines your domain's reputation score
func (o GetDomainReputationOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainReputation) int { return v.Score }).(pulumi.IntOutput)
}

// Time and date the score was calculated
func (o GetDomainReputationOutput) ScoredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainReputation) string { return v.ScoredAt }).(pulumi.StringOutput)
}

// Status of the domain's reputation
func (o GetDomainReputationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainReputation) string { return v.Status }).(pulumi.StringOutput)
}

type GetDomainReputationArrayOutput struct{ *pulumi.OutputState }

func (GetDomainReputationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainReputation)(nil)).Elem()
}

func (o GetDomainReputationArrayOutput) ToGetDomainReputationArrayOutput() GetDomainReputationArrayOutput {
	return o
}

func (o GetDomainReputationArrayOutput) ToGetDomainReputationArrayOutputWithContext(ctx context.Context) GetDomainReputationArrayOutput {
	return o
}

func (o GetDomainReputationArrayOutput) Index(i pulumi.IntInput) GetDomainReputationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainReputation {
		return vs[0].([]GetDomainReputation)[vs[1].(int)]
	}).(GetDomainReputationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainReputationInput)(nil)).Elem(), DomainReputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainReputationArrayInput)(nil)).Elem(), DomainReputationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainReputationInput)(nil)).Elem(), GetDomainReputationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainReputationArrayInput)(nil)).Elem(), GetDomainReputationArray{})
	pulumi.RegisterOutputType(DomainReputationOutput{})
	pulumi.RegisterOutputType(DomainReputationArrayOutput{})
	pulumi.RegisterOutputType(GetDomainReputationOutput{})
	pulumi.RegisterOutputType(GetDomainReputationArrayOutput{})
}
