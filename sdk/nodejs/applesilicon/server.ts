// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates and manages Scaleway Apple silicon. For more information,
 * see the [API documentation](https://www.scaleway.com/en/developers/api/apple-silicon/).
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const server = new scaleway.applesilicon.Server("server", {
 *     name: "test-m1",
 *     type: "M1-M",
 * });
 * ```
 *
 * ### Enable VPC and attach private network
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const vpc_apple_silicon = new scaleway.network.Vpc("vpc-apple-silicon", {name: "vpc-apple-silicon"});
 * const pn_apple_silicon = new scaleway.network.PrivateNetwork("pn-apple-silicon", {
 *     name: "pn-apple-silicon",
 *     vpcId: vpc_apple_silicon.id,
 * });
 * const my_server = new scaleway.applesilicon.Server("my-server", {
 *     name: "TestAccServerEnableVPC",
 *     type: "M2-M",
 *     enableVpc: true,
 *     privateNetworks: [{
 *         id: pn_apple_silicon.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Instance servers can be imported using the `{zone}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:applesilicon/server:Server main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 */
export class Server extends pulumi.CustomResource {
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerState, opts?: pulumi.CustomResourceOptions): Server {
        return new Server(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:applesilicon/server:Server';

    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Server {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Server.__pulumiType;
    }

    /**
     * The commitment period of the server
     */
    declare public readonly commitment: pulumi.Output<string | undefined>;
    /**
     * The date and time the private network was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The minimal date and time on which you can delete this server due to Apple licence
     */
    declare public /*out*/ readonly deletableAt: pulumi.Output<string>;
    /**
     * : Enables the VPC option when set to true.
     */
    declare public readonly enableVpc: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 address of the server (IPv4 address).
     */
    declare public /*out*/ readonly ip: pulumi.Output<string>;
    /**
     * The name of the server.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The organization ID the server is associated with.
     */
    declare public /*out*/ readonly organizationId: pulumi.Output<string>;
    /**
     * The password of the server
     */
    declare public /*out*/ readonly password: pulumi.Output<string>;
    /**
     * The list of private IPv4 and IPv6 addresses associated with the server.
     */
    declare public readonly privateIps: pulumi.Output<outputs.applesilicon.ServerPrivateIp[]>;
    /**
     * The private networks to attach to the server
     */
    declare public readonly privateNetworks: pulumi.Output<outputs.applesilicon.ServerPrivateNetwork[] | undefined>;
    /**
     * `projectId`) The ID of the project the server is
     * associated with.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * Configure the available public bandwidth for your server in bits per second. This option may not be available for all offers.
     */
    declare public readonly publicBandwidth: pulumi.Output<number>;
    /**
     * The state of the server.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The commercial type of the server. You find all the available types on
     * the [pricing page](https://www.scaleway.com/en/pricing/apple-silicon/). Updates to this field will recreate a new
     * resource.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The date and time the private network was last updated.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    /**
     * The username of the server
     */
    declare public /*out*/ readonly username: pulumi.Output<string>;
    /**
     * URL of the VNC.
     */
    declare public /*out*/ readonly vncUrl: pulumi.Output<string>;
    /**
     * The current status of the VPC option.
     */
    declare public /*out*/ readonly vpcStatus: pulumi.Output<string>;
    /**
     * `zone`) The zone in which
     * the server should be created.
     */
    declare public readonly zone: pulumi.Output<string | undefined>;

    /**
     * Create a Server resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerArgs | ServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerState | undefined;
            resourceInputs["commitment"] = state?.commitment;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletableAt"] = state?.deletableAt;
            resourceInputs["enableVpc"] = state?.enableVpc;
            resourceInputs["ip"] = state?.ip;
            resourceInputs["name"] = state?.name;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["password"] = state?.password;
            resourceInputs["privateIps"] = state?.privateIps;
            resourceInputs["privateNetworks"] = state?.privateNetworks;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["publicBandwidth"] = state?.publicBandwidth;
            resourceInputs["state"] = state?.state;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["username"] = state?.username;
            resourceInputs["vncUrl"] = state?.vncUrl;
            resourceInputs["vpcStatus"] = state?.vpcStatus;
            resourceInputs["zone"] = state?.zone;
        } else {
            const args = argsOrState as ServerArgs | undefined;
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["commitment"] = args?.commitment;
            resourceInputs["enableVpc"] = args?.enableVpc;
            resourceInputs["name"] = args?.name;
            resourceInputs["privateIps"] = args?.privateIps;
            resourceInputs["privateNetworks"] = args?.privateNetworks;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["publicBandwidth"] = args?.publicBandwidth;
            resourceInputs["type"] = args?.type;
            resourceInputs["zone"] = args?.zone;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["deletableAt"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["username"] = undefined /*out*/;
            resourceInputs["vncUrl"] = undefined /*out*/;
            resourceInputs["vpcStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "scaleway:index/appleSiliconServer:AppleSiliconServer" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Server.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Server resources.
 */
export interface ServerState {
    /**
     * The commitment period of the server
     */
    commitment?: pulumi.Input<string>;
    /**
     * The date and time the private network was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The minimal date and time on which you can delete this server due to Apple licence
     */
    deletableAt?: pulumi.Input<string>;
    /**
     * : Enables the VPC option when set to true.
     */
    enableVpc?: pulumi.Input<boolean>;
    /**
     * IPv4 address of the server (IPv4 address).
     */
    ip?: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization ID the server is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The password of the server
     */
    password?: pulumi.Input<string>;
    /**
     * The list of private IPv4 and IPv6 addresses associated with the server.
     */
    privateIps?: pulumi.Input<pulumi.Input<inputs.applesilicon.ServerPrivateIp>[]>;
    /**
     * The private networks to attach to the server
     */
    privateNetworks?: pulumi.Input<pulumi.Input<inputs.applesilicon.ServerPrivateNetwork>[]>;
    /**
     * `projectId`) The ID of the project the server is
     * associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Configure the available public bandwidth for your server in bits per second. This option may not be available for all offers.
     */
    publicBandwidth?: pulumi.Input<number>;
    /**
     * The state of the server.
     */
    state?: pulumi.Input<string>;
    /**
     * The commercial type of the server. You find all the available types on
     * the [pricing page](https://www.scaleway.com/en/pricing/apple-silicon/). Updates to this field will recreate a new
     * resource.
     */
    type?: pulumi.Input<string>;
    /**
     * The date and time the private network was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The username of the server
     */
    username?: pulumi.Input<string>;
    /**
     * URL of the VNC.
     */
    vncUrl?: pulumi.Input<string>;
    /**
     * The current status of the VPC option.
     */
    vpcStatus?: pulumi.Input<string>;
    /**
     * `zone`) The zone in which
     * the server should be created.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Server resource.
 */
export interface ServerArgs {
    /**
     * The commitment period of the server
     */
    commitment?: pulumi.Input<string>;
    /**
     * : Enables the VPC option when set to true.
     */
    enableVpc?: pulumi.Input<boolean>;
    /**
     * The name of the server.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of private IPv4 and IPv6 addresses associated with the server.
     */
    privateIps?: pulumi.Input<pulumi.Input<inputs.applesilicon.ServerPrivateIp>[]>;
    /**
     * The private networks to attach to the server
     */
    privateNetworks?: pulumi.Input<pulumi.Input<inputs.applesilicon.ServerPrivateNetwork>[]>;
    /**
     * `projectId`) The ID of the project the server is
     * associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Configure the available public bandwidth for your server in bits per second. This option may not be available for all offers.
     */
    publicBandwidth?: pulumi.Input<number>;
    /**
     * The commercial type of the server. You find all the available types on
     * the [pricing page](https://www.scaleway.com/en/pricing/apple-silicon/). Updates to this field will recreate a new
     * resource.
     */
    type: pulumi.Input<string>;
    /**
     * `zone`) The zone in which
     * the server should be created.
     */
    zone?: pulumi.Input<string>;
}
