// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The `scaleway.block.Volume` data source is used to retrieve information about a Block Storage volume.
 * Refer to the Block Storage [product documentation](https://www.scaleway.com/en/docs/block-storage/) and [API documentation](https://www.scaleway.com/en/developers/api/block/) for more information.
 */
export function getVolume(args?: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:block/getVolume:getVolume", {
        "name": args.name,
        "projectId": args.projectId,
        "volumeId": args.volumeId,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    /**
     * The name of the volume. Only one of `name` and `volumeId` should be specified.
     */
    name?: string;
    /**
     * The unique identifier of the Project to which the volume is associated.
     */
    projectId?: string;
    /**
     * The unique identifier of the volume. Only one of `name` and `volumeId` should be specified.
     */
    volumeId?: string;
    /**
     * ). The zone in which the volume exists.
     */
    zone?: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceVolumeId: string;
    readonly iops: number;
    readonly name?: string;
    readonly projectId?: string;
    readonly sizeInGb: number;
    readonly snapshotId: string;
    readonly tags: string[];
    readonly volumeId?: string;
    readonly zone?: string;
}
/**
 * The `scaleway.block.Volume` data source is used to retrieve information about a Block Storage volume.
 * Refer to the Block Storage [product documentation](https://www.scaleway.com/en/docs/block-storage/) and [API documentation](https://www.scaleway.com/en/developers/api/block/) for more information.
 */
export function getVolumeOutput(args?: GetVolumeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:block/getVolume:getVolume", {
        "name": args.name,
        "projectId": args.projectId,
        "volumeId": args.volumeId,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    /**
     * The name of the volume. Only one of `name` and `volumeId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier of the Project to which the volume is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The unique identifier of the volume. Only one of `name` and `volumeId` should be specified.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * ). The zone in which the volume exists.
     */
    zone?: pulumi.Input<string>;
}
