// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about an Database Instance.
 *
 * For further information refer the Managed Databases for PostgreSQL and MySQL [API documentation](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
 */
export function getInstance(args?: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:databases/getInstance:getInstance", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    /**
     * The RDB instance ID.
     *
     * > **Note** You must specify at least one: `name` and/or `instanceId`.
     */
    instanceId?: string;
    /**
     * The name of the RDB instance.
     */
    name?: string;
    /**
     * The ID of the project the Database Instance is in. Can be used to filter instances when using `name`.
     */
    projectId?: string;
    /**
     * `region`) The region in which the Database Instance exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly backupSameRegion: boolean;
    readonly backupScheduleFrequency: number;
    readonly backupScheduleRetention: number;
    readonly certificate: string;
    readonly disableBackup: boolean;
    readonly encryptionAtRest: boolean;
    readonly endpointIp: string;
    readonly endpointPort: number;
    readonly engine: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly initSettings: {[key: string]: string};
    readonly instanceId?: string;
    readonly isHaCluster: boolean;
    readonly loadBalancers: outputs.databases.GetInstanceLoadBalancer[];
    readonly logsPolicies: outputs.databases.GetInstanceLogsPolicy[];
    readonly name?: string;
    readonly nodeType: string;
    readonly organizationId: string;
    readonly password: string;
    readonly privateIps: outputs.databases.GetInstancePrivateIp[];
    readonly privateNetworks: outputs.databases.GetInstancePrivateNetwork[];
    readonly projectId?: string;
    readonly readReplicas: outputs.databases.GetInstanceReadReplica[];
    readonly region?: string;
    readonly settings: {[key: string]: string};
    readonly snapshotId: string;
    readonly tags: string[];
    readonly upgradableVersions: outputs.databases.GetInstanceUpgradableVersion[];
    readonly userName: string;
    readonly volumeSizeInGb: number;
    readonly volumeType: string;
}
/**
 * Gets information about an Database Instance.
 *
 * For further information refer the Managed Databases for PostgreSQL and MySQL [API documentation](https://developers.scaleway.com/en/products/rdb/api/#database-instance)
 */
export function getInstanceOutput(args?: GetInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstanceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:databases/getInstance:getInstance", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    /**
     * The RDB instance ID.
     *
     * > **Note** You must specify at least one: `name` and/or `instanceId`.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The name of the RDB instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project the Database Instance is in. Can be used to filter instances when using `name`.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the Database Instance exists.
     */
    region?: pulumi.Input<string>;
}
