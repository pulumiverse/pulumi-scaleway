// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages Scaleway Edge Services Backend Stages.
 *
 * ## Example Usage
 *
 * ### With object backend
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const main = new scaleway.object.Bucket("main", {
 *     name: "my-bucket-name",
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * const mainEdgeServicesPipeline = new scaleway.EdgeServicesPipeline("main", {name: "my-pipeline"});
 * const mainEdgeServicesBackendStage = new scaleway.EdgeServicesBackendStage("main", {
 *     pipelineId: mainEdgeServicesPipeline.id,
 *     s3BackendConfig: {
 *         bucketName: main.name,
 *         bucketRegion: "fr-par",
 *     },
 * });
 * ```
 *
 * ### With LB backend
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const main = new scaleway.loadbalancers.LoadBalancer("main", {
 *     ipIds: [mainScalewayLbIp.id],
 *     zone: "fr-par-1",
 *     type: "LB-S",
 * });
 * const mainFrontend = new scaleway.loadbalancers.Frontend("main", {
 *     lbId: main.id,
 *     backendId: mainScalewayLbBackend.id,
 *     name: "frontend01",
 *     inboundPort: 443,
 *     certificateIds: [cert01.id],
 * });
 * const mainEdgeServicesPipeline = new scaleway.EdgeServicesPipeline("main", {name: "my-pipeline"});
 * const mainEdgeServicesBackendStage = new scaleway.EdgeServicesBackendStage("main", {
 *     pipelineId: mainEdgeServicesPipeline.id,
 *     lbBackendConfigs: [{
 *         lbConfig: {
 *             id: main.id,
 *             frontendId: id,
 *             isSsl: true,
 *             zone: "fr-par-1",
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Backend stages can be imported using the `{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage basic 11111111-1111-1111-1111-111111111111
 * ```
 */
export class EdgeServicesBackendStage extends pulumi.CustomResource {
    /**
     * Get an existing EdgeServicesBackendStage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeServicesBackendStageState, opts?: pulumi.CustomResourceOptions): EdgeServicesBackendStage {
        return new EdgeServicesBackendStage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/edgeServicesBackendStage:EdgeServicesBackendStage';

    /**
     * Returns true if the given object is an instance of EdgeServicesBackendStage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeServicesBackendStage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeServicesBackendStage.__pulumiType;
    }

    /**
     * The date and time of the creation of the backend stage.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The Scaleway Load Balancer linked to the backend stage.
     */
    public readonly lbBackendConfigs!: pulumi.Output<outputs.EdgeServicesBackendStageLbBackendConfig[] | undefined>;
    /**
     * The ID of the pipeline.
     */
    public readonly pipelineId!: pulumi.Output<string>;
    /**
     * `projectId`) The ID of the project the backend stage is associated with.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
     */
    public readonly s3BackendConfig!: pulumi.Output<outputs.EdgeServicesBackendStageS3BackendConfig | undefined>;
    /**
     * The date and time of the last update of the backend stage.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a EdgeServicesBackendStage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeServicesBackendStageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeServicesBackendStageArgs | EdgeServicesBackendStageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeServicesBackendStageState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["lbBackendConfigs"] = state ? state.lbBackendConfigs : undefined;
            resourceInputs["pipelineId"] = state ? state.pipelineId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["s3BackendConfig"] = state ? state.s3BackendConfig : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as EdgeServicesBackendStageArgs | undefined;
            if ((!args || args.pipelineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineId'");
            }
            resourceInputs["lbBackendConfigs"] = args ? args.lbBackendConfigs : undefined;
            resourceInputs["pipelineId"] = args ? args.pipelineId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["s3BackendConfig"] = args ? args.s3BackendConfig : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeServicesBackendStage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeServicesBackendStage resources.
 */
export interface EdgeServicesBackendStageState {
    /**
     * The date and time of the creation of the backend stage.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The Scaleway Load Balancer linked to the backend stage.
     */
    lbBackendConfigs?: pulumi.Input<pulumi.Input<inputs.EdgeServicesBackendStageLbBackendConfig>[]>;
    /**
     * The ID of the pipeline.
     */
    pipelineId?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the backend stage is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
     */
    s3BackendConfig?: pulumi.Input<inputs.EdgeServicesBackendStageS3BackendConfig>;
    /**
     * The date and time of the last update of the backend stage.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeServicesBackendStage resource.
 */
export interface EdgeServicesBackendStageArgs {
    /**
     * The Scaleway Load Balancer linked to the backend stage.
     */
    lbBackendConfigs?: pulumi.Input<pulumi.Input<inputs.EdgeServicesBackendStageLbBackendConfig>[]>;
    /**
     * The ID of the pipeline.
     */
    pipelineId: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the backend stage is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The Scaleway Object Storage origin bucket (S3) linked to the backend stage.
     */
    s3BackendConfig?: pulumi.Input<inputs.EdgeServicesBackendStageS3BackendConfig>;
}
