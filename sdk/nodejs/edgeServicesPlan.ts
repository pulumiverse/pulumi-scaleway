// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages Scaleway Edge Services plans.
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const main = new scaleway.EdgeServicesPlan("main", {name: "starter"});
 * ```
 *
 * ## Import
 *
 * Plans can be imported using `{project_id}/{plan_name}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:index/edgeServicesPlan:EdgeServicesPlan main 11111111-1111-1111-1111-111111111111/starter
 * ```
 */
export class EdgeServicesPlan extends pulumi.CustomResource {
    /**
     * Get an existing EdgeServicesPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeServicesPlanState, opts?: pulumi.CustomResourceOptions): EdgeServicesPlan {
        return new EdgeServicesPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/edgeServicesPlan:EdgeServicesPlan';

    /**
     * Returns true if the given object is an instance of EdgeServicesPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeServicesPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeServicesPlan.__pulumiType;
    }

    /**
     * The name of the plan.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * `projectId`) The ID of the project the plan is associated with.
     */
    declare public readonly projectId: pulumi.Output<string>;

    /**
     * Create a EdgeServicesPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EdgeServicesPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeServicesPlanArgs | EdgeServicesPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeServicesPlanState | undefined;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectId"] = state?.projectId;
        } else {
            const args = argsOrState as EdgeServicesPlanArgs | undefined;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectId"] = args?.projectId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeServicesPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeServicesPlan resources.
 */
export interface EdgeServicesPlanState {
    /**
     * The name of the plan.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the plan is associated with.
     */
    projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeServicesPlan resource.
 */
export interface EdgeServicesPlanArgs {
    /**
     * The name of the plan.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the plan is associated with.
     */
    projectId?: pulumi.Input<string>;
}
