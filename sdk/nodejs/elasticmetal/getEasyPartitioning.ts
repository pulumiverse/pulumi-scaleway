// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The scalewayEasyPartitioning data source allows you to retrieve a ready-to-use partitioning schema for a BareMetal server. This schema can be used for custom installations with optional swap and extra partitions.
 *
 * This data source simplifies the process of generating valid partitioning configurations, especially useful when dealing with OS and offer compatibility requirements.
 */
export function getEasyPartitioning(args: GetEasyPartitioningArgs, opts?: pulumi.InvokeOptions): Promise<GetEasyPartitioningResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:elasticmetal/getEasyPartitioning:getEasyPartitioning", {
        "ext4Mountpoint": args.ext4Mountpoint,
        "extraPartition": args.extraPartition,
        "offerId": args.offerId,
        "osId": args.osId,
        "swap": args.swap,
    }, opts);
}

/**
 * A collection of arguments for invoking getEasyPartitioning.
 */
export interface GetEasyPartitioningArgs {
    /**
     * The mount point for the extra partition. Must be an absolute path using alphanumeric characters and underscores.
     */
    ext4Mountpoint?: string;
    /**
     * Whether to add an extra ext4 data partition.
     */
    extraPartition?: boolean;
    /**
     * The UUID of the BareMetal offer.
     */
    offerId: string;
    /**
     * The UUID of the OS image.
     */
    osId: string;
    /**
     * Whether to include a swap partition.
     */
    swap?: boolean;
}

/**
 * A collection of values returned by getEasyPartitioning.
 */
export interface GetEasyPartitioningResult {
    readonly ext4Mountpoint?: string;
    readonly extraPartition?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * â€” A validated partitioning schema in JSON format that can be directly used for BareMetal server deployment.
     */
    readonly jsonPartition: string;
    readonly offerId: string;
    readonly osId: string;
    readonly swap?: boolean;
}
/**
 * The scalewayEasyPartitioning data source allows you to retrieve a ready-to-use partitioning schema for a BareMetal server. This schema can be used for custom installations with optional swap and extra partitions.
 *
 * This data source simplifies the process of generating valid partitioning configurations, especially useful when dealing with OS and offer compatibility requirements.
 */
export function getEasyPartitioningOutput(args: GetEasyPartitioningOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEasyPartitioningResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:elasticmetal/getEasyPartitioning:getEasyPartitioning", {
        "ext4Mountpoint": args.ext4Mountpoint,
        "extraPartition": args.extraPartition,
        "offerId": args.offerId,
        "osId": args.osId,
        "swap": args.swap,
    }, opts);
}

/**
 * A collection of arguments for invoking getEasyPartitioning.
 */
export interface GetEasyPartitioningOutputArgs {
    /**
     * The mount point for the extra partition. Must be an absolute path using alphanumeric characters and underscores.
     */
    ext4Mountpoint?: pulumi.Input<string>;
    /**
     * Whether to add an extra ext4 data partition.
     */
    extraPartition?: pulumi.Input<boolean>;
    /**
     * The UUID of the BareMetal offer.
     */
    offerId: pulumi.Input<string>;
    /**
     * The UUID of the OS image.
     */
    osId: pulumi.Input<string>;
    /**
     * Whether to include a swap partition.
     */
    swap?: pulumi.Input<boolean>;
}
