// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIpArgs, GetIpResult, GetIpOutputArgs } from "./getIp";
export const getIp: typeof import("./getIp").getIp = null as any;
export const getIpOutput: typeof import("./getIp").getIpOutput = null as any;
utilities.lazyLoad(exports, ["getIp","getIpOutput"], () => require("./getIp"));

export { GetIpsArgs, GetIpsResult, GetIpsOutputArgs } from "./getIps";
export const getIps: typeof import("./getIps").getIps = null as any;
export const getIpsOutput: typeof import("./getIps").getIpsOutput = null as any;
utilities.lazyLoad(exports, ["getIps","getIpsOutput"], () => require("./getIps"));

export { GetOfferArgs, GetOfferResult, GetOfferOutputArgs } from "./getOffer";
export const getOffer: typeof import("./getOffer").getOffer = null as any;
export const getOfferOutput: typeof import("./getOffer").getOfferOutput = null as any;
utilities.lazyLoad(exports, ["getOffer","getOfferOutput"], () => require("./getOffer"));

export { GetOptionArgs, GetOptionResult, GetOptionOutputArgs } from "./getOption";
export const getOption: typeof import("./getOption").getOption = null as any;
export const getOptionOutput: typeof import("./getOption").getOptionOutput = null as any;
utilities.lazyLoad(exports, ["getOption","getOptionOutput"], () => require("./getOption"));

export { GetOsArgs, GetOsResult, GetOsOutputArgs } from "./getOs";
export const getOs: typeof import("./getOs").getOs = null as any;
export const getOsOutput: typeof import("./getOs").getOsOutput = null as any;
utilities.lazyLoad(exports, ["getOs","getOsOutput"], () => require("./getOs"));

export { GetServerArgs, GetServerResult, GetServerOutputArgs } from "./getServer";
export const getServer: typeof import("./getServer").getServer = null as any;
export const getServerOutput: typeof import("./getServer").getServerOutput = null as any;
utilities.lazyLoad(exports, ["getServer","getServerOutput"], () => require("./getServer"));

export { IpArgs, IpState } from "./ip";
export type Ip = import("./ip").Ip;
export const Ip: typeof import("./ip").Ip = null as any;
utilities.lazyLoad(exports, ["Ip"], () => require("./ip"));

export { IpMacAddressArgs, IpMacAddressState } from "./ipMacAddress";
export type IpMacAddress = import("./ipMacAddress").IpMacAddress;
export const IpMacAddress: typeof import("./ipMacAddress").IpMacAddress = null as any;
utilities.lazyLoad(exports, ["IpMacAddress"], () => require("./ipMacAddress"));

export { ServerArgs, ServerState } from "./server";
export type Server = import("./server").Server;
export const Server: typeof import("./server").Server = null as any;
utilities.lazyLoad(exports, ["Server"], () => require("./server"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:elasticmetal/ip:Ip":
                return new Ip(name, <any>undefined, { urn })
            case "scaleway:elasticmetal/ipMacAddress:IpMacAddress":
                return new IpMacAddress(name, <any>undefined, { urn })
            case "scaleway:elasticmetal/server:Server":
                return new Server(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "elasticmetal/ip", _module)
pulumi.runtime.registerResourceModule("scaleway", "elasticmetal/ipMacAddress", _module)
pulumi.runtime.registerResourceModule("scaleway", "elasticmetal/server", _module)
