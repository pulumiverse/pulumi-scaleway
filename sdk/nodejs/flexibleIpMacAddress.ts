// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages Scaleway Flexible IP Mac Addresses.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/flexible-ip/api).
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const mainFlexibleIp = new scaleway.FlexibleIp("mainFlexibleIp", {});
 * const mainFlexibleIpMacAddress = new scaleway.FlexibleIpMacAddress("mainFlexibleIpMacAddress", {
 *     flexibleIpId: mainFlexibleIp.id,
 *     type: "kvm",
 * });
 * ```
 *
 * ### Duplicate on many other flexible IPs
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const myOffer = scaleway.getBaremetalOffer({
 *     name: "EM-B112X-SSD",
 * });
 * const base = new scaleway.BaremetalServer("base", {
 *     offer: myOffer.then(myOffer => myOffer.offerId),
 *     installConfigAfterward: true,
 * });
 * const ip01 = new scaleway.FlexibleIp("ip01", {serverId: base.id});
 * const ip02 = new scaleway.FlexibleIp("ip02", {serverId: base.id});
 * const ip03 = new scaleway.FlexibleIp("ip03", {serverId: base.id});
 * const main = new scaleway.FlexibleIpMacAddress("main", {
 *     flexibleIpId: ip01.id,
 *     type: "kvm",
 *     flexibleIpIdsToDuplicates: [
 *         ip02.id,
 *         ip03.id,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Flexible IP Mac Addresses can be imported using the `{zone}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 */
export class FlexibleIpMacAddress extends pulumi.CustomResource {
    /**
     * Get an existing FlexibleIpMacAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexibleIpMacAddressState, opts?: pulumi.CustomResourceOptions): FlexibleIpMacAddress {
        return new FlexibleIpMacAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress';

    /**
     * Returns true if the given object is an instance of FlexibleIpMacAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlexibleIpMacAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlexibleIpMacAddress.__pulumiType;
    }

    /**
     * The Virtual MAC address.
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * The date at which the Virtual Mac Address was created (RFC 3339 format).
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the flexible IP for which to generate a virtual MAC.
     */
    public readonly flexibleIpId!: pulumi.Output<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC.
     * > **Important:** The flexible IPs need to be attached to the same server for the operation to work.
     */
    public readonly flexibleIpIdsToDuplicates!: pulumi.Output<string[] | undefined>;
    /**
     * The Virtual MAC status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The type of the virtual MAC.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The date at which the Virtual Mac Address was last updated (RFC 3339 format).
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The zone of the Virtual Mac Address.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a FlexibleIpMacAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexibleIpMacAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlexibleIpMacAddressArgs | FlexibleIpMacAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlexibleIpMacAddressState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["flexibleIpId"] = state ? state.flexibleIpId : undefined;
            resourceInputs["flexibleIpIdsToDuplicates"] = state ? state.flexibleIpIdsToDuplicates : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as FlexibleIpMacAddressArgs | undefined;
            if ((!args || args.flexibleIpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flexibleIpId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["flexibleIpId"] = args ? args.flexibleIpId : undefined;
            resourceInputs["flexibleIpIdsToDuplicates"] = args ? args.flexibleIpIdsToDuplicates : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlexibleIpMacAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlexibleIpMacAddress resources.
 */
export interface FlexibleIpMacAddressState {
    /**
     * The Virtual MAC address.
     */
    address?: pulumi.Input<string>;
    /**
     * The date at which the Virtual Mac Address was created (RFC 3339 format).
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the flexible IP for which to generate a virtual MAC.
     */
    flexibleIpId?: pulumi.Input<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC.
     * > **Important:** The flexible IPs need to be attached to the same server for the operation to work.
     */
    flexibleIpIdsToDuplicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Virtual MAC status.
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the virtual MAC.
     */
    type?: pulumi.Input<string>;
    /**
     * The date at which the Virtual Mac Address was last updated (RFC 3339 format).
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The zone of the Virtual Mac Address.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlexibleIpMacAddress resource.
 */
export interface FlexibleIpMacAddressArgs {
    /**
     * The ID of the flexible IP for which to generate a virtual MAC.
     */
    flexibleIpId: pulumi.Input<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC.
     * > **Important:** The flexible IPs need to be attached to the same server for the operation to work.
     */
    flexibleIpIdsToDuplicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the virtual MAC.
     */
    type: pulumi.Input<string>;
    /**
     * The zone of the Virtual Mac Address.
     */
    zone?: pulumi.Input<string>;
}
