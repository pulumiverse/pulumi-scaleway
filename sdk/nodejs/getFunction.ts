// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `scaleway.functions.Function` data source is used to retrieve information about a Serverless Function.
 *
 * Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
 *
 * For more information on the limitations of Serverless Functions, refer to the [dedicated documentation](https://www.scaleway.com/en/docs/compute/functions/reference-content/functions-limitations/).
 */
/** @deprecated scaleway.index/getfunction.getFunction has been deprecated in favor of scaleway.functions/getfunction.getFunction */
export function getFunction(args: GetFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionResult> {
    pulumi.log.warn("getFunction is deprecated: scaleway.index/getfunction.getFunction has been deprecated in favor of scaleway.functions/getfunction.getFunction")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getFunction:getFunction", {
        "functionId": args.functionId,
        "name": args.name,
        "namespaceId": args.namespaceId,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionArgs {
    /**
     * The unique identifier of the function. Only one of `name` and `functionId` should be specified.
     */
    functionId?: string;
    /**
     * The name of the function. Only one of `name` and `namespaceId` should be specified.
     */
    name?: string;
    /**
     * The namespace ID associated with this function.
     */
    namespaceId: string;
    /**
     * The unique identifier of the project with which the function is associated.
     */
    projectId?: string;
    /**
     * `region`) The region in which the container exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getFunction.
 */
export interface GetFunctionResult {
    readonly cpuLimit: number;
    readonly deploy: boolean;
    readonly description: string;
    readonly domainName: string;
    readonly environmentVariables: {[key: string]: string};
    readonly functionId?: string;
    readonly handler: string;
    readonly httpOption: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxScale: number;
    readonly memoryLimit: number;
    readonly minScale: number;
    readonly name?: string;
    readonly namespaceId: string;
    readonly organizationId: string;
    readonly privacy: string;
    readonly privateNetworkId: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly runtime: string;
    readonly sandbox: string;
    readonly secretEnvironmentVariables: {[key: string]: string};
    readonly tags: string[];
    readonly timeout: number;
    readonly zipFile: string;
    readonly zipHash: string;
}
/**
 * The `scaleway.functions.Function` data source is used to retrieve information about a Serverless Function.
 *
 * Refer to the Serverless Functions [product documentation](https://www.scaleway.com/en/docs/serverless/functions/) and [API documentation](https://www.scaleway.com/en/developers/api/serverless-functions/) for more information.
 *
 * For more information on the limitations of Serverless Functions, refer to the [dedicated documentation](https://www.scaleway.com/en/docs/compute/functions/reference-content/functions-limitations/).
 */
/** @deprecated scaleway.index/getfunction.getFunction has been deprecated in favor of scaleway.functions/getfunction.getFunction */
export function getFunctionOutput(args: GetFunctionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFunctionResult> {
    pulumi.log.warn("getFunction is deprecated: scaleway.index/getfunction.getFunction has been deprecated in favor of scaleway.functions/getfunction.getFunction")
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:index/getFunction:getFunction", {
        "functionId": args.functionId,
        "name": args.name,
        "namespaceId": args.namespaceId,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionOutputArgs {
    /**
     * The unique identifier of the function. Only one of `name` and `functionId` should be specified.
     */
    functionId?: pulumi.Input<string>;
    /**
     * The name of the function. Only one of `name` and `namespaceId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace ID associated with this function.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * The unique identifier of the project with which the function is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the container exists.
     */
    region?: pulumi.Input<string>;
}
