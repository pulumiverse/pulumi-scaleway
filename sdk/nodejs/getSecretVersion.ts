// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets information about Scaleway a Secret Version.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/#secret-versions-079501).
 *
 * ## Examples
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const mainSecret = new scaleway.Secret("mainSecret", {description: "barr"});
 * const mainSecretVersion = new scaleway.SecretVersion("mainSecretVersion", {
 *     description: "your description",
 *     secretId: mainSecret.id,
 *     data: "your_secret",
 * });
 * const dataBySecretId = scaleway.getSecretVersionOutput({
 *     secretId: mainSecret.id,
 *     revision: "1",
 * });
 * const dataBySecretName = scaleway.getSecretVersionOutput({
 *     secretName: mainSecret.name,
 *     revision: "1",
 * });
 * export const scalewaySecretAccessPayload = dataBySecretName.apply(dataBySecretName => dataBySecretName.data);
 * export const scalewaySecretAccessPayloadById = dataBySecretId.apply(dataBySecretId => dataBySecretId.data);
 * ```
 *
 * ## Data
 *
 * Note: This Data Source give you **access** to the secret payload encoded en base64.
 *
 * Be aware that this is a sensitive attribute. For more information,
 * see Sensitive Data in State.
 *
 * > **Important:**  This property is sensitive and will not be displayed in the plan.
 */
export function getSecretVersion(args?: GetSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretVersionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getSecretVersion:getSecretVersion", {
        "projectId": args.projectId,
        "region": args.region,
        "revision": args.revision,
        "secretId": args.secretId,
        "secretName": args.secretName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretVersion.
 */
export interface GetSecretVersionArgs {
    /**
     * The ID of the project the Secret version is associated with.
     */
    projectId?: string;
    /**
     * `region`) The region
     * in which the resource exists.
     */
    region?: string;
    /**
     * The revision for this Secret Version.
     */
    revision?: string;
    /**
     * The Secret ID associated wit the secret version.
     * Only one of `secretId` and `secretName` should be specified.
     */
    secretId?: string;
    /**
     * The Name of Secret associated wit the secret version.
     * Only one of `secretId` and `secretName` should be specified.
     */
    secretName?: string;
}

/**
 * A collection of values returned by getSecretVersion.
 */
export interface GetSecretVersionResult {
    /**
     * Date and time of secret version's creation (RFC 3339 format).
     */
    readonly createdAt: string;
    /**
     * The data payload of the secret version. more on the data section
     */
    readonly data: string;
    /**
     * (Optional) Description of the secret version (e.g. `my-new-description`).
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly revision?: string;
    readonly secretId?: string;
    readonly secretName?: string;
    /**
     * The status of the Secret Version.
     */
    readonly status: string;
    /**
     * Date and time of secret version's last update (RFC 3339 format).
     */
    readonly updatedAt: string;
}
/**
 * Gets information about Scaleway a Secret Version.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/secret_manager/api/v1alpha1/#secret-versions-079501).
 *
 * ## Examples
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const mainSecret = new scaleway.Secret("mainSecret", {description: "barr"});
 * const mainSecretVersion = new scaleway.SecretVersion("mainSecretVersion", {
 *     description: "your description",
 *     secretId: mainSecret.id,
 *     data: "your_secret",
 * });
 * const dataBySecretId = scaleway.getSecretVersionOutput({
 *     secretId: mainSecret.id,
 *     revision: "1",
 * });
 * const dataBySecretName = scaleway.getSecretVersionOutput({
 *     secretName: mainSecret.name,
 *     revision: "1",
 * });
 * export const scalewaySecretAccessPayload = dataBySecretName.apply(dataBySecretName => dataBySecretName.data);
 * export const scalewaySecretAccessPayloadById = dataBySecretId.apply(dataBySecretId => dataBySecretId.data);
 * ```
 *
 * ## Data
 *
 * Note: This Data Source give you **access** to the secret payload encoded en base64.
 *
 * Be aware that this is a sensitive attribute. For more information,
 * see Sensitive Data in State.
 *
 * > **Important:**  This property is sensitive and will not be displayed in the plan.
 */
export function getSecretVersionOutput(args?: GetSecretVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretVersionResult> {
    return pulumi.output(args).apply((a: any) => getSecretVersion(a, opts))
}

/**
 * A collection of arguments for invoking getSecretVersion.
 */
export interface GetSecretVersionOutputArgs {
    /**
     * The ID of the project the Secret version is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region
     * in which the resource exists.
     */
    region?: pulumi.Input<string>;
    /**
     * The revision for this Secret Version.
     */
    revision?: pulumi.Input<string>;
    /**
     * The Secret ID associated wit the secret version.
     * Only one of `secretId` and `secretName` should be specified.
     */
    secretId?: pulumi.Input<string>;
    /**
     * The Name of Secret associated wit the secret version.
     * Only one of `secretId` and `secretName` should be specified.
     */
    secretName?: pulumi.Input<string>;
}
