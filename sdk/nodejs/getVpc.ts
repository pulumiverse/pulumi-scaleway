// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets information about a Scaleway Virtual Private Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byName = scaleway.getVpc({
 *     name: "foobar",
 * });
 * const byId = scaleway.getVpc({
 *     vpcId: "11111111-1111-1111-1111-111111111111",
 * });
 * const default = scaleway.getVpc({
 *     isDefault: true,
 * });
 * ```
 */
export function getVpc(args?: GetVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getVpc:getVpc", {
        "isDefault": args.isDefault,
        "name": args.name,
        "organizationId": args.organizationId,
        "projectId": args.projectId,
        "region": args.region,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcArgs {
    /**
     * To get default VPC's information.
     */
    isDefault?: boolean;
    /**
     * Name of the VPC. One of `name` and `vpcId` should be specified.
     */
    name?: string;
    /**
     * The ID of the organization the VPC is associated with.
     */
    organizationId?: string;
    /**
     * `projectId`) The ID of the project the VPC is associated with.
     */
    projectId?: string;
    region?: string;
    /**
     * ID of the VPC. One of `name` and `vpcId` should be specified.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getVpc.
 */
export interface GetVpcResult {
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isDefault?: boolean;
    readonly name?: string;
    readonly organizationId: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly tags: string[];
    readonly updatedAt: string;
    readonly vpcId?: string;
}
/**
 * Gets information about a Scaleway Virtual Private Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * const byName = scaleway.getVpc({
 *     name: "foobar",
 * });
 * const byId = scaleway.getVpc({
 *     vpcId: "11111111-1111-1111-1111-111111111111",
 * });
 * const default = scaleway.getVpc({
 *     isDefault: true,
 * });
 * ```
 */
export function getVpcOutput(args?: GetVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcResult> {
    return pulumi.output(args).apply((a: any) => getVpc(a, opts))
}

/**
 * A collection of arguments for invoking getVpc.
 */
export interface GetVpcOutputArgs {
    /**
     * To get default VPC's information.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the VPC. One of `name` and `vpcId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the organization the VPC is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the VPC is associated with.
     */
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * ID of the VPC. One of `name` and `vpcId` should be specified.
     */
    vpcId?: pulumi.Input<string>;
}
