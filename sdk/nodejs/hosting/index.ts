// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetHostingArgs, GetHostingResult, GetHostingOutputArgs } from "./getHosting";
export const getHosting: typeof import("./getHosting").getHosting = null as any;
export const getHostingOutput: typeof import("./getHosting").getHostingOutput = null as any;
utilities.lazyLoad(exports, ["getHosting","getHostingOutput"], () => require("./getHosting"));

export { GetOfferArgs, GetOfferResult, GetOfferOutputArgs } from "./getOffer";
export const getOffer: typeof import("./getOffer").getOffer = null as any;
export const getOfferOutput: typeof import("./getOffer").getOfferOutput = null as any;
utilities.lazyLoad(exports, ["getOffer","getOfferOutput"], () => require("./getOffer"));

export { HostingArgs, HostingState } from "./hosting";
export type Hosting = import("./hosting").Hosting;
export const Hosting: typeof import("./hosting").Hosting = null as any;
utilities.lazyLoad(exports, ["Hosting"], () => require("./hosting"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:hosting/hosting:Hosting":
                return new Hosting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "hosting/hosting", _module)
