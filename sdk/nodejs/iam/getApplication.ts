// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets information about an existing IAM application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * // Get info by name
 * const findByName = scaleway.iam.getApplication({
 *     name: "foobar",
 * });
 * // Get info by application ID
 * const findById = scaleway.iam.getApplication({
 *     applicationId: "11111111-1111-1111-1111-111111111111",
 * });
 * ```
 */
export function getApplication(args?: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:iam/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    /**
     * The ID of the IAM application.
     *
     * > **Note** You must specify at least one: `name` and/or `applicationId`.
     */
    applicationId?: string;
    /**
     * The name of the IAM application.
     */
    name?: string;
    /**
     * `organizationId`) The ID of the
     * Organization the application is associated with.
     */
    organizationId?: string;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    readonly applicationId?: string;
    readonly createdAt: string;
    readonly description: string;
    readonly editable: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly organizationId?: string;
    readonly tags: string[];
    readonly updatedAt: string;
}
/**
 * Gets information about an existing IAM application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumi/scaleway";
 *
 * // Get info by name
 * const findByName = scaleway.iam.getApplication({
 *     name: "foobar",
 * });
 * // Get info by application ID
 * const findById = scaleway.iam.getApplication({
 *     applicationId: "11111111-1111-1111-1111-111111111111",
 * });
 * ```
 */
export function getApplicationOutput(args?: GetApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:iam/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    /**
     * The ID of the IAM application.
     *
     * > **Note** You must specify at least one: `name` and/or `applicationId`.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The name of the IAM application.
     */
    name?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the
     * Organization the application is associated with.
     */
    organizationId?: pulumi.Input<string>;
}
