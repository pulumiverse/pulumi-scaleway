// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates and manages Scaleway IAM [Users](https://www.scaleway.com/en/docs/iam/concepts/#member).
 * For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/iam/#path-users-list-users-of-an-organization).
 *
 * ## Example Usage
 *
 * ### User
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const user = new scaleway.iam.User("user", {
 *     email: "foo@test.com",
 *     tags: ["test-tag"],
 *     username: "foo",
 *     firstName: "Foo",
 *     lastName: "Bar",
 * });
 * ```
 *
 * ### Multiple users
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const users = [
 *     {
 *         email: "test@test.com",
 *         username: "test",
 *     },
 *     {
 *         email: "test2@test.com",
 *         username: "test2",
 *     },
 * ];
 * const usersUser: scaleway.iam.User[] = [];
 * for (const range = {value: 0}; range.value < users.length; range.value++) {
 *     usersUser.push(new scaleway.iam.User(`users-${range.value}`, {
 *         email: users[range.value].email,
 *         username: users[range.value].username,
 *     }));
 * }
 * ```
 *
 * ## Import
 *
 * IAM users can be imported using the `{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:index/iamUser:IamUser basic 11111111-1111-1111-1111-111111111111
 * ```
 *
 * @deprecated scaleway.index/iamuser.IamUser has been deprecated in favor of scaleway.iam/user.User
 */
export class IamUser extends pulumi.CustomResource {
    /**
     * Get an existing IamUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamUserState, opts?: pulumi.CustomResourceOptions): IamUser {
        pulumi.log.warn("IamUser is deprecated: scaleway.index/iamuser.IamUser has been deprecated in favor of scaleway.iam/user.User")
        return new IamUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/iamUser:IamUser';

    /**
     * Returns true if the given object is an instance of IamUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamUser.__pulumiType;
    }

    /**
     * The ID of the account root user associated with the user.
     */
    declare public /*out*/ readonly accountRootUserId: pulumi.Output<string>;
    /**
     * The date and time of the creation of the IAM user.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Whether the IAM user is deletable.
     */
    declare public /*out*/ readonly deletable: pulumi.Output<boolean>;
    /**
     * The email of the IAM user. For Guest users, this argument is not editable.
     */
    declare public readonly email: pulumi.Output<string>;
    /**
     * The user's first name.
     */
    declare public readonly firstName: pulumi.Output<string | undefined>;
    /**
     * The date of the last login.
     */
    declare public /*out*/ readonly lastLoginAt: pulumi.Output<string>;
    /**
     * The user's last name.
     */
    declare public readonly lastName: pulumi.Output<string | undefined>;
    /**
     * The user's locale (e.g., en_US).
     */
    declare public readonly locale: pulumi.Output<string>;
    /**
     * Whether the user is locked.
     */
    declare public /*out*/ readonly locked: pulumi.Output<boolean>;
    /**
     * Whether the MFA is enabled.
     */
    declare public /*out*/ readonly mfa: pulumi.Output<boolean>;
    /**
     * `organizationId`) The ID of the organization the user is associated with.
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * The password for first access.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * The user's phone number.
     */
    declare public readonly phoneNumber: pulumi.Output<string | undefined>;
    /**
     * Whether or not to send an email containing the password for first access.
     */
    declare public readonly sendPasswordEmail: pulumi.Output<boolean | undefined>;
    /**
     * Whether or not to send a welcome email that includes onboarding information.
     */
    declare public readonly sendWelcomeEmail: pulumi.Output<boolean | undefined>;
    /**
     * The status of user invitation. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tags associated with the user.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The type of user. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * The date and time of the last update of the IAM user.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    /**
     * The username of the IAM user.
     */
    declare public readonly username: pulumi.Output<string>;

    /**
     * Create a IamUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated scaleway.index/iamuser.IamUser has been deprecated in favor of scaleway.iam/user.User */
    constructor(name: string, args: IamUserArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated scaleway.index/iamuser.IamUser has been deprecated in favor of scaleway.iam/user.User */
    constructor(name: string, argsOrState?: IamUserArgs | IamUserState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("IamUser is deprecated: scaleway.index/iamuser.IamUser has been deprecated in favor of scaleway.iam/user.User")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamUserState | undefined;
            resourceInputs["accountRootUserId"] = state?.accountRootUserId;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletable"] = state?.deletable;
            resourceInputs["email"] = state?.email;
            resourceInputs["firstName"] = state?.firstName;
            resourceInputs["lastLoginAt"] = state?.lastLoginAt;
            resourceInputs["lastName"] = state?.lastName;
            resourceInputs["locale"] = state?.locale;
            resourceInputs["locked"] = state?.locked;
            resourceInputs["mfa"] = state?.mfa;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["password"] = state?.password;
            resourceInputs["phoneNumber"] = state?.phoneNumber;
            resourceInputs["sendPasswordEmail"] = state?.sendPasswordEmail;
            resourceInputs["sendWelcomeEmail"] = state?.sendWelcomeEmail;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as IamUserArgs | undefined;
            if (args?.email === undefined && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["email"] = args?.email;
            resourceInputs["firstName"] = args?.firstName;
            resourceInputs["lastName"] = args?.lastName;
            resourceInputs["locale"] = args?.locale;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["phoneNumber"] = args?.phoneNumber;
            resourceInputs["sendPasswordEmail"] = args?.sendPasswordEmail;
            resourceInputs["sendWelcomeEmail"] = args?.sendWelcomeEmail;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["username"] = args?.username;
            resourceInputs["accountRootUserId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["deletable"] = undefined /*out*/;
            resourceInputs["lastLoginAt"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["mfa"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IamUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamUser resources.
 */
export interface IamUserState {
    /**
     * The ID of the account root user associated with the user.
     */
    accountRootUserId?: pulumi.Input<string>;
    /**
     * The date and time of the creation of the IAM user.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Whether the IAM user is deletable.
     */
    deletable?: pulumi.Input<boolean>;
    /**
     * The email of the IAM user. For Guest users, this argument is not editable.
     */
    email?: pulumi.Input<string>;
    /**
     * The user's first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * The date of the last login.
     */
    lastLoginAt?: pulumi.Input<string>;
    /**
     * The user's last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * The user's locale (e.g., en_US).
     */
    locale?: pulumi.Input<string>;
    /**
     * Whether the user is locked.
     */
    locked?: pulumi.Input<boolean>;
    /**
     * Whether the MFA is enabled.
     */
    mfa?: pulumi.Input<boolean>;
    /**
     * `organizationId`) The ID of the organization the user is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The password for first access.
     */
    password?: pulumi.Input<string>;
    /**
     * The user's phone number.
     */
    phoneNumber?: pulumi.Input<string>;
    /**
     * Whether or not to send an email containing the password for first access.
     */
    sendPasswordEmail?: pulumi.Input<boolean>;
    /**
     * Whether or not to send a welcome email that includes onboarding information.
     */
    sendWelcomeEmail?: pulumi.Input<boolean>;
    /**
     * The status of user invitation. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     */
    status?: pulumi.Input<string>;
    /**
     * The tags associated with the user.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of user. Check the possible values in the [API doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     */
    type?: pulumi.Input<string>;
    /**
     * The date and time of the last update of the IAM user.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The username of the IAM user.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamUser resource.
 */
export interface IamUserArgs {
    /**
     * The email of the IAM user. For Guest users, this argument is not editable.
     */
    email: pulumi.Input<string>;
    /**
     * The user's first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * The user's last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * The user's locale (e.g., en_US).
     */
    locale?: pulumi.Input<string>;
    /**
     * `organizationId`) The ID of the organization the user is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The password for first access.
     */
    password?: pulumi.Input<string>;
    /**
     * The user's phone number.
     */
    phoneNumber?: pulumi.Input<string>;
    /**
     * Whether or not to send an email containing the password for first access.
     */
    sendPasswordEmail?: pulumi.Input<boolean>;
    /**
     * Whether or not to send a welcome email that includes onboarding information.
     */
    sendWelcomeEmail?: pulumi.Input<boolean>;
    /**
     * The tags associated with the user.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The username of the IAM user.
     */
    username: pulumi.Input<string>;
}
