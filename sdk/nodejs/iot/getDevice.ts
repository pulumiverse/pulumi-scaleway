// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about an IOT Device.
 */
export function getDevice(args?: GetDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:iot/getDevice:getDevice", {
        "deviceId": args.deviceId,
        "hubId": args.hubId,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceArgs {
    /**
     * The device ID.
     * Only one of the `name` and `deviceId` should be specified.
     */
    deviceId?: string;
    /**
     * The hub ID.
     */
    hubId?: string;
    /**
     * The name of the Hub.
     * Only one of the `name` and `deviceId` should be specified.
     */
    name?: string;
    /**
     * `region`) The region in which the hub exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getDevice.
 */
export interface GetDeviceResult {
    readonly allowInsecure: boolean;
    readonly allowMultipleConnections: boolean;
    readonly certificates: outputs.iot.GetDeviceCertificate[];
    readonly createdAt: string;
    readonly description: string;
    readonly deviceId?: string;
    readonly hubId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isConnected: boolean;
    readonly lastActivityAt: string;
    readonly messageFilters: outputs.iot.GetDeviceMessageFilter[];
    readonly name?: string;
    readonly region?: string;
    readonly status: string;
    readonly updatedAt: string;
}
/**
 * Gets information about an IOT Device.
 */
export function getDeviceOutput(args?: GetDeviceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDeviceResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:iot/getDevice:getDevice", {
        "deviceId": args.deviceId,
        "hubId": args.hubId,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevice.
 */
export interface GetDeviceOutputArgs {
    /**
     * The device ID.
     * Only one of the `name` and `deviceId` should be specified.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * The hub ID.
     */
    hubId?: pulumi.Input<string>;
    /**
     * The name of the Hub.
     * Only one of the `name` and `deviceId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * `region`) The region in which the hub exists.
     */
    region?: pulumi.Input<string>;
}
