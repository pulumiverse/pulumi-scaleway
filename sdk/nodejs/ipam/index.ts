// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIpArgs, GetIpResult, GetIpOutputArgs } from "./getIp";
export const getIp: typeof import("./getIp").getIp = null as any;
export const getIpOutput: typeof import("./getIp").getIpOutput = null as any;
utilities.lazyLoad(exports, ["getIp","getIpOutput"], () => require("./getIp"));

export { GetIpsArgs, GetIpsResult, GetIpsOutputArgs } from "./getIps";
export const getIps: typeof import("./getIps").getIps = null as any;
export const getIpsOutput: typeof import("./getIps").getIpsOutput = null as any;
utilities.lazyLoad(exports, ["getIps","getIpsOutput"], () => require("./getIps"));

export { IpArgs, IpState } from "./ip";
export type Ip = import("./ip").Ip;
export const Ip: typeof import("./ip").Ip = null as any;
utilities.lazyLoad(exports, ["Ip"], () => require("./ip"));

export { IpReverseDnsArgs, IpReverseDnsState } from "./ipReverseDns";
export type IpReverseDns = import("./ipReverseDns").IpReverseDns;
export const IpReverseDns: typeof import("./ipReverseDns").IpReverseDns = null as any;
utilities.lazyLoad(exports, ["IpReverseDns"], () => require("./ipReverseDns"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:ipam/ip:Ip":
                return new Ip(name, <any>undefined, { urn })
            case "scaleway:ipam/ipReverseDns:IpReverseDns":
                return new IpReverseDns(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "ipam/ip", _module)
pulumi.runtime.registerResourceModule("scaleway", "ipam/ipReverseDns", _module)
