// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manage the reverse DNS of IP addresses managed by Scaleway's IP Address Management (IPAM) service.
 *
 * For more information about IPAM, see the main [documentation](https://www.scaleway.com/en/docs/vpc/concepts/#ipam).
 *
 * ## Import
 *
 * IPAM IP reverse DNS can be imported using `{region}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:index/ipamIpReverseDns:IpamIpReverseDns main fr-par/11111111-1111-1111-1111-111111111111
 * ```
 */
export class IpamIpReverseDns extends pulumi.CustomResource {
    /**
     * Get an existing IpamIpReverseDns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpamIpReverseDnsState, opts?: pulumi.CustomResourceOptions): IpamIpReverseDns {
        return new IpamIpReverseDns(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/ipamIpReverseDns:IpamIpReverseDns';

    /**
     * Returns true if the given object is an instance of IpamIpReverseDns.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpamIpReverseDns {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpamIpReverseDns.__pulumiType;
    }

    /**
     * The IP corresponding to the hostname.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The reverse domain name.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * The IPAM IP ID.
     */
    public readonly ipamIpId!: pulumi.Output<string>;
    /**
     * `region`) The region of the IP reverse DNS.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a IpamIpReverseDns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpamIpReverseDnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpamIpReverseDnsArgs | IpamIpReverseDnsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpamIpReverseDnsState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["ipamIpId"] = state ? state.ipamIpId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as IpamIpReverseDnsArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            if ((!args || args.ipamIpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamIpId'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["ipamIpId"] = args ? args.ipamIpId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpamIpReverseDns.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpamIpReverseDns resources.
 */
export interface IpamIpReverseDnsState {
    /**
     * The IP corresponding to the hostname.
     */
    address?: pulumi.Input<string>;
    /**
     * The reverse domain name.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The IPAM IP ID.
     */
    ipamIpId?: pulumi.Input<string>;
    /**
     * `region`) The region of the IP reverse DNS.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpamIpReverseDns resource.
 */
export interface IpamIpReverseDnsArgs {
    /**
     * The IP corresponding to the hostname.
     */
    address: pulumi.Input<string>;
    /**
     * The reverse domain name.
     */
    hostname: pulumi.Input<string>;
    /**
     * The IPAM IP ID.
     */
    ipamIpId: pulumi.Input<string>;
    /**
     * `region`) The region of the IP reverse DNS.
     */
    region?: pulumi.Input<string>;
}
