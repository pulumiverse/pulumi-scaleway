// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates and manages Scaleway Kubernetes clusters. For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/kubernetes/).
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pn = new scaleway.network.PrivateNetwork("pn", {});
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     version: "1.32.3",
 *     cni: "cilium",
 *     privateNetworkId: pn.id,
 *     deleteAdditionalResources: false,
 * });
 * const pool = new scaleway.kubernetes.Pool("pool", {
 *     clusterId: cluster.id,
 *     name: "tf-pool",
 *     nodeType: "DEV1-M",
 *     size: 1,
 * });
 * ```
 *
 * ### Multicloud
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     type: "multicloud",
 *     version: "1.32.3",
 *     cni: "kilo",
 *     deleteAdditionalResources: false,
 * });
 * const pool = new scaleway.kubernetes.Pool("pool", {
 *     clusterId: cluster.id,
 *     name: "tf-pool",
 *     nodeType: "external",
 *     size: 0,
 *     minSize: 0,
 * });
 * ```
 *
 * For a detailed example of how to add or run Elastic Metal servers instead of Instances on your cluster, please refer to this guide.
 *
 * ### With additional configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pn = new scaleway.network.PrivateNetwork("pn", {});
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     description: "cluster made in terraform",
 *     version: "1.32.3",
 *     cni: "calico",
 *     tags: ["terraform"],
 *     privateNetworkId: pn.id,
 *     deleteAdditionalResources: false,
 *     autoscalerConfig: {
 *         disableScaleDown: false,
 *         scaleDownDelayAfterAdd: "5m",
 *         estimator: "binpacking",
 *         expander: "random",
 *         ignoreDaemonsetsUtilization: true,
 *         balanceSimilarNodeGroups: true,
 *         expendablePodsPriorityCutoff: -5,
 *     },
 * });
 * const pool = new scaleway.kubernetes.Pool("pool", {
 *     clusterId: cluster.id,
 *     name: "tf-pool",
 *     nodeType: "DEV1-M",
 *     size: 3,
 *     autoscaling: true,
 *     autohealing: true,
 *     minSize: 1,
 *     maxSize: 5,
 * });
 * ```
 *
 * ### With the kubernetes provider
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as _null from "@pulumi/null";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pn = new scaleway.network.PrivateNetwork("pn", {});
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     version: "1.29.1",
 *     cni: "cilium",
 *     privateNetworkId: pn.id,
 *     deleteAdditionalResources: false,
 * });
 * const pool = new scaleway.kubernetes.Pool("pool", {
 *     clusterId: cluster.id,
 *     name: "tf-pool",
 *     nodeType: "DEV1-M",
 *     size: 1,
 * });
 * const kubeconfig = new _null.Resource("kubeconfig", {triggers: {
 *     host: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].host),
 *     token: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].token),
 *     clusterCaCertificate: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].clusterCaCertificate),
 * }}, {
 *     dependsOn: [pool],
 * });
 * ```
 *
 * The `nullResource` is needed because when the cluster is created, its status is `poolRequired`, but the kubeconfig can already be downloaded.
 * It leads the `kubernetes` provider to start creating its objects, but the DNS entry for the Kubernetes master is not yet ready, that's why it's needed to wait for at least a pool.
 *
 * ### With the Helm provider
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as _null from "@pulumi/null";
 * import * as helm from "@pulumi/helm";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pn = new scaleway.network.PrivateNetwork("pn", {});
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     version: "1.29.1",
 *     cni: "cilium",
 *     deleteAdditionalResources: false,
 *     privateNetworkId: pn.id,
 * });
 * const pool = new scaleway.kubernetes.Pool("pool", {
 *     clusterId: cluster.id,
 *     name: "tf-pool",
 *     nodeType: "DEV1-M",
 *     size: 1,
 * });
 * const kubeconfig = new _null.Resource("kubeconfig", {triggers: {
 *     host: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].host),
 *     token: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].token),
 *     clusterCaCertificate: cluster.kubeconfigs.apply(kubeconfigs => kubeconfigs[0].clusterCaCertificate),
 * }}, {
 *     dependsOn: [pool],
 * });
 * const nginxIp = new scaleway.loadbalancers.Ip("nginx_ip", {
 *     zone: "fr-par-1",
 *     projectId: cluster.projectId,
 * });
 * const nginxIngress = new helm.index.Release("nginx_ingress", {
 *     name: "nginx-ingress",
 *     namespace: "kube-system",
 *     repository: "https://kubernetes.github.io/ingress-nginx",
 *     chart: "ingress-nginx",
 *     set: [
 *         {
 *             name: "controller.service.loadBalancerIP",
 *             value: nginxIp.ipAddress,
 *         },
 *         {
 *             name: "controller.config.use-proxy-protocol",
 *             value: "true",
 *         },
 *         {
 *             name: "controller.service.annotations.service\\.beta\\.kubernetes\\.io/scw-loadbalancer-proxy-protocol-v2",
 *             value: "true",
 *         },
 *         {
 *             name: "controller.service.annotations.service\\.beta\\.kubernetes\\.io/scw-loadbalancer-zone",
 *             value: nginxIp.zone,
 *         },
 *         {
 *             name: "controller.service.externalTrafficPolicy",
 *             value: "Local",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Deprecation of defaultPool
 *
 * `defaultPool` is deprecated in favour the `scaleway.kubernetes.Pool` resource. Here is a migration example.
 *
 * Before:
 *
 * After:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const cluster = new scaleway.kubernetes.Cluster("cluster", {
 *     name: "tf-cluster",
 *     version: "1.18.0",
 *     cni: "cilium",
 * });
 * const _default = new scaleway.kubernetes.Pool("default", {
 *     clusterId: jack.id,
 *     name: "default",
 *     nodeType: "DEV1-M",
 *     size: 1,
 * });
 * ```
 *
 * Once you have moved all the `defaultPool` into their own object, you will need to import them. If your pool had the ID 11111111-1111-1111-1111-111111111111 in the `fr-par` region, you can import it by typing:
 *
 * Then you will only need to type `pulumi up` to have a smooth migration.
 *
 * ## Import
 *
 * Kubernetes clusters can be imported using the `{region}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:kubernetes/cluster:Cluster mycluster fr-par/11111111-1111-1111-1111-111111111111
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:kubernetes/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    declare public readonly admissionPlugins: pulumi.Output<string[] | undefined>;
    /**
     * Additional Subject Alternative Names for the Kubernetes API server certificate
     */
    declare public readonly apiserverCertSans: pulumi.Output<string[] | undefined>;
    /**
     * The URL of the Kubernetes API server.
     */
    declare public /*out*/ readonly apiserverUrl: pulumi.Output<string>;
    /**
     * The auto upgrade configuration.
     */
    declare public readonly autoUpgrade: pulumi.Output<outputs.kubernetes.ClusterAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    declare public readonly autoscalerConfig: pulumi.Output<outputs.kubernetes.ClusterAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    declare public readonly cni: pulumi.Output<string>;
    /**
     * The creation date of the cluster.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Delete additional resources like block volumes, load-balancers and the cluster's private network (if empty) that were created in Kubernetes on cluster deletion.
     * > **Important:** Setting this field to `true` means that you will lose all your cluster data and network configuration when you delete your cluster.
     * If you prefer keeping it, you should instead set it as `false`.
     */
    declare public readonly deleteAdditionalResources: pulumi.Output<boolean>;
    /**
     * A description for the Kubernetes cluster.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    declare public readonly featureGates: pulumi.Output<string[] | undefined>;
    /**
     * The kubeconfig configuration file of the Kubernetes cluster
     */
    declare public /*out*/ readonly kubeconfigs: pulumi.Output<outputs.kubernetes.ClusterKubeconfig[]>;
    /**
     * The name for the Kubernetes cluster.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The OpenID Connect configuration of the cluster
     */
    declare public readonly openIdConnectConfig: pulumi.Output<outputs.kubernetes.ClusterOpenIdConnectConfig>;
    /**
     * The organization ID the cluster is associated with.
     */
    declare public /*out*/ readonly organizationId: pulumi.Output<string>;
    /**
     * The subnet used for the Pod CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    declare public readonly podCidr: pulumi.Output<string>;
    /**
     * The ID of the private network of the cluster.
     *
     * > **Important:** Changes to this field will recreate a new resource.
     *
     * > **Important:** Private Networks are now mandatory with Kapsule Clusters. If you have a legacy cluster (no `privateNetworkId` set),
     * you can still set it now. In this case it will not destroy and recreate your cluster but migrate it to the Private Network.
     */
    declare public readonly privateNetworkId: pulumi.Output<string | undefined>;
    /**
     * `projectId`) The ID of the project the cluster is associated with.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    declare public readonly region: pulumi.Output<string | undefined>;
    /**
     * The subnet used for the Service CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    declare public readonly serviceCidr: pulumi.Output<string>;
    /**
     * The IP used for the DNS Service. If unset, defaults to Service CIDR's network + 10.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    declare public readonly serviceDnsIp: pulumi.Output<string>;
    /**
     * The status of the Kubernetes cluster.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The type of Kubernetes cluster. Possible values are:
     *
     * - for mutualized clusters: `kapsule` or `multicloud`
     *
     * - for dedicated Kapsule clusters: `kapsule-dedicated-4`, `kapsule-dedicated-8` or `kapsule-dedicated-16`.
     *
     * - for dedicated Kosmos clusters: `multicloud-dedicated-4`, `multicloud-dedicated-8` or `multicloud-dedicated-16`.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The last update date of the cluster.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    /**
     * Set to `true` if a newer Kubernetes version is available.
     */
    declare public /*out*/ readonly upgradeAvailable: pulumi.Output<boolean>;
    /**
     * The version of the Kubernetes cluster.
     */
    declare public readonly version: pulumi.Output<string>;
    /**
     * The DNS wildcard that points to all ready nodes.
     */
    declare public /*out*/ readonly wildcardDns: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["admissionPlugins"] = state?.admissionPlugins;
            resourceInputs["apiserverCertSans"] = state?.apiserverCertSans;
            resourceInputs["apiserverUrl"] = state?.apiserverUrl;
            resourceInputs["autoUpgrade"] = state?.autoUpgrade;
            resourceInputs["autoscalerConfig"] = state?.autoscalerConfig;
            resourceInputs["cni"] = state?.cni;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deleteAdditionalResources"] = state?.deleteAdditionalResources;
            resourceInputs["description"] = state?.description;
            resourceInputs["featureGates"] = state?.featureGates;
            resourceInputs["kubeconfigs"] = state?.kubeconfigs;
            resourceInputs["name"] = state?.name;
            resourceInputs["openIdConnectConfig"] = state?.openIdConnectConfig;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["podCidr"] = state?.podCidr;
            resourceInputs["privateNetworkId"] = state?.privateNetworkId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["region"] = state?.region;
            resourceInputs["serviceCidr"] = state?.serviceCidr;
            resourceInputs["serviceDnsIp"] = state?.serviceDnsIp;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["upgradeAvailable"] = state?.upgradeAvailable;
            resourceInputs["version"] = state?.version;
            resourceInputs["wildcardDns"] = state?.wildcardDns;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (args?.cni === undefined && !opts.urn) {
                throw new Error("Missing required property 'cni'");
            }
            if (args?.deleteAdditionalResources === undefined && !opts.urn) {
                throw new Error("Missing required property 'deleteAdditionalResources'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["admissionPlugins"] = args?.admissionPlugins;
            resourceInputs["apiserverCertSans"] = args?.apiserverCertSans;
            resourceInputs["autoUpgrade"] = args?.autoUpgrade;
            resourceInputs["autoscalerConfig"] = args?.autoscalerConfig;
            resourceInputs["cni"] = args?.cni;
            resourceInputs["deleteAdditionalResources"] = args?.deleteAdditionalResources;
            resourceInputs["description"] = args?.description;
            resourceInputs["featureGates"] = args?.featureGates;
            resourceInputs["name"] = args?.name;
            resourceInputs["openIdConnectConfig"] = args?.openIdConnectConfig;
            resourceInputs["podCidr"] = args?.podCidr;
            resourceInputs["privateNetworkId"] = args?.privateNetworkId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["serviceCidr"] = args?.serviceCidr;
            resourceInputs["serviceDnsIp"] = args?.serviceDnsIp;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["type"] = args?.type;
            resourceInputs["version"] = args?.version;
            resourceInputs["apiserverUrl"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["kubeconfigs"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["upgradeAvailable"] = undefined /*out*/;
            resourceInputs["wildcardDns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "scaleway:index/kubernetesCluster:KubernetesCluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        const secretOpts = { additionalSecretOutputs: ["kubeconfigs"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    admissionPlugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional Subject Alternative Names for the Kubernetes API server certificate
     */
    apiserverCertSans?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL of the Kubernetes API server.
     */
    apiserverUrl?: pulumi.Input<string>;
    /**
     * The auto upgrade configuration.
     */
    autoUpgrade?: pulumi.Input<inputs.kubernetes.ClusterAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    autoscalerConfig?: pulumi.Input<inputs.kubernetes.ClusterAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    cni?: pulumi.Input<string>;
    /**
     * The creation date of the cluster.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Delete additional resources like block volumes, load-balancers and the cluster's private network (if empty) that were created in Kubernetes on cluster deletion.
     * > **Important:** Setting this field to `true` means that you will lose all your cluster data and network configuration when you delete your cluster.
     * If you prefer keeping it, you should instead set it as `false`.
     */
    deleteAdditionalResources?: pulumi.Input<boolean>;
    /**
     * A description for the Kubernetes cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    featureGates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The kubeconfig configuration file of the Kubernetes cluster
     */
    kubeconfigs?: pulumi.Input<pulumi.Input<inputs.kubernetes.ClusterKubeconfig>[]>;
    /**
     * The name for the Kubernetes cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * The OpenID Connect configuration of the cluster
     */
    openIdConnectConfig?: pulumi.Input<inputs.kubernetes.ClusterOpenIdConnectConfig>;
    /**
     * The organization ID the cluster is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The subnet used for the Pod CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    podCidr?: pulumi.Input<string>;
    /**
     * The ID of the private network of the cluster.
     *
     * > **Important:** Changes to this field will recreate a new resource.
     *
     * > **Important:** Private Networks are now mandatory with Kapsule Clusters. If you have a legacy cluster (no `privateNetworkId` set),
     * you can still set it now. In this case it will not destroy and recreate your cluster but migrate it to the Private Network.
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the cluster is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    region?: pulumi.Input<string>;
    /**
     * The subnet used for the Service CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * The IP used for the DNS Service. If unset, defaults to Service CIDR's network + 10.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    serviceDnsIp?: pulumi.Input<string>;
    /**
     * The status of the Kubernetes cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Kubernetes cluster. Possible values are:
     *
     * - for mutualized clusters: `kapsule` or `multicloud`
     *
     * - for dedicated Kapsule clusters: `kapsule-dedicated-4`, `kapsule-dedicated-8` or `kapsule-dedicated-16`.
     *
     * - for dedicated Kosmos clusters: `multicloud-dedicated-4`, `multicloud-dedicated-8` or `multicloud-dedicated-16`.
     */
    type?: pulumi.Input<string>;
    /**
     * The last update date of the cluster.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Set to `true` if a newer Kubernetes version is available.
     */
    upgradeAvailable?: pulumi.Input<boolean>;
    /**
     * The version of the Kubernetes cluster.
     */
    version?: pulumi.Input<string>;
    /**
     * The DNS wildcard that points to all ready nodes.
     */
    wildcardDns?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The list of [admission plugins](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) to enable on the cluster.
     */
    admissionPlugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional Subject Alternative Names for the Kubernetes API server certificate
     */
    apiserverCertSans?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The auto upgrade configuration.
     */
    autoUpgrade?: pulumi.Input<inputs.kubernetes.ClusterAutoUpgrade>;
    /**
     * The configuration options for the [Kubernetes cluster autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler).
     */
    autoscalerConfig?: pulumi.Input<inputs.kubernetes.ClusterAutoscalerConfig>;
    /**
     * The Container Network Interface (CNI) for the Kubernetes cluster.
     * > **Important:** Updates to this field will recreate a new resource.
     */
    cni: pulumi.Input<string>;
    /**
     * Delete additional resources like block volumes, load-balancers and the cluster's private network (if empty) that were created in Kubernetes on cluster deletion.
     * > **Important:** Setting this field to `true` means that you will lose all your cluster data and network configuration when you delete your cluster.
     * If you prefer keeping it, you should instead set it as `false`.
     */
    deleteAdditionalResources: pulumi.Input<boolean>;
    /**
     * A description for the Kubernetes cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of [feature gates](https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/) to enable on the cluster.
     */
    featureGates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name for the Kubernetes cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * The OpenID Connect configuration of the cluster
     */
    openIdConnectConfig?: pulumi.Input<inputs.kubernetes.ClusterOpenIdConnectConfig>;
    /**
     * The subnet used for the Pod CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    podCidr?: pulumi.Input<string>;
    /**
     * The ID of the private network of the cluster.
     *
     * > **Important:** Changes to this field will recreate a new resource.
     *
     * > **Important:** Private Networks are now mandatory with Kapsule Clusters. If you have a legacy cluster (no `privateNetworkId` set),
     * you can still set it now. In this case it will not destroy and recreate your cluster but migrate it to the Private Network.
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the cluster is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the cluster should be created.
     */
    region?: pulumi.Input<string>;
    /**
     * The subnet used for the Service CIDR.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * The IP used for the DNS Service. If unset, defaults to Service CIDR's network + 10.
     *
     * > **Important:** Changes to this field will recreate a new resource. However once it has been set to a custom value,
     * unsetting it to go back to the default value will not have any effect.
     */
    serviceDnsIp?: pulumi.Input<string>;
    /**
     * The tags associated with the Kubernetes cluster.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Kubernetes cluster. Possible values are:
     *
     * - for mutualized clusters: `kapsule` or `multicloud`
     *
     * - for dedicated Kapsule clusters: `kapsule-dedicated-4`, `kapsule-dedicated-8` or `kapsule-dedicated-16`.
     *
     * - for dedicated Kosmos clusters: `multicloud-dedicated-4`, `multicloud-dedicated-8` or `multicloud-dedicated-16`.
     */
    type?: pulumi.Input<string>;
    /**
     * The version of the Kubernetes cluster.
     */
    version: pulumi.Input<string>;
}
