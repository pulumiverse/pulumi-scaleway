// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about a Kubernetes Cluster's Pool.
 */
export function getPool(args?: GetPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetPoolResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:kubernetes/getPool:getPool", {
        "clusterId": args.clusterId,
        "name": args.name,
        "poolId": args.poolId,
        "region": args.region,
        "size": args.size,
    }, opts);
}

/**
 * A collection of arguments for invoking getPool.
 */
export interface GetPoolArgs {
    /**
     * The cluster ID. Required when `name` is set.
     */
    clusterId?: string;
    /**
     * The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
     */
    name?: string;
    /**
     * The pool's ID. Only one of `name` and `poolId` should be specified.
     */
    poolId?: string;
    /**
     * `region`) The region in which the pool exists.
     */
    region?: string;
    /**
     * The size of the pool.
     */
    size?: number;
}

/**
 * A collection of values returned by getPool.
 */
export interface GetPoolResult {
    /**
     * True if the autohealing feature is enabled for this pool.
     */
    readonly autohealing: boolean;
    /**
     * True if the autoscaling feature is enabled for this pool.
     */
    readonly autoscaling: boolean;
    readonly clusterId?: string;
    /**
     * The container runtime of the pool.
     */
    readonly containerRuntime: string;
    /**
     * The creation date of the pool.
     */
    readonly createdAt: string;
    readonly currentSize: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kubeletArgs: {[key: string]: string};
    /**
     * The maximum size of the pool, used by the autoscaling feature.
     */
    readonly maxSize: number;
    /**
     * The minimum size of the pool, used by the autoscaling feature.
     */
    readonly minSize: number;
    /**
     * The name of the node.
     */
    readonly name?: string;
    /**
     * The commercial type of the pool instances.
     */
    readonly nodeType: string;
    /**
     * (List of) The nodes in the default pool.
     */
    readonly nodes: outputs.kubernetes.GetPoolNode[];
    /**
     * [placement group](https://developers.scaleway.com/en/products/instance/api/#placement-groups-d8f653) the nodes of the pool are attached to.
     */
    readonly placementGroupId: string;
    readonly poolId?: string;
    readonly publicIpDisabled: boolean;
    readonly region?: string;
    readonly rootVolumeSizeInGb: number;
    readonly rootVolumeType: string;
    readonly securityGroupId: string;
    /**
     * The size of the pool.
     */
    readonly size?: number;
    /**
     * The status of the node.
     */
    readonly status: string;
    /**
     * The tags associated with the pool.
     */
    readonly tags: string[];
    /**
     * The last update date of the pool.
     */
    readonly updatedAt: string;
    readonly upgradePolicies: outputs.kubernetes.GetPoolUpgradePolicy[];
    /**
     * The version of the pool.
     */
    readonly version: string;
    readonly waitForPoolReady: boolean;
    readonly zone: string;
}
/**
 * Gets information about a Kubernetes Cluster's Pool.
 */
export function getPoolOutput(args?: GetPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPoolResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:kubernetes/getPool:getPool", {
        "clusterId": args.clusterId,
        "name": args.name,
        "poolId": args.poolId,
        "region": args.region,
        "size": args.size,
    }, opts);
}

/**
 * A collection of arguments for invoking getPool.
 */
export interface GetPoolOutputArgs {
    /**
     * The cluster ID. Required when `name` is set.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
     */
    name?: pulumi.Input<string>;
    /**
     * The pool's ID. Only one of `name` and `poolId` should be specified.
     */
    poolId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the pool exists.
     */
    region?: pulumi.Input<string>;
    /**
     * The size of the pool.
     */
    size?: pulumi.Input<number>;
}
