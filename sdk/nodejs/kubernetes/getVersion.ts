// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Gets information about a Kubernetes version.
 * For more information, see the [API documentation](https://developers.scaleway.com/en/products/k8s/api).
 *
 * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
 *
 * ## Example Usage
 *
 * ### Use the latest version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const latest = scaleway.kubernetes.getVersion({
 *     name: "latest",
 * });
 * ```
 *
 * ### Use a specific version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const byName = scaleway.kubernetes.getVersion({
 *     name: "1.26.0",
 * });
 * ```
 */
export function getVersion(args: GetVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:kubernetes/getVersion:getVersion", {
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getVersion.
 */
export interface GetVersionArgs {
    /**
     * The name of the Kubernetes version.
     */
    name: string;
    /**
     * `region`) The region in which the version exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getVersion.
 */
export interface GetVersionResult {
    /**
     * The list of supported Container Network Interface (CNI) plugins for this version.
     */
    readonly availableCnis: string[];
    /**
     * The list of supported container runtimes for this version.
     */
    readonly availableContainerRuntimes: string[];
    /**
     * The list of supported feature gates for this version.
     */
    readonly availableFeatureGates: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly region: string;
}
/**
 * Gets information about a Kubernetes version.
 * For more information, see the [API documentation](https://developers.scaleway.com/en/products/k8s/api).
 *
 * You can also use the [scaleway-cli](https://github.com/scaleway/scaleway-cli) with `scw k8s version list` to list all available versions.
 *
 * ## Example Usage
 *
 * ### Use the latest version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const latest = scaleway.kubernetes.getVersion({
 *     name: "latest",
 * });
 * ```
 *
 * ### Use a specific version
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const byName = scaleway.kubernetes.getVersion({
 *     name: "1.26.0",
 * });
 * ```
 */
export function getVersionOutput(args: GetVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:kubernetes/getVersion:getVersion", {
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getVersion.
 */
export interface GetVersionOutputArgs {
    /**
     * The name of the Kubernetes version.
     */
    name: pulumi.Input<string>;
    /**
     * `region`) The region in which the version exists.
     */
    region?: pulumi.Input<string>;
}
