// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetSnsArgs, GetSnsResult, GetSnsOutputArgs } from "./getSns";
export const getSns: typeof import("./getSns").getSns = null as any;
export const getSnsOutput: typeof import("./getSns").getSnsOutput = null as any;
utilities.lazyLoad(exports, ["getSns","getSnsOutput"], () => require("./getSns"));

export { GetSqsArgs, GetSqsResult, GetSqsOutputArgs } from "./getSqs";
export const getSqs: typeof import("./getSqs").getSqs = null as any;
export const getSqsOutput: typeof import("./getSqs").getSqsOutput = null as any;
utilities.lazyLoad(exports, ["getSqs","getSqsOutput"], () => require("./getSqs"));

export { NatsAccountArgs, NatsAccountState } from "./natsAccount";
export type NatsAccount = import("./natsAccount").NatsAccount;
export const NatsAccount: typeof import("./natsAccount").NatsAccount = null as any;
utilities.lazyLoad(exports, ["NatsAccount"], () => require("./natsAccount"));

export { NatsCredentialsArgs, NatsCredentialsState } from "./natsCredentials";
export type NatsCredentials = import("./natsCredentials").NatsCredentials;
export const NatsCredentials: typeof import("./natsCredentials").NatsCredentials = null as any;
utilities.lazyLoad(exports, ["NatsCredentials"], () => require("./natsCredentials"));

export { SnsArgs, SnsState } from "./sns";
export type Sns = import("./sns").Sns;
export const Sns: typeof import("./sns").Sns = null as any;
utilities.lazyLoad(exports, ["Sns"], () => require("./sns"));

export { SnsCredentialsArgs, SnsCredentialsState } from "./snsCredentials";
export type SnsCredentials = import("./snsCredentials").SnsCredentials;
export const SnsCredentials: typeof import("./snsCredentials").SnsCredentials = null as any;
utilities.lazyLoad(exports, ["SnsCredentials"], () => require("./snsCredentials"));

export { SnsTopicArgs, SnsTopicState } from "./snsTopic";
export type SnsTopic = import("./snsTopic").SnsTopic;
export const SnsTopic: typeof import("./snsTopic").SnsTopic = null as any;
utilities.lazyLoad(exports, ["SnsTopic"], () => require("./snsTopic"));

export { SnsTopicSubscriptionArgs, SnsTopicSubscriptionState } from "./snsTopicSubscription";
export type SnsTopicSubscription = import("./snsTopicSubscription").SnsTopicSubscription;
export const SnsTopicSubscription: typeof import("./snsTopicSubscription").SnsTopicSubscription = null as any;
utilities.lazyLoad(exports, ["SnsTopicSubscription"], () => require("./snsTopicSubscription"));

export { SqsArgs, SqsState } from "./sqs";
export type Sqs = import("./sqs").Sqs;
export const Sqs: typeof import("./sqs").Sqs = null as any;
utilities.lazyLoad(exports, ["Sqs"], () => require("./sqs"));

export { SqsCredentialsArgs, SqsCredentialsState } from "./sqsCredentials";
export type SqsCredentials = import("./sqsCredentials").SqsCredentials;
export const SqsCredentials: typeof import("./sqsCredentials").SqsCredentials = null as any;
utilities.lazyLoad(exports, ["SqsCredentials"], () => require("./sqsCredentials"));

export { SqsQueueArgs, SqsQueueState } from "./sqsQueue";
export type SqsQueue = import("./sqsQueue").SqsQueue;
export const SqsQueue: typeof import("./sqsQueue").SqsQueue = null as any;
utilities.lazyLoad(exports, ["SqsQueue"], () => require("./sqsQueue"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:mnq/natsAccount:NatsAccount":
                return new NatsAccount(name, <any>undefined, { urn })
            case "scaleway:mnq/natsCredentials:NatsCredentials":
                return new NatsCredentials(name, <any>undefined, { urn })
            case "scaleway:mnq/sns:Sns":
                return new Sns(name, <any>undefined, { urn })
            case "scaleway:mnq/snsCredentials:SnsCredentials":
                return new SnsCredentials(name, <any>undefined, { urn })
            case "scaleway:mnq/snsTopic:SnsTopic":
                return new SnsTopic(name, <any>undefined, { urn })
            case "scaleway:mnq/snsTopicSubscription:SnsTopicSubscription":
                return new SnsTopicSubscription(name, <any>undefined, { urn })
            case "scaleway:mnq/sqs:Sqs":
                return new Sqs(name, <any>undefined, { urn })
            case "scaleway:mnq/sqsCredentials:SqsCredentials":
                return new SqsCredentials(name, <any>undefined, { urn })
            case "scaleway:mnq/sqsQueue:SqsQueue":
                return new SqsQueue(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "mnq/natsAccount", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/natsCredentials", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/sns", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/snsCredentials", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/snsTopic", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/snsTopicSubscription", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/sqs", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/sqsCredentials", _module)
pulumi.runtime.registerResourceModule("scaleway", "mnq/sqsQueue", _module)
