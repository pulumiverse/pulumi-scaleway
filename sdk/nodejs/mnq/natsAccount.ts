// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates and manages Scaleway Messaging and Queuing NATS accounts.
 * For further information, see
 * our [main documentation](https://www.scaleway.com/en/docs/messaging/reference-content/nats-overview/)
 * To use the Scaleway provider with the official NATS JetStream provider, check out the corresponding guide.
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const main = new scaleway.mnq.NatsAccount("main", {name: "nats-account"});
 * ```
 *
 * ## Import
 *
 * Namespaces can be imported using `{region}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:mnq/natsAccount:NatsAccount main fr-par/11111111111111111111111111111111
 * ```
 */
export class NatsAccount extends pulumi.CustomResource {
    /**
     * Get an existing NatsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatsAccountState, opts?: pulumi.CustomResourceOptions): NatsAccount {
        return new NatsAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:mnq/natsAccount:NatsAccount';

    /**
     * Returns true if the given object is an instance of NatsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatsAccount.__pulumiType;
    }

    /**
     * The endpoint of the NATS service for this account.
     */
    declare public /*out*/ readonly endpoint: pulumi.Output<string>;
    /**
     * The unique name of the NATS account.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * `projectId`) The ID of the Project the
     * account is associated with.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * `region`). The region
     * in which the account should be created.
     */
    declare public readonly region: pulumi.Output<string | undefined>;

    /**
     * Create a NatsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NatsAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatsAccountArgs | NatsAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatsAccountState | undefined;
            resourceInputs["endpoint"] = state?.endpoint;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as NatsAccountArgs | undefined;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["endpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "scaleway:index/mnqNatsAccount:MnqNatsAccount" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(NatsAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatsAccount resources.
 */
export interface NatsAccountState {
    /**
     * The endpoint of the NATS service for this account.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The unique name of the NATS account.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the Project the
     * account is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`). The region
     * in which the account should be created.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NatsAccount resource.
 */
export interface NatsAccountArgs {
    /**
     * The unique name of the NATS account.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the Project the
     * account is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`). The region
     * in which the account should be created.
     */
    region?: pulumi.Input<string>;
}
