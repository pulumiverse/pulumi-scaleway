// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Creates and manages Scaleway VPC Private Networks.
 * For more information, see the [API documentation](https://www.scaleway.com/en/developers/api/vpc/#private-networks-ac2df4).
 *
 * ## Example Usage
 *
 * ### Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pnPriv = new scaleway.network.PrivateNetwork("pn_priv", {
 *     name: "subnet_demo",
 *     tags: [
 *         "demo",
 *         "terraform",
 *     ],
 * });
 * ```
 *
 * ### With subnets
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as scaleway from "@pulumiverse/scaleway";
 *
 * const pnPriv = new scaleway.network.PrivateNetwork("pn_priv", {
 *     name: "subnet_demo",
 *     tags: [
 *         "demo",
 *         "terraform",
 *     ],
 *     ipv4Subnet: {
 *         subnet: "192.168.0.0/24",
 *     },
 *     ipv6Subnets: [
 *         {
 *             subnet: "fd46:78ab:30b8:177c::/64",
 *         },
 *         {
 *             subnet: "fd46:78ab:30b8:c7df::/64",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Private Networks can be imported using `{region}/{id}`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import scaleway:network/privateNetwork:PrivateNetwork main fr-par/11111111-1111-1111-1111-111111111111
 * ```
 */
export class PrivateNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PrivateNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateNetworkState, opts?: pulumi.CustomResourceOptions): PrivateNetwork {
        return new PrivateNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:network/privateNetwork:PrivateNetwork';

    /**
     * Returns true if the given object is an instance of PrivateNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateNetwork.__pulumiType;
    }

    /**
     * The date and time of the creation of the subnet.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Defines whether default v4 and v6 routes are propagated for this Private Network.
     */
    declare public readonly enableDefaultRoutePropagation: pulumi.Output<boolean>;
    /**
     * The IPv4 subnet to associate with the Private Network.
     */
    declare public readonly ipv4Subnet: pulumi.Output<outputs.network.PrivateNetworkIpv4Subnet>;
    /**
     * The IPv6 subnets to associate with the private network.
     */
    declare public readonly ipv6Subnets: pulumi.Output<outputs.network.PrivateNetworkIpv6Subnet[]>;
    /**
     * Private Networks are now all necessarily regional.
     *
     * @deprecated This field is deprecated and will be removed in the next major version
     */
    declare public readonly isRegional: pulumi.Output<boolean>;
    /**
     * The name of the Private Network. If not provided, it will be randomly generated.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The Organization ID the Private Network is associated with.
     */
    declare public /*out*/ readonly organizationId: pulumi.Output<string>;
    /**
     * `projectId`) The ID of the Project the private network is associated with.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * `region`) The region of the Private Network.
     */
    declare public readonly region: pulumi.Output<string | undefined>;
    /**
     * The tags associated with the Private Network.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The date and time of the last update of the subnet.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    /**
     * The VPC in which to create the Private Network.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * Use `region` instead.
     *
     * @deprecated This field is deprecated and will be removed in the next major version, please use `region` instead
     */
    declare public readonly zone: pulumi.Output<string>;

    /**
     * Create a PrivateNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PrivateNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateNetworkArgs | PrivateNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateNetworkState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["enableDefaultRoutePropagation"] = state?.enableDefaultRoutePropagation;
            resourceInputs["ipv4Subnet"] = state?.ipv4Subnet;
            resourceInputs["ipv6Subnets"] = state?.ipv6Subnets;
            resourceInputs["isRegional"] = state?.isRegional;
            resourceInputs["name"] = state?.name;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["region"] = state?.region;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["zone"] = state?.zone;
        } else {
            const args = argsOrState as PrivateNetworkArgs | undefined;
            resourceInputs["enableDefaultRoutePropagation"] = args?.enableDefaultRoutePropagation;
            resourceInputs["ipv4Subnet"] = args?.ipv4Subnet;
            resourceInputs["ipv6Subnets"] = args?.ipv6Subnets;
            resourceInputs["isRegional"] = args?.isRegional;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["zone"] = args?.zone;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "scaleway:index/vpcPrivateNetwork:VpcPrivateNetwork" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(PrivateNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateNetwork resources.
 */
export interface PrivateNetworkState {
    /**
     * The date and time of the creation of the subnet.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Defines whether default v4 and v6 routes are propagated for this Private Network.
     */
    enableDefaultRoutePropagation?: pulumi.Input<boolean>;
    /**
     * The IPv4 subnet to associate with the Private Network.
     */
    ipv4Subnet?: pulumi.Input<inputs.network.PrivateNetworkIpv4Subnet>;
    /**
     * The IPv6 subnets to associate with the private network.
     */
    ipv6Subnets?: pulumi.Input<pulumi.Input<inputs.network.PrivateNetworkIpv6Subnet>[]>;
    /**
     * Private Networks are now all necessarily regional.
     *
     * @deprecated This field is deprecated and will be removed in the next major version
     */
    isRegional?: pulumi.Input<boolean>;
    /**
     * The name of the Private Network. If not provided, it will be randomly generated.
     */
    name?: pulumi.Input<string>;
    /**
     * The Organization ID the Private Network is associated with.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the Project the private network is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region of the Private Network.
     */
    region?: pulumi.Input<string>;
    /**
     * The tags associated with the Private Network.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The date and time of the last update of the subnet.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The VPC in which to create the Private Network.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Use `region` instead.
     *
     * @deprecated This field is deprecated and will be removed in the next major version, please use `region` instead
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateNetwork resource.
 */
export interface PrivateNetworkArgs {
    /**
     * Defines whether default v4 and v6 routes are propagated for this Private Network.
     */
    enableDefaultRoutePropagation?: pulumi.Input<boolean>;
    /**
     * The IPv4 subnet to associate with the Private Network.
     */
    ipv4Subnet?: pulumi.Input<inputs.network.PrivateNetworkIpv4Subnet>;
    /**
     * The IPv6 subnets to associate with the private network.
     */
    ipv6Subnets?: pulumi.Input<pulumi.Input<inputs.network.PrivateNetworkIpv6Subnet>[]>;
    /**
     * Private Networks are now all necessarily regional.
     *
     * @deprecated This field is deprecated and will be removed in the next major version
     */
    isRegional?: pulumi.Input<boolean>;
    /**
     * The name of the Private Network. If not provided, it will be randomly generated.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the Project the private network is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region of the Private Network.
     */
    region?: pulumi.Input<string>;
    /**
     * The tags associated with the Private Network.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The VPC in which to create the Private Network.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Use `region` instead.
     *
     * @deprecated This field is deprecated and will be removed in the next major version, please use `region` instead
     */
    zone?: pulumi.Input<string>;
}
