// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about a transactional email domain.
 */
export function getDomain(args?: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:tem/getDomain:getDomain", {
        "domainId": args.domainId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * The domain id.
     * Only one of `name` and `domainId` should be specified.
     */
    domainId?: string;
    /**
     * The domain name.
     * Only one of `name` and `domainId` should be specified.
     */
    name?: string;
    /**
     * `projectId`) The ID of the project the domain is associated with.
     */
    projectId?: string;
    /**
     * `region`) The region in which the domain exists.
     */
    region?: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    readonly acceptTos: boolean;
    readonly autoconfig: boolean;
    readonly createdAt: string;
    readonly dkimConfig: string;
    readonly dmarcConfig: string;
    readonly dmarcName: string;
    readonly domainId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastError: string;
    readonly lastValidAt: string;
    readonly mxBlackhole: string;
    readonly name?: string;
    readonly nextCheckAt: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly reputations: outputs.tem.GetDomainReputation[];
    readonly revokedAt: string;
    readonly smtpHost: string;
    readonly smtpPort: number;
    readonly smtpPortAlternative: number;
    readonly smtpPortUnsecure: number;
    readonly smtpsAuthUser: string;
    readonly smtpsPort: number;
    readonly smtpsPortAlternative: number;
    readonly spfConfig: string;
    readonly status: string;
}
/**
 * Gets information about a transactional email domain.
 */
export function getDomainOutput(args?: GetDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("scaleway:tem/getDomain:getDomain", {
        "domainId": args.domainId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * The domain id.
     * Only one of `name` and `domainId` should be specified.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The domain name.
     * Only one of `name` and `domainId` should be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * `projectId`) The ID of the project the domain is associated with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * `region`) The region in which the domain exists.
     */
    region?: pulumi.Input<string>;
}
