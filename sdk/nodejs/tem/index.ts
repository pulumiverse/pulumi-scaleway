// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BlockedListArgs, BlockedListState } from "./blockedList";
export type BlockedList = import("./blockedList").BlockedList;
export const BlockedList: typeof import("./blockedList").BlockedList = null as any;
utilities.lazyLoad(exports, ["BlockedList"], () => require("./blockedList"));

export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { DomainValidationArgs, DomainValidationState } from "./domainValidation";
export type DomainValidation = import("./domainValidation").DomainValidation;
export const DomainValidation: typeof import("./domainValidation").DomainValidation = null as any;
utilities.lazyLoad(exports, ["DomainValidation"], () => require("./domainValidation"));

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { GetOfferSubscriptionArgs, GetOfferSubscriptionResult, GetOfferSubscriptionOutputArgs } from "./getOfferSubscription";
export const getOfferSubscription: typeof import("./getOfferSubscription").getOfferSubscription = null as any;
export const getOfferSubscriptionOutput: typeof import("./getOfferSubscription").getOfferSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getOfferSubscription","getOfferSubscriptionOutput"], () => require("./getOfferSubscription"));

export { WebhookArgs, WebhookState } from "./webhook";
export type Webhook = import("./webhook").Webhook;
export const Webhook: typeof import("./webhook").Webhook = null as any;
utilities.lazyLoad(exports, ["Webhook"], () => require("./webhook"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "scaleway:tem/blockedList:BlockedList":
                return new BlockedList(name, <any>undefined, { urn })
            case "scaleway:tem/domain:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "scaleway:tem/domainValidation:DomainValidation":
                return new DomainValidation(name, <any>undefined, { urn })
            case "scaleway:tem/webhook:Webhook":
                return new Webhook(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("scaleway", "tem/blockedList", _module)
pulumi.runtime.registerResourceModule("scaleway", "tem/domain", _module)
pulumi.runtime.registerResourceModule("scaleway", "tem/domainValidation", _module)
pulumi.runtime.registerResourceModule("scaleway", "tem/webhook", _module)
